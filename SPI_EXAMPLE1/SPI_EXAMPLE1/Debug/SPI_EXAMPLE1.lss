
SPI_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005fac  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405fac  00405fac  00015fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009b8  20000000  00405fb4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000001b0  200009b8  0040696c  000209b8  2**2
                  ALLOC
  4 .stack        00003000  20000b68  00406b1c  000209b8  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209b8  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e2  2**0
                  CONTENTS, READONLY
  7 .debug_info   000110b7  00000000  00000000  00020a3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002777  00000000  00000000  00031af2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004260  00000000  00000000  00034269  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000930  00000000  00000000  000384c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008b0  00000000  00000000  00038df9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000139da  00000000  00000000  000396a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a86b  00000000  00000000  0004d083  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00053570  00000000  00000000  000578ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000261c  00000000  00000000  000aae60  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	68 3b 00 20 15 09 40 00 13 09 40 00 13 09 40 00     h;. ..@...@...@.
  400010:	13 09 40 00 13 09 40 00 13 09 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	13 09 40 00 13 09 40 00 00 00 00 00 13 09 40 00     ..@...@.......@.
  40003c:	13 09 40 00 13 09 40 00 13 09 40 00 13 09 40 00     ..@...@...@...@.
  40004c:	13 09 40 00 13 09 40 00 13 09 40 00 13 09 40 00     ..@...@...@...@.
  40005c:	13 09 40 00 13 09 40 00 13 09 40 00 00 00 00 00     ..@...@...@.....
  40006c:	fd 05 40 00 11 06 40 00 25 06 40 00 13 09 40 00     ..@...@.%.@...@.
  40007c:	13 09 40 00 00 00 00 00 00 00 00 00 13 09 40 00     ..@...........@.
  40008c:	13 09 40 00 13 09 40 00 31 0e 40 00 13 09 40 00     ..@...@.1.@...@.
  40009c:	13 09 40 00 13 09 40 00 13 09 40 00 13 09 40 00     ..@...@...@...@.
  4000ac:	13 09 40 00 13 09 40 00 13 09 40 00 13 09 40 00     ..@...@...@...@.
  4000bc:	13 09 40 00 13 09 40 00 13 09 40 00 13 09 40 00     ..@...@...@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009b8 	.word	0x200009b8
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00405fb4 	.word	0x00405fb4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00405fb4 	.word	0x00405fb4
  40012c:	200009bc 	.word	0x200009bc
  400130:	00405fb4 	.word	0x00405fb4
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	00400ad1 	.word	0x00400ad1
  40017c:	0040069d 	.word	0x0040069d
  400180:	004006f1 	.word	0x004006f1
  400184:	00400701 	.word	0x00400701
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400711 	.word	0x00400711
  400194:	00400639 	.word	0x00400639
  400198:	004009c1 	.word	0x004009c1

0040019c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  40019c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4001a0:	b980      	cbnz	r0, 4001c4 <_read+0x28>
  4001a2:	460c      	mov	r4, r1
  4001a4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4001a6:	2a00      	cmp	r2, #0
  4001a8:	dd0f      	ble.n	4001ca <_read+0x2e>
  4001aa:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001ac:	4e08      	ldr	r6, [pc, #32]	; (4001d0 <_read+0x34>)
  4001ae:	4d09      	ldr	r5, [pc, #36]	; (4001d4 <_read+0x38>)
  4001b0:	6830      	ldr	r0, [r6, #0]
  4001b2:	4621      	mov	r1, r4
  4001b4:	682b      	ldr	r3, [r5, #0]
  4001b6:	4798      	blx	r3
		ptr++;
  4001b8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4001ba:	42bc      	cmp	r4, r7
  4001bc:	d1f8      	bne.n	4001b0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4001be:	4640      	mov	r0, r8
  4001c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001c4:	f04f 38ff 	mov.w	r8, #4294967295
  4001c8:	e7f9      	b.n	4001be <_read+0x22>
	for (; len > 0; --len) {
  4001ca:	4680      	mov	r8, r0
  4001cc:	e7f7      	b.n	4001be <_read+0x22>
  4001ce:	bf00      	nop
  4001d0:	20000b38 	.word	0x20000b38
  4001d4:	20000b30 	.word	0x20000b30

004001d8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001d8:	3801      	subs	r0, #1
  4001da:	2802      	cmp	r0, #2
  4001dc:	d815      	bhi.n	40020a <_write+0x32>
{
  4001de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001e2:	460e      	mov	r6, r1
  4001e4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001e6:	b19a      	cbz	r2, 400210 <_write+0x38>
  4001e8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001ea:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400224 <_write+0x4c>
  4001ee:	4f0c      	ldr	r7, [pc, #48]	; (400220 <_write+0x48>)
  4001f0:	f8d8 0000 	ldr.w	r0, [r8]
  4001f4:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001f8:	683b      	ldr	r3, [r7, #0]
  4001fa:	4798      	blx	r3
  4001fc:	2800      	cmp	r0, #0
  4001fe:	db0a      	blt.n	400216 <_write+0x3e>
  400200:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400202:	3c01      	subs	r4, #1
  400204:	d1f4      	bne.n	4001f0 <_write+0x18>
  400206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40020a:	f04f 30ff 	mov.w	r0, #4294967295
  40020e:	4770      	bx	lr
	for (; len != 0; --len) {
  400210:	4610      	mov	r0, r2
  400212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400216:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40021a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40021e:	bf00      	nop
  400220:	20000b34 	.word	0x20000b34
  400224:	20000b38 	.word	0x20000b38

00400228 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400228:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40022a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40022e:	4b18      	ldr	r3, [pc, #96]	; (400290 <board_init+0x68>)
  400230:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400232:	200b      	movs	r0, #11
  400234:	4c17      	ldr	r4, [pc, #92]	; (400294 <board_init+0x6c>)
  400236:	47a0      	blx	r4
  400238:	200c      	movs	r0, #12
  40023a:	47a0      	blx	r4
  40023c:	200d      	movs	r0, #13
  40023e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400240:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400244:	2013      	movs	r0, #19
  400246:	4c14      	ldr	r4, [pc, #80]	; (400298 <board_init+0x70>)
  400248:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40024a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40024e:	2014      	movs	r0, #20
  400250:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400252:	4912      	ldr	r1, [pc, #72]	; (40029c <board_init+0x74>)
  400254:	2023      	movs	r0, #35	; 0x23
  400256:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400258:	4911      	ldr	r1, [pc, #68]	; (4002a0 <board_init+0x78>)
  40025a:	204c      	movs	r0, #76	; 0x4c
  40025c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40025e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400262:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400266:	480f      	ldr	r0, [pc, #60]	; (4002a4 <board_init+0x7c>)
  400268:	4b0f      	ldr	r3, [pc, #60]	; (4002a8 <board_init+0x80>)
  40026a:	4798      	blx	r3
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  40026c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400270:	200c      	movs	r0, #12
  400272:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400274:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400278:	200d      	movs	r0, #13
  40027a:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  40027c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400280:	200e      	movs	r0, #14
  400282:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400284:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400288:	200b      	movs	r0, #11
  40028a:	47a0      	blx	r4
  40028c:	bd10      	pop	{r4, pc}
  40028e:	bf00      	nop
  400290:	400e1450 	.word	0x400e1450
  400294:	00400721 	.word	0x00400721
  400298:	0040039d 	.word	0x0040039d
  40029c:	28000079 	.word	0x28000079
  4002a0:	28000059 	.word	0x28000059
  4002a4:	400e0e00 	.word	0x400e0e00
  4002a8:	004004bd 	.word	0x004004bd

004002ac <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4002ac:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4002ae:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4002b2:	d039      	beq.n	400328 <pio_set_peripheral+0x7c>
  4002b4:	d813      	bhi.n	4002de <pio_set_peripheral+0x32>
  4002b6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4002ba:	d025      	beq.n	400308 <pio_set_peripheral+0x5c>
  4002bc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4002c0:	d10a      	bne.n	4002d8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002c2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002c4:	4313      	orrs	r3, r2
  4002c6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4002c8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002ca:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4002cc:	400b      	ands	r3, r1
  4002ce:	ea23 0302 	bic.w	r3, r3, r2
  4002d2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4002d4:	6042      	str	r2, [r0, #4]
  4002d6:	4770      	bx	lr
	switch (ul_type) {
  4002d8:	2900      	cmp	r1, #0
  4002da:	d1fb      	bne.n	4002d4 <pio_set_peripheral+0x28>
  4002dc:	4770      	bx	lr
  4002de:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4002e2:	d020      	beq.n	400326 <pio_set_peripheral+0x7a>
  4002e4:	d809      	bhi.n	4002fa <pio_set_peripheral+0x4e>
  4002e6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4002ea:	d1f3      	bne.n	4002d4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002ec:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002ee:	4313      	orrs	r3, r2
  4002f0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4002f2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4002f4:	4313      	orrs	r3, r2
  4002f6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4002f8:	e7ec      	b.n	4002d4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4002fa:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4002fe:	d012      	beq.n	400326 <pio_set_peripheral+0x7a>
  400300:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400304:	d00f      	beq.n	400326 <pio_set_peripheral+0x7a>
  400306:	e7e5      	b.n	4002d4 <pio_set_peripheral+0x28>
{
  400308:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  40030a:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40030c:	6f04      	ldr	r4, [r0, #112]	; 0x70
  40030e:	43d3      	mvns	r3, r2
  400310:	4021      	ands	r1, r4
  400312:	461c      	mov	r4, r3
  400314:	4019      	ands	r1, r3
  400316:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400318:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40031a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40031c:	400b      	ands	r3, r1
  40031e:	4023      	ands	r3, r4
  400320:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400322:	6042      	str	r2, [r0, #4]
}
  400324:	bc10      	pop	{r4}
  400326:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400328:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40032a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40032c:	400b      	ands	r3, r1
  40032e:	ea23 0302 	bic.w	r3, r3, r2
  400332:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400334:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400336:	4313      	orrs	r3, r2
  400338:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40033a:	e7cb      	b.n	4002d4 <pio_set_peripheral+0x28>

0040033c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40033c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40033e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400342:	bf14      	ite	ne
  400344:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400346:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400348:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40034c:	bf14      	ite	ne
  40034e:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400350:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400352:	f012 0f02 	tst.w	r2, #2
  400356:	d107      	bne.n	400368 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400358:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40035c:	bf18      	it	ne
  40035e:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400362:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400364:	6001      	str	r1, [r0, #0]
  400366:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400368:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40036c:	e7f9      	b.n	400362 <pio_set_input+0x26>

0040036e <pio_set_output>:
{
  40036e:	b410      	push	{r4}
  400370:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400372:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400374:	b944      	cbnz	r4, 400388 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400376:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400378:	b143      	cbz	r3, 40038c <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40037a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40037c:	b942      	cbnz	r2, 400390 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40037e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400380:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400382:	6001      	str	r1, [r0, #0]
}
  400384:	bc10      	pop	{r4}
  400386:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400388:	6641      	str	r1, [r0, #100]	; 0x64
  40038a:	e7f5      	b.n	400378 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40038c:	6541      	str	r1, [r0, #84]	; 0x54
  40038e:	e7f5      	b.n	40037c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400390:	6301      	str	r1, [r0, #48]	; 0x30
  400392:	e7f5      	b.n	400380 <pio_set_output+0x12>

00400394 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400394:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400396:	4770      	bx	lr

00400398 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400398:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  40039a:	4770      	bx	lr

0040039c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  40039c:	b570      	push	{r4, r5, r6, lr}
  40039e:	b082      	sub	sp, #8
  4003a0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4003a2:	0943      	lsrs	r3, r0, #5
  4003a4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4003a8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4003ac:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4003ae:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4003b2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4003b6:	d053      	beq.n	400460 <pio_configure_pin+0xc4>
  4003b8:	d80a      	bhi.n	4003d0 <pio_configure_pin+0x34>
  4003ba:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4003be:	d02d      	beq.n	40041c <pio_configure_pin+0x80>
  4003c0:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4003c4:	d03b      	beq.n	40043e <pio_configure_pin+0xa2>
  4003c6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4003ca:	d015      	beq.n	4003f8 <pio_configure_pin+0x5c>
		return 0;
  4003cc:	2000      	movs	r0, #0
  4003ce:	e023      	b.n	400418 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  4003d0:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4003d4:	d055      	beq.n	400482 <pio_configure_pin+0xe6>
  4003d6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4003da:	d052      	beq.n	400482 <pio_configure_pin+0xe6>
  4003dc:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4003e0:	d1f4      	bne.n	4003cc <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  4003e2:	f000 011f 	and.w	r1, r0, #31
  4003e6:	2601      	movs	r6, #1
  4003e8:	462a      	mov	r2, r5
  4003ea:	fa06 f101 	lsl.w	r1, r6, r1
  4003ee:	4620      	mov	r0, r4
  4003f0:	4b2f      	ldr	r3, [pc, #188]	; (4004b0 <pio_configure_pin+0x114>)
  4003f2:	4798      	blx	r3
	return 1;
  4003f4:	4630      	mov	r0, r6
		break;
  4003f6:	e00f      	b.n	400418 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4003f8:	f000 001f 	and.w	r0, r0, #31
  4003fc:	2601      	movs	r6, #1
  4003fe:	4086      	lsls	r6, r0
  400400:	4632      	mov	r2, r6
  400402:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400406:	4620      	mov	r0, r4
  400408:	4b2a      	ldr	r3, [pc, #168]	; (4004b4 <pio_configure_pin+0x118>)
  40040a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40040c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400410:	bf14      	ite	ne
  400412:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400414:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400416:	2001      	movs	r0, #1
}
  400418:	b002      	add	sp, #8
  40041a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40041c:	f000 001f 	and.w	r0, r0, #31
  400420:	2601      	movs	r6, #1
  400422:	4086      	lsls	r6, r0
  400424:	4632      	mov	r2, r6
  400426:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40042a:	4620      	mov	r0, r4
  40042c:	4b21      	ldr	r3, [pc, #132]	; (4004b4 <pio_configure_pin+0x118>)
  40042e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400430:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400434:	bf14      	ite	ne
  400436:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400438:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40043a:	2001      	movs	r0, #1
  40043c:	e7ec      	b.n	400418 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40043e:	f000 001f 	and.w	r0, r0, #31
  400442:	2601      	movs	r6, #1
  400444:	4086      	lsls	r6, r0
  400446:	4632      	mov	r2, r6
  400448:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40044c:	4620      	mov	r0, r4
  40044e:	4b19      	ldr	r3, [pc, #100]	; (4004b4 <pio_configure_pin+0x118>)
  400450:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400452:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400456:	bf14      	ite	ne
  400458:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40045a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40045c:	2001      	movs	r0, #1
  40045e:	e7db      	b.n	400418 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400460:	f000 001f 	and.w	r0, r0, #31
  400464:	2601      	movs	r6, #1
  400466:	4086      	lsls	r6, r0
  400468:	4632      	mov	r2, r6
  40046a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40046e:	4620      	mov	r0, r4
  400470:	4b10      	ldr	r3, [pc, #64]	; (4004b4 <pio_configure_pin+0x118>)
  400472:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400474:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400478:	bf14      	ite	ne
  40047a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40047c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40047e:	2001      	movs	r0, #1
  400480:	e7ca      	b.n	400418 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400482:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400486:	f000 011f 	and.w	r1, r0, #31
  40048a:	2601      	movs	r6, #1
  40048c:	ea05 0306 	and.w	r3, r5, r6
  400490:	9300      	str	r3, [sp, #0]
  400492:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400496:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40049a:	bf14      	ite	ne
  40049c:	2200      	movne	r2, #0
  40049e:	2201      	moveq	r2, #1
  4004a0:	fa06 f101 	lsl.w	r1, r6, r1
  4004a4:	4620      	mov	r0, r4
  4004a6:	4c04      	ldr	r4, [pc, #16]	; (4004b8 <pio_configure_pin+0x11c>)
  4004a8:	47a0      	blx	r4
	return 1;
  4004aa:	4630      	mov	r0, r6
		break;
  4004ac:	e7b4      	b.n	400418 <pio_configure_pin+0x7c>
  4004ae:	bf00      	nop
  4004b0:	0040033d 	.word	0x0040033d
  4004b4:	004002ad 	.word	0x004002ad
  4004b8:	0040036f 	.word	0x0040036f

004004bc <pio_configure_pin_group>:
{
  4004bc:	b570      	push	{r4, r5, r6, lr}
  4004be:	b082      	sub	sp, #8
  4004c0:	4605      	mov	r5, r0
  4004c2:	460e      	mov	r6, r1
  4004c4:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  4004c6:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4004ca:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4004ce:	d03d      	beq.n	40054c <pio_configure_pin_group+0x90>
  4004d0:	d80a      	bhi.n	4004e8 <pio_configure_pin_group+0x2c>
  4004d2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4004d6:	d021      	beq.n	40051c <pio_configure_pin_group+0x60>
  4004d8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4004dc:	d02a      	beq.n	400534 <pio_configure_pin_group+0x78>
  4004de:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4004e2:	d00e      	beq.n	400502 <pio_configure_pin_group+0x46>
		return 0;
  4004e4:	2000      	movs	r0, #0
  4004e6:	e017      	b.n	400518 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  4004e8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4004ec:	d03a      	beq.n	400564 <pio_configure_pin_group+0xa8>
  4004ee:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4004f2:	d037      	beq.n	400564 <pio_configure_pin_group+0xa8>
  4004f4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4004f8:	d1f4      	bne.n	4004e4 <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  4004fa:	4b23      	ldr	r3, [pc, #140]	; (400588 <pio_configure_pin_group+0xcc>)
  4004fc:	4798      	blx	r3
	return 1;
  4004fe:	2001      	movs	r0, #1
		break;
  400500:	e00a      	b.n	400518 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400502:	460a      	mov	r2, r1
  400504:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400508:	4b20      	ldr	r3, [pc, #128]	; (40058c <pio_configure_pin_group+0xd0>)
  40050a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40050c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400510:	bf14      	ite	ne
  400512:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400514:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400516:	2001      	movs	r0, #1
}
  400518:	b002      	add	sp, #8
  40051a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  40051c:	460a      	mov	r2, r1
  40051e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400522:	4b1a      	ldr	r3, [pc, #104]	; (40058c <pio_configure_pin_group+0xd0>)
  400524:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400526:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40052a:	bf14      	ite	ne
  40052c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40052e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400530:	2001      	movs	r0, #1
  400532:	e7f1      	b.n	400518 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400534:	460a      	mov	r2, r1
  400536:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40053a:	4b14      	ldr	r3, [pc, #80]	; (40058c <pio_configure_pin_group+0xd0>)
  40053c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40053e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400542:	bf14      	ite	ne
  400544:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400546:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400548:	2001      	movs	r0, #1
  40054a:	e7e5      	b.n	400518 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  40054c:	460a      	mov	r2, r1
  40054e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400552:	4b0e      	ldr	r3, [pc, #56]	; (40058c <pio_configure_pin_group+0xd0>)
  400554:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400556:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40055a:	bf14      	ite	ne
  40055c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40055e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400560:	2001      	movs	r0, #1
  400562:	e7d9      	b.n	400518 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400564:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400568:	f004 0301 	and.w	r3, r4, #1
  40056c:	9300      	str	r3, [sp, #0]
  40056e:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400572:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400576:	bf14      	ite	ne
  400578:	2200      	movne	r2, #0
  40057a:	2201      	moveq	r2, #1
  40057c:	4631      	mov	r1, r6
  40057e:	4628      	mov	r0, r5
  400580:	4c03      	ldr	r4, [pc, #12]	; (400590 <pio_configure_pin_group+0xd4>)
  400582:	47a0      	blx	r4
	return 1;
  400584:	2001      	movs	r0, #1
		break;
  400586:	e7c7      	b.n	400518 <pio_configure_pin_group+0x5c>
  400588:	0040033d 	.word	0x0040033d
  40058c:	004002ad 	.word	0x004002ad
  400590:	0040036f 	.word	0x0040036f

00400594 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400598:	4681      	mov	r9, r0
  40059a:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40059c:	4b12      	ldr	r3, [pc, #72]	; (4005e8 <pio_handler_process+0x54>)
  40059e:	4798      	blx	r3
  4005a0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4005a2:	4648      	mov	r0, r9
  4005a4:	4b11      	ldr	r3, [pc, #68]	; (4005ec <pio_handler_process+0x58>)
  4005a6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4005a8:	4005      	ands	r5, r0
  4005aa:	d013      	beq.n	4005d4 <pio_handler_process+0x40>
  4005ac:	4c10      	ldr	r4, [pc, #64]	; (4005f0 <pio_handler_process+0x5c>)
  4005ae:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4005b2:	e003      	b.n	4005bc <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4005b4:	42b4      	cmp	r4, r6
  4005b6:	d00d      	beq.n	4005d4 <pio_handler_process+0x40>
  4005b8:	3410      	adds	r4, #16
		while (status != 0) {
  4005ba:	b15d      	cbz	r5, 4005d4 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  4005bc:	6820      	ldr	r0, [r4, #0]
  4005be:	42b8      	cmp	r0, r7
  4005c0:	d1f8      	bne.n	4005b4 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005c2:	6861      	ldr	r1, [r4, #4]
  4005c4:	4229      	tst	r1, r5
  4005c6:	d0f5      	beq.n	4005b4 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005c8:	68e3      	ldr	r3, [r4, #12]
  4005ca:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4005cc:	6863      	ldr	r3, [r4, #4]
  4005ce:	ea25 0503 	bic.w	r5, r5, r3
  4005d2:	e7ef      	b.n	4005b4 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4005d4:	4b07      	ldr	r3, [pc, #28]	; (4005f4 <pio_handler_process+0x60>)
  4005d6:	681b      	ldr	r3, [r3, #0]
  4005d8:	b123      	cbz	r3, 4005e4 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4005da:	4b07      	ldr	r3, [pc, #28]	; (4005f8 <pio_handler_process+0x64>)
  4005dc:	681b      	ldr	r3, [r3, #0]
  4005de:	b10b      	cbz	r3, 4005e4 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4005e0:	4648      	mov	r0, r9
  4005e2:	4798      	blx	r3
  4005e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005e8:	00400395 	.word	0x00400395
  4005ec:	00400399 	.word	0x00400399
  4005f0:	200009d4 	.word	0x200009d4
  4005f4:	20000b3c 	.word	0x20000b3c
  4005f8:	20000a44 	.word	0x20000a44

004005fc <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4005fc:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4005fe:	210b      	movs	r1, #11
  400600:	4801      	ldr	r0, [pc, #4]	; (400608 <PIOA_Handler+0xc>)
  400602:	4b02      	ldr	r3, [pc, #8]	; (40060c <PIOA_Handler+0x10>)
  400604:	4798      	blx	r3
  400606:	bd08      	pop	{r3, pc}
  400608:	400e0e00 	.word	0x400e0e00
  40060c:	00400595 	.word	0x00400595

00400610 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400610:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400612:	210c      	movs	r1, #12
  400614:	4801      	ldr	r0, [pc, #4]	; (40061c <PIOB_Handler+0xc>)
  400616:	4b02      	ldr	r3, [pc, #8]	; (400620 <PIOB_Handler+0x10>)
  400618:	4798      	blx	r3
  40061a:	bd08      	pop	{r3, pc}
  40061c:	400e1000 	.word	0x400e1000
  400620:	00400595 	.word	0x00400595

00400624 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400624:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400626:	210d      	movs	r1, #13
  400628:	4801      	ldr	r0, [pc, #4]	; (400630 <PIOC_Handler+0xc>)
  40062a:	4b02      	ldr	r3, [pc, #8]	; (400634 <PIOC_Handler+0x10>)
  40062c:	4798      	blx	r3
  40062e:	bd08      	pop	{r3, pc}
  400630:	400e1200 	.word	0x400e1200
  400634:	00400595 	.word	0x00400595

00400638 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400638:	4a17      	ldr	r2, [pc, #92]	; (400698 <pmc_switch_mck_to_pllack+0x60>)
  40063a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40063c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400640:	4318      	orrs	r0, r3
  400642:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400644:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400646:	f013 0f08 	tst.w	r3, #8
  40064a:	d10a      	bne.n	400662 <pmc_switch_mck_to_pllack+0x2a>
  40064c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400650:	4911      	ldr	r1, [pc, #68]	; (400698 <pmc_switch_mck_to_pllack+0x60>)
  400652:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400654:	f012 0f08 	tst.w	r2, #8
  400658:	d103      	bne.n	400662 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40065a:	3b01      	subs	r3, #1
  40065c:	d1f9      	bne.n	400652 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40065e:	2001      	movs	r0, #1
  400660:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400662:	4a0d      	ldr	r2, [pc, #52]	; (400698 <pmc_switch_mck_to_pllack+0x60>)
  400664:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400666:	f023 0303 	bic.w	r3, r3, #3
  40066a:	f043 0302 	orr.w	r3, r3, #2
  40066e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400670:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400672:	f013 0f08 	tst.w	r3, #8
  400676:	d10a      	bne.n	40068e <pmc_switch_mck_to_pllack+0x56>
  400678:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40067c:	4906      	ldr	r1, [pc, #24]	; (400698 <pmc_switch_mck_to_pllack+0x60>)
  40067e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400680:	f012 0f08 	tst.w	r2, #8
  400684:	d105      	bne.n	400692 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400686:	3b01      	subs	r3, #1
  400688:	d1f9      	bne.n	40067e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40068a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40068c:	4770      	bx	lr
	return 0;
  40068e:	2000      	movs	r0, #0
  400690:	4770      	bx	lr
  400692:	2000      	movs	r0, #0
  400694:	4770      	bx	lr
  400696:	bf00      	nop
  400698:	400e0400 	.word	0x400e0400

0040069c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40069c:	b9c8      	cbnz	r0, 4006d2 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40069e:	4a11      	ldr	r2, [pc, #68]	; (4006e4 <pmc_switch_mainck_to_xtal+0x48>)
  4006a0:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4006a2:	0209      	lsls	r1, r1, #8
  4006a4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4006a6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4006aa:	f023 0303 	bic.w	r3, r3, #3
  4006ae:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4006b2:	f043 0301 	orr.w	r3, r3, #1
  4006b6:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4006b8:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006ba:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006bc:	f013 0f01 	tst.w	r3, #1
  4006c0:	d0fb      	beq.n	4006ba <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4006c2:	4a08      	ldr	r2, [pc, #32]	; (4006e4 <pmc_switch_mainck_to_xtal+0x48>)
  4006c4:	6a13      	ldr	r3, [r2, #32]
  4006c6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4006ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4006ce:	6213      	str	r3, [r2, #32]
  4006d0:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006d2:	4904      	ldr	r1, [pc, #16]	; (4006e4 <pmc_switch_mainck_to_xtal+0x48>)
  4006d4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4006d6:	4a04      	ldr	r2, [pc, #16]	; (4006e8 <pmc_switch_mainck_to_xtal+0x4c>)
  4006d8:	401a      	ands	r2, r3
  4006da:	4b04      	ldr	r3, [pc, #16]	; (4006ec <pmc_switch_mainck_to_xtal+0x50>)
  4006dc:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4006de:	620b      	str	r3, [r1, #32]
  4006e0:	4770      	bx	lr
  4006e2:	bf00      	nop
  4006e4:	400e0400 	.word	0x400e0400
  4006e8:	fec8fffc 	.word	0xfec8fffc
  4006ec:	01370002 	.word	0x01370002

004006f0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4006f0:	4b02      	ldr	r3, [pc, #8]	; (4006fc <pmc_osc_is_ready_mainck+0xc>)
  4006f2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006f4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006f8:	4770      	bx	lr
  4006fa:	bf00      	nop
  4006fc:	400e0400 	.word	0x400e0400

00400700 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400700:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400704:	4b01      	ldr	r3, [pc, #4]	; (40070c <pmc_disable_pllack+0xc>)
  400706:	629a      	str	r2, [r3, #40]	; 0x28
  400708:	4770      	bx	lr
  40070a:	bf00      	nop
  40070c:	400e0400 	.word	0x400e0400

00400710 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400710:	4b02      	ldr	r3, [pc, #8]	; (40071c <pmc_is_locked_pllack+0xc>)
  400712:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400714:	f000 0002 	and.w	r0, r0, #2
  400718:	4770      	bx	lr
  40071a:	bf00      	nop
  40071c:	400e0400 	.word	0x400e0400

00400720 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400720:	2822      	cmp	r0, #34	; 0x22
  400722:	d81e      	bhi.n	400762 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400724:	281f      	cmp	r0, #31
  400726:	d80c      	bhi.n	400742 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400728:	4b11      	ldr	r3, [pc, #68]	; (400770 <pmc_enable_periph_clk+0x50>)
  40072a:	699a      	ldr	r2, [r3, #24]
  40072c:	2301      	movs	r3, #1
  40072e:	4083      	lsls	r3, r0
  400730:	4393      	bics	r3, r2
  400732:	d018      	beq.n	400766 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400734:	2301      	movs	r3, #1
  400736:	fa03 f000 	lsl.w	r0, r3, r0
  40073a:	4b0d      	ldr	r3, [pc, #52]	; (400770 <pmc_enable_periph_clk+0x50>)
  40073c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40073e:	2000      	movs	r0, #0
  400740:	4770      	bx	lr
		ul_id -= 32;
  400742:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400744:	4b0a      	ldr	r3, [pc, #40]	; (400770 <pmc_enable_periph_clk+0x50>)
  400746:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40074a:	2301      	movs	r3, #1
  40074c:	4083      	lsls	r3, r0
  40074e:	4393      	bics	r3, r2
  400750:	d00b      	beq.n	40076a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400752:	2301      	movs	r3, #1
  400754:	fa03 f000 	lsl.w	r0, r3, r0
  400758:	4b05      	ldr	r3, [pc, #20]	; (400770 <pmc_enable_periph_clk+0x50>)
  40075a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40075e:	2000      	movs	r0, #0
  400760:	4770      	bx	lr
		return 1;
  400762:	2001      	movs	r0, #1
  400764:	4770      	bx	lr
	return 0;
  400766:	2000      	movs	r0, #0
  400768:	4770      	bx	lr
  40076a:	2000      	movs	r0, #0
}
  40076c:	4770      	bx	lr
  40076e:	bf00      	nop
  400770:	400e0400 	.word	0x400e0400

00400774 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400774:	b508      	push	{r3, lr}
  400776:	2015      	movs	r0, #21
  400778:	4b01      	ldr	r3, [pc, #4]	; (400780 <spi_enable_clock+0xc>)
  40077a:	4798      	blx	r3
  40077c:	bd08      	pop	{r3, pc}
  40077e:	bf00      	nop
  400780:	00400721 	.word	0x00400721

00400784 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400784:	6843      	ldr	r3, [r0, #4]
  400786:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40078a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40078c:	6843      	ldr	r3, [r0, #4]
  40078e:	0409      	lsls	r1, r1, #16
  400790:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400794:	4319      	orrs	r1, r3
  400796:	6041      	str	r1, [r0, #4]
  400798:	4770      	bx	lr

0040079a <spi_read>:
 *
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_read(Spi *p_spi, uint16_t *us_data, uint8_t *p_pcs)
{
  40079a:	b410      	push	{r4}
	uint32_t timeout = SPI_TIMEOUT;
	static uint32_t reg_value;

	while (!(p_spi->SPI_SR & SPI_SR_RDRF)) {
  40079c:	f643 2399 	movw	r3, #15001	; 0x3a99
  4007a0:	6904      	ldr	r4, [r0, #16]
  4007a2:	f014 0f01 	tst.w	r4, #1
  4007a6:	d103      	bne.n	4007b0 <spi_read+0x16>
		if (!timeout--) {
  4007a8:	3b01      	subs	r3, #1
  4007aa:	d1f9      	bne.n	4007a0 <spi_read+0x6>
			return SPI_ERROR_TIMEOUT;
  4007ac:	2001      	movs	r0, #1
  4007ae:	e009      	b.n	4007c4 <spi_read+0x2a>
		}
	}

	reg_value = p_spi->SPI_RDR;
  4007b0:	6883      	ldr	r3, [r0, #8]
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4007b2:	6840      	ldr	r0, [r0, #4]
	if (spi_get_peripheral_select_mode(p_spi)) {
  4007b4:	f010 0f02 	tst.w	r0, #2
		*p_pcs = (uint8_t) ((reg_value & SPI_RDR_PCS_Msk) >> SPI_RDR_PCS_Pos);
  4007b8:	bf1c      	itt	ne
  4007ba:	f3c3 4003 	ubfxne	r0, r3, #16, #4
  4007be:	7010      	strbne	r0, [r2, #0]
	}
	*us_data = (uint16_t) (reg_value & SPI_RDR_RD_Msk);
  4007c0:	800b      	strh	r3, [r1, #0]

	return SPI_OK;
  4007c2:	2000      	movs	r0, #0
}
  4007c4:	bc10      	pop	{r4}
  4007c6:	4770      	bx	lr

004007c8 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4007c8:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4007ca:	f643 2499 	movw	r4, #15001	; 0x3a99
  4007ce:	6905      	ldr	r5, [r0, #16]
  4007d0:	f015 0f02 	tst.w	r5, #2
  4007d4:	d103      	bne.n	4007de <spi_write+0x16>
		if (!timeout--) {
  4007d6:	3c01      	subs	r4, #1
  4007d8:	d1f9      	bne.n	4007ce <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4007da:	2001      	movs	r0, #1
  4007dc:	e00c      	b.n	4007f8 <spi_write+0x30>
  4007de:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4007e0:	f014 0f02 	tst.w	r4, #2
  4007e4:	d006      	beq.n	4007f4 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4007e6:	0412      	lsls	r2, r2, #16
  4007e8:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4007ec:	4311      	orrs	r1, r2
		if (uc_last) {
  4007ee:	b10b      	cbz	r3, 4007f4 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4007f0:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4007f4:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4007f6:	2000      	movs	r0, #0
}
  4007f8:	bc30      	pop	{r4, r5}
  4007fa:	4770      	bx	lr

004007fc <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4007fc:	b932      	cbnz	r2, 40080c <spi_set_clock_polarity+0x10>
  4007fe:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400802:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400804:	f023 0301 	bic.w	r3, r3, #1
  400808:	6303      	str	r3, [r0, #48]	; 0x30
  40080a:	4770      	bx	lr
  40080c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400810:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400812:	f043 0301 	orr.w	r3, r3, #1
  400816:	6303      	str	r3, [r0, #48]	; 0x30
  400818:	4770      	bx	lr

0040081a <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  40081a:	b932      	cbnz	r2, 40082a <spi_set_clock_phase+0x10>
  40081c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400820:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400822:	f023 0302 	bic.w	r3, r3, #2
  400826:	6303      	str	r3, [r0, #48]	; 0x30
  400828:	4770      	bx	lr
  40082a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  40082e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400830:	f043 0302 	orr.w	r3, r3, #2
  400834:	6303      	str	r3, [r0, #48]	; 0x30
  400836:	4770      	bx	lr

00400838 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400838:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40083c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40083e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400842:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400844:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400846:	431a      	orrs	r2, r3
  400848:	630a      	str	r2, [r1, #48]	; 0x30
  40084a:	4770      	bx	lr

0040084c <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40084c:	b172      	cbz	r2, 40086c <spi_set_baudrate_div+0x20>
{
  40084e:	b410      	push	{r4}
  400850:	4614      	mov	r4, r2
  400852:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400856:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400858:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40085c:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40085e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400860:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400864:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400866:	2000      	movs	r0, #0
}
  400868:	bc10      	pop	{r4}
  40086a:	4770      	bx	lr
        return -1;
  40086c:	f04f 30ff 	mov.w	r0, #4294967295
  400870:	4770      	bx	lr

00400872 <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  400872:	b410      	push	{r4}
  400874:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  400878:	6b08      	ldr	r0, [r1, #48]	; 0x30
  40087a:	b280      	uxth	r0, r0
  40087c:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  40087e:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  400880:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  400884:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  400888:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  40088a:	bc10      	pop	{r4}
  40088c:	4770      	bx	lr

0040088e <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  40088e:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  400890:	23ac      	movs	r3, #172	; 0xac
  400892:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  400894:	680b      	ldr	r3, [r1, #0]
  400896:	684a      	ldr	r2, [r1, #4]
  400898:	fbb3 f3f2 	udiv	r3, r3, r2
  40089c:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  40089e:	1e5c      	subs	r4, r3, #1
  4008a0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4008a4:	4294      	cmp	r4, r2
  4008a6:	d80b      	bhi.n	4008c0 <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4008a8:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4008aa:	688b      	ldr	r3, [r1, #8]
  4008ac:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4008ae:	f240 2302 	movw	r3, #514	; 0x202
  4008b2:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4008b6:	2350      	movs	r3, #80	; 0x50
  4008b8:	6003      	str	r3, [r0, #0]

	return 0;
  4008ba:	2000      	movs	r0, #0
}
  4008bc:	bc10      	pop	{r4}
  4008be:	4770      	bx	lr
		return 1;
  4008c0:	2001      	movs	r0, #1
  4008c2:	e7fb      	b.n	4008bc <uart_init+0x2e>

004008c4 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4008c4:	6943      	ldr	r3, [r0, #20]
  4008c6:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4008ca:	bf1a      	itte	ne
  4008cc:	61c1      	strne	r1, [r0, #28]
	return 0;
  4008ce:	2000      	movne	r0, #0
		return 1;
  4008d0:	2001      	moveq	r0, #1
}
  4008d2:	4770      	bx	lr

004008d4 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4008d4:	6943      	ldr	r3, [r0, #20]
  4008d6:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4008da:	bf1d      	ittte	ne
  4008dc:	6983      	ldrne	r3, [r0, #24]
  4008de:	700b      	strbne	r3, [r1, #0]
	return 0;
  4008e0:	2000      	movne	r0, #0
		return 1;
  4008e2:	2001      	moveq	r0, #1
}
  4008e4:	4770      	bx	lr

004008e6 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4008e6:	6943      	ldr	r3, [r0, #20]
  4008e8:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  4008ec:	bf1d      	ittte	ne
  4008ee:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  4008f2:	61c1      	strne	r1, [r0, #28]
	return 0;
  4008f4:	2000      	movne	r0, #0
		return 1;
  4008f6:	2001      	moveq	r0, #1
}
  4008f8:	4770      	bx	lr

004008fa <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4008fa:	6943      	ldr	r3, [r0, #20]
  4008fc:	f013 0f01 	tst.w	r3, #1
  400900:	d005      	beq.n	40090e <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400902:	6983      	ldr	r3, [r0, #24]
  400904:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400908:	600b      	str	r3, [r1, #0]

	return 0;
  40090a:	2000      	movs	r0, #0
  40090c:	4770      	bx	lr
		return 1;
  40090e:	2001      	movs	r0, #1
}
  400910:	4770      	bx	lr

00400912 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400912:	e7fe      	b.n	400912 <Dummy_Handler>

00400914 <Reset_Handler>:
{
  400914:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  400916:	4b21      	ldr	r3, [pc, #132]	; (40099c <Reset_Handler+0x88>)
  400918:	4a21      	ldr	r2, [pc, #132]	; (4009a0 <Reset_Handler+0x8c>)
  40091a:	429a      	cmp	r2, r3
  40091c:	d928      	bls.n	400970 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40091e:	4b21      	ldr	r3, [pc, #132]	; (4009a4 <Reset_Handler+0x90>)
  400920:	4a1e      	ldr	r2, [pc, #120]	; (40099c <Reset_Handler+0x88>)
  400922:	429a      	cmp	r2, r3
  400924:	d20c      	bcs.n	400940 <Reset_Handler+0x2c>
  400926:	3b01      	subs	r3, #1
  400928:	1a9b      	subs	r3, r3, r2
  40092a:	f023 0303 	bic.w	r3, r3, #3
  40092e:	3304      	adds	r3, #4
  400930:	4413      	add	r3, r2
  400932:	491b      	ldr	r1, [pc, #108]	; (4009a0 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  400934:	f851 0b04 	ldr.w	r0, [r1], #4
  400938:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  40093c:	429a      	cmp	r2, r3
  40093e:	d1f9      	bne.n	400934 <Reset_Handler+0x20>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  400940:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  400942:	4b19      	ldr	r3, [pc, #100]	; (4009a8 <Reset_Handler+0x94>)
  400944:	4a19      	ldr	r2, [pc, #100]	; (4009ac <Reset_Handler+0x98>)
  400946:	429a      	cmp	r2, r3
  400948:	d20a      	bcs.n	400960 <Reset_Handler+0x4c>
  40094a:	3b01      	subs	r3, #1
  40094c:	1a9b      	subs	r3, r3, r2
  40094e:	f023 0303 	bic.w	r3, r3, #3
  400952:	3304      	adds	r3, #4
  400954:	4413      	add	r3, r2
		*pDest++ = 0;
  400956:	2100      	movs	r1, #0
  400958:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  40095c:	429a      	cmp	r2, r3
  40095e:	d1fb      	bne.n	400958 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  400960:	4b13      	ldr	r3, [pc, #76]	; (4009b0 <Reset_Handler+0x9c>)
  400962:	4a14      	ldr	r2, [pc, #80]	; (4009b4 <Reset_Handler+0xa0>)
  400964:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  400966:	4b14      	ldr	r3, [pc, #80]	; (4009b8 <Reset_Handler+0xa4>)
  400968:	4798      	blx	r3
	main();
  40096a:	4b14      	ldr	r3, [pc, #80]	; (4009bc <Reset_Handler+0xa8>)
  40096c:	4798      	blx	r3
  40096e:	e7fe      	b.n	40096e <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  400970:	4b0a      	ldr	r3, [pc, #40]	; (40099c <Reset_Handler+0x88>)
  400972:	4a0b      	ldr	r2, [pc, #44]	; (4009a0 <Reset_Handler+0x8c>)
  400974:	429a      	cmp	r2, r3
  400976:	d2e3      	bcs.n	400940 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  400978:	4b0a      	ldr	r3, [pc, #40]	; (4009a4 <Reset_Handler+0x90>)
  40097a:	4808      	ldr	r0, [pc, #32]	; (40099c <Reset_Handler+0x88>)
  40097c:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  40097e:	4611      	mov	r1, r2
  400980:	3a04      	subs	r2, #4
  400982:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  400984:	2800      	cmp	r0, #0
  400986:	d0db      	beq.n	400940 <Reset_Handler+0x2c>
  400988:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  40098c:	f852 0904 	ldr.w	r0, [r2], #-4
  400990:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  400994:	42ca      	cmn	r2, r1
  400996:	d1f9      	bne.n	40098c <Reset_Handler+0x78>
  400998:	e7d2      	b.n	400940 <Reset_Handler+0x2c>
  40099a:	bf00      	nop
  40099c:	20000000 	.word	0x20000000
  4009a0:	00405fb4 	.word	0x00405fb4
  4009a4:	200009b8 	.word	0x200009b8
  4009a8:	20000b68 	.word	0x20000b68
  4009ac:	200009b8 	.word	0x200009b8
  4009b0:	e000ed00 	.word	0xe000ed00
  4009b4:	00400000 	.word	0x00400000
  4009b8:	00401369 	.word	0x00401369
  4009bc:	00400fb9 	.word	0x00400fb9

004009c0 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4009c0:	4b3c      	ldr	r3, [pc, #240]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  4009c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009c4:	f003 0303 	and.w	r3, r3, #3
  4009c8:	2b03      	cmp	r3, #3
  4009ca:	d80e      	bhi.n	4009ea <SystemCoreClockUpdate+0x2a>
  4009cc:	e8df f003 	tbb	[pc, r3]
  4009d0:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4009d4:	4b38      	ldr	r3, [pc, #224]	; (400ab8 <SystemCoreClockUpdate+0xf8>)
  4009d6:	695b      	ldr	r3, [r3, #20]
  4009d8:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4009dc:	bf14      	ite	ne
  4009de:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4009e2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4009e6:	4b35      	ldr	r3, [pc, #212]	; (400abc <SystemCoreClockUpdate+0xfc>)
  4009e8:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4009ea:	4b32      	ldr	r3, [pc, #200]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  4009ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4009ee:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4009f2:	2b70      	cmp	r3, #112	; 0x70
  4009f4:	d055      	beq.n	400aa2 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009f6:	4b2f      	ldr	r3, [pc, #188]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  4009f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4009fa:	4930      	ldr	r1, [pc, #192]	; (400abc <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4009fc:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  400a00:	680b      	ldr	r3, [r1, #0]
  400a02:	40d3      	lsrs	r3, r2
  400a04:	600b      	str	r3, [r1, #0]
  400a06:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400a08:	4b2a      	ldr	r3, [pc, #168]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a0a:	6a1b      	ldr	r3, [r3, #32]
  400a0c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400a10:	d003      	beq.n	400a1a <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400a12:	4a2b      	ldr	r2, [pc, #172]	; (400ac0 <SystemCoreClockUpdate+0x100>)
  400a14:	4b29      	ldr	r3, [pc, #164]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a16:	601a      	str	r2, [r3, #0]
  400a18:	e7e7      	b.n	4009ea <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400a1a:	4a2a      	ldr	r2, [pc, #168]	; (400ac4 <SystemCoreClockUpdate+0x104>)
  400a1c:	4b27      	ldr	r3, [pc, #156]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a1e:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400a20:	4b24      	ldr	r3, [pc, #144]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a22:	6a1b      	ldr	r3, [r3, #32]
  400a24:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400a28:	2b10      	cmp	r3, #16
  400a2a:	d005      	beq.n	400a38 <SystemCoreClockUpdate+0x78>
  400a2c:	2b20      	cmp	r3, #32
  400a2e:	d1dc      	bne.n	4009ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400a30:	4a23      	ldr	r2, [pc, #140]	; (400ac0 <SystemCoreClockUpdate+0x100>)
  400a32:	4b22      	ldr	r3, [pc, #136]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a34:	601a      	str	r2, [r3, #0]
			break;
  400a36:	e7d8      	b.n	4009ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400a38:	4a23      	ldr	r2, [pc, #140]	; (400ac8 <SystemCoreClockUpdate+0x108>)
  400a3a:	4b20      	ldr	r3, [pc, #128]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a3c:	601a      	str	r2, [r3, #0]
			break;
  400a3e:	e7d4      	b.n	4009ea <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400a40:	4b1c      	ldr	r3, [pc, #112]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a42:	6a1b      	ldr	r3, [r3, #32]
  400a44:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400a48:	d018      	beq.n	400a7c <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400a4a:	4a1d      	ldr	r2, [pc, #116]	; (400ac0 <SystemCoreClockUpdate+0x100>)
  400a4c:	4b1b      	ldr	r3, [pc, #108]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a4e:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400a50:	4b18      	ldr	r3, [pc, #96]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a54:	f003 0303 	and.w	r3, r3, #3
  400a58:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400a5a:	4a16      	ldr	r2, [pc, #88]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a5c:	bf07      	ittee	eq
  400a5e:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400a60:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400a62:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400a64:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  400a66:	4815      	ldr	r0, [pc, #84]	; (400abc <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  400a68:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400a6c:	6803      	ldr	r3, [r0, #0]
  400a6e:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  400a72:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400a74:	fbb3 f3f2 	udiv	r3, r3, r2
  400a78:	6003      	str	r3, [r0, #0]
  400a7a:	e7b6      	b.n	4009ea <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400a7c:	4a11      	ldr	r2, [pc, #68]	; (400ac4 <SystemCoreClockUpdate+0x104>)
  400a7e:	4b0f      	ldr	r3, [pc, #60]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a80:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400a82:	4b0c      	ldr	r3, [pc, #48]	; (400ab4 <SystemCoreClockUpdate+0xf4>)
  400a84:	6a1b      	ldr	r3, [r3, #32]
  400a86:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400a8a:	2b10      	cmp	r3, #16
  400a8c:	d005      	beq.n	400a9a <SystemCoreClockUpdate+0xda>
  400a8e:	2b20      	cmp	r3, #32
  400a90:	d1de      	bne.n	400a50 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400a92:	4a0b      	ldr	r2, [pc, #44]	; (400ac0 <SystemCoreClockUpdate+0x100>)
  400a94:	4b09      	ldr	r3, [pc, #36]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a96:	601a      	str	r2, [r3, #0]
					break;
  400a98:	e7da      	b.n	400a50 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400a9a:	4a0b      	ldr	r2, [pc, #44]	; (400ac8 <SystemCoreClockUpdate+0x108>)
  400a9c:	4b07      	ldr	r3, [pc, #28]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400a9e:	601a      	str	r2, [r3, #0]
					break;
  400aa0:	e7d6      	b.n	400a50 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400aa2:	4a06      	ldr	r2, [pc, #24]	; (400abc <SystemCoreClockUpdate+0xfc>)
  400aa4:	6813      	ldr	r3, [r2, #0]
  400aa6:	4909      	ldr	r1, [pc, #36]	; (400acc <SystemCoreClockUpdate+0x10c>)
  400aa8:	fba1 1303 	umull	r1, r3, r1, r3
  400aac:	085b      	lsrs	r3, r3, #1
  400aae:	6013      	str	r3, [r2, #0]
  400ab0:	4770      	bx	lr
  400ab2:	bf00      	nop
  400ab4:	400e0400 	.word	0x400e0400
  400ab8:	400e1410 	.word	0x400e1410
  400abc:	20000000 	.word	0x20000000
  400ac0:	00b71b00 	.word	0x00b71b00
  400ac4:	003d0900 	.word	0x003d0900
  400ac8:	007a1200 	.word	0x007a1200
  400acc:	aaaaaaab 	.word	0xaaaaaaab

00400ad0 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400ad0:	4b1a      	ldr	r3, [pc, #104]	; (400b3c <system_init_flash+0x6c>)
  400ad2:	4298      	cmp	r0, r3
  400ad4:	d914      	bls.n	400b00 <system_init_flash+0x30>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400ad6:	4b1a      	ldr	r3, [pc, #104]	; (400b40 <system_init_flash+0x70>)
  400ad8:	4298      	cmp	r0, r3
  400ada:	d919      	bls.n	400b10 <system_init_flash+0x40>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400adc:	4b19      	ldr	r3, [pc, #100]	; (400b44 <system_init_flash+0x74>)
  400ade:	4298      	cmp	r0, r3
  400ae0:	d91d      	bls.n	400b1e <system_init_flash+0x4e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400ae2:	4b19      	ldr	r3, [pc, #100]	; (400b48 <system_init_flash+0x78>)
  400ae4:	4298      	cmp	r0, r3
  400ae6:	d921      	bls.n	400b2c <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400ae8:	4b18      	ldr	r3, [pc, #96]	; (400b4c <system_init_flash+0x7c>)
  400aea:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400aec:	bf94      	ite	ls
  400aee:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400af2:	4b17      	ldrhi	r3, [pc, #92]	; (400b50 <system_init_flash+0x80>)
  400af4:	4a17      	ldr	r2, [pc, #92]	; (400b54 <system_init_flash+0x84>)
  400af6:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400af8:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400afc:	6013      	str	r3, [r2, #0]
  400afe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400b00:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400b04:	4a13      	ldr	r2, [pc, #76]	; (400b54 <system_init_flash+0x84>)
  400b06:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400b08:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b0c:	6013      	str	r3, [r2, #0]
  400b0e:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400b10:	4b11      	ldr	r3, [pc, #68]	; (400b58 <system_init_flash+0x88>)
  400b12:	4a10      	ldr	r2, [pc, #64]	; (400b54 <system_init_flash+0x84>)
  400b14:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400b16:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b1a:	6013      	str	r3, [r2, #0]
  400b1c:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400b1e:	4b0f      	ldr	r3, [pc, #60]	; (400b5c <system_init_flash+0x8c>)
  400b20:	4a0c      	ldr	r2, [pc, #48]	; (400b54 <system_init_flash+0x84>)
  400b22:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400b24:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b28:	6013      	str	r3, [r2, #0]
  400b2a:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400b2c:	4b0c      	ldr	r3, [pc, #48]	; (400b60 <system_init_flash+0x90>)
  400b2e:	4a09      	ldr	r2, [pc, #36]	; (400b54 <system_init_flash+0x84>)
  400b30:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400b32:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b36:	6013      	str	r3, [r2, #0]
  400b38:	4770      	bx	lr
  400b3a:	bf00      	nop
  400b3c:	01312cff 	.word	0x01312cff
  400b40:	026259ff 	.word	0x026259ff
  400b44:	039386ff 	.word	0x039386ff
  400b48:	04c4b3ff 	.word	0x04c4b3ff
  400b4c:	05f5e0ff 	.word	0x05f5e0ff
  400b50:	04000500 	.word	0x04000500
  400b54:	400e0a00 	.word	0x400e0a00
  400b58:	04000100 	.word	0x04000100
  400b5c:	04000200 	.word	0x04000200
  400b60:	04000300 	.word	0x04000300

00400b64 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400b64:	4b0a      	ldr	r3, [pc, #40]	; (400b90 <_sbrk+0x2c>)
  400b66:	681b      	ldr	r3, [r3, #0]
  400b68:	b153      	cbz	r3, 400b80 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400b6a:	4b09      	ldr	r3, [pc, #36]	; (400b90 <_sbrk+0x2c>)
  400b6c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400b6e:	181a      	adds	r2, r3, r0
  400b70:	4908      	ldr	r1, [pc, #32]	; (400b94 <_sbrk+0x30>)
  400b72:	4291      	cmp	r1, r2
  400b74:	db08      	blt.n	400b88 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400b76:	4610      	mov	r0, r2
  400b78:	4a05      	ldr	r2, [pc, #20]	; (400b90 <_sbrk+0x2c>)
  400b7a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400b7c:	4618      	mov	r0, r3
  400b7e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400b80:	4a05      	ldr	r2, [pc, #20]	; (400b98 <_sbrk+0x34>)
  400b82:	4b03      	ldr	r3, [pc, #12]	; (400b90 <_sbrk+0x2c>)
  400b84:	601a      	str	r2, [r3, #0]
  400b86:	e7f0      	b.n	400b6a <_sbrk+0x6>
		return (caddr_t) -1;	
  400b88:	f04f 30ff 	mov.w	r0, #4294967295
}
  400b8c:	4770      	bx	lr
  400b8e:	bf00      	nop
  400b90:	20000a48 	.word	0x20000a48
  400b94:	20027ffc 	.word	0x20027ffc
  400b98:	20003b68 	.word	0x20003b68

00400b9c <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400b9c:	f04f 30ff 	mov.w	r0, #4294967295
  400ba0:	4770      	bx	lr

00400ba2 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400ba2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400ba6:	604b      	str	r3, [r1, #4]

	return 0;
}
  400ba8:	2000      	movs	r0, #0
  400baa:	4770      	bx	lr

00400bac <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400bac:	2001      	movs	r0, #1
  400bae:	4770      	bx	lr

00400bb0 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400bb0:	2000      	movs	r0, #0
  400bb2:	4770      	bx	lr

00400bb4 <spi_slave_transfer>:
 *
 * \param p_buf Pointer to buffer to transfer.
 * \param size Size of the buffer.
 */
static void spi_slave_transfer(void *p_buf, uint32_t size)
{
  400bb4:	b510      	push	{r4, lr}
	gs_puc_transfer_buffer = p_buf;
  400bb6:	4b06      	ldr	r3, [pc, #24]	; (400bd0 <spi_slave_transfer+0x1c>)
  400bb8:	6018      	str	r0, [r3, #0]
	gs_ul_transfer_length = size;
  400bba:	4b06      	ldr	r3, [pc, #24]	; (400bd4 <spi_slave_transfer+0x20>)
  400bbc:	6019      	str	r1, [r3, #0]
	gs_ul_transfer_index = 0;
  400bbe:	2200      	movs	r2, #0
  400bc0:	4b05      	ldr	r3, [pc, #20]	; (400bd8 <spi_slave_transfer+0x24>)
  400bc2:	601a      	str	r2, [r3, #0]
	spi_write(SPI_SLAVE_BASE, gs_puc_transfer_buffer[gs_ul_transfer_index], 0,
  400bc4:	4613      	mov	r3, r2
  400bc6:	7801      	ldrb	r1, [r0, #0]
  400bc8:	4804      	ldr	r0, [pc, #16]	; (400bdc <spi_slave_transfer+0x28>)
  400bca:	4c05      	ldr	r4, [pc, #20]	; (400be0 <spi_slave_transfer+0x2c>)
  400bcc:	47a0      	blx	r4
  400bce:	bd10      	pop	{r4, pc}
  400bd0:	20000a50 	.word	0x20000a50
  400bd4:	20000af8 	.word	0x20000af8
  400bd8:	20000af4 	.word	0x20000af4
  400bdc:	40008000 	.word	0x40008000
  400be0:	004007c9 	.word	0x004007c9

00400be4 <spi_master_transfer>:

	uint8_t *p_buffer;

	p_buffer = p_buf;

	for (i = 0; i < size; i++) {
  400be4:	b309      	cbz	r1, 400c2a <spi_master_transfer+0x46>
{
  400be6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400bea:	b083      	sub	sp, #12
  400bec:	4688      	mov	r8, r1
  400bee:	4605      	mov	r5, r0
  400bf0:	4480      	add	r8, r0
		spi_write(SPI_MASTER_BASE, p_buffer[i], 0, 0);
  400bf2:	4c0e      	ldr	r4, [pc, #56]	; (400c2c <spi_master_transfer+0x48>)
  400bf4:	f8df 9040 	ldr.w	r9, [pc, #64]	; 400c38 <spi_master_transfer+0x54>
		/* Wait transfer done. */
		while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
		spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
  400bf8:	4e0d      	ldr	r6, [pc, #52]	; (400c30 <spi_master_transfer+0x4c>)
  400bfa:	462f      	mov	r7, r5
		spi_write(SPI_MASTER_BASE, p_buffer[i], 0, 0);
  400bfc:	2300      	movs	r3, #0
  400bfe:	461a      	mov	r2, r3
  400c00:	7829      	ldrb	r1, [r5, #0]
  400c02:	4620      	mov	r0, r4
  400c04:	47c8      	blx	r9
 *
 * \return SPI status register value.
 */
static inline uint32_t spi_read_status(Spi *p_spi)
{
	return p_spi->SPI_SR;
  400c06:	6923      	ldr	r3, [r4, #16]
		while ((spi_read_status(SPI_MASTER_BASE) & SPI_SR_RDRF) == 0);
  400c08:	f013 0f01 	tst.w	r3, #1
  400c0c:	d0fb      	beq.n	400c06 <spi_master_transfer+0x22>
		spi_read(SPI_MASTER_BASE, &data, &uc_pcs);
  400c0e:	f10d 0207 	add.w	r2, sp, #7
  400c12:	4631      	mov	r1, r6
  400c14:	4620      	mov	r0, r4
  400c16:	4b07      	ldr	r3, [pc, #28]	; (400c34 <spi_master_transfer+0x50>)
  400c18:	4798      	blx	r3
		p_buffer[i] = data;
  400c1a:	8833      	ldrh	r3, [r6, #0]
  400c1c:	703b      	strb	r3, [r7, #0]
  400c1e:	3501      	adds	r5, #1
	for (i = 0; i < size; i++) {
  400c20:	4545      	cmp	r5, r8
  400c22:	d1ea      	bne.n	400bfa <spi_master_transfer+0x16>
	}
}
  400c24:	b003      	add	sp, #12
  400c26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400c2a:	4770      	bx	lr
  400c2c:	40008000 	.word	0x40008000
  400c30:	20000a4e 	.word	0x20000a4e
  400c34:	0040079b 	.word	0x0040079b
  400c38:	004007c9 	.word	0x004007c9

00400c3c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400c3e:	b083      	sub	sp, #12
  400c40:	4605      	mov	r5, r0
  400c42:	460c      	mov	r4, r1
	uint32_t val = 0;
  400c44:	2300      	movs	r3, #0
  400c46:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400c48:	4b18      	ldr	r3, [pc, #96]	; (400cac <usart_serial_getchar+0x70>)
  400c4a:	4298      	cmp	r0, r3
  400c4c:	d00a      	beq.n	400c64 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400c4e:	4b18      	ldr	r3, [pc, #96]	; (400cb0 <usart_serial_getchar+0x74>)
  400c50:	4298      	cmp	r0, r3
  400c52:	d00f      	beq.n	400c74 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400c54:	4b17      	ldr	r3, [pc, #92]	; (400cb4 <usart_serial_getchar+0x78>)
  400c56:	4298      	cmp	r0, r3
  400c58:	d014      	beq.n	400c84 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400c5a:	4b17      	ldr	r3, [pc, #92]	; (400cb8 <usart_serial_getchar+0x7c>)
  400c5c:	429d      	cmp	r5, r3
  400c5e:	d01b      	beq.n	400c98 <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400c60:	b003      	add	sp, #12
  400c62:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400c64:	461f      	mov	r7, r3
  400c66:	4e15      	ldr	r6, [pc, #84]	; (400cbc <usart_serial_getchar+0x80>)
  400c68:	4621      	mov	r1, r4
  400c6a:	4638      	mov	r0, r7
  400c6c:	47b0      	blx	r6
  400c6e:	2800      	cmp	r0, #0
  400c70:	d1fa      	bne.n	400c68 <usart_serial_getchar+0x2c>
  400c72:	e7f2      	b.n	400c5a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400c74:	461e      	mov	r6, r3
  400c76:	4d11      	ldr	r5, [pc, #68]	; (400cbc <usart_serial_getchar+0x80>)
  400c78:	4621      	mov	r1, r4
  400c7a:	4630      	mov	r0, r6
  400c7c:	47a8      	blx	r5
  400c7e:	2800      	cmp	r0, #0
  400c80:	d1fa      	bne.n	400c78 <usart_serial_getchar+0x3c>
  400c82:	e7ed      	b.n	400c60 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400c84:	461e      	mov	r6, r3
  400c86:	4d0e      	ldr	r5, [pc, #56]	; (400cc0 <usart_serial_getchar+0x84>)
  400c88:	a901      	add	r1, sp, #4
  400c8a:	4630      	mov	r0, r6
  400c8c:	47a8      	blx	r5
  400c8e:	2800      	cmp	r0, #0
  400c90:	d1fa      	bne.n	400c88 <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  400c92:	9b01      	ldr	r3, [sp, #4]
  400c94:	7023      	strb	r3, [r4, #0]
  400c96:	e7e3      	b.n	400c60 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400c98:	461e      	mov	r6, r3
  400c9a:	4d09      	ldr	r5, [pc, #36]	; (400cc0 <usart_serial_getchar+0x84>)
  400c9c:	a901      	add	r1, sp, #4
  400c9e:	4630      	mov	r0, r6
  400ca0:	47a8      	blx	r5
  400ca2:	2800      	cmp	r0, #0
  400ca4:	d1fa      	bne.n	400c9c <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  400ca6:	9b01      	ldr	r3, [sp, #4]
  400ca8:	7023      	strb	r3, [r4, #0]
}
  400caa:	e7d9      	b.n	400c60 <usart_serial_getchar+0x24>
  400cac:	400e0600 	.word	0x400e0600
  400cb0:	400e0800 	.word	0x400e0800
  400cb4:	40024000 	.word	0x40024000
  400cb8:	40028000 	.word	0x40028000
  400cbc:	004008d5 	.word	0x004008d5
  400cc0:	004008fb 	.word	0x004008fb

00400cc4 <usart_serial_putchar>:
{
  400cc4:	b570      	push	{r4, r5, r6, lr}
  400cc6:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400cc8:	4b18      	ldr	r3, [pc, #96]	; (400d2c <usart_serial_putchar+0x68>)
  400cca:	4298      	cmp	r0, r3
  400ccc:	d00a      	beq.n	400ce4 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  400cce:	4b18      	ldr	r3, [pc, #96]	; (400d30 <usart_serial_putchar+0x6c>)
  400cd0:	4298      	cmp	r0, r3
  400cd2:	d010      	beq.n	400cf6 <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400cd4:	4b17      	ldr	r3, [pc, #92]	; (400d34 <usart_serial_putchar+0x70>)
  400cd6:	4298      	cmp	r0, r3
  400cd8:	d016      	beq.n	400d08 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  400cda:	4b17      	ldr	r3, [pc, #92]	; (400d38 <usart_serial_putchar+0x74>)
  400cdc:	4298      	cmp	r0, r3
  400cde:	d01c      	beq.n	400d1a <usart_serial_putchar+0x56>
	return 0;
  400ce0:	2000      	movs	r0, #0
}
  400ce2:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400ce4:	461e      	mov	r6, r3
  400ce6:	4d15      	ldr	r5, [pc, #84]	; (400d3c <usart_serial_putchar+0x78>)
  400ce8:	4621      	mov	r1, r4
  400cea:	4630      	mov	r0, r6
  400cec:	47a8      	blx	r5
  400cee:	2800      	cmp	r0, #0
  400cf0:	d1fa      	bne.n	400ce8 <usart_serial_putchar+0x24>
		return 1;
  400cf2:	2001      	movs	r0, #1
  400cf4:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400cf6:	461e      	mov	r6, r3
  400cf8:	4d10      	ldr	r5, [pc, #64]	; (400d3c <usart_serial_putchar+0x78>)
  400cfa:	4621      	mov	r1, r4
  400cfc:	4630      	mov	r0, r6
  400cfe:	47a8      	blx	r5
  400d00:	2800      	cmp	r0, #0
  400d02:	d1fa      	bne.n	400cfa <usart_serial_putchar+0x36>
		return 1;
  400d04:	2001      	movs	r0, #1
  400d06:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400d08:	461e      	mov	r6, r3
  400d0a:	4d0d      	ldr	r5, [pc, #52]	; (400d40 <usart_serial_putchar+0x7c>)
  400d0c:	4621      	mov	r1, r4
  400d0e:	4630      	mov	r0, r6
  400d10:	47a8      	blx	r5
  400d12:	2800      	cmp	r0, #0
  400d14:	d1fa      	bne.n	400d0c <usart_serial_putchar+0x48>
		return 1;
  400d16:	2001      	movs	r0, #1
  400d18:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400d1a:	461e      	mov	r6, r3
  400d1c:	4d08      	ldr	r5, [pc, #32]	; (400d40 <usart_serial_putchar+0x7c>)
  400d1e:	4621      	mov	r1, r4
  400d20:	4630      	mov	r0, r6
  400d22:	47a8      	blx	r5
  400d24:	2800      	cmp	r0, #0
  400d26:	d1fa      	bne.n	400d1e <usart_serial_putchar+0x5a>
		return 1;
  400d28:	2001      	movs	r0, #1
  400d2a:	bd70      	pop	{r4, r5, r6, pc}
  400d2c:	400e0600 	.word	0x400e0600
  400d30:	400e0800 	.word	0x400e0800
  400d34:	40024000 	.word	0x40024000
  400d38:	40028000 	.word	0x40028000
  400d3c:	004008c5 	.word	0x004008c5
  400d40:	004008e7 	.word	0x004008e7

00400d44 <display_menu>:
{
  400d44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	puts("\n\rMenu :\n\r"
  400d46:	4809      	ldr	r0, [pc, #36]	; (400d6c <display_menu+0x28>)
  400d48:	4b09      	ldr	r3, [pc, #36]	; (400d70 <display_menu+0x2c>)
  400d4a:	4798      	blx	r3
  400d4c:	4d09      	ldr	r5, [pc, #36]	; (400d74 <display_menu+0x30>)
	for (i = 0; i < NUM_SPCK_CONFIGURATIONS; i++) {
  400d4e:	2400      	movs	r4, #0
		printf("  %u: Set SPCK = %7lu Hz\n\r", (unsigned)i,
  400d50:	4f09      	ldr	r7, [pc, #36]	; (400d78 <display_menu+0x34>)
  400d52:	4e0a      	ldr	r6, [pc, #40]	; (400d7c <display_menu+0x38>)
  400d54:	f855 2b04 	ldr.w	r2, [r5], #4
  400d58:	4621      	mov	r1, r4
  400d5a:	4638      	mov	r0, r7
  400d5c:	47b0      	blx	r6
	for (i = 0; i < NUM_SPCK_CONFIGURATIONS; i++) {
  400d5e:	3401      	adds	r4, #1
  400d60:	2c04      	cmp	r4, #4
  400d62:	d1f7      	bne.n	400d54 <display_menu+0x10>
	puts("  t: Perform SPI master\n\r"
  400d64:	4806      	ldr	r0, [pc, #24]	; (400d80 <display_menu+0x3c>)
  400d66:	4b02      	ldr	r3, [pc, #8]	; (400d70 <display_menu+0x2c>)
  400d68:	4798      	blx	r3
  400d6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d6c:	00405a3c 	.word	0x00405a3c
  400d70:	00401541 	.word	0x00401541
  400d74:	00405aa8 	.word	0x00405aa8
  400d78:	00405a50 	.word	0x00405a50
  400d7c:	004013b9 	.word	0x004013b9
  400d80:	00405a6c 	.word	0x00405a6c

00400d84 <spi_master_initialize>:
{
  400d84:	b538      	push	{r3, r4, r5, lr}
	puts("-I- Initialize SPI as master\r");
  400d86:	481e      	ldr	r0, [pc, #120]	; (400e00 <spi_master_initialize+0x7c>)
  400d88:	4b1e      	ldr	r3, [pc, #120]	; (400e04 <spi_master_initialize+0x80>)
  400d8a:	4798      	blx	r3
	spi_enable_clock(SPI_MASTER_BASE);
  400d8c:	4c1e      	ldr	r4, [pc, #120]	; (400e08 <spi_master_initialize+0x84>)
  400d8e:	4620      	mov	r0, r4
  400d90:	4b1e      	ldr	r3, [pc, #120]	; (400e0c <spi_master_initialize+0x88>)
  400d92:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400d94:	2302      	movs	r3, #2
  400d96:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400d98:	2380      	movs	r3, #128	; 0x80
  400d9a:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  400d9c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400da0:	6023      	str	r3, [r4, #0]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400da2:	6863      	ldr	r3, [r4, #4]
  400da4:	f043 0301 	orr.w	r3, r3, #1
  400da8:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400daa:	6863      	ldr	r3, [r4, #4]
  400dac:	f043 0310 	orr.w	r3, r3, #16
  400db0:	6063      	str	r3, [r4, #4]
	spi_set_peripheral_chip_select_value(SPI_MASTER_BASE, SPI_CHIP_PCS);
  400db2:	210e      	movs	r1, #14
  400db4:	4620      	mov	r0, r4
  400db6:	4b16      	ldr	r3, [pc, #88]	; (400e10 <spi_master_initialize+0x8c>)
  400db8:	4798      	blx	r3
	spi_set_clock_polarity(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  400dba:	2200      	movs	r2, #0
  400dbc:	4611      	mov	r1, r2
  400dbe:	4620      	mov	r0, r4
  400dc0:	4b14      	ldr	r3, [pc, #80]	; (400e14 <spi_master_initialize+0x90>)
  400dc2:	4798      	blx	r3
	spi_set_clock_phase(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  400dc4:	2200      	movs	r2, #0
  400dc6:	4611      	mov	r1, r2
  400dc8:	4620      	mov	r0, r4
  400dca:	4b13      	ldr	r3, [pc, #76]	; (400e18 <spi_master_initialize+0x94>)
  400dcc:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400dce:	2200      	movs	r2, #0
  400dd0:	4611      	mov	r1, r2
  400dd2:	4620      	mov	r0, r4
  400dd4:	4b11      	ldr	r3, [pc, #68]	; (400e1c <spi_master_initialize+0x98>)
  400dd6:	4798      	blx	r3
			/ gs_ul_spi_clock));
  400dd8:	4b11      	ldr	r3, [pc, #68]	; (400e20 <spi_master_initialize+0x9c>)
  400dda:	681b      	ldr	r3, [r3, #0]
  400ddc:	4a11      	ldr	r2, [pc, #68]	; (400e24 <spi_master_initialize+0xa0>)
  400dde:	fbb2 f2f3 	udiv	r2, r2, r3
	spi_set_baudrate_div(SPI_MASTER_BASE, SPI_CHIP_SEL,
  400de2:	b2d2      	uxtb	r2, r2
  400de4:	2100      	movs	r1, #0
  400de6:	4620      	mov	r0, r4
  400de8:	4b0f      	ldr	r3, [pc, #60]	; (400e28 <spi_master_initialize+0xa4>)
  400dea:	4798      	blx	r3
	spi_set_transfer_delay(SPI_MASTER_BASE, SPI_CHIP_SEL, SPI_DLYBS,
  400dec:	2310      	movs	r3, #16
  400dee:	2240      	movs	r2, #64	; 0x40
  400df0:	2100      	movs	r1, #0
  400df2:	4620      	mov	r0, r4
  400df4:	4d0d      	ldr	r5, [pc, #52]	; (400e2c <spi_master_initialize+0xa8>)
  400df6:	47a8      	blx	r5
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400df8:	2301      	movs	r3, #1
  400dfa:	6023      	str	r3, [r4, #0]
  400dfc:	bd38      	pop	{r3, r4, r5, pc}
  400dfe:	bf00      	nop
  400e00:	00405dd8 	.word	0x00405dd8
  400e04:	00401541 	.word	0x00401541
  400e08:	40008000 	.word	0x40008000
  400e0c:	00400775 	.word	0x00400775
  400e10:	00400785 	.word	0x00400785
  400e14:	004007fd 	.word	0x004007fd
  400e18:	0040081b 	.word	0x0040081b
  400e1c:	00400839 	.word	0x00400839
  400e20:	20000004 	.word	0x20000004
  400e24:	07270e00 	.word	0x07270e00
  400e28:	0040084d 	.word	0x0040084d
  400e2c:	00400873 	.word	0x00400873

00400e30 <SPI_Handler>:
	return p_spi->SPI_SR;
  400e30:	4b50      	ldr	r3, [pc, #320]	; (400f74 <SPI_Handler+0x144>)
  400e32:	691b      	ldr	r3, [r3, #16]
	if (spi_read_status(SPI_SLAVE_BASE) & SPI_SR_RDRF) {
  400e34:	f013 0f01 	tst.w	r3, #1
  400e38:	d100      	bne.n	400e3c <SPI_Handler+0xc>
  400e3a:	4770      	bx	lr
{
  400e3c:	b510      	push	{r4, lr}
  400e3e:	b082      	sub	sp, #8
		spi_read(SPI_SLAVE_BASE, &data, &uc_pcs);
  400e40:	4c4d      	ldr	r4, [pc, #308]	; (400f78 <SPI_Handler+0x148>)
  400e42:	f10d 0207 	add.w	r2, sp, #7
  400e46:	4621      	mov	r1, r4
  400e48:	484a      	ldr	r0, [pc, #296]	; (400f74 <SPI_Handler+0x144>)
  400e4a:	4b4c      	ldr	r3, [pc, #304]	; (400f7c <SPI_Handler+0x14c>)
  400e4c:	4798      	blx	r3
		gs_puc_transfer_buffer[gs_ul_transfer_index] = data;
  400e4e:	4b4c      	ldr	r3, [pc, #304]	; (400f80 <SPI_Handler+0x150>)
  400e50:	6818      	ldr	r0, [r3, #0]
  400e52:	4a4c      	ldr	r2, [pc, #304]	; (400f84 <SPI_Handler+0x154>)
  400e54:	6813      	ldr	r3, [r2, #0]
  400e56:	8821      	ldrh	r1, [r4, #0]
  400e58:	54c1      	strb	r1, [r0, r3]
		gs_ul_transfer_index++;
  400e5a:	1c59      	adds	r1, r3, #1
  400e5c:	6011      	str	r1, [r2, #0]
		gs_ul_transfer_length--;
  400e5e:	4a4a      	ldr	r2, [pc, #296]	; (400f88 <SPI_Handler+0x158>)
  400e60:	6813      	ldr	r3, [r2, #0]
  400e62:	3b01      	subs	r3, #1
  400e64:	6013      	str	r3, [r2, #0]
		if (gs_ul_transfer_length) {
  400e66:	b963      	cbnz	r3, 400e82 <SPI_Handler+0x52>
	if (gs_ul_spi_cmd == CMD_END) {
  400e68:	4b48      	ldr	r3, [pc, #288]	; (400f8c <SPI_Handler+0x15c>)
  400e6a:	6819      	ldr	r1, [r3, #0]
  400e6c:	4b48      	ldr	r3, [pc, #288]	; (400f90 <SPI_Handler+0x160>)
  400e6e:	4299      	cmp	r1, r3
  400e70:	d013      	beq.n	400e9a <SPI_Handler+0x6a>
		switch (gs_ul_spi_state) {
  400e72:	4b48      	ldr	r3, [pc, #288]	; (400f94 <SPI_Handler+0x164>)
  400e74:	681b      	ldr	r3, [r3, #0]
  400e76:	2b03      	cmp	r3, #3
  400e78:	d83a      	bhi.n	400ef0 <SPI_Handler+0xc0>
  400e7a:	e8df f003 	tbb	[pc, r3]
  400e7e:	1c15      	.short	0x1c15
  400e80:	3529      	.short	0x3529
			spi_write(SPI_SLAVE_BASE,
  400e82:	2300      	movs	r3, #0
  400e84:	461a      	mov	r2, r3
  400e86:	5c41      	ldrb	r1, [r0, r1]
  400e88:	483a      	ldr	r0, [pc, #232]	; (400f74 <SPI_Handler+0x144>)
  400e8a:	4c43      	ldr	r4, [pc, #268]	; (400f98 <SPI_Handler+0x168>)
  400e8c:	47a0      	blx	r4
		if (!gs_ul_transfer_length) {
  400e8e:	4b3e      	ldr	r3, [pc, #248]	; (400f88 <SPI_Handler+0x158>)
  400e90:	681b      	ldr	r3, [r3, #0]
  400e92:	2b00      	cmp	r3, #0
  400e94:	d0e8      	beq.n	400e68 <SPI_Handler+0x38>
}
  400e96:	b002      	add	sp, #8
  400e98:	bd10      	pop	{r4, pc}
		gs_ul_spi_state = SLAVE_STATE_IDLE;
  400e9a:	2300      	movs	r3, #0
  400e9c:	4a3d      	ldr	r2, [pc, #244]	; (400f94 <SPI_Handler+0x164>)
  400e9e:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_block_number = 0;
  400ea0:	4a3e      	ldr	r2, [pc, #248]	; (400f9c <SPI_Handler+0x16c>)
  400ea2:	6013      	str	r3, [r2, #0]
		gs_spi_status.ul_total_command_number = 0;
  400ea4:	6053      	str	r3, [r2, #4]
  400ea6:	e02d      	b.n	400f04 <SPI_Handler+0xd4>
			if (gs_ul_spi_cmd == CMD_TEST) {
  400ea8:	f1b1 3f10 	cmp.w	r1, #269488144	; 0x10101010
  400eac:	d123      	bne.n	400ef6 <SPI_Handler+0xc6>
				gs_ul_spi_state = SLAVE_STATE_TEST;
  400eae:	2201      	movs	r2, #1
  400eb0:	4b38      	ldr	r3, [pc, #224]	; (400f94 <SPI_Handler+0x164>)
  400eb2:	601a      	str	r2, [r3, #0]
  400eb4:	e01f      	b.n	400ef6 <SPI_Handler+0xc6>
			if ((gs_ul_spi_cmd & CMD_DATA_MSK) == CMD_DATA) {
  400eb6:	0c0b      	lsrs	r3, r1, #16
  400eb8:	041b      	lsls	r3, r3, #16
  400eba:	4a39      	ldr	r2, [pc, #228]	; (400fa0 <SPI_Handler+0x170>)
  400ebc:	4293      	cmp	r3, r2
  400ebe:	d003      	beq.n	400ec8 <SPI_Handler+0x98>
			gs_ul_test_block_number = gs_ul_spi_cmd & DATA_BLOCK_MSK;
  400ec0:	b28b      	uxth	r3, r1
  400ec2:	4a38      	ldr	r2, [pc, #224]	; (400fa4 <SPI_Handler+0x174>)
  400ec4:	6013      	str	r3, [r2, #0]
  400ec6:	e016      	b.n	400ef6 <SPI_Handler+0xc6>
				gs_ul_spi_state = SLAVE_STATE_DATA;
  400ec8:	2202      	movs	r2, #2
  400eca:	4b32      	ldr	r3, [pc, #200]	; (400f94 <SPI_Handler+0x164>)
  400ecc:	601a      	str	r2, [r3, #0]
  400ece:	e7f7      	b.n	400ec0 <SPI_Handler+0x90>
			gs_spi_status.ul_total_block_number++;
  400ed0:	4a32      	ldr	r2, [pc, #200]	; (400f9c <SPI_Handler+0x16c>)
  400ed2:	6813      	ldr	r3, [r2, #0]
  400ed4:	3301      	adds	r3, #1
  400ed6:	6013      	str	r3, [r2, #0]
			if (gs_spi_status.ul_total_block_number == 
  400ed8:	4a32      	ldr	r2, [pc, #200]	; (400fa4 <SPI_Handler+0x174>)
  400eda:	6812      	ldr	r2, [r2, #0]
  400edc:	4293      	cmp	r3, r2
  400ede:	d10a      	bne.n	400ef6 <SPI_Handler+0xc6>
				gs_ul_spi_state = SLAVE_STATE_STATUS_ENTRY;
  400ee0:	2203      	movs	r2, #3
  400ee2:	4b2c      	ldr	r3, [pc, #176]	; (400f94 <SPI_Handler+0x164>)
  400ee4:	601a      	str	r2, [r3, #0]
  400ee6:	e006      	b.n	400ef6 <SPI_Handler+0xc6>
			gs_ul_spi_state = SLAVE_STATE_STATUS;
  400ee8:	2204      	movs	r2, #4
  400eea:	4b2a      	ldr	r3, [pc, #168]	; (400f94 <SPI_Handler+0x164>)
  400eec:	601a      	str	r2, [r3, #0]
  400eee:	e002      	b.n	400ef6 <SPI_Handler+0xc6>
			if (gs_ul_spi_cmd != CMD_END) {
  400ef0:	4b27      	ldr	r3, [pc, #156]	; (400f90 <SPI_Handler+0x160>)
  400ef2:	4299      	cmp	r1, r3
  400ef4:	d006      	beq.n	400f04 <SPI_Handler+0xd4>
				gs_spi_status.ul_cmd_list[gs_spi_status.ul_total_command_number]
  400ef6:	4a29      	ldr	r2, [pc, #164]	; (400f9c <SPI_Handler+0x16c>)
  400ef8:	6853      	ldr	r3, [r2, #4]
						= gs_ul_spi_cmd;
  400efa:	1c98      	adds	r0, r3, #2
  400efc:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
				gs_spi_status.ul_total_command_number++;
  400f00:	3301      	adds	r3, #1
  400f02:	6053      	str	r3, [r2, #4]
	switch (gs_ul_spi_state) {
  400f04:	4b23      	ldr	r3, [pc, #140]	; (400f94 <SPI_Handler+0x164>)
  400f06:	681b      	ldr	r3, [r3, #0]
  400f08:	2b05      	cmp	r3, #5
  400f0a:	d8c4      	bhi.n	400e96 <SPI_Handler+0x66>
  400f0c:	e8df f003 	tbb	[pc, r3]
  400f10:	1c110a03 	.word	0x1c110a03
  400f14:	0326      	.short	0x0326
		gs_ul_spi_cmd = RC_SYN;
  400f16:	481d      	ldr	r0, [pc, #116]	; (400f8c <SPI_Handler+0x15c>)
  400f18:	4b23      	ldr	r3, [pc, #140]	; (400fa8 <SPI_Handler+0x178>)
  400f1a:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400f1c:	2104      	movs	r1, #4
  400f1e:	4b23      	ldr	r3, [pc, #140]	; (400fac <SPI_Handler+0x17c>)
  400f20:	4798      	blx	r3
  400f22:	e7b8      	b.n	400e96 <SPI_Handler+0x66>
		gs_ul_spi_cmd = RC_RDY;
  400f24:	4819      	ldr	r0, [pc, #100]	; (400f8c <SPI_Handler+0x15c>)
  400f26:	4b22      	ldr	r3, [pc, #136]	; (400fb0 <SPI_Handler+0x180>)
  400f28:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400f2a:	2104      	movs	r1, #4
  400f2c:	4b1f      	ldr	r3, [pc, #124]	; (400fac <SPI_Handler+0x17c>)
  400f2e:	4798      	blx	r3
  400f30:	e7b1      	b.n	400e96 <SPI_Handler+0x66>
		if (gs_spi_status.ul_total_block_number < gs_ul_test_block_number) {
  400f32:	4b1a      	ldr	r3, [pc, #104]	; (400f9c <SPI_Handler+0x16c>)
  400f34:	681a      	ldr	r2, [r3, #0]
  400f36:	4b1b      	ldr	r3, [pc, #108]	; (400fa4 <SPI_Handler+0x174>)
  400f38:	681b      	ldr	r3, [r3, #0]
  400f3a:	429a      	cmp	r2, r3
  400f3c:	d2ab      	bcs.n	400e96 <SPI_Handler+0x66>
			spi_slave_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
  400f3e:	2140      	movs	r1, #64	; 0x40
  400f40:	481c      	ldr	r0, [pc, #112]	; (400fb4 <SPI_Handler+0x184>)
  400f42:	4b1a      	ldr	r3, [pc, #104]	; (400fac <SPI_Handler+0x17c>)
  400f44:	4798      	blx	r3
  400f46:	e7a6      	b.n	400e96 <SPI_Handler+0x66>
		gs_ul_spi_cmd = RC_RDY;
  400f48:	4810      	ldr	r0, [pc, #64]	; (400f8c <SPI_Handler+0x15c>)
  400f4a:	4b19      	ldr	r3, [pc, #100]	; (400fb0 <SPI_Handler+0x180>)
  400f4c:	6003      	str	r3, [r0, #0]
		spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  400f4e:	2104      	movs	r1, #4
  400f50:	4b16      	ldr	r3, [pc, #88]	; (400fac <SPI_Handler+0x17c>)
  400f52:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_STATUS;
  400f54:	2204      	movs	r2, #4
  400f56:	4b0f      	ldr	r3, [pc, #60]	; (400f94 <SPI_Handler+0x164>)
  400f58:	601a      	str	r2, [r3, #0]
  400f5a:	e79c      	b.n	400e96 <SPI_Handler+0x66>
		gs_ul_spi_cmd = RC_SYN;
  400f5c:	4a12      	ldr	r2, [pc, #72]	; (400fa8 <SPI_Handler+0x178>)
  400f5e:	4b0b      	ldr	r3, [pc, #44]	; (400f8c <SPI_Handler+0x15c>)
  400f60:	601a      	str	r2, [r3, #0]
		spi_slave_transfer(&gs_spi_status, sizeof(struct status_block_t));
  400f62:	2158      	movs	r1, #88	; 0x58
  400f64:	480d      	ldr	r0, [pc, #52]	; (400f9c <SPI_Handler+0x16c>)
  400f66:	4b11      	ldr	r3, [pc, #68]	; (400fac <SPI_Handler+0x17c>)
  400f68:	4798      	blx	r3
		gs_ul_spi_state = SLAVE_STATE_END;
  400f6a:	2205      	movs	r2, #5
  400f6c:	4b09      	ldr	r3, [pc, #36]	; (400f94 <SPI_Handler+0x164>)
  400f6e:	601a      	str	r2, [r3, #0]
}
  400f70:	e791      	b.n	400e96 <SPI_Handler+0x66>
  400f72:	bf00      	nop
  400f74:	40008000 	.word	0x40008000
  400f78:	20000a4c 	.word	0x20000a4c
  400f7c:	0040079b 	.word	0x0040079b
  400f80:	20000a50 	.word	0x20000a50
  400f84:	20000af4 	.word	0x20000af4
  400f88:	20000af8 	.word	0x20000af8
  400f8c:	20000008 	.word	0x20000008
  400f90:	68390484 	.word	0x68390484
  400f94:	20000aec 	.word	0x20000aec
  400f98:	004007c9 	.word	0x004007c9
  400f9c:	20000a54 	.word	0x20000a54
  400fa0:	29380000 	.word	0x29380000
  400fa4:	20000af0 	.word	0x20000af0
  400fa8:	55aa55aa 	.word	0x55aa55aa
  400fac:	00400bb5 	.word	0x00400bb5
  400fb0:	12345678 	.word	0x12345678
  400fb4:	20000aac 	.word	0x20000aac

00400fb8 <main>:
 * \brief Application entry point for SPI example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  400fb8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  400fbc:	b087      	sub	sp, #28
	uint8_t uc_key;

	/* Initialize the SAM system. */
	sysclk_init();
  400fbe:	4b93      	ldr	r3, [pc, #588]	; (40120c <main+0x254>)
  400fc0:	4798      	blx	r3
	board_init();
  400fc2:	4b93      	ldr	r3, [pc, #588]	; (401210 <main+0x258>)
  400fc4:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400fc6:	4c93      	ldr	r4, [pc, #588]	; (401214 <main+0x25c>)
  400fc8:	4b93      	ldr	r3, [pc, #588]	; (401218 <main+0x260>)
  400fca:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400fcc:	4a93      	ldr	r2, [pc, #588]	; (40121c <main+0x264>)
  400fce:	4b94      	ldr	r3, [pc, #592]	; (401220 <main+0x268>)
  400fd0:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400fd2:	4a94      	ldr	r2, [pc, #592]	; (401224 <main+0x26c>)
  400fd4:	4b94      	ldr	r3, [pc, #592]	; (401228 <main+0x270>)
  400fd6:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400fd8:	4b94      	ldr	r3, [pc, #592]	; (40122c <main+0x274>)
  400fda:	9302      	str	r3, [sp, #8]
	uart_settings.ul_baudrate = opt->baudrate;
  400fdc:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400fe0:	9303      	str	r3, [sp, #12]
	uart_settings.ul_mode = opt->paritytype;
  400fe2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400fe6:	9304      	str	r3, [sp, #16]
  400fe8:	2008      	movs	r0, #8
  400fea:	4b91      	ldr	r3, [pc, #580]	; (401230 <main+0x278>)
  400fec:	4798      	blx	r3
		uart_init((Uart*)p_usart, &uart_settings);
  400fee:	a902      	add	r1, sp, #8
  400ff0:	4620      	mov	r0, r4
  400ff2:	4b90      	ldr	r3, [pc, #576]	; (401234 <main+0x27c>)
  400ff4:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400ff6:	4d90      	ldr	r5, [pc, #576]	; (401238 <main+0x280>)
  400ff8:	682b      	ldr	r3, [r5, #0]
  400ffa:	2100      	movs	r1, #0
  400ffc:	6898      	ldr	r0, [r3, #8]
  400ffe:	4c8f      	ldr	r4, [pc, #572]	; (40123c <main+0x284>)
  401000:	47a0      	blx	r4
	setbuf(stdin, NULL);
  401002:	682b      	ldr	r3, [r5, #0]
  401004:	2100      	movs	r1, #0
  401006:	6858      	ldr	r0, [r3, #4]
  401008:	47a0      	blx	r4

	/* Initialize the console UART. */
	configure_console();

	/* Output example information. */
	puts(STRING_HEADER);
  40100a:	488d      	ldr	r0, [pc, #564]	; (401240 <main+0x288>)
  40100c:	4b8d      	ldr	r3, [pc, #564]	; (401244 <main+0x28c>)
  40100e:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401010:	4b8d      	ldr	r3, [pc, #564]	; (401248 <main+0x290>)
  401012:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
  401016:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40101a:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  40101e:	2200      	movs	r2, #0
  401020:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401024:	6019      	str	r1, [r3, #0]
	gs_spi_status.ul_total_block_number = 0;
  401026:	4b89      	ldr	r3, [pc, #548]	; (40124c <main+0x294>)
  401028:	601a      	str	r2, [r3, #0]
	gs_spi_status.ul_total_command_number = 0;
  40102a:	4619      	mov	r1, r3
  40102c:	f841 2f04 	str.w	r2, [r1, #4]!
  401030:	460a      	mov	r2, r1
  401032:	9101      	str	r1, [sp, #4]
  401034:	3354      	adds	r3, #84	; 0x54
		gs_spi_status.ul_cmd_list[i] = 0;
  401036:	2100      	movs	r1, #0
  401038:	f842 1f04 	str.w	r1, [r2, #4]!
	for (i = 0; i < NB_STATUS_CMD; i++) {
  40103c:	429a      	cmp	r2, r3
  40103e:	d1fb      	bne.n	401038 <main+0x80>
	gs_ul_spi_state = SLAVE_STATE_IDLE;
  401040:	2500      	movs	r5, #0
  401042:	4b83      	ldr	r3, [pc, #524]	; (401250 <main+0x298>)
  401044:	601d      	str	r5, [r3, #0]
	gs_ul_spi_cmd = RC_SYN;
  401046:	4e83      	ldr	r6, [pc, #524]	; (401254 <main+0x29c>)
  401048:	4b83      	ldr	r3, [pc, #524]	; (401258 <main+0x2a0>)
  40104a:	6033      	str	r3, [r6, #0]
	puts("-I- Initialize SPI as slave \r");
  40104c:	4883      	ldr	r0, [pc, #524]	; (40125c <main+0x2a4>)
  40104e:	4b7d      	ldr	r3, [pc, #500]	; (401244 <main+0x28c>)
  401050:	4798      	blx	r3
	spi_enable_clock(SPI_SLAVE_BASE);
  401052:	4c83      	ldr	r4, [pc, #524]	; (401260 <main+0x2a8>)
  401054:	4620      	mov	r0, r4
  401056:	4b83      	ldr	r3, [pc, #524]	; (401264 <main+0x2ac>)
  401058:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40105a:	2302      	movs	r3, #2
  40105c:	6023      	str	r3, [r4, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40105e:	2380      	movs	r3, #128	; 0x80
  401060:	6023      	str	r3, [r4, #0]
	p_spi->SPI_MR &= (~SPI_MR_MSTR);
  401062:	6863      	ldr	r3, [r4, #4]
  401064:	f023 0301 	bic.w	r3, r3, #1
  401068:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40106a:	6863      	ldr	r3, [r4, #4]
  40106c:	f043 0310 	orr.w	r3, r3, #16
  401070:	6063      	str	r3, [r4, #4]
	spi_set_peripheral_chip_select_value(SPI_SLAVE_BASE, SPI_CHIP_PCS);
  401072:	210e      	movs	r1, #14
  401074:	4620      	mov	r0, r4
  401076:	4b7c      	ldr	r3, [pc, #496]	; (401268 <main+0x2b0>)
  401078:	4798      	blx	r3
	spi_set_clock_polarity(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_POLARITY);
  40107a:	462a      	mov	r2, r5
  40107c:	4629      	mov	r1, r5
  40107e:	4620      	mov	r0, r4
  401080:	4b7a      	ldr	r3, [pc, #488]	; (40126c <main+0x2b4>)
  401082:	4798      	blx	r3
	spi_set_clock_phase(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CLK_PHASE);
  401084:	462a      	mov	r2, r5
  401086:	4629      	mov	r1, r5
  401088:	4620      	mov	r0, r4
  40108a:	4b79      	ldr	r3, [pc, #484]	; (401270 <main+0x2b8>)
  40108c:	4798      	blx	r3
	spi_set_bits_per_transfer(SPI_SLAVE_BASE, SPI_CHIP_SEL, SPI_CSR_BITS_8_BIT);
  40108e:	462a      	mov	r2, r5
  401090:	4629      	mov	r1, r5
  401092:	4620      	mov	r0, r4
  401094:	4b77      	ldr	r3, [pc, #476]	; (401274 <main+0x2bc>)
  401096:	4798      	blx	r3
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  401098:	2301      	movs	r3, #1
  40109a:	6163      	str	r3, [r4, #20]
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40109c:	6023      	str	r3, [r4, #0]
	spi_slave_transfer(&gs_ul_spi_cmd, sizeof(gs_ul_spi_cmd));
  40109e:	2104      	movs	r1, #4
  4010a0:	4630      	mov	r0, r6
  4010a2:	4b75      	ldr	r3, [pc, #468]	; (401278 <main+0x2c0>)
  4010a4:	4798      	blx	r3
	NVIC_EnableIRQ(SPI_IRQn);

	spi_slave_initialize();

	/* Display menu. */
	display_menu();
  4010a6:	4b75      	ldr	r3, [pc, #468]	; (40127c <main+0x2c4>)
  4010a8:	4798      	blx	r3
		if (cmd == RC_RDY) {
  4010aa:	f8df 8240 	ldr.w	r8, [pc, #576]	; 4012ec <main+0x334>
  4010ae:	f8df a240 	ldr.w	sl, [pc, #576]	; 4012f0 <main+0x338>
  4010b2:	f10a 063f 	add.w	r6, sl, #63	; 0x3f
		cmd = CMD_STATUS;
  4010b6:	f8df b23c 	ldr.w	fp, [pc, #572]	; 4012f4 <main+0x33c>
  4010ba:	e001      	b.n	4010c0 <main+0x108>
	while (1) {
		scanf("%c", (char *)&uc_key);

		switch (uc_key) {
		case 'h':
			display_menu();
  4010bc:	4b6f      	ldr	r3, [pc, #444]	; (40127c <main+0x2c4>)
  4010be:	4798      	blx	r3
		scanf("%c", (char *)&uc_key);
  4010c0:	f10d 0117 	add.w	r1, sp, #23
  4010c4:	486e      	ldr	r0, [pc, #440]	; (401280 <main+0x2c8>)
  4010c6:	4b6f      	ldr	r3, [pc, #444]	; (401284 <main+0x2cc>)
  4010c8:	4798      	blx	r3
		switch (uc_key) {
  4010ca:	f89d 3017 	ldrb.w	r3, [sp, #23]
  4010ce:	2b68      	cmp	r3, #104	; 0x68
  4010d0:	d0f4      	beq.n	4010bc <main+0x104>
  4010d2:	2b74      	cmp	r3, #116	; 0x74
  4010d4:	d00e      	beq.n	4010f4 <main+0x13c>
			break;

		default:
			/* Set configuration #n. */
			if ((uc_key >= '0')
					&& (uc_key <= ('0' + NUM_SPCK_CONFIGURATIONS - 1))) {
  4010d6:	3b30      	subs	r3, #48	; 0x30
  4010d8:	b2db      	uxtb	r3, r3
			if ((uc_key >= '0')
  4010da:	2b03      	cmp	r3, #3
  4010dc:	d8f0      	bhi.n	4010c0 <main+0x108>
	gs_ul_spi_clock = gs_ul_clock_configurations[configuration];
  4010de:	4a6a      	ldr	r2, [pc, #424]	; (401288 <main+0x2d0>)
  4010e0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
  4010e4:	4b69      	ldr	r3, [pc, #420]	; (40128c <main+0x2d4>)
  4010e6:	6019      	str	r1, [r3, #0]
	printf("Setting SPI clock #%lu ... \n\r", (unsigned long)gs_ul_spi_clock);
  4010e8:	4869      	ldr	r0, [pc, #420]	; (401290 <main+0x2d8>)
  4010ea:	4b6a      	ldr	r3, [pc, #424]	; (401294 <main+0x2dc>)
  4010ec:	4798      	blx	r3
	spi_master_initialize();
  4010ee:	4b6a      	ldr	r3, [pc, #424]	; (401298 <main+0x2e0>)
  4010f0:	4798      	blx	r3
  4010f2:	e7e5      	b.n	4010c0 <main+0x108>
	spi_master_initialize();
  4010f4:	4b68      	ldr	r3, [pc, #416]	; (401298 <main+0x2e0>)
  4010f6:	4798      	blx	r3
		puts("-> Master sending CMD_TEST... \r");
  4010f8:	4f68      	ldr	r7, [pc, #416]	; (40129c <main+0x2e4>)
  4010fa:	4d52      	ldr	r5, [pc, #328]	; (401244 <main+0x28c>)
		cmd = CMD_TEST;
  4010fc:	ac06      	add	r4, sp, #24
  4010fe:	f04f 3310 	mov.w	r3, #269488144	; 0x10101010
  401102:	f844 3d10 	str.w	r3, [r4, #-16]!
		puts("-> Master sending CMD_TEST... \r");
  401106:	4638      	mov	r0, r7
  401108:	47a8      	blx	r5
		spi_master_transfer(&cmd, sizeof(cmd));
  40110a:	2104      	movs	r1, #4
  40110c:	4620      	mov	r0, r4
  40110e:	4b64      	ldr	r3, [pc, #400]	; (4012a0 <main+0x2e8>)
  401110:	4798      	blx	r3
		if (cmd == RC_RDY) {
  401112:	9902      	ldr	r1, [sp, #8]
  401114:	4541      	cmp	r1, r8
  401116:	d006      	beq.n	401126 <main+0x16e>
		if (cmd != RC_SYN) {
  401118:	4b4f      	ldr	r3, [pc, #316]	; (401258 <main+0x2a0>)
  40111a:	4299      	cmp	r1, r3
  40111c:	d0ee      	beq.n	4010fc <main+0x144>
			printf("-E- Response unexpected: 0x%x \n\r", (unsigned)cmd);
  40111e:	4861      	ldr	r0, [pc, #388]	; (4012a4 <main+0x2ec>)
  401120:	4b5c      	ldr	r3, [pc, #368]	; (401294 <main+0x2dc>)
  401122:	4798      	blx	r3
  401124:	e7cc      	b.n	4010c0 <main+0x108>
			puts("   <- Slave response RC_SYN, RC_RDY \r");
  401126:	4860      	ldr	r0, [pc, #384]	; (4012a8 <main+0x2f0>)
  401128:	4c46      	ldr	r4, [pc, #280]	; (401244 <main+0x28c>)
  40112a:	47a0      	blx	r4
	puts("-> Master sending CMD_DATA... \r");
  40112c:	485f      	ldr	r0, [pc, #380]	; (4012ac <main+0x2f4>)
  40112e:	47a0      	blx	r4
	cmd = CMD_DATA | MAX_DATA_BLOCK_NUMBER;
  401130:	a806      	add	r0, sp, #24
  401132:	4b5f      	ldr	r3, [pc, #380]	; (4012b0 <main+0x2f8>)
  401134:	f840 3d10 	str.w	r3, [r0, #-16]!
	spi_master_transfer(&cmd, sizeof(cmd));
  401138:	2104      	movs	r1, #4
  40113a:	4b59      	ldr	r3, [pc, #356]	; (4012a0 <main+0x2e8>)
  40113c:	4798      	blx	r3
	puts("                                <---- Slave response RC_RDY \r");
  40113e:	485d      	ldr	r0, [pc, #372]	; (4012b4 <main+0x2fc>)
  401140:	47a0      	blx	r4
  401142:	f04f 37ff 	mov.w	r7, #4294967295
  401146:	f04f 0901 	mov.w	r9, #1
  40114a:	2500      	movs	r5, #0
  40114c:	e0e0      	b.n	401310 <main+0x358>
	for (block = 0; block < MAX_DATA_BLOCK_NUMBER; block++) {
  40114e:	2500      	movs	r5, #0
		puts("-> Master sending CMD_STATUS... \r");
  401150:	4f59      	ldr	r7, [pc, #356]	; (4012b8 <main+0x300>)
		cmd = CMD_STATUS;
  401152:	ac06      	add	r4, sp, #24
  401154:	f844 bd10 	str.w	fp, [r4, #-16]!
		puts("-> Master sending CMD_STATUS... \r");
  401158:	4638      	mov	r0, r7
  40115a:	4b3a      	ldr	r3, [pc, #232]	; (401244 <main+0x28c>)
  40115c:	4798      	blx	r3
		spi_master_transfer(&cmd, sizeof(cmd));
  40115e:	2104      	movs	r1, #4
  401160:	4620      	mov	r0, r4
  401162:	4b4f      	ldr	r3, [pc, #316]	; (4012a0 <main+0x2e8>)
  401164:	4798      	blx	r3
		if (cmd == RC_RDY) {
  401166:	9b02      	ldr	r3, [sp, #8]
  401168:	4543      	cmp	r3, r8
  40116a:	d006      	beq.n	40117a <main+0x1c2>
	for (i = 0; i < MAX_RETRY; i++) {
  40116c:	3501      	adds	r5, #1
  40116e:	2d04      	cmp	r5, #4
  401170:	d1ef      	bne.n	401152 <main+0x19a>
		puts("   <- Slave no response \r");
  401172:	4852      	ldr	r0, [pc, #328]	; (4012bc <main+0x304>)
  401174:	4b33      	ldr	r3, [pc, #204]	; (401244 <main+0x28c>)
  401176:	4798      	blx	r3
  401178:	e7a2      	b.n	4010c0 <main+0x108>
			puts("   <- Slave response RC_RDY \r");
  40117a:	4851      	ldr	r0, [pc, #324]	; (4012c0 <main+0x308>)
  40117c:	4b31      	ldr	r3, [pc, #196]	; (401244 <main+0x28c>)
  40117e:	4798      	blx	r3
	if (i >= MAX_RETRY) {
  401180:	2d03      	cmp	r5, #3
  401182:	d8f6      	bhi.n	401172 <main+0x1ba>
	puts("-> Master request slave status... \r");
  401184:	484f      	ldr	r0, [pc, #316]	; (4012c4 <main+0x30c>)
  401186:	4d2f      	ldr	r5, [pc, #188]	; (401244 <main+0x28c>)
  401188:	47a8      	blx	r5
	spi_master_transfer(&gs_spi_status, sizeof(struct status_block_t));
  40118a:	4c30      	ldr	r4, [pc, #192]	; (40124c <main+0x294>)
  40118c:	2158      	movs	r1, #88	; 0x58
  40118e:	4620      	mov	r0, r4
  401190:	4b43      	ldr	r3, [pc, #268]	; (4012a0 <main+0x2e8>)
  401192:	4798      	blx	r3
	puts("   <- Slave reports status...\r");
  401194:	484c      	ldr	r0, [pc, #304]	; (4012c8 <main+0x310>)
  401196:	47a8      	blx	r5
	printf("-I- Received  %u commands:",
  401198:	6861      	ldr	r1, [r4, #4]
  40119a:	484c      	ldr	r0, [pc, #304]	; (4012cc <main+0x314>)
  40119c:	4b3d      	ldr	r3, [pc, #244]	; (401294 <main+0x2dc>)
  40119e:	4798      	blx	r3
	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  4011a0:	6863      	ldr	r3, [r4, #4]
  4011a2:	b163      	cbz	r3, 4011be <main+0x206>
  4011a4:	9d01      	ldr	r5, [sp, #4]
  4011a6:	2400      	movs	r4, #0
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
  4011a8:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 401294 <main+0x2dc>
	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  4011ac:	4f27      	ldr	r7, [pc, #156]	; (40124c <main+0x294>)
		printf(" 0x%08x", (unsigned)gs_spi_status.ul_cmd_list[i]);
  4011ae:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4011b2:	4847      	ldr	r0, [pc, #284]	; (4012d0 <main+0x318>)
  4011b4:	47c8      	blx	r9
	for (i = 0; i < gs_spi_status.ul_total_command_number; i++) {
  4011b6:	3401      	adds	r4, #1
  4011b8:	687b      	ldr	r3, [r7, #4]
  4011ba:	429c      	cmp	r4, r3
  4011bc:	d3f7      	bcc.n	4011ae <main+0x1f6>
	printf(" \n\r-I- Received  %lu data blocks \n\r",
  4011be:	4b23      	ldr	r3, [pc, #140]	; (40124c <main+0x294>)
  4011c0:	6819      	ldr	r1, [r3, #0]
  4011c2:	4844      	ldr	r0, [pc, #272]	; (4012d4 <main+0x31c>)
  4011c4:	4b33      	ldr	r3, [pc, #204]	; (401294 <main+0x2dc>)
  4011c6:	4798      	blx	r3
	for (i = 0; i < MAX_RETRY; i++) {
  4011c8:	2400      	movs	r4, #0
		puts("-> Master sending CMD_END... \r");
  4011ca:	4f43      	ldr	r7, [pc, #268]	; (4012d8 <main+0x320>)
  4011cc:	4d1d      	ldr	r5, [pc, #116]	; (401244 <main+0x28c>)
  4011ce:	4638      	mov	r0, r7
  4011d0:	47a8      	blx	r5
		cmd = CMD_END;
  4011d2:	a806      	add	r0, sp, #24
  4011d4:	4b41      	ldr	r3, [pc, #260]	; (4012dc <main+0x324>)
  4011d6:	f840 3d10 	str.w	r3, [r0, #-16]!
		spi_master_transfer(&cmd, sizeof(cmd));
  4011da:	2104      	movs	r1, #4
  4011dc:	4b30      	ldr	r3, [pc, #192]	; (4012a0 <main+0x2e8>)
  4011de:	4798      	blx	r3
		if (cmd == RC_SYN) {
  4011e0:	9a02      	ldr	r2, [sp, #8]
  4011e2:	4b1d      	ldr	r3, [pc, #116]	; (401258 <main+0x2a0>)
  4011e4:	429a      	cmp	r2, r3
  4011e6:	d00b      	beq.n	401200 <main+0x248>
	for (i = 0; i < MAX_RETRY; i++) {
  4011e8:	3401      	adds	r4, #1
  4011ea:	2c04      	cmp	r4, #4
  4011ec:	d1ef      	bne.n	4011ce <main+0x216>
		puts("   <- Slave no response \r");
  4011ee:	4833      	ldr	r0, [pc, #204]	; (4012bc <main+0x304>)
  4011f0:	4b14      	ldr	r3, [pc, #80]	; (401244 <main+0x28c>)
  4011f2:	4798      	blx	r3
	puts("\r");
  4011f4:	483a      	ldr	r0, [pc, #232]	; (4012e0 <main+0x328>)
  4011f6:	4c13      	ldr	r4, [pc, #76]	; (401244 <main+0x28c>)
  4011f8:	47a0      	blx	r4
	puts("SPI transfer test finished! \r");
  4011fa:	483a      	ldr	r0, [pc, #232]	; (4012e4 <main+0x32c>)
  4011fc:	47a0      	blx	r4
  4011fe:	e75f      	b.n	4010c0 <main+0x108>
			puts("   <- Slave response RC_SYN \r");
  401200:	4839      	ldr	r0, [pc, #228]	; (4012e8 <main+0x330>)
  401202:	4b10      	ldr	r3, [pc, #64]	; (401244 <main+0x28c>)
  401204:	4798      	blx	r3
	if (i >= MAX_RETRY) {
  401206:	2c03      	cmp	r4, #3
  401208:	d9f4      	bls.n	4011f4 <main+0x23c>
  40120a:	e7f0      	b.n	4011ee <main+0x236>
  40120c:	00400139 	.word	0x00400139
  401210:	00400229 	.word	0x00400229
  401214:	400e0600 	.word	0x400e0600
  401218:	20000b38 	.word	0x20000b38
  40121c:	00400cc5 	.word	0x00400cc5
  401220:	20000b34 	.word	0x20000b34
  401224:	00400c3d 	.word	0x00400c3d
  401228:	20000b30 	.word	0x20000b30
  40122c:	07270e00 	.word	0x07270e00
  401230:	00400721 	.word	0x00400721
  401234:	0040088f 	.word	0x0040088f
  401238:	2000000c 	.word	0x2000000c
  40123c:	00401551 	.word	0x00401551
  401240:	00405ab8 	.word	0x00405ab8
  401244:	00401541 	.word	0x00401541
  401248:	e000e100 	.word	0xe000e100
  40124c:	20000a54 	.word	0x20000a54
  401250:	20000aec 	.word	0x20000aec
  401254:	20000008 	.word	0x20000008
  401258:	55aa55aa 	.word	0x55aa55aa
  40125c:	00405b04 	.word	0x00405b04
  401260:	40008000 	.word	0x40008000
  401264:	00400775 	.word	0x00400775
  401268:	00400785 	.word	0x00400785
  40126c:	004007fd 	.word	0x004007fd
  401270:	0040081b 	.word	0x0040081b
  401274:	00400839 	.word	0x00400839
  401278:	00400bb5 	.word	0x00400bb5
  40127c:	00400d45 	.word	0x00400d45
  401280:	00405b24 	.word	0x00405b24
  401284:	004013e1 	.word	0x004013e1
  401288:	00405aa8 	.word	0x00405aa8
  40128c:	20000004 	.word	0x20000004
  401290:	00405d64 	.word	0x00405d64
  401294:	004013b9 	.word	0x004013b9
  401298:	00400d85 	.word	0x00400d85
  40129c:	00405b28 	.word	0x00405b28
  4012a0:	00400be5 	.word	0x00400be5
  4012a4:	00405bd0 	.word	0x00405bd0
  4012a8:	00405b48 	.word	0x00405b48
  4012ac:	00405b70 	.word	0x00405b70
  4012b0:	29380004 	.word	0x29380004
  4012b4:	00405b90 	.word	0x00405b90
  4012b8:	00405c18 	.word	0x00405c18
  4012bc:	00405c5c 	.word	0x00405c5c
  4012c0:	00405c3c 	.word	0x00405c3c
  4012c4:	00405c78 	.word	0x00405c78
  4012c8:	00405c9c 	.word	0x00405c9c
  4012cc:	00405cbc 	.word	0x00405cbc
  4012d0:	00405cd8 	.word	0x00405cd8
  4012d4:	00405ce0 	.word	0x00405ce0
  4012d8:	00405d04 	.word	0x00405d04
  4012dc:	68390484 	.word	0x68390484
  4012e0:	00405c14 	.word	0x00405c14
  4012e4:	00405d44 	.word	0x00405d44
  4012e8:	00405d24 	.word	0x00405d24
  4012ec:	12345678 	.word	0x12345678
  4012f0:	20000aac 	.word	0x20000aac
  4012f4:	68390384 	.word	0x68390384
				printf("-E- block %u contains unexpected data \n\r",
  4012f8:	9900      	ldr	r1, [sp, #0]
  4012fa:	4815      	ldr	r0, [pc, #84]	; (401350 <main+0x398>)
  4012fc:	4b15      	ldr	r3, [pc, #84]	; (401354 <main+0x39c>)
  4012fe:	4798      	blx	r3
	for (block = 0; block < MAX_DATA_BLOCK_NUMBER; block++) {
  401300:	f1b9 0f03 	cmp.w	r9, #3
  401304:	f63f af23 	bhi.w	40114e <main+0x196>
  401308:	3501      	adds	r5, #1
  40130a:	f109 0901 	add.w	r9, r9, #1
  40130e:	3701      	adds	r7, #1
  401310:	9500      	str	r5, [sp, #0]
  401312:	f10a 34ff 	add.w	r4, sl, #4294967295
			gs_uc_spi_buffer[i] = block;
  401316:	f804 5f01 	strb.w	r5, [r4, #1]!
		for (i = 0; i < COMM_BUFFER_SIZE; i++) {
  40131a:	42b4      	cmp	r4, r6
  40131c:	d1fb      	bne.n	401316 <main+0x35e>
		printf("-> Master sending block %u ... \n\r", (unsigned)block);
  40131e:	9900      	ldr	r1, [sp, #0]
  401320:	480d      	ldr	r0, [pc, #52]	; (401358 <main+0x3a0>)
  401322:	4b0c      	ldr	r3, [pc, #48]	; (401354 <main+0x39c>)
  401324:	4798      	blx	r3
		spi_master_transfer(gs_uc_spi_buffer, COMM_BUFFER_SIZE);
  401326:	2140      	movs	r1, #64	; 0x40
  401328:	4650      	mov	r0, sl
  40132a:	4b0c      	ldr	r3, [pc, #48]	; (40135c <main+0x3a4>)
  40132c:	4798      	blx	r3
		if (block) {
  40132e:	2d00      	cmp	r5, #0
  401330:	d0ea      	beq.n	401308 <main+0x350>
				if (gs_uc_spi_buffer[i] != (block - 1)) {
  401332:	f89a 3000 	ldrb.w	r3, [sl]
  401336:	42bb      	cmp	r3, r7
  401338:	d1de      	bne.n	4012f8 <main+0x340>
  40133a:	4b09      	ldr	r3, [pc, #36]	; (401360 <main+0x3a8>)
  40133c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
  401340:	42b9      	cmp	r1, r7
  401342:	d1d9      	bne.n	4012f8 <main+0x340>
			for (i = 0; i < COMM_BUFFER_SIZE; i++) {
  401344:	429c      	cmp	r4, r3
  401346:	d1f9      	bne.n	40133c <main+0x384>
				printf("   <- Slave response last block %x \n\r",
  401348:	4806      	ldr	r0, [pc, #24]	; (401364 <main+0x3ac>)
  40134a:	4b02      	ldr	r3, [pc, #8]	; (401354 <main+0x39c>)
  40134c:	4798      	blx	r3
  40134e:	e7d7      	b.n	401300 <main+0x348>
  401350:	00405dac 	.word	0x00405dac
  401354:	004013b9 	.word	0x004013b9
  401358:	00405bf4 	.word	0x00405bf4
  40135c:	00400be5 	.word	0x00400be5
  401360:	20000aac 	.word	0x20000aac
  401364:	00405d84 	.word	0x00405d84

00401368 <__libc_init_array>:
  401368:	b570      	push	{r4, r5, r6, lr}
  40136a:	4e0f      	ldr	r6, [pc, #60]	; (4013a8 <__libc_init_array+0x40>)
  40136c:	4d0f      	ldr	r5, [pc, #60]	; (4013ac <__libc_init_array+0x44>)
  40136e:	1b76      	subs	r6, r6, r5
  401370:	10b6      	asrs	r6, r6, #2
  401372:	bf18      	it	ne
  401374:	2400      	movne	r4, #0
  401376:	d005      	beq.n	401384 <__libc_init_array+0x1c>
  401378:	3401      	adds	r4, #1
  40137a:	f855 3b04 	ldr.w	r3, [r5], #4
  40137e:	4798      	blx	r3
  401380:	42a6      	cmp	r6, r4
  401382:	d1f9      	bne.n	401378 <__libc_init_array+0x10>
  401384:	4e0a      	ldr	r6, [pc, #40]	; (4013b0 <__libc_init_array+0x48>)
  401386:	4d0b      	ldr	r5, [pc, #44]	; (4013b4 <__libc_init_array+0x4c>)
  401388:	1b76      	subs	r6, r6, r5
  40138a:	f004 fdfd 	bl	405f88 <_init>
  40138e:	10b6      	asrs	r6, r6, #2
  401390:	bf18      	it	ne
  401392:	2400      	movne	r4, #0
  401394:	d006      	beq.n	4013a4 <__libc_init_array+0x3c>
  401396:	3401      	adds	r4, #1
  401398:	f855 3b04 	ldr.w	r3, [r5], #4
  40139c:	4798      	blx	r3
  40139e:	42a6      	cmp	r6, r4
  4013a0:	d1f9      	bne.n	401396 <__libc_init_array+0x2e>
  4013a2:	bd70      	pop	{r4, r5, r6, pc}
  4013a4:	bd70      	pop	{r4, r5, r6, pc}
  4013a6:	bf00      	nop
  4013a8:	00405f94 	.word	0x00405f94
  4013ac:	00405f94 	.word	0x00405f94
  4013b0:	00405f9c 	.word	0x00405f9c
  4013b4:	00405f94 	.word	0x00405f94

004013b8 <iprintf>:
  4013b8:	b40f      	push	{r0, r1, r2, r3}
  4013ba:	b500      	push	{lr}
  4013bc:	4907      	ldr	r1, [pc, #28]	; (4013dc <iprintf+0x24>)
  4013be:	b083      	sub	sp, #12
  4013c0:	ab04      	add	r3, sp, #16
  4013c2:	6808      	ldr	r0, [r1, #0]
  4013c4:	f853 2b04 	ldr.w	r2, [r3], #4
  4013c8:	6881      	ldr	r1, [r0, #8]
  4013ca:	9301      	str	r3, [sp, #4]
  4013cc:	f000 fa46 	bl	40185c <_vfiprintf_r>
  4013d0:	b003      	add	sp, #12
  4013d2:	f85d eb04 	ldr.w	lr, [sp], #4
  4013d6:	b004      	add	sp, #16
  4013d8:	4770      	bx	lr
  4013da:	bf00      	nop
  4013dc:	2000000c 	.word	0x2000000c

004013e0 <iscanf>:
  4013e0:	b40f      	push	{r0, r1, r2, r3}
  4013e2:	b500      	push	{lr}
  4013e4:	4907      	ldr	r1, [pc, #28]	; (401404 <iscanf+0x24>)
  4013e6:	b083      	sub	sp, #12
  4013e8:	ab04      	add	r3, sp, #16
  4013ea:	6808      	ldr	r0, [r1, #0]
  4013ec:	f853 2b04 	ldr.w	r2, [r3], #4
  4013f0:	6841      	ldr	r1, [r0, #4]
  4013f2:	9301      	str	r3, [sp, #4]
  4013f4:	f001 f8bc 	bl	402570 <__svfiscanf_r>
  4013f8:	b003      	add	sp, #12
  4013fa:	f85d eb04 	ldr.w	lr, [sp], #4
  4013fe:	b004      	add	sp, #16
  401400:	4770      	bx	lr
  401402:	bf00      	nop
  401404:	2000000c 	.word	0x2000000c

00401408 <memset>:
  401408:	b470      	push	{r4, r5, r6}
  40140a:	0786      	lsls	r6, r0, #30
  40140c:	d046      	beq.n	40149c <memset+0x94>
  40140e:	1e54      	subs	r4, r2, #1
  401410:	2a00      	cmp	r2, #0
  401412:	d041      	beq.n	401498 <memset+0x90>
  401414:	b2ca      	uxtb	r2, r1
  401416:	4603      	mov	r3, r0
  401418:	e002      	b.n	401420 <memset+0x18>
  40141a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40141e:	d33b      	bcc.n	401498 <memset+0x90>
  401420:	f803 2b01 	strb.w	r2, [r3], #1
  401424:	079d      	lsls	r5, r3, #30
  401426:	d1f8      	bne.n	40141a <memset+0x12>
  401428:	2c03      	cmp	r4, #3
  40142a:	d92e      	bls.n	40148a <memset+0x82>
  40142c:	b2cd      	uxtb	r5, r1
  40142e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401432:	2c0f      	cmp	r4, #15
  401434:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401438:	d919      	bls.n	40146e <memset+0x66>
  40143a:	f103 0210 	add.w	r2, r3, #16
  40143e:	4626      	mov	r6, r4
  401440:	3e10      	subs	r6, #16
  401442:	2e0f      	cmp	r6, #15
  401444:	f842 5c10 	str.w	r5, [r2, #-16]
  401448:	f842 5c0c 	str.w	r5, [r2, #-12]
  40144c:	f842 5c08 	str.w	r5, [r2, #-8]
  401450:	f842 5c04 	str.w	r5, [r2, #-4]
  401454:	f102 0210 	add.w	r2, r2, #16
  401458:	d8f2      	bhi.n	401440 <memset+0x38>
  40145a:	f1a4 0210 	sub.w	r2, r4, #16
  40145e:	f022 020f 	bic.w	r2, r2, #15
  401462:	f004 040f 	and.w	r4, r4, #15
  401466:	3210      	adds	r2, #16
  401468:	2c03      	cmp	r4, #3
  40146a:	4413      	add	r3, r2
  40146c:	d90d      	bls.n	40148a <memset+0x82>
  40146e:	461e      	mov	r6, r3
  401470:	4622      	mov	r2, r4
  401472:	3a04      	subs	r2, #4
  401474:	2a03      	cmp	r2, #3
  401476:	f846 5b04 	str.w	r5, [r6], #4
  40147a:	d8fa      	bhi.n	401472 <memset+0x6a>
  40147c:	1f22      	subs	r2, r4, #4
  40147e:	f022 0203 	bic.w	r2, r2, #3
  401482:	3204      	adds	r2, #4
  401484:	4413      	add	r3, r2
  401486:	f004 0403 	and.w	r4, r4, #3
  40148a:	b12c      	cbz	r4, 401498 <memset+0x90>
  40148c:	b2c9      	uxtb	r1, r1
  40148e:	441c      	add	r4, r3
  401490:	f803 1b01 	strb.w	r1, [r3], #1
  401494:	429c      	cmp	r4, r3
  401496:	d1fb      	bne.n	401490 <memset+0x88>
  401498:	bc70      	pop	{r4, r5, r6}
  40149a:	4770      	bx	lr
  40149c:	4614      	mov	r4, r2
  40149e:	4603      	mov	r3, r0
  4014a0:	e7c2      	b.n	401428 <memset+0x20>
  4014a2:	bf00      	nop

004014a4 <_puts_r>:
  4014a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4014a6:	4605      	mov	r5, r0
  4014a8:	b089      	sub	sp, #36	; 0x24
  4014aa:	4608      	mov	r0, r1
  4014ac:	460c      	mov	r4, r1
  4014ae:	f000 f927 	bl	401700 <strlen>
  4014b2:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4014b4:	4f21      	ldr	r7, [pc, #132]	; (40153c <_puts_r+0x98>)
  4014b6:	9404      	str	r4, [sp, #16]
  4014b8:	2601      	movs	r6, #1
  4014ba:	1c44      	adds	r4, r0, #1
  4014bc:	a904      	add	r1, sp, #16
  4014be:	2202      	movs	r2, #2
  4014c0:	9403      	str	r4, [sp, #12]
  4014c2:	9005      	str	r0, [sp, #20]
  4014c4:	68ac      	ldr	r4, [r5, #8]
  4014c6:	9706      	str	r7, [sp, #24]
  4014c8:	9607      	str	r6, [sp, #28]
  4014ca:	9101      	str	r1, [sp, #4]
  4014cc:	9202      	str	r2, [sp, #8]
  4014ce:	b353      	cbz	r3, 401526 <_puts_r+0x82>
  4014d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4014d2:	f013 0f01 	tst.w	r3, #1
  4014d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4014da:	b29a      	uxth	r2, r3
  4014dc:	d101      	bne.n	4014e2 <_puts_r+0x3e>
  4014de:	0590      	lsls	r0, r2, #22
  4014e0:	d525      	bpl.n	40152e <_puts_r+0x8a>
  4014e2:	0491      	lsls	r1, r2, #18
  4014e4:	d406      	bmi.n	4014f4 <_puts_r+0x50>
  4014e6:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4014e8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4014ec:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  4014f0:	81a3      	strh	r3, [r4, #12]
  4014f2:	6662      	str	r2, [r4, #100]	; 0x64
  4014f4:	4628      	mov	r0, r5
  4014f6:	aa01      	add	r2, sp, #4
  4014f8:	4621      	mov	r1, r4
  4014fa:	f002 f9af 	bl	40385c <__sfvwrite_r>
  4014fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401500:	2800      	cmp	r0, #0
  401502:	bf0c      	ite	eq
  401504:	250a      	moveq	r5, #10
  401506:	f04f 35ff 	movne.w	r5, #4294967295
  40150a:	07da      	lsls	r2, r3, #31
  40150c:	d402      	bmi.n	401514 <_puts_r+0x70>
  40150e:	89a3      	ldrh	r3, [r4, #12]
  401510:	059b      	lsls	r3, r3, #22
  401512:	d502      	bpl.n	40151a <_puts_r+0x76>
  401514:	4628      	mov	r0, r5
  401516:	b009      	add	sp, #36	; 0x24
  401518:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40151a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40151c:	f002 fb9a 	bl	403c54 <__retarget_lock_release_recursive>
  401520:	4628      	mov	r0, r5
  401522:	b009      	add	sp, #36	; 0x24
  401524:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401526:	4628      	mov	r0, r5
  401528:	f001 feaa 	bl	403280 <__sinit>
  40152c:	e7d0      	b.n	4014d0 <_puts_r+0x2c>
  40152e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401530:	f002 fb8e 	bl	403c50 <__retarget_lock_acquire_recursive>
  401534:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401538:	b29a      	uxth	r2, r3
  40153a:	e7d2      	b.n	4014e2 <_puts_r+0x3e>
  40153c:	00405dfc 	.word	0x00405dfc

00401540 <puts>:
  401540:	4b02      	ldr	r3, [pc, #8]	; (40154c <puts+0xc>)
  401542:	4601      	mov	r1, r0
  401544:	6818      	ldr	r0, [r3, #0]
  401546:	f7ff bfad 	b.w	4014a4 <_puts_r>
  40154a:	bf00      	nop
  40154c:	2000000c 	.word	0x2000000c

00401550 <setbuf>:
  401550:	2900      	cmp	r1, #0
  401552:	bf0c      	ite	eq
  401554:	2202      	moveq	r2, #2
  401556:	2200      	movne	r2, #0
  401558:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40155c:	f000 b800 	b.w	401560 <setvbuf>

00401560 <setvbuf>:
  401560:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401564:	4c61      	ldr	r4, [pc, #388]	; (4016ec <setvbuf+0x18c>)
  401566:	6825      	ldr	r5, [r4, #0]
  401568:	b083      	sub	sp, #12
  40156a:	4604      	mov	r4, r0
  40156c:	460f      	mov	r7, r1
  40156e:	4690      	mov	r8, r2
  401570:	461e      	mov	r6, r3
  401572:	b115      	cbz	r5, 40157a <setvbuf+0x1a>
  401574:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401576:	2b00      	cmp	r3, #0
  401578:	d064      	beq.n	401644 <setvbuf+0xe4>
  40157a:	f1b8 0f02 	cmp.w	r8, #2
  40157e:	d006      	beq.n	40158e <setvbuf+0x2e>
  401580:	f1b8 0f01 	cmp.w	r8, #1
  401584:	f200 809f 	bhi.w	4016c6 <setvbuf+0x166>
  401588:	2e00      	cmp	r6, #0
  40158a:	f2c0 809c 	blt.w	4016c6 <setvbuf+0x166>
  40158e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401590:	07d8      	lsls	r0, r3, #31
  401592:	d534      	bpl.n	4015fe <setvbuf+0x9e>
  401594:	4621      	mov	r1, r4
  401596:	4628      	mov	r0, r5
  401598:	f001 fe08 	bl	4031ac <_fflush_r>
  40159c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40159e:	b141      	cbz	r1, 4015b2 <setvbuf+0x52>
  4015a0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4015a4:	4299      	cmp	r1, r3
  4015a6:	d002      	beq.n	4015ae <setvbuf+0x4e>
  4015a8:	4628      	mov	r0, r5
  4015aa:	f002 f871 	bl	403690 <_free_r>
  4015ae:	2300      	movs	r3, #0
  4015b0:	6323      	str	r3, [r4, #48]	; 0x30
  4015b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4015b6:	2200      	movs	r2, #0
  4015b8:	61a2      	str	r2, [r4, #24]
  4015ba:	6062      	str	r2, [r4, #4]
  4015bc:	061a      	lsls	r2, r3, #24
  4015be:	d43a      	bmi.n	401636 <setvbuf+0xd6>
  4015c0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4015c4:	f023 0303 	bic.w	r3, r3, #3
  4015c8:	f1b8 0f02 	cmp.w	r8, #2
  4015cc:	81a3      	strh	r3, [r4, #12]
  4015ce:	d01d      	beq.n	40160c <setvbuf+0xac>
  4015d0:	ab01      	add	r3, sp, #4
  4015d2:	466a      	mov	r2, sp
  4015d4:	4621      	mov	r1, r4
  4015d6:	4628      	mov	r0, r5
  4015d8:	f002 fb3e 	bl	403c58 <__swhatbuf_r>
  4015dc:	89a3      	ldrh	r3, [r4, #12]
  4015de:	4318      	orrs	r0, r3
  4015e0:	81a0      	strh	r0, [r4, #12]
  4015e2:	2e00      	cmp	r6, #0
  4015e4:	d132      	bne.n	40164c <setvbuf+0xec>
  4015e6:	9e00      	ldr	r6, [sp, #0]
  4015e8:	4630      	mov	r0, r6
  4015ea:	f002 fbad 	bl	403d48 <malloc>
  4015ee:	4607      	mov	r7, r0
  4015f0:	2800      	cmp	r0, #0
  4015f2:	d06b      	beq.n	4016cc <setvbuf+0x16c>
  4015f4:	89a3      	ldrh	r3, [r4, #12]
  4015f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4015fa:	81a3      	strh	r3, [r4, #12]
  4015fc:	e028      	b.n	401650 <setvbuf+0xf0>
  4015fe:	89a3      	ldrh	r3, [r4, #12]
  401600:	0599      	lsls	r1, r3, #22
  401602:	d4c7      	bmi.n	401594 <setvbuf+0x34>
  401604:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401606:	f002 fb23 	bl	403c50 <__retarget_lock_acquire_recursive>
  40160a:	e7c3      	b.n	401594 <setvbuf+0x34>
  40160c:	2500      	movs	r5, #0
  40160e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  401610:	2600      	movs	r6, #0
  401612:	f104 0243 	add.w	r2, r4, #67	; 0x43
  401616:	f043 0302 	orr.w	r3, r3, #2
  40161a:	2001      	movs	r0, #1
  40161c:	60a6      	str	r6, [r4, #8]
  40161e:	07ce      	lsls	r6, r1, #31
  401620:	81a3      	strh	r3, [r4, #12]
  401622:	6022      	str	r2, [r4, #0]
  401624:	6122      	str	r2, [r4, #16]
  401626:	6160      	str	r0, [r4, #20]
  401628:	d401      	bmi.n	40162e <setvbuf+0xce>
  40162a:	0598      	lsls	r0, r3, #22
  40162c:	d53e      	bpl.n	4016ac <setvbuf+0x14c>
  40162e:	4628      	mov	r0, r5
  401630:	b003      	add	sp, #12
  401632:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401636:	6921      	ldr	r1, [r4, #16]
  401638:	4628      	mov	r0, r5
  40163a:	f002 f829 	bl	403690 <_free_r>
  40163e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401642:	e7bd      	b.n	4015c0 <setvbuf+0x60>
  401644:	4628      	mov	r0, r5
  401646:	f001 fe1b 	bl	403280 <__sinit>
  40164a:	e796      	b.n	40157a <setvbuf+0x1a>
  40164c:	2f00      	cmp	r7, #0
  40164e:	d0cb      	beq.n	4015e8 <setvbuf+0x88>
  401650:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401652:	2b00      	cmp	r3, #0
  401654:	d033      	beq.n	4016be <setvbuf+0x15e>
  401656:	9b00      	ldr	r3, [sp, #0]
  401658:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40165c:	6027      	str	r7, [r4, #0]
  40165e:	429e      	cmp	r6, r3
  401660:	bf1c      	itt	ne
  401662:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  401666:	81a2      	strhne	r2, [r4, #12]
  401668:	f1b8 0f01 	cmp.w	r8, #1
  40166c:	bf04      	itt	eq
  40166e:	f042 0201 	orreq.w	r2, r2, #1
  401672:	81a2      	strheq	r2, [r4, #12]
  401674:	b292      	uxth	r2, r2
  401676:	f012 0308 	ands.w	r3, r2, #8
  40167a:	6127      	str	r7, [r4, #16]
  40167c:	6166      	str	r6, [r4, #20]
  40167e:	d00e      	beq.n	40169e <setvbuf+0x13e>
  401680:	07d1      	lsls	r1, r2, #31
  401682:	d51a      	bpl.n	4016ba <setvbuf+0x15a>
  401684:	6e65      	ldr	r5, [r4, #100]	; 0x64
  401686:	4276      	negs	r6, r6
  401688:	2300      	movs	r3, #0
  40168a:	f015 0501 	ands.w	r5, r5, #1
  40168e:	61a6      	str	r6, [r4, #24]
  401690:	60a3      	str	r3, [r4, #8]
  401692:	d009      	beq.n	4016a8 <setvbuf+0x148>
  401694:	2500      	movs	r5, #0
  401696:	4628      	mov	r0, r5
  401698:	b003      	add	sp, #12
  40169a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40169e:	60a3      	str	r3, [r4, #8]
  4016a0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4016a2:	f015 0501 	ands.w	r5, r5, #1
  4016a6:	d1f5      	bne.n	401694 <setvbuf+0x134>
  4016a8:	0593      	lsls	r3, r2, #22
  4016aa:	d4c0      	bmi.n	40162e <setvbuf+0xce>
  4016ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4016ae:	f002 fad1 	bl	403c54 <__retarget_lock_release_recursive>
  4016b2:	4628      	mov	r0, r5
  4016b4:	b003      	add	sp, #12
  4016b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4016ba:	60a6      	str	r6, [r4, #8]
  4016bc:	e7f0      	b.n	4016a0 <setvbuf+0x140>
  4016be:	4628      	mov	r0, r5
  4016c0:	f001 fdde 	bl	403280 <__sinit>
  4016c4:	e7c7      	b.n	401656 <setvbuf+0xf6>
  4016c6:	f04f 35ff 	mov.w	r5, #4294967295
  4016ca:	e7b0      	b.n	40162e <setvbuf+0xce>
  4016cc:	f8dd 9000 	ldr.w	r9, [sp]
  4016d0:	45b1      	cmp	r9, r6
  4016d2:	d004      	beq.n	4016de <setvbuf+0x17e>
  4016d4:	4648      	mov	r0, r9
  4016d6:	f002 fb37 	bl	403d48 <malloc>
  4016da:	4607      	mov	r7, r0
  4016dc:	b920      	cbnz	r0, 4016e8 <setvbuf+0x188>
  4016de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4016e2:	f04f 35ff 	mov.w	r5, #4294967295
  4016e6:	e792      	b.n	40160e <setvbuf+0xae>
  4016e8:	464e      	mov	r6, r9
  4016ea:	e783      	b.n	4015f4 <setvbuf+0x94>
  4016ec:	2000000c 	.word	0x2000000c
	...

00401700 <strlen>:
  401700:	f890 f000 	pld	[r0]
  401704:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401708:	f020 0107 	bic.w	r1, r0, #7
  40170c:	f06f 0c00 	mvn.w	ip, #0
  401710:	f010 0407 	ands.w	r4, r0, #7
  401714:	f891 f020 	pld	[r1, #32]
  401718:	f040 8049 	bne.w	4017ae <strlen+0xae>
  40171c:	f04f 0400 	mov.w	r4, #0
  401720:	f06f 0007 	mvn.w	r0, #7
  401724:	e9d1 2300 	ldrd	r2, r3, [r1]
  401728:	f891 f040 	pld	[r1, #64]	; 0x40
  40172c:	f100 0008 	add.w	r0, r0, #8
  401730:	fa82 f24c 	uadd8	r2, r2, ip
  401734:	faa4 f28c 	sel	r2, r4, ip
  401738:	fa83 f34c 	uadd8	r3, r3, ip
  40173c:	faa2 f38c 	sel	r3, r2, ip
  401740:	bb4b      	cbnz	r3, 401796 <strlen+0x96>
  401742:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401746:	fa82 f24c 	uadd8	r2, r2, ip
  40174a:	f100 0008 	add.w	r0, r0, #8
  40174e:	faa4 f28c 	sel	r2, r4, ip
  401752:	fa83 f34c 	uadd8	r3, r3, ip
  401756:	faa2 f38c 	sel	r3, r2, ip
  40175a:	b9e3      	cbnz	r3, 401796 <strlen+0x96>
  40175c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401760:	fa82 f24c 	uadd8	r2, r2, ip
  401764:	f100 0008 	add.w	r0, r0, #8
  401768:	faa4 f28c 	sel	r2, r4, ip
  40176c:	fa83 f34c 	uadd8	r3, r3, ip
  401770:	faa2 f38c 	sel	r3, r2, ip
  401774:	b97b      	cbnz	r3, 401796 <strlen+0x96>
  401776:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40177a:	f101 0120 	add.w	r1, r1, #32
  40177e:	fa82 f24c 	uadd8	r2, r2, ip
  401782:	f100 0008 	add.w	r0, r0, #8
  401786:	faa4 f28c 	sel	r2, r4, ip
  40178a:	fa83 f34c 	uadd8	r3, r3, ip
  40178e:	faa2 f38c 	sel	r3, r2, ip
  401792:	2b00      	cmp	r3, #0
  401794:	d0c6      	beq.n	401724 <strlen+0x24>
  401796:	2a00      	cmp	r2, #0
  401798:	bf04      	itt	eq
  40179a:	3004      	addeq	r0, #4
  40179c:	461a      	moveq	r2, r3
  40179e:	ba12      	rev	r2, r2
  4017a0:	fab2 f282 	clz	r2, r2
  4017a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4017a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4017ac:	4770      	bx	lr
  4017ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4017b2:	f004 0503 	and.w	r5, r4, #3
  4017b6:	f1c4 0000 	rsb	r0, r4, #0
  4017ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4017be:	f014 0f04 	tst.w	r4, #4
  4017c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4017c6:	fa0c f505 	lsl.w	r5, ip, r5
  4017ca:	ea62 0205 	orn	r2, r2, r5
  4017ce:	bf1c      	itt	ne
  4017d0:	ea63 0305 	ornne	r3, r3, r5
  4017d4:	4662      	movne	r2, ip
  4017d6:	f04f 0400 	mov.w	r4, #0
  4017da:	e7a9      	b.n	401730 <strlen+0x30>

004017dc <__sprint_r.part.0>:
  4017dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4017e0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4017e2:	049c      	lsls	r4, r3, #18
  4017e4:	4693      	mov	fp, r2
  4017e6:	d52f      	bpl.n	401848 <__sprint_r.part.0+0x6c>
  4017e8:	6893      	ldr	r3, [r2, #8]
  4017ea:	6812      	ldr	r2, [r2, #0]
  4017ec:	b353      	cbz	r3, 401844 <__sprint_r.part.0+0x68>
  4017ee:	460e      	mov	r6, r1
  4017f0:	4607      	mov	r7, r0
  4017f2:	f102 0908 	add.w	r9, r2, #8
  4017f6:	e919 0420 	ldmdb	r9, {r5, sl}
  4017fa:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4017fe:	d017      	beq.n	401830 <__sprint_r.part.0+0x54>
  401800:	3d04      	subs	r5, #4
  401802:	2400      	movs	r4, #0
  401804:	e001      	b.n	40180a <__sprint_r.part.0+0x2e>
  401806:	45a0      	cmp	r8, r4
  401808:	d010      	beq.n	40182c <__sprint_r.part.0+0x50>
  40180a:	4632      	mov	r2, r6
  40180c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  401810:	4638      	mov	r0, r7
  401812:	f001 fdd7 	bl	4033c4 <_fputwc_r>
  401816:	1c43      	adds	r3, r0, #1
  401818:	f104 0401 	add.w	r4, r4, #1
  40181c:	d1f3      	bne.n	401806 <__sprint_r.part.0+0x2a>
  40181e:	2300      	movs	r3, #0
  401820:	f8cb 3008 	str.w	r3, [fp, #8]
  401824:	f8cb 3004 	str.w	r3, [fp, #4]
  401828:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40182c:	f8db 3008 	ldr.w	r3, [fp, #8]
  401830:	f02a 0a03 	bic.w	sl, sl, #3
  401834:	eba3 030a 	sub.w	r3, r3, sl
  401838:	f8cb 3008 	str.w	r3, [fp, #8]
  40183c:	f109 0908 	add.w	r9, r9, #8
  401840:	2b00      	cmp	r3, #0
  401842:	d1d8      	bne.n	4017f6 <__sprint_r.part.0+0x1a>
  401844:	2000      	movs	r0, #0
  401846:	e7ea      	b.n	40181e <__sprint_r.part.0+0x42>
  401848:	f002 f808 	bl	40385c <__sfvwrite_r>
  40184c:	2300      	movs	r3, #0
  40184e:	f8cb 3008 	str.w	r3, [fp, #8]
  401852:	f8cb 3004 	str.w	r3, [fp, #4]
  401856:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40185a:	bf00      	nop

0040185c <_vfiprintf_r>:
  40185c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401860:	b0ad      	sub	sp, #180	; 0xb4
  401862:	461d      	mov	r5, r3
  401864:	468b      	mov	fp, r1
  401866:	4690      	mov	r8, r2
  401868:	9307      	str	r3, [sp, #28]
  40186a:	9006      	str	r0, [sp, #24]
  40186c:	b118      	cbz	r0, 401876 <_vfiprintf_r+0x1a>
  40186e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401870:	2b00      	cmp	r3, #0
  401872:	f000 80f3 	beq.w	401a5c <_vfiprintf_r+0x200>
  401876:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40187a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40187e:	07df      	lsls	r7, r3, #31
  401880:	b281      	uxth	r1, r0
  401882:	d402      	bmi.n	40188a <_vfiprintf_r+0x2e>
  401884:	058e      	lsls	r6, r1, #22
  401886:	f140 80fc 	bpl.w	401a82 <_vfiprintf_r+0x226>
  40188a:	048c      	lsls	r4, r1, #18
  40188c:	d40a      	bmi.n	4018a4 <_vfiprintf_r+0x48>
  40188e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401892:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  401896:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40189a:	f8ab 100c 	strh.w	r1, [fp, #12]
  40189e:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4018a2:	b289      	uxth	r1, r1
  4018a4:	0708      	lsls	r0, r1, #28
  4018a6:	f140 80b3 	bpl.w	401a10 <_vfiprintf_r+0x1b4>
  4018aa:	f8db 3010 	ldr.w	r3, [fp, #16]
  4018ae:	2b00      	cmp	r3, #0
  4018b0:	f000 80ae 	beq.w	401a10 <_vfiprintf_r+0x1b4>
  4018b4:	f001 031a 	and.w	r3, r1, #26
  4018b8:	2b0a      	cmp	r3, #10
  4018ba:	f000 80b5 	beq.w	401a28 <_vfiprintf_r+0x1cc>
  4018be:	2300      	movs	r3, #0
  4018c0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4018c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4018c6:	9311      	str	r3, [sp, #68]	; 0x44
  4018c8:	9310      	str	r3, [sp, #64]	; 0x40
  4018ca:	9303      	str	r3, [sp, #12]
  4018cc:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4018d0:	46ca      	mov	sl, r9
  4018d2:	f8cd b010 	str.w	fp, [sp, #16]
  4018d6:	f898 3000 	ldrb.w	r3, [r8]
  4018da:	4644      	mov	r4, r8
  4018dc:	b1fb      	cbz	r3, 40191e <_vfiprintf_r+0xc2>
  4018de:	2b25      	cmp	r3, #37	; 0x25
  4018e0:	d102      	bne.n	4018e8 <_vfiprintf_r+0x8c>
  4018e2:	e01c      	b.n	40191e <_vfiprintf_r+0xc2>
  4018e4:	2b25      	cmp	r3, #37	; 0x25
  4018e6:	d003      	beq.n	4018f0 <_vfiprintf_r+0x94>
  4018e8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4018ec:	2b00      	cmp	r3, #0
  4018ee:	d1f9      	bne.n	4018e4 <_vfiprintf_r+0x88>
  4018f0:	eba4 0508 	sub.w	r5, r4, r8
  4018f4:	b19d      	cbz	r5, 40191e <_vfiprintf_r+0xc2>
  4018f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4018f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4018fa:	f8ca 8000 	str.w	r8, [sl]
  4018fe:	3301      	adds	r3, #1
  401900:	442a      	add	r2, r5
  401902:	2b07      	cmp	r3, #7
  401904:	f8ca 5004 	str.w	r5, [sl, #4]
  401908:	9211      	str	r2, [sp, #68]	; 0x44
  40190a:	9310      	str	r3, [sp, #64]	; 0x40
  40190c:	dd7a      	ble.n	401a04 <_vfiprintf_r+0x1a8>
  40190e:	2a00      	cmp	r2, #0
  401910:	f040 84b0 	bne.w	402274 <_vfiprintf_r+0xa18>
  401914:	9b03      	ldr	r3, [sp, #12]
  401916:	9210      	str	r2, [sp, #64]	; 0x40
  401918:	442b      	add	r3, r5
  40191a:	46ca      	mov	sl, r9
  40191c:	9303      	str	r3, [sp, #12]
  40191e:	7823      	ldrb	r3, [r4, #0]
  401920:	2b00      	cmp	r3, #0
  401922:	f000 83e0 	beq.w	4020e6 <_vfiprintf_r+0x88a>
  401926:	2000      	movs	r0, #0
  401928:	f04f 0300 	mov.w	r3, #0
  40192c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  401930:	f104 0801 	add.w	r8, r4, #1
  401934:	7862      	ldrb	r2, [r4, #1]
  401936:	4605      	mov	r5, r0
  401938:	4606      	mov	r6, r0
  40193a:	4603      	mov	r3, r0
  40193c:	f04f 34ff 	mov.w	r4, #4294967295
  401940:	f108 0801 	add.w	r8, r8, #1
  401944:	f1a2 0120 	sub.w	r1, r2, #32
  401948:	2958      	cmp	r1, #88	; 0x58
  40194a:	f200 82de 	bhi.w	401f0a <_vfiprintf_r+0x6ae>
  40194e:	e8df f011 	tbh	[pc, r1, lsl #1]
  401952:	0221      	.short	0x0221
  401954:	02dc02dc 	.word	0x02dc02dc
  401958:	02dc0229 	.word	0x02dc0229
  40195c:	02dc02dc 	.word	0x02dc02dc
  401960:	02dc02dc 	.word	0x02dc02dc
  401964:	028902dc 	.word	0x028902dc
  401968:	02dc0295 	.word	0x02dc0295
  40196c:	02bd00a2 	.word	0x02bd00a2
  401970:	019f02dc 	.word	0x019f02dc
  401974:	01a401a4 	.word	0x01a401a4
  401978:	01a401a4 	.word	0x01a401a4
  40197c:	01a401a4 	.word	0x01a401a4
  401980:	01a401a4 	.word	0x01a401a4
  401984:	02dc01a4 	.word	0x02dc01a4
  401988:	02dc02dc 	.word	0x02dc02dc
  40198c:	02dc02dc 	.word	0x02dc02dc
  401990:	02dc02dc 	.word	0x02dc02dc
  401994:	02dc02dc 	.word	0x02dc02dc
  401998:	01b202dc 	.word	0x01b202dc
  40199c:	02dc02dc 	.word	0x02dc02dc
  4019a0:	02dc02dc 	.word	0x02dc02dc
  4019a4:	02dc02dc 	.word	0x02dc02dc
  4019a8:	02dc02dc 	.word	0x02dc02dc
  4019ac:	02dc02dc 	.word	0x02dc02dc
  4019b0:	02dc0197 	.word	0x02dc0197
  4019b4:	02dc02dc 	.word	0x02dc02dc
  4019b8:	02dc02dc 	.word	0x02dc02dc
  4019bc:	02dc019b 	.word	0x02dc019b
  4019c0:	025302dc 	.word	0x025302dc
  4019c4:	02dc02dc 	.word	0x02dc02dc
  4019c8:	02dc02dc 	.word	0x02dc02dc
  4019cc:	02dc02dc 	.word	0x02dc02dc
  4019d0:	02dc02dc 	.word	0x02dc02dc
  4019d4:	02dc02dc 	.word	0x02dc02dc
  4019d8:	021b025a 	.word	0x021b025a
  4019dc:	02dc02dc 	.word	0x02dc02dc
  4019e0:	026e02dc 	.word	0x026e02dc
  4019e4:	02dc021b 	.word	0x02dc021b
  4019e8:	027302dc 	.word	0x027302dc
  4019ec:	01f502dc 	.word	0x01f502dc
  4019f0:	02090182 	.word	0x02090182
  4019f4:	02dc02d7 	.word	0x02dc02d7
  4019f8:	02dc029a 	.word	0x02dc029a
  4019fc:	02dc00a7 	.word	0x02dc00a7
  401a00:	022e02dc 	.word	0x022e02dc
  401a04:	f10a 0a08 	add.w	sl, sl, #8
  401a08:	9b03      	ldr	r3, [sp, #12]
  401a0a:	442b      	add	r3, r5
  401a0c:	9303      	str	r3, [sp, #12]
  401a0e:	e786      	b.n	40191e <_vfiprintf_r+0xc2>
  401a10:	4659      	mov	r1, fp
  401a12:	9806      	ldr	r0, [sp, #24]
  401a14:	f001 fab6 	bl	402f84 <__swsetup_r>
  401a18:	bb18      	cbnz	r0, 401a62 <_vfiprintf_r+0x206>
  401a1a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  401a1e:	f001 031a 	and.w	r3, r1, #26
  401a22:	2b0a      	cmp	r3, #10
  401a24:	f47f af4b 	bne.w	4018be <_vfiprintf_r+0x62>
  401a28:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  401a2c:	2b00      	cmp	r3, #0
  401a2e:	f6ff af46 	blt.w	4018be <_vfiprintf_r+0x62>
  401a32:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401a36:	07db      	lsls	r3, r3, #31
  401a38:	d405      	bmi.n	401a46 <_vfiprintf_r+0x1ea>
  401a3a:	058f      	lsls	r7, r1, #22
  401a3c:	d403      	bmi.n	401a46 <_vfiprintf_r+0x1ea>
  401a3e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401a42:	f002 f907 	bl	403c54 <__retarget_lock_release_recursive>
  401a46:	462b      	mov	r3, r5
  401a48:	4642      	mov	r2, r8
  401a4a:	4659      	mov	r1, fp
  401a4c:	9806      	ldr	r0, [sp, #24]
  401a4e:	f000 fd4d 	bl	4024ec <__sbprintf>
  401a52:	9003      	str	r0, [sp, #12]
  401a54:	9803      	ldr	r0, [sp, #12]
  401a56:	b02d      	add	sp, #180	; 0xb4
  401a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a5c:	f001 fc10 	bl	403280 <__sinit>
  401a60:	e709      	b.n	401876 <_vfiprintf_r+0x1a>
  401a62:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401a66:	07d9      	lsls	r1, r3, #31
  401a68:	d404      	bmi.n	401a74 <_vfiprintf_r+0x218>
  401a6a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401a6e:	059a      	lsls	r2, r3, #22
  401a70:	f140 84aa 	bpl.w	4023c8 <_vfiprintf_r+0xb6c>
  401a74:	f04f 33ff 	mov.w	r3, #4294967295
  401a78:	9303      	str	r3, [sp, #12]
  401a7a:	9803      	ldr	r0, [sp, #12]
  401a7c:	b02d      	add	sp, #180	; 0xb4
  401a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a82:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401a86:	f002 f8e3 	bl	403c50 <__retarget_lock_acquire_recursive>
  401a8a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  401a8e:	b281      	uxth	r1, r0
  401a90:	e6fb      	b.n	40188a <_vfiprintf_r+0x2e>
  401a92:	4276      	negs	r6, r6
  401a94:	9207      	str	r2, [sp, #28]
  401a96:	f043 0304 	orr.w	r3, r3, #4
  401a9a:	f898 2000 	ldrb.w	r2, [r8]
  401a9e:	e74f      	b.n	401940 <_vfiprintf_r+0xe4>
  401aa0:	9608      	str	r6, [sp, #32]
  401aa2:	069e      	lsls	r6, r3, #26
  401aa4:	f100 8450 	bmi.w	402348 <_vfiprintf_r+0xaec>
  401aa8:	9907      	ldr	r1, [sp, #28]
  401aaa:	06dd      	lsls	r5, r3, #27
  401aac:	460a      	mov	r2, r1
  401aae:	f100 83ef 	bmi.w	402290 <_vfiprintf_r+0xa34>
  401ab2:	0658      	lsls	r0, r3, #25
  401ab4:	f140 83ec 	bpl.w	402290 <_vfiprintf_r+0xa34>
  401ab8:	880e      	ldrh	r6, [r1, #0]
  401aba:	3104      	adds	r1, #4
  401abc:	2700      	movs	r7, #0
  401abe:	2201      	movs	r2, #1
  401ac0:	9107      	str	r1, [sp, #28]
  401ac2:	f04f 0100 	mov.w	r1, #0
  401ac6:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  401aca:	2500      	movs	r5, #0
  401acc:	1c61      	adds	r1, r4, #1
  401ace:	f000 8116 	beq.w	401cfe <_vfiprintf_r+0x4a2>
  401ad2:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401ad6:	9102      	str	r1, [sp, #8]
  401ad8:	ea56 0107 	orrs.w	r1, r6, r7
  401adc:	f040 8114 	bne.w	401d08 <_vfiprintf_r+0x4ac>
  401ae0:	2c00      	cmp	r4, #0
  401ae2:	f040 835c 	bne.w	40219e <_vfiprintf_r+0x942>
  401ae6:	2a00      	cmp	r2, #0
  401ae8:	f040 83b7 	bne.w	40225a <_vfiprintf_r+0x9fe>
  401aec:	f013 0301 	ands.w	r3, r3, #1
  401af0:	9305      	str	r3, [sp, #20]
  401af2:	f000 8457 	beq.w	4023a4 <_vfiprintf_r+0xb48>
  401af6:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  401afa:	2330      	movs	r3, #48	; 0x30
  401afc:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  401b00:	9b05      	ldr	r3, [sp, #20]
  401b02:	42a3      	cmp	r3, r4
  401b04:	bfb8      	it	lt
  401b06:	4623      	movlt	r3, r4
  401b08:	9301      	str	r3, [sp, #4]
  401b0a:	b10d      	cbz	r5, 401b10 <_vfiprintf_r+0x2b4>
  401b0c:	3301      	adds	r3, #1
  401b0e:	9301      	str	r3, [sp, #4]
  401b10:	9b02      	ldr	r3, [sp, #8]
  401b12:	f013 0302 	ands.w	r3, r3, #2
  401b16:	9309      	str	r3, [sp, #36]	; 0x24
  401b18:	d002      	beq.n	401b20 <_vfiprintf_r+0x2c4>
  401b1a:	9b01      	ldr	r3, [sp, #4]
  401b1c:	3302      	adds	r3, #2
  401b1e:	9301      	str	r3, [sp, #4]
  401b20:	9b02      	ldr	r3, [sp, #8]
  401b22:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401b26:	930a      	str	r3, [sp, #40]	; 0x28
  401b28:	f040 8217 	bne.w	401f5a <_vfiprintf_r+0x6fe>
  401b2c:	9b08      	ldr	r3, [sp, #32]
  401b2e:	9a01      	ldr	r2, [sp, #4]
  401b30:	1a9d      	subs	r5, r3, r2
  401b32:	2d00      	cmp	r5, #0
  401b34:	f340 8211 	ble.w	401f5a <_vfiprintf_r+0x6fe>
  401b38:	2d10      	cmp	r5, #16
  401b3a:	f340 8490 	ble.w	40245e <_vfiprintf_r+0xc02>
  401b3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401b40:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b42:	4ec4      	ldr	r6, [pc, #784]	; (401e54 <_vfiprintf_r+0x5f8>)
  401b44:	46d6      	mov	lr, sl
  401b46:	2710      	movs	r7, #16
  401b48:	46a2      	mov	sl, r4
  401b4a:	4619      	mov	r1, r3
  401b4c:	9c06      	ldr	r4, [sp, #24]
  401b4e:	e007      	b.n	401b60 <_vfiprintf_r+0x304>
  401b50:	f101 0c02 	add.w	ip, r1, #2
  401b54:	f10e 0e08 	add.w	lr, lr, #8
  401b58:	4601      	mov	r1, r0
  401b5a:	3d10      	subs	r5, #16
  401b5c:	2d10      	cmp	r5, #16
  401b5e:	dd11      	ble.n	401b84 <_vfiprintf_r+0x328>
  401b60:	1c48      	adds	r0, r1, #1
  401b62:	3210      	adds	r2, #16
  401b64:	2807      	cmp	r0, #7
  401b66:	9211      	str	r2, [sp, #68]	; 0x44
  401b68:	e88e 00c0 	stmia.w	lr, {r6, r7}
  401b6c:	9010      	str	r0, [sp, #64]	; 0x40
  401b6e:	ddef      	ble.n	401b50 <_vfiprintf_r+0x2f4>
  401b70:	2a00      	cmp	r2, #0
  401b72:	f040 81e4 	bne.w	401f3e <_vfiprintf_r+0x6e2>
  401b76:	3d10      	subs	r5, #16
  401b78:	2d10      	cmp	r5, #16
  401b7a:	4611      	mov	r1, r2
  401b7c:	f04f 0c01 	mov.w	ip, #1
  401b80:	46ce      	mov	lr, r9
  401b82:	dced      	bgt.n	401b60 <_vfiprintf_r+0x304>
  401b84:	4654      	mov	r4, sl
  401b86:	4661      	mov	r1, ip
  401b88:	46f2      	mov	sl, lr
  401b8a:	442a      	add	r2, r5
  401b8c:	2907      	cmp	r1, #7
  401b8e:	9211      	str	r2, [sp, #68]	; 0x44
  401b90:	f8ca 6000 	str.w	r6, [sl]
  401b94:	f8ca 5004 	str.w	r5, [sl, #4]
  401b98:	9110      	str	r1, [sp, #64]	; 0x40
  401b9a:	f300 82ec 	bgt.w	402176 <_vfiprintf_r+0x91a>
  401b9e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401ba2:	f10a 0a08 	add.w	sl, sl, #8
  401ba6:	1c48      	adds	r0, r1, #1
  401ba8:	2d00      	cmp	r5, #0
  401baa:	f040 81de 	bne.w	401f6a <_vfiprintf_r+0x70e>
  401bae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401bb0:	2b00      	cmp	r3, #0
  401bb2:	f000 81f8 	beq.w	401fa6 <_vfiprintf_r+0x74a>
  401bb6:	3202      	adds	r2, #2
  401bb8:	a90e      	add	r1, sp, #56	; 0x38
  401bba:	2302      	movs	r3, #2
  401bbc:	2807      	cmp	r0, #7
  401bbe:	9211      	str	r2, [sp, #68]	; 0x44
  401bc0:	9010      	str	r0, [sp, #64]	; 0x40
  401bc2:	e88a 000a 	stmia.w	sl, {r1, r3}
  401bc6:	f340 81ea 	ble.w	401f9e <_vfiprintf_r+0x742>
  401bca:	2a00      	cmp	r2, #0
  401bcc:	f040 838c 	bne.w	4022e8 <_vfiprintf_r+0xa8c>
  401bd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401bd2:	2b80      	cmp	r3, #128	; 0x80
  401bd4:	f04f 0001 	mov.w	r0, #1
  401bd8:	4611      	mov	r1, r2
  401bda:	46ca      	mov	sl, r9
  401bdc:	f040 81e7 	bne.w	401fae <_vfiprintf_r+0x752>
  401be0:	9b08      	ldr	r3, [sp, #32]
  401be2:	9d01      	ldr	r5, [sp, #4]
  401be4:	1b5e      	subs	r6, r3, r5
  401be6:	2e00      	cmp	r6, #0
  401be8:	f340 81e1 	ble.w	401fae <_vfiprintf_r+0x752>
  401bec:	2e10      	cmp	r6, #16
  401bee:	4d9a      	ldr	r5, [pc, #616]	; (401e58 <_vfiprintf_r+0x5fc>)
  401bf0:	f340 8450 	ble.w	402494 <_vfiprintf_r+0xc38>
  401bf4:	46d4      	mov	ip, sl
  401bf6:	2710      	movs	r7, #16
  401bf8:	46a2      	mov	sl, r4
  401bfa:	9c06      	ldr	r4, [sp, #24]
  401bfc:	e007      	b.n	401c0e <_vfiprintf_r+0x3b2>
  401bfe:	f101 0e02 	add.w	lr, r1, #2
  401c02:	f10c 0c08 	add.w	ip, ip, #8
  401c06:	4601      	mov	r1, r0
  401c08:	3e10      	subs	r6, #16
  401c0a:	2e10      	cmp	r6, #16
  401c0c:	dd11      	ble.n	401c32 <_vfiprintf_r+0x3d6>
  401c0e:	1c48      	adds	r0, r1, #1
  401c10:	3210      	adds	r2, #16
  401c12:	2807      	cmp	r0, #7
  401c14:	9211      	str	r2, [sp, #68]	; 0x44
  401c16:	e88c 00a0 	stmia.w	ip, {r5, r7}
  401c1a:	9010      	str	r0, [sp, #64]	; 0x40
  401c1c:	ddef      	ble.n	401bfe <_vfiprintf_r+0x3a2>
  401c1e:	2a00      	cmp	r2, #0
  401c20:	f040 829d 	bne.w	40215e <_vfiprintf_r+0x902>
  401c24:	3e10      	subs	r6, #16
  401c26:	2e10      	cmp	r6, #16
  401c28:	f04f 0e01 	mov.w	lr, #1
  401c2c:	4611      	mov	r1, r2
  401c2e:	46cc      	mov	ip, r9
  401c30:	dced      	bgt.n	401c0e <_vfiprintf_r+0x3b2>
  401c32:	4654      	mov	r4, sl
  401c34:	46e2      	mov	sl, ip
  401c36:	4432      	add	r2, r6
  401c38:	f1be 0f07 	cmp.w	lr, #7
  401c3c:	9211      	str	r2, [sp, #68]	; 0x44
  401c3e:	e88a 0060 	stmia.w	sl, {r5, r6}
  401c42:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401c46:	f300 8369 	bgt.w	40231c <_vfiprintf_r+0xac0>
  401c4a:	f10a 0a08 	add.w	sl, sl, #8
  401c4e:	f10e 0001 	add.w	r0, lr, #1
  401c52:	4671      	mov	r1, lr
  401c54:	e1ab      	b.n	401fae <_vfiprintf_r+0x752>
  401c56:	9608      	str	r6, [sp, #32]
  401c58:	f013 0220 	ands.w	r2, r3, #32
  401c5c:	f040 838c 	bne.w	402378 <_vfiprintf_r+0xb1c>
  401c60:	f013 0110 	ands.w	r1, r3, #16
  401c64:	f040 831a 	bne.w	40229c <_vfiprintf_r+0xa40>
  401c68:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  401c6c:	f000 8316 	beq.w	40229c <_vfiprintf_r+0xa40>
  401c70:	9807      	ldr	r0, [sp, #28]
  401c72:	460a      	mov	r2, r1
  401c74:	4601      	mov	r1, r0
  401c76:	3104      	adds	r1, #4
  401c78:	8806      	ldrh	r6, [r0, #0]
  401c7a:	9107      	str	r1, [sp, #28]
  401c7c:	2700      	movs	r7, #0
  401c7e:	e720      	b.n	401ac2 <_vfiprintf_r+0x266>
  401c80:	9608      	str	r6, [sp, #32]
  401c82:	f043 0310 	orr.w	r3, r3, #16
  401c86:	e7e7      	b.n	401c58 <_vfiprintf_r+0x3fc>
  401c88:	9608      	str	r6, [sp, #32]
  401c8a:	f043 0310 	orr.w	r3, r3, #16
  401c8e:	e708      	b.n	401aa2 <_vfiprintf_r+0x246>
  401c90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401c94:	f898 2000 	ldrb.w	r2, [r8]
  401c98:	e652      	b.n	401940 <_vfiprintf_r+0xe4>
  401c9a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401c9e:	2600      	movs	r6, #0
  401ca0:	f818 2b01 	ldrb.w	r2, [r8], #1
  401ca4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  401ca8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  401cac:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401cb0:	2909      	cmp	r1, #9
  401cb2:	d9f5      	bls.n	401ca0 <_vfiprintf_r+0x444>
  401cb4:	e646      	b.n	401944 <_vfiprintf_r+0xe8>
  401cb6:	9608      	str	r6, [sp, #32]
  401cb8:	2800      	cmp	r0, #0
  401cba:	f040 8408 	bne.w	4024ce <_vfiprintf_r+0xc72>
  401cbe:	f043 0310 	orr.w	r3, r3, #16
  401cc2:	069e      	lsls	r6, r3, #26
  401cc4:	f100 834c 	bmi.w	402360 <_vfiprintf_r+0xb04>
  401cc8:	06dd      	lsls	r5, r3, #27
  401cca:	f100 82f3 	bmi.w	4022b4 <_vfiprintf_r+0xa58>
  401cce:	0658      	lsls	r0, r3, #25
  401cd0:	f140 82f0 	bpl.w	4022b4 <_vfiprintf_r+0xa58>
  401cd4:	9d07      	ldr	r5, [sp, #28]
  401cd6:	f9b5 6000 	ldrsh.w	r6, [r5]
  401cda:	462a      	mov	r2, r5
  401cdc:	17f7      	asrs	r7, r6, #31
  401cde:	3204      	adds	r2, #4
  401ce0:	4630      	mov	r0, r6
  401ce2:	4639      	mov	r1, r7
  401ce4:	9207      	str	r2, [sp, #28]
  401ce6:	2800      	cmp	r0, #0
  401ce8:	f171 0200 	sbcs.w	r2, r1, #0
  401cec:	f2c0 835d 	blt.w	4023aa <_vfiprintf_r+0xb4e>
  401cf0:	1c61      	adds	r1, r4, #1
  401cf2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401cf6:	f04f 0201 	mov.w	r2, #1
  401cfa:	f47f aeea 	bne.w	401ad2 <_vfiprintf_r+0x276>
  401cfe:	ea56 0107 	orrs.w	r1, r6, r7
  401d02:	f000 824d 	beq.w	4021a0 <_vfiprintf_r+0x944>
  401d06:	9302      	str	r3, [sp, #8]
  401d08:	2a01      	cmp	r2, #1
  401d0a:	f000 828c 	beq.w	402226 <_vfiprintf_r+0x9ca>
  401d0e:	2a02      	cmp	r2, #2
  401d10:	f040 825c 	bne.w	4021cc <_vfiprintf_r+0x970>
  401d14:	980b      	ldr	r0, [sp, #44]	; 0x2c
  401d16:	46cb      	mov	fp, r9
  401d18:	0933      	lsrs	r3, r6, #4
  401d1a:	f006 010f 	and.w	r1, r6, #15
  401d1e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  401d22:	093a      	lsrs	r2, r7, #4
  401d24:	461e      	mov	r6, r3
  401d26:	4617      	mov	r7, r2
  401d28:	5c43      	ldrb	r3, [r0, r1]
  401d2a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  401d2e:	ea56 0307 	orrs.w	r3, r6, r7
  401d32:	d1f1      	bne.n	401d18 <_vfiprintf_r+0x4bc>
  401d34:	eba9 030b 	sub.w	r3, r9, fp
  401d38:	9305      	str	r3, [sp, #20]
  401d3a:	e6e1      	b.n	401b00 <_vfiprintf_r+0x2a4>
  401d3c:	2800      	cmp	r0, #0
  401d3e:	f040 83c0 	bne.w	4024c2 <_vfiprintf_r+0xc66>
  401d42:	0699      	lsls	r1, r3, #26
  401d44:	f100 8367 	bmi.w	402416 <_vfiprintf_r+0xbba>
  401d48:	06da      	lsls	r2, r3, #27
  401d4a:	f100 80f1 	bmi.w	401f30 <_vfiprintf_r+0x6d4>
  401d4e:	065b      	lsls	r3, r3, #25
  401d50:	f140 80ee 	bpl.w	401f30 <_vfiprintf_r+0x6d4>
  401d54:	9a07      	ldr	r2, [sp, #28]
  401d56:	6813      	ldr	r3, [r2, #0]
  401d58:	3204      	adds	r2, #4
  401d5a:	9207      	str	r2, [sp, #28]
  401d5c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  401d60:	801a      	strh	r2, [r3, #0]
  401d62:	e5b8      	b.n	4018d6 <_vfiprintf_r+0x7a>
  401d64:	9807      	ldr	r0, [sp, #28]
  401d66:	4a3d      	ldr	r2, [pc, #244]	; (401e5c <_vfiprintf_r+0x600>)
  401d68:	9608      	str	r6, [sp, #32]
  401d6a:	920b      	str	r2, [sp, #44]	; 0x2c
  401d6c:	6806      	ldr	r6, [r0, #0]
  401d6e:	2278      	movs	r2, #120	; 0x78
  401d70:	2130      	movs	r1, #48	; 0x30
  401d72:	3004      	adds	r0, #4
  401d74:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401d78:	f043 0302 	orr.w	r3, r3, #2
  401d7c:	9007      	str	r0, [sp, #28]
  401d7e:	2700      	movs	r7, #0
  401d80:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401d84:	2202      	movs	r2, #2
  401d86:	e69c      	b.n	401ac2 <_vfiprintf_r+0x266>
  401d88:	9608      	str	r6, [sp, #32]
  401d8a:	2800      	cmp	r0, #0
  401d8c:	d099      	beq.n	401cc2 <_vfiprintf_r+0x466>
  401d8e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401d92:	e796      	b.n	401cc2 <_vfiprintf_r+0x466>
  401d94:	f898 2000 	ldrb.w	r2, [r8]
  401d98:	2d00      	cmp	r5, #0
  401d9a:	f47f add1 	bne.w	401940 <_vfiprintf_r+0xe4>
  401d9e:	2001      	movs	r0, #1
  401da0:	2520      	movs	r5, #32
  401da2:	e5cd      	b.n	401940 <_vfiprintf_r+0xe4>
  401da4:	f043 0301 	orr.w	r3, r3, #1
  401da8:	f898 2000 	ldrb.w	r2, [r8]
  401dac:	e5c8      	b.n	401940 <_vfiprintf_r+0xe4>
  401dae:	9608      	str	r6, [sp, #32]
  401db0:	2800      	cmp	r0, #0
  401db2:	f040 8393 	bne.w	4024dc <_vfiprintf_r+0xc80>
  401db6:	4929      	ldr	r1, [pc, #164]	; (401e5c <_vfiprintf_r+0x600>)
  401db8:	910b      	str	r1, [sp, #44]	; 0x2c
  401dba:	069f      	lsls	r7, r3, #26
  401dbc:	f100 82e8 	bmi.w	402390 <_vfiprintf_r+0xb34>
  401dc0:	9807      	ldr	r0, [sp, #28]
  401dc2:	06de      	lsls	r6, r3, #27
  401dc4:	4601      	mov	r1, r0
  401dc6:	f100 8270 	bmi.w	4022aa <_vfiprintf_r+0xa4e>
  401dca:	065d      	lsls	r5, r3, #25
  401dcc:	f140 826d 	bpl.w	4022aa <_vfiprintf_r+0xa4e>
  401dd0:	3104      	adds	r1, #4
  401dd2:	8806      	ldrh	r6, [r0, #0]
  401dd4:	9107      	str	r1, [sp, #28]
  401dd6:	2700      	movs	r7, #0
  401dd8:	07d8      	lsls	r0, r3, #31
  401dda:	f140 8222 	bpl.w	402222 <_vfiprintf_r+0x9c6>
  401dde:	ea56 0107 	orrs.w	r1, r6, r7
  401de2:	f000 821e 	beq.w	402222 <_vfiprintf_r+0x9c6>
  401de6:	2130      	movs	r1, #48	; 0x30
  401de8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401dec:	f043 0302 	orr.w	r3, r3, #2
  401df0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401df4:	2202      	movs	r2, #2
  401df6:	e664      	b.n	401ac2 <_vfiprintf_r+0x266>
  401df8:	9608      	str	r6, [sp, #32]
  401dfa:	2800      	cmp	r0, #0
  401dfc:	f040 836b 	bne.w	4024d6 <_vfiprintf_r+0xc7a>
  401e00:	4917      	ldr	r1, [pc, #92]	; (401e60 <_vfiprintf_r+0x604>)
  401e02:	910b      	str	r1, [sp, #44]	; 0x2c
  401e04:	e7d9      	b.n	401dba <_vfiprintf_r+0x55e>
  401e06:	9907      	ldr	r1, [sp, #28]
  401e08:	9608      	str	r6, [sp, #32]
  401e0a:	680a      	ldr	r2, [r1, #0]
  401e0c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401e10:	f04f 0000 	mov.w	r0, #0
  401e14:	460a      	mov	r2, r1
  401e16:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  401e1a:	3204      	adds	r2, #4
  401e1c:	2001      	movs	r0, #1
  401e1e:	9001      	str	r0, [sp, #4]
  401e20:	9207      	str	r2, [sp, #28]
  401e22:	9005      	str	r0, [sp, #20]
  401e24:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401e28:	9302      	str	r3, [sp, #8]
  401e2a:	2400      	movs	r4, #0
  401e2c:	e670      	b.n	401b10 <_vfiprintf_r+0x2b4>
  401e2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401e32:	f898 2000 	ldrb.w	r2, [r8]
  401e36:	e583      	b.n	401940 <_vfiprintf_r+0xe4>
  401e38:	f898 2000 	ldrb.w	r2, [r8]
  401e3c:	2a6c      	cmp	r2, #108	; 0x6c
  401e3e:	bf03      	ittte	eq
  401e40:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  401e44:	f043 0320 	orreq.w	r3, r3, #32
  401e48:	f108 0801 	addeq.w	r8, r8, #1
  401e4c:	f043 0310 	orrne.w	r3, r3, #16
  401e50:	e576      	b.n	401940 <_vfiprintf_r+0xe4>
  401e52:	bf00      	nop
  401e54:	00405e30 	.word	0x00405e30
  401e58:	00405e40 	.word	0x00405e40
  401e5c:	00405e14 	.word	0x00405e14
  401e60:	00405e00 	.word	0x00405e00
  401e64:	9907      	ldr	r1, [sp, #28]
  401e66:	680e      	ldr	r6, [r1, #0]
  401e68:	460a      	mov	r2, r1
  401e6a:	2e00      	cmp	r6, #0
  401e6c:	f102 0204 	add.w	r2, r2, #4
  401e70:	f6ff ae0f 	blt.w	401a92 <_vfiprintf_r+0x236>
  401e74:	9207      	str	r2, [sp, #28]
  401e76:	f898 2000 	ldrb.w	r2, [r8]
  401e7a:	e561      	b.n	401940 <_vfiprintf_r+0xe4>
  401e7c:	f898 2000 	ldrb.w	r2, [r8]
  401e80:	2001      	movs	r0, #1
  401e82:	252b      	movs	r5, #43	; 0x2b
  401e84:	e55c      	b.n	401940 <_vfiprintf_r+0xe4>
  401e86:	9907      	ldr	r1, [sp, #28]
  401e88:	9608      	str	r6, [sp, #32]
  401e8a:	f8d1 b000 	ldr.w	fp, [r1]
  401e8e:	f04f 0200 	mov.w	r2, #0
  401e92:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401e96:	1d0e      	adds	r6, r1, #4
  401e98:	f1bb 0f00 	cmp.w	fp, #0
  401e9c:	f000 82e5 	beq.w	40246a <_vfiprintf_r+0xc0e>
  401ea0:	1c67      	adds	r7, r4, #1
  401ea2:	f000 82c4 	beq.w	40242e <_vfiprintf_r+0xbd2>
  401ea6:	4622      	mov	r2, r4
  401ea8:	2100      	movs	r1, #0
  401eaa:	4658      	mov	r0, fp
  401eac:	9301      	str	r3, [sp, #4]
  401eae:	f002 fa47 	bl	404340 <memchr>
  401eb2:	9b01      	ldr	r3, [sp, #4]
  401eb4:	2800      	cmp	r0, #0
  401eb6:	f000 82e5 	beq.w	402484 <_vfiprintf_r+0xc28>
  401eba:	eba0 020b 	sub.w	r2, r0, fp
  401ebe:	9205      	str	r2, [sp, #20]
  401ec0:	9607      	str	r6, [sp, #28]
  401ec2:	9302      	str	r3, [sp, #8]
  401ec4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401ec8:	2400      	movs	r4, #0
  401eca:	e619      	b.n	401b00 <_vfiprintf_r+0x2a4>
  401ecc:	f898 2000 	ldrb.w	r2, [r8]
  401ed0:	2a2a      	cmp	r2, #42	; 0x2a
  401ed2:	f108 0701 	add.w	r7, r8, #1
  401ed6:	f000 82e9 	beq.w	4024ac <_vfiprintf_r+0xc50>
  401eda:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401ede:	2909      	cmp	r1, #9
  401ee0:	46b8      	mov	r8, r7
  401ee2:	f04f 0400 	mov.w	r4, #0
  401ee6:	f63f ad2d 	bhi.w	401944 <_vfiprintf_r+0xe8>
  401eea:	f818 2b01 	ldrb.w	r2, [r8], #1
  401eee:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401ef2:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  401ef6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401efa:	2909      	cmp	r1, #9
  401efc:	d9f5      	bls.n	401eea <_vfiprintf_r+0x68e>
  401efe:	e521      	b.n	401944 <_vfiprintf_r+0xe8>
  401f00:	f043 0320 	orr.w	r3, r3, #32
  401f04:	f898 2000 	ldrb.w	r2, [r8]
  401f08:	e51a      	b.n	401940 <_vfiprintf_r+0xe4>
  401f0a:	9608      	str	r6, [sp, #32]
  401f0c:	2800      	cmp	r0, #0
  401f0e:	f040 82db 	bne.w	4024c8 <_vfiprintf_r+0xc6c>
  401f12:	2a00      	cmp	r2, #0
  401f14:	f000 80e7 	beq.w	4020e6 <_vfiprintf_r+0x88a>
  401f18:	2101      	movs	r1, #1
  401f1a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401f1e:	f04f 0200 	mov.w	r2, #0
  401f22:	9101      	str	r1, [sp, #4]
  401f24:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401f28:	9105      	str	r1, [sp, #20]
  401f2a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401f2e:	e77b      	b.n	401e28 <_vfiprintf_r+0x5cc>
  401f30:	9a07      	ldr	r2, [sp, #28]
  401f32:	6813      	ldr	r3, [r2, #0]
  401f34:	3204      	adds	r2, #4
  401f36:	9207      	str	r2, [sp, #28]
  401f38:	9a03      	ldr	r2, [sp, #12]
  401f3a:	601a      	str	r2, [r3, #0]
  401f3c:	e4cb      	b.n	4018d6 <_vfiprintf_r+0x7a>
  401f3e:	aa0f      	add	r2, sp, #60	; 0x3c
  401f40:	9904      	ldr	r1, [sp, #16]
  401f42:	4620      	mov	r0, r4
  401f44:	f7ff fc4a 	bl	4017dc <__sprint_r.part.0>
  401f48:	2800      	cmp	r0, #0
  401f4a:	f040 8139 	bne.w	4021c0 <_vfiprintf_r+0x964>
  401f4e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401f50:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401f52:	f101 0c01 	add.w	ip, r1, #1
  401f56:	46ce      	mov	lr, r9
  401f58:	e5ff      	b.n	401b5a <_vfiprintf_r+0x2fe>
  401f5a:	9910      	ldr	r1, [sp, #64]	; 0x40
  401f5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401f5e:	1c48      	adds	r0, r1, #1
  401f60:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401f64:	2d00      	cmp	r5, #0
  401f66:	f43f ae22 	beq.w	401bae <_vfiprintf_r+0x352>
  401f6a:	3201      	adds	r2, #1
  401f6c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  401f70:	2101      	movs	r1, #1
  401f72:	2807      	cmp	r0, #7
  401f74:	9211      	str	r2, [sp, #68]	; 0x44
  401f76:	9010      	str	r0, [sp, #64]	; 0x40
  401f78:	f8ca 5000 	str.w	r5, [sl]
  401f7c:	f8ca 1004 	str.w	r1, [sl, #4]
  401f80:	f340 8108 	ble.w	402194 <_vfiprintf_r+0x938>
  401f84:	2a00      	cmp	r2, #0
  401f86:	f040 81bc 	bne.w	402302 <_vfiprintf_r+0xaa6>
  401f8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f8c:	2b00      	cmp	r3, #0
  401f8e:	f43f ae1f 	beq.w	401bd0 <_vfiprintf_r+0x374>
  401f92:	ab0e      	add	r3, sp, #56	; 0x38
  401f94:	2202      	movs	r2, #2
  401f96:	4608      	mov	r0, r1
  401f98:	931c      	str	r3, [sp, #112]	; 0x70
  401f9a:	921d      	str	r2, [sp, #116]	; 0x74
  401f9c:	46ca      	mov	sl, r9
  401f9e:	4601      	mov	r1, r0
  401fa0:	f10a 0a08 	add.w	sl, sl, #8
  401fa4:	3001      	adds	r0, #1
  401fa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401fa8:	2b80      	cmp	r3, #128	; 0x80
  401faa:	f43f ae19 	beq.w	401be0 <_vfiprintf_r+0x384>
  401fae:	9b05      	ldr	r3, [sp, #20]
  401fb0:	1ae4      	subs	r4, r4, r3
  401fb2:	2c00      	cmp	r4, #0
  401fb4:	dd2e      	ble.n	402014 <_vfiprintf_r+0x7b8>
  401fb6:	2c10      	cmp	r4, #16
  401fb8:	4db3      	ldr	r5, [pc, #716]	; (402288 <_vfiprintf_r+0xa2c>)
  401fba:	dd1e      	ble.n	401ffa <_vfiprintf_r+0x79e>
  401fbc:	46d6      	mov	lr, sl
  401fbe:	2610      	movs	r6, #16
  401fc0:	9f06      	ldr	r7, [sp, #24]
  401fc2:	f8dd a010 	ldr.w	sl, [sp, #16]
  401fc6:	e006      	b.n	401fd6 <_vfiprintf_r+0x77a>
  401fc8:	1c88      	adds	r0, r1, #2
  401fca:	f10e 0e08 	add.w	lr, lr, #8
  401fce:	4619      	mov	r1, r3
  401fd0:	3c10      	subs	r4, #16
  401fd2:	2c10      	cmp	r4, #16
  401fd4:	dd10      	ble.n	401ff8 <_vfiprintf_r+0x79c>
  401fd6:	1c4b      	adds	r3, r1, #1
  401fd8:	3210      	adds	r2, #16
  401fda:	2b07      	cmp	r3, #7
  401fdc:	9211      	str	r2, [sp, #68]	; 0x44
  401fde:	e88e 0060 	stmia.w	lr, {r5, r6}
  401fe2:	9310      	str	r3, [sp, #64]	; 0x40
  401fe4:	ddf0      	ble.n	401fc8 <_vfiprintf_r+0x76c>
  401fe6:	2a00      	cmp	r2, #0
  401fe8:	d165      	bne.n	4020b6 <_vfiprintf_r+0x85a>
  401fea:	3c10      	subs	r4, #16
  401fec:	2c10      	cmp	r4, #16
  401fee:	f04f 0001 	mov.w	r0, #1
  401ff2:	4611      	mov	r1, r2
  401ff4:	46ce      	mov	lr, r9
  401ff6:	dcee      	bgt.n	401fd6 <_vfiprintf_r+0x77a>
  401ff8:	46f2      	mov	sl, lr
  401ffa:	4422      	add	r2, r4
  401ffc:	2807      	cmp	r0, #7
  401ffe:	9211      	str	r2, [sp, #68]	; 0x44
  402000:	f8ca 5000 	str.w	r5, [sl]
  402004:	f8ca 4004 	str.w	r4, [sl, #4]
  402008:	9010      	str	r0, [sp, #64]	; 0x40
  40200a:	f300 8085 	bgt.w	402118 <_vfiprintf_r+0x8bc>
  40200e:	f10a 0a08 	add.w	sl, sl, #8
  402012:	3001      	adds	r0, #1
  402014:	9905      	ldr	r1, [sp, #20]
  402016:	f8ca b000 	str.w	fp, [sl]
  40201a:	440a      	add	r2, r1
  40201c:	2807      	cmp	r0, #7
  40201e:	9211      	str	r2, [sp, #68]	; 0x44
  402020:	f8ca 1004 	str.w	r1, [sl, #4]
  402024:	9010      	str	r0, [sp, #64]	; 0x40
  402026:	f340 8082 	ble.w	40212e <_vfiprintf_r+0x8d2>
  40202a:	2a00      	cmp	r2, #0
  40202c:	f040 8118 	bne.w	402260 <_vfiprintf_r+0xa04>
  402030:	9b02      	ldr	r3, [sp, #8]
  402032:	9210      	str	r2, [sp, #64]	; 0x40
  402034:	0758      	lsls	r0, r3, #29
  402036:	d535      	bpl.n	4020a4 <_vfiprintf_r+0x848>
  402038:	9b08      	ldr	r3, [sp, #32]
  40203a:	9901      	ldr	r1, [sp, #4]
  40203c:	1a5c      	subs	r4, r3, r1
  40203e:	2c00      	cmp	r4, #0
  402040:	f340 80e7 	ble.w	402212 <_vfiprintf_r+0x9b6>
  402044:	46ca      	mov	sl, r9
  402046:	2c10      	cmp	r4, #16
  402048:	f340 8218 	ble.w	40247c <_vfiprintf_r+0xc20>
  40204c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40204e:	4e8f      	ldr	r6, [pc, #572]	; (40228c <_vfiprintf_r+0xa30>)
  402050:	9f06      	ldr	r7, [sp, #24]
  402052:	f8dd b010 	ldr.w	fp, [sp, #16]
  402056:	2510      	movs	r5, #16
  402058:	e006      	b.n	402068 <_vfiprintf_r+0x80c>
  40205a:	1c88      	adds	r0, r1, #2
  40205c:	f10a 0a08 	add.w	sl, sl, #8
  402060:	4619      	mov	r1, r3
  402062:	3c10      	subs	r4, #16
  402064:	2c10      	cmp	r4, #16
  402066:	dd11      	ble.n	40208c <_vfiprintf_r+0x830>
  402068:	1c4b      	adds	r3, r1, #1
  40206a:	3210      	adds	r2, #16
  40206c:	2b07      	cmp	r3, #7
  40206e:	9211      	str	r2, [sp, #68]	; 0x44
  402070:	f8ca 6000 	str.w	r6, [sl]
  402074:	f8ca 5004 	str.w	r5, [sl, #4]
  402078:	9310      	str	r3, [sp, #64]	; 0x40
  40207a:	ddee      	ble.n	40205a <_vfiprintf_r+0x7fe>
  40207c:	bb42      	cbnz	r2, 4020d0 <_vfiprintf_r+0x874>
  40207e:	3c10      	subs	r4, #16
  402080:	2c10      	cmp	r4, #16
  402082:	f04f 0001 	mov.w	r0, #1
  402086:	4611      	mov	r1, r2
  402088:	46ca      	mov	sl, r9
  40208a:	dced      	bgt.n	402068 <_vfiprintf_r+0x80c>
  40208c:	4422      	add	r2, r4
  40208e:	2807      	cmp	r0, #7
  402090:	9211      	str	r2, [sp, #68]	; 0x44
  402092:	f8ca 6000 	str.w	r6, [sl]
  402096:	f8ca 4004 	str.w	r4, [sl, #4]
  40209a:	9010      	str	r0, [sp, #64]	; 0x40
  40209c:	dd51      	ble.n	402142 <_vfiprintf_r+0x8e6>
  40209e:	2a00      	cmp	r2, #0
  4020a0:	f040 819b 	bne.w	4023da <_vfiprintf_r+0xb7e>
  4020a4:	9b03      	ldr	r3, [sp, #12]
  4020a6:	9a08      	ldr	r2, [sp, #32]
  4020a8:	9901      	ldr	r1, [sp, #4]
  4020aa:	428a      	cmp	r2, r1
  4020ac:	bfac      	ite	ge
  4020ae:	189b      	addge	r3, r3, r2
  4020b0:	185b      	addlt	r3, r3, r1
  4020b2:	9303      	str	r3, [sp, #12]
  4020b4:	e04e      	b.n	402154 <_vfiprintf_r+0x8f8>
  4020b6:	aa0f      	add	r2, sp, #60	; 0x3c
  4020b8:	4651      	mov	r1, sl
  4020ba:	4638      	mov	r0, r7
  4020bc:	f7ff fb8e 	bl	4017dc <__sprint_r.part.0>
  4020c0:	2800      	cmp	r0, #0
  4020c2:	f040 813f 	bne.w	402344 <_vfiprintf_r+0xae8>
  4020c6:	9910      	ldr	r1, [sp, #64]	; 0x40
  4020c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4020ca:	1c48      	adds	r0, r1, #1
  4020cc:	46ce      	mov	lr, r9
  4020ce:	e77f      	b.n	401fd0 <_vfiprintf_r+0x774>
  4020d0:	aa0f      	add	r2, sp, #60	; 0x3c
  4020d2:	4659      	mov	r1, fp
  4020d4:	4638      	mov	r0, r7
  4020d6:	f7ff fb81 	bl	4017dc <__sprint_r.part.0>
  4020da:	b960      	cbnz	r0, 4020f6 <_vfiprintf_r+0x89a>
  4020dc:	9910      	ldr	r1, [sp, #64]	; 0x40
  4020de:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4020e0:	1c48      	adds	r0, r1, #1
  4020e2:	46ca      	mov	sl, r9
  4020e4:	e7bd      	b.n	402062 <_vfiprintf_r+0x806>
  4020e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4020e8:	f8dd b010 	ldr.w	fp, [sp, #16]
  4020ec:	2b00      	cmp	r3, #0
  4020ee:	f040 81d4 	bne.w	40249a <_vfiprintf_r+0xc3e>
  4020f2:	2300      	movs	r3, #0
  4020f4:	9310      	str	r3, [sp, #64]	; 0x40
  4020f6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4020fa:	f013 0f01 	tst.w	r3, #1
  4020fe:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402102:	d102      	bne.n	40210a <_vfiprintf_r+0x8ae>
  402104:	059a      	lsls	r2, r3, #22
  402106:	f140 80de 	bpl.w	4022c6 <_vfiprintf_r+0xa6a>
  40210a:	065b      	lsls	r3, r3, #25
  40210c:	f53f acb2 	bmi.w	401a74 <_vfiprintf_r+0x218>
  402110:	9803      	ldr	r0, [sp, #12]
  402112:	b02d      	add	sp, #180	; 0xb4
  402114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402118:	2a00      	cmp	r2, #0
  40211a:	f040 8106 	bne.w	40232a <_vfiprintf_r+0xace>
  40211e:	9a05      	ldr	r2, [sp, #20]
  402120:	921d      	str	r2, [sp, #116]	; 0x74
  402122:	2301      	movs	r3, #1
  402124:	9211      	str	r2, [sp, #68]	; 0x44
  402126:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  40212a:	9310      	str	r3, [sp, #64]	; 0x40
  40212c:	46ca      	mov	sl, r9
  40212e:	f10a 0a08 	add.w	sl, sl, #8
  402132:	9b02      	ldr	r3, [sp, #8]
  402134:	0759      	lsls	r1, r3, #29
  402136:	d504      	bpl.n	402142 <_vfiprintf_r+0x8e6>
  402138:	9b08      	ldr	r3, [sp, #32]
  40213a:	9901      	ldr	r1, [sp, #4]
  40213c:	1a5c      	subs	r4, r3, r1
  40213e:	2c00      	cmp	r4, #0
  402140:	dc81      	bgt.n	402046 <_vfiprintf_r+0x7ea>
  402142:	9b03      	ldr	r3, [sp, #12]
  402144:	9908      	ldr	r1, [sp, #32]
  402146:	9801      	ldr	r0, [sp, #4]
  402148:	4281      	cmp	r1, r0
  40214a:	bfac      	ite	ge
  40214c:	185b      	addge	r3, r3, r1
  40214e:	181b      	addlt	r3, r3, r0
  402150:	9303      	str	r3, [sp, #12]
  402152:	bb72      	cbnz	r2, 4021b2 <_vfiprintf_r+0x956>
  402154:	2300      	movs	r3, #0
  402156:	9310      	str	r3, [sp, #64]	; 0x40
  402158:	46ca      	mov	sl, r9
  40215a:	f7ff bbbc 	b.w	4018d6 <_vfiprintf_r+0x7a>
  40215e:	aa0f      	add	r2, sp, #60	; 0x3c
  402160:	9904      	ldr	r1, [sp, #16]
  402162:	4620      	mov	r0, r4
  402164:	f7ff fb3a 	bl	4017dc <__sprint_r.part.0>
  402168:	bb50      	cbnz	r0, 4021c0 <_vfiprintf_r+0x964>
  40216a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40216c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40216e:	f101 0e01 	add.w	lr, r1, #1
  402172:	46cc      	mov	ip, r9
  402174:	e548      	b.n	401c08 <_vfiprintf_r+0x3ac>
  402176:	2a00      	cmp	r2, #0
  402178:	f040 8140 	bne.w	4023fc <_vfiprintf_r+0xba0>
  40217c:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  402180:	2900      	cmp	r1, #0
  402182:	f000 811b 	beq.w	4023bc <_vfiprintf_r+0xb60>
  402186:	2201      	movs	r2, #1
  402188:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  40218c:	4610      	mov	r0, r2
  40218e:	921d      	str	r2, [sp, #116]	; 0x74
  402190:	911c      	str	r1, [sp, #112]	; 0x70
  402192:	46ca      	mov	sl, r9
  402194:	4601      	mov	r1, r0
  402196:	f10a 0a08 	add.w	sl, sl, #8
  40219a:	3001      	adds	r0, #1
  40219c:	e507      	b.n	401bae <_vfiprintf_r+0x352>
  40219e:	9b02      	ldr	r3, [sp, #8]
  4021a0:	2a01      	cmp	r2, #1
  4021a2:	f000 8098 	beq.w	4022d6 <_vfiprintf_r+0xa7a>
  4021a6:	2a02      	cmp	r2, #2
  4021a8:	d10d      	bne.n	4021c6 <_vfiprintf_r+0x96a>
  4021aa:	9302      	str	r3, [sp, #8]
  4021ac:	2600      	movs	r6, #0
  4021ae:	2700      	movs	r7, #0
  4021b0:	e5b0      	b.n	401d14 <_vfiprintf_r+0x4b8>
  4021b2:	aa0f      	add	r2, sp, #60	; 0x3c
  4021b4:	9904      	ldr	r1, [sp, #16]
  4021b6:	9806      	ldr	r0, [sp, #24]
  4021b8:	f7ff fb10 	bl	4017dc <__sprint_r.part.0>
  4021bc:	2800      	cmp	r0, #0
  4021be:	d0c9      	beq.n	402154 <_vfiprintf_r+0x8f8>
  4021c0:	f8dd b010 	ldr.w	fp, [sp, #16]
  4021c4:	e797      	b.n	4020f6 <_vfiprintf_r+0x89a>
  4021c6:	9302      	str	r3, [sp, #8]
  4021c8:	2600      	movs	r6, #0
  4021ca:	2700      	movs	r7, #0
  4021cc:	4649      	mov	r1, r9
  4021ce:	e000      	b.n	4021d2 <_vfiprintf_r+0x976>
  4021d0:	4659      	mov	r1, fp
  4021d2:	08f2      	lsrs	r2, r6, #3
  4021d4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  4021d8:	08f8      	lsrs	r0, r7, #3
  4021da:	f006 0307 	and.w	r3, r6, #7
  4021de:	4607      	mov	r7, r0
  4021e0:	4616      	mov	r6, r2
  4021e2:	3330      	adds	r3, #48	; 0x30
  4021e4:	ea56 0207 	orrs.w	r2, r6, r7
  4021e8:	f801 3c01 	strb.w	r3, [r1, #-1]
  4021ec:	f101 3bff 	add.w	fp, r1, #4294967295
  4021f0:	d1ee      	bne.n	4021d0 <_vfiprintf_r+0x974>
  4021f2:	9a02      	ldr	r2, [sp, #8]
  4021f4:	07d6      	lsls	r6, r2, #31
  4021f6:	f57f ad9d 	bpl.w	401d34 <_vfiprintf_r+0x4d8>
  4021fa:	2b30      	cmp	r3, #48	; 0x30
  4021fc:	f43f ad9a 	beq.w	401d34 <_vfiprintf_r+0x4d8>
  402200:	3902      	subs	r1, #2
  402202:	2330      	movs	r3, #48	; 0x30
  402204:	f80b 3c01 	strb.w	r3, [fp, #-1]
  402208:	eba9 0301 	sub.w	r3, r9, r1
  40220c:	9305      	str	r3, [sp, #20]
  40220e:	468b      	mov	fp, r1
  402210:	e476      	b.n	401b00 <_vfiprintf_r+0x2a4>
  402212:	9b03      	ldr	r3, [sp, #12]
  402214:	9a08      	ldr	r2, [sp, #32]
  402216:	428a      	cmp	r2, r1
  402218:	bfac      	ite	ge
  40221a:	189b      	addge	r3, r3, r2
  40221c:	185b      	addlt	r3, r3, r1
  40221e:	9303      	str	r3, [sp, #12]
  402220:	e798      	b.n	402154 <_vfiprintf_r+0x8f8>
  402222:	2202      	movs	r2, #2
  402224:	e44d      	b.n	401ac2 <_vfiprintf_r+0x266>
  402226:	2f00      	cmp	r7, #0
  402228:	bf08      	it	eq
  40222a:	2e0a      	cmpeq	r6, #10
  40222c:	d352      	bcc.n	4022d4 <_vfiprintf_r+0xa78>
  40222e:	46cb      	mov	fp, r9
  402230:	4630      	mov	r0, r6
  402232:	4639      	mov	r1, r7
  402234:	220a      	movs	r2, #10
  402236:	2300      	movs	r3, #0
  402238:	f003 fa78 	bl	40572c <__aeabi_uldivmod>
  40223c:	3230      	adds	r2, #48	; 0x30
  40223e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  402242:	4630      	mov	r0, r6
  402244:	4639      	mov	r1, r7
  402246:	2300      	movs	r3, #0
  402248:	220a      	movs	r2, #10
  40224a:	f003 fa6f 	bl	40572c <__aeabi_uldivmod>
  40224e:	4606      	mov	r6, r0
  402250:	460f      	mov	r7, r1
  402252:	ea56 0307 	orrs.w	r3, r6, r7
  402256:	d1eb      	bne.n	402230 <_vfiprintf_r+0x9d4>
  402258:	e56c      	b.n	401d34 <_vfiprintf_r+0x4d8>
  40225a:	9405      	str	r4, [sp, #20]
  40225c:	46cb      	mov	fp, r9
  40225e:	e44f      	b.n	401b00 <_vfiprintf_r+0x2a4>
  402260:	aa0f      	add	r2, sp, #60	; 0x3c
  402262:	9904      	ldr	r1, [sp, #16]
  402264:	9806      	ldr	r0, [sp, #24]
  402266:	f7ff fab9 	bl	4017dc <__sprint_r.part.0>
  40226a:	2800      	cmp	r0, #0
  40226c:	d1a8      	bne.n	4021c0 <_vfiprintf_r+0x964>
  40226e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402270:	46ca      	mov	sl, r9
  402272:	e75e      	b.n	402132 <_vfiprintf_r+0x8d6>
  402274:	aa0f      	add	r2, sp, #60	; 0x3c
  402276:	9904      	ldr	r1, [sp, #16]
  402278:	9806      	ldr	r0, [sp, #24]
  40227a:	f7ff faaf 	bl	4017dc <__sprint_r.part.0>
  40227e:	2800      	cmp	r0, #0
  402280:	d19e      	bne.n	4021c0 <_vfiprintf_r+0x964>
  402282:	46ca      	mov	sl, r9
  402284:	f7ff bbc0 	b.w	401a08 <_vfiprintf_r+0x1ac>
  402288:	00405e40 	.word	0x00405e40
  40228c:	00405e30 	.word	0x00405e30
  402290:	3104      	adds	r1, #4
  402292:	6816      	ldr	r6, [r2, #0]
  402294:	9107      	str	r1, [sp, #28]
  402296:	2201      	movs	r2, #1
  402298:	2700      	movs	r7, #0
  40229a:	e412      	b.n	401ac2 <_vfiprintf_r+0x266>
  40229c:	9807      	ldr	r0, [sp, #28]
  40229e:	4601      	mov	r1, r0
  4022a0:	3104      	adds	r1, #4
  4022a2:	6806      	ldr	r6, [r0, #0]
  4022a4:	9107      	str	r1, [sp, #28]
  4022a6:	2700      	movs	r7, #0
  4022a8:	e40b      	b.n	401ac2 <_vfiprintf_r+0x266>
  4022aa:	680e      	ldr	r6, [r1, #0]
  4022ac:	3104      	adds	r1, #4
  4022ae:	9107      	str	r1, [sp, #28]
  4022b0:	2700      	movs	r7, #0
  4022b2:	e591      	b.n	401dd8 <_vfiprintf_r+0x57c>
  4022b4:	9907      	ldr	r1, [sp, #28]
  4022b6:	680e      	ldr	r6, [r1, #0]
  4022b8:	460a      	mov	r2, r1
  4022ba:	17f7      	asrs	r7, r6, #31
  4022bc:	3204      	adds	r2, #4
  4022be:	9207      	str	r2, [sp, #28]
  4022c0:	4630      	mov	r0, r6
  4022c2:	4639      	mov	r1, r7
  4022c4:	e50f      	b.n	401ce6 <_vfiprintf_r+0x48a>
  4022c6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4022ca:	f001 fcc3 	bl	403c54 <__retarget_lock_release_recursive>
  4022ce:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4022d2:	e71a      	b.n	40210a <_vfiprintf_r+0x8ae>
  4022d4:	9b02      	ldr	r3, [sp, #8]
  4022d6:	9302      	str	r3, [sp, #8]
  4022d8:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4022dc:	3630      	adds	r6, #48	; 0x30
  4022de:	2301      	movs	r3, #1
  4022e0:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  4022e4:	9305      	str	r3, [sp, #20]
  4022e6:	e40b      	b.n	401b00 <_vfiprintf_r+0x2a4>
  4022e8:	aa0f      	add	r2, sp, #60	; 0x3c
  4022ea:	9904      	ldr	r1, [sp, #16]
  4022ec:	9806      	ldr	r0, [sp, #24]
  4022ee:	f7ff fa75 	bl	4017dc <__sprint_r.part.0>
  4022f2:	2800      	cmp	r0, #0
  4022f4:	f47f af64 	bne.w	4021c0 <_vfiprintf_r+0x964>
  4022f8:	9910      	ldr	r1, [sp, #64]	; 0x40
  4022fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4022fc:	1c48      	adds	r0, r1, #1
  4022fe:	46ca      	mov	sl, r9
  402300:	e651      	b.n	401fa6 <_vfiprintf_r+0x74a>
  402302:	aa0f      	add	r2, sp, #60	; 0x3c
  402304:	9904      	ldr	r1, [sp, #16]
  402306:	9806      	ldr	r0, [sp, #24]
  402308:	f7ff fa68 	bl	4017dc <__sprint_r.part.0>
  40230c:	2800      	cmp	r0, #0
  40230e:	f47f af57 	bne.w	4021c0 <_vfiprintf_r+0x964>
  402312:	9910      	ldr	r1, [sp, #64]	; 0x40
  402314:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402316:	1c48      	adds	r0, r1, #1
  402318:	46ca      	mov	sl, r9
  40231a:	e448      	b.n	401bae <_vfiprintf_r+0x352>
  40231c:	2a00      	cmp	r2, #0
  40231e:	f040 8091 	bne.w	402444 <_vfiprintf_r+0xbe8>
  402322:	2001      	movs	r0, #1
  402324:	4611      	mov	r1, r2
  402326:	46ca      	mov	sl, r9
  402328:	e641      	b.n	401fae <_vfiprintf_r+0x752>
  40232a:	aa0f      	add	r2, sp, #60	; 0x3c
  40232c:	9904      	ldr	r1, [sp, #16]
  40232e:	9806      	ldr	r0, [sp, #24]
  402330:	f7ff fa54 	bl	4017dc <__sprint_r.part.0>
  402334:	2800      	cmp	r0, #0
  402336:	f47f af43 	bne.w	4021c0 <_vfiprintf_r+0x964>
  40233a:	9810      	ldr	r0, [sp, #64]	; 0x40
  40233c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40233e:	3001      	adds	r0, #1
  402340:	46ca      	mov	sl, r9
  402342:	e667      	b.n	402014 <_vfiprintf_r+0x7b8>
  402344:	46d3      	mov	fp, sl
  402346:	e6d6      	b.n	4020f6 <_vfiprintf_r+0x89a>
  402348:	9e07      	ldr	r6, [sp, #28]
  40234a:	3607      	adds	r6, #7
  40234c:	f026 0207 	bic.w	r2, r6, #7
  402350:	f102 0108 	add.w	r1, r2, #8
  402354:	e9d2 6700 	ldrd	r6, r7, [r2]
  402358:	9107      	str	r1, [sp, #28]
  40235a:	2201      	movs	r2, #1
  40235c:	f7ff bbb1 	b.w	401ac2 <_vfiprintf_r+0x266>
  402360:	9e07      	ldr	r6, [sp, #28]
  402362:	3607      	adds	r6, #7
  402364:	f026 0607 	bic.w	r6, r6, #7
  402368:	e9d6 0100 	ldrd	r0, r1, [r6]
  40236c:	f106 0208 	add.w	r2, r6, #8
  402370:	9207      	str	r2, [sp, #28]
  402372:	4606      	mov	r6, r0
  402374:	460f      	mov	r7, r1
  402376:	e4b6      	b.n	401ce6 <_vfiprintf_r+0x48a>
  402378:	9e07      	ldr	r6, [sp, #28]
  40237a:	3607      	adds	r6, #7
  40237c:	f026 0207 	bic.w	r2, r6, #7
  402380:	f102 0108 	add.w	r1, r2, #8
  402384:	e9d2 6700 	ldrd	r6, r7, [r2]
  402388:	9107      	str	r1, [sp, #28]
  40238a:	2200      	movs	r2, #0
  40238c:	f7ff bb99 	b.w	401ac2 <_vfiprintf_r+0x266>
  402390:	9e07      	ldr	r6, [sp, #28]
  402392:	3607      	adds	r6, #7
  402394:	f026 0107 	bic.w	r1, r6, #7
  402398:	f101 0008 	add.w	r0, r1, #8
  40239c:	9007      	str	r0, [sp, #28]
  40239e:	e9d1 6700 	ldrd	r6, r7, [r1]
  4023a2:	e519      	b.n	401dd8 <_vfiprintf_r+0x57c>
  4023a4:	46cb      	mov	fp, r9
  4023a6:	f7ff bbab 	b.w	401b00 <_vfiprintf_r+0x2a4>
  4023aa:	252d      	movs	r5, #45	; 0x2d
  4023ac:	4276      	negs	r6, r6
  4023ae:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  4023b2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4023b6:	2201      	movs	r2, #1
  4023b8:	f7ff bb88 	b.w	401acc <_vfiprintf_r+0x270>
  4023bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4023be:	b9b3      	cbnz	r3, 4023ee <_vfiprintf_r+0xb92>
  4023c0:	4611      	mov	r1, r2
  4023c2:	2001      	movs	r0, #1
  4023c4:	46ca      	mov	sl, r9
  4023c6:	e5f2      	b.n	401fae <_vfiprintf_r+0x752>
  4023c8:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4023cc:	f001 fc42 	bl	403c54 <__retarget_lock_release_recursive>
  4023d0:	f04f 33ff 	mov.w	r3, #4294967295
  4023d4:	9303      	str	r3, [sp, #12]
  4023d6:	f7ff bb50 	b.w	401a7a <_vfiprintf_r+0x21e>
  4023da:	aa0f      	add	r2, sp, #60	; 0x3c
  4023dc:	9904      	ldr	r1, [sp, #16]
  4023de:	9806      	ldr	r0, [sp, #24]
  4023e0:	f7ff f9fc 	bl	4017dc <__sprint_r.part.0>
  4023e4:	2800      	cmp	r0, #0
  4023e6:	f47f aeeb 	bne.w	4021c0 <_vfiprintf_r+0x964>
  4023ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4023ec:	e6a9      	b.n	402142 <_vfiprintf_r+0x8e6>
  4023ee:	ab0e      	add	r3, sp, #56	; 0x38
  4023f0:	2202      	movs	r2, #2
  4023f2:	931c      	str	r3, [sp, #112]	; 0x70
  4023f4:	921d      	str	r2, [sp, #116]	; 0x74
  4023f6:	2001      	movs	r0, #1
  4023f8:	46ca      	mov	sl, r9
  4023fa:	e5d0      	b.n	401f9e <_vfiprintf_r+0x742>
  4023fc:	aa0f      	add	r2, sp, #60	; 0x3c
  4023fe:	9904      	ldr	r1, [sp, #16]
  402400:	9806      	ldr	r0, [sp, #24]
  402402:	f7ff f9eb 	bl	4017dc <__sprint_r.part.0>
  402406:	2800      	cmp	r0, #0
  402408:	f47f aeda 	bne.w	4021c0 <_vfiprintf_r+0x964>
  40240c:	9910      	ldr	r1, [sp, #64]	; 0x40
  40240e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402410:	1c48      	adds	r0, r1, #1
  402412:	46ca      	mov	sl, r9
  402414:	e5a4      	b.n	401f60 <_vfiprintf_r+0x704>
  402416:	9a07      	ldr	r2, [sp, #28]
  402418:	9903      	ldr	r1, [sp, #12]
  40241a:	6813      	ldr	r3, [r2, #0]
  40241c:	17cd      	asrs	r5, r1, #31
  40241e:	4608      	mov	r0, r1
  402420:	3204      	adds	r2, #4
  402422:	4629      	mov	r1, r5
  402424:	9207      	str	r2, [sp, #28]
  402426:	e9c3 0100 	strd	r0, r1, [r3]
  40242a:	f7ff ba54 	b.w	4018d6 <_vfiprintf_r+0x7a>
  40242e:	4658      	mov	r0, fp
  402430:	9607      	str	r6, [sp, #28]
  402432:	9302      	str	r3, [sp, #8]
  402434:	f7ff f964 	bl	401700 <strlen>
  402438:	2400      	movs	r4, #0
  40243a:	9005      	str	r0, [sp, #20]
  40243c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402440:	f7ff bb5e 	b.w	401b00 <_vfiprintf_r+0x2a4>
  402444:	aa0f      	add	r2, sp, #60	; 0x3c
  402446:	9904      	ldr	r1, [sp, #16]
  402448:	9806      	ldr	r0, [sp, #24]
  40244a:	f7ff f9c7 	bl	4017dc <__sprint_r.part.0>
  40244e:	2800      	cmp	r0, #0
  402450:	f47f aeb6 	bne.w	4021c0 <_vfiprintf_r+0x964>
  402454:	9910      	ldr	r1, [sp, #64]	; 0x40
  402456:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402458:	1c48      	adds	r0, r1, #1
  40245a:	46ca      	mov	sl, r9
  40245c:	e5a7      	b.n	401fae <_vfiprintf_r+0x752>
  40245e:	9910      	ldr	r1, [sp, #64]	; 0x40
  402460:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402462:	4e20      	ldr	r6, [pc, #128]	; (4024e4 <_vfiprintf_r+0xc88>)
  402464:	3101      	adds	r1, #1
  402466:	f7ff bb90 	b.w	401b8a <_vfiprintf_r+0x32e>
  40246a:	2c06      	cmp	r4, #6
  40246c:	bf28      	it	cs
  40246e:	2406      	movcs	r4, #6
  402470:	9405      	str	r4, [sp, #20]
  402472:	9607      	str	r6, [sp, #28]
  402474:	9401      	str	r4, [sp, #4]
  402476:	f8df b070 	ldr.w	fp, [pc, #112]	; 4024e8 <_vfiprintf_r+0xc8c>
  40247a:	e4d5      	b.n	401e28 <_vfiprintf_r+0x5cc>
  40247c:	9810      	ldr	r0, [sp, #64]	; 0x40
  40247e:	4e19      	ldr	r6, [pc, #100]	; (4024e4 <_vfiprintf_r+0xc88>)
  402480:	3001      	adds	r0, #1
  402482:	e603      	b.n	40208c <_vfiprintf_r+0x830>
  402484:	9405      	str	r4, [sp, #20]
  402486:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40248a:	9607      	str	r6, [sp, #28]
  40248c:	9302      	str	r3, [sp, #8]
  40248e:	4604      	mov	r4, r0
  402490:	f7ff bb36 	b.w	401b00 <_vfiprintf_r+0x2a4>
  402494:	4686      	mov	lr, r0
  402496:	f7ff bbce 	b.w	401c36 <_vfiprintf_r+0x3da>
  40249a:	9806      	ldr	r0, [sp, #24]
  40249c:	aa0f      	add	r2, sp, #60	; 0x3c
  40249e:	4659      	mov	r1, fp
  4024a0:	f7ff f99c 	bl	4017dc <__sprint_r.part.0>
  4024a4:	2800      	cmp	r0, #0
  4024a6:	f43f ae24 	beq.w	4020f2 <_vfiprintf_r+0x896>
  4024aa:	e624      	b.n	4020f6 <_vfiprintf_r+0x89a>
  4024ac:	9907      	ldr	r1, [sp, #28]
  4024ae:	f898 2001 	ldrb.w	r2, [r8, #1]
  4024b2:	680c      	ldr	r4, [r1, #0]
  4024b4:	3104      	adds	r1, #4
  4024b6:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  4024ba:	46b8      	mov	r8, r7
  4024bc:	9107      	str	r1, [sp, #28]
  4024be:	f7ff ba3f 	b.w	401940 <_vfiprintf_r+0xe4>
  4024c2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024c6:	e43c      	b.n	401d42 <_vfiprintf_r+0x4e6>
  4024c8:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024cc:	e521      	b.n	401f12 <_vfiprintf_r+0x6b6>
  4024ce:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024d2:	f7ff bbf4 	b.w	401cbe <_vfiprintf_r+0x462>
  4024d6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024da:	e491      	b.n	401e00 <_vfiprintf_r+0x5a4>
  4024dc:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4024e0:	e469      	b.n	401db6 <_vfiprintf_r+0x55a>
  4024e2:	bf00      	nop
  4024e4:	00405e30 	.word	0x00405e30
  4024e8:	00405e28 	.word	0x00405e28

004024ec <__sbprintf>:
  4024ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4024f0:	460c      	mov	r4, r1
  4024f2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4024f6:	8989      	ldrh	r1, [r1, #12]
  4024f8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4024fa:	89e5      	ldrh	r5, [r4, #14]
  4024fc:	9619      	str	r6, [sp, #100]	; 0x64
  4024fe:	f021 0102 	bic.w	r1, r1, #2
  402502:	4606      	mov	r6, r0
  402504:	69e0      	ldr	r0, [r4, #28]
  402506:	f8ad 100c 	strh.w	r1, [sp, #12]
  40250a:	4617      	mov	r7, r2
  40250c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  402510:	6a62      	ldr	r2, [r4, #36]	; 0x24
  402512:	f8ad 500e 	strh.w	r5, [sp, #14]
  402516:	4698      	mov	r8, r3
  402518:	ad1a      	add	r5, sp, #104	; 0x68
  40251a:	2300      	movs	r3, #0
  40251c:	9007      	str	r0, [sp, #28]
  40251e:	a816      	add	r0, sp, #88	; 0x58
  402520:	9209      	str	r2, [sp, #36]	; 0x24
  402522:	9306      	str	r3, [sp, #24]
  402524:	9500      	str	r5, [sp, #0]
  402526:	9504      	str	r5, [sp, #16]
  402528:	9102      	str	r1, [sp, #8]
  40252a:	9105      	str	r1, [sp, #20]
  40252c:	f001 fb8c 	bl	403c48 <__retarget_lock_init_recursive>
  402530:	4643      	mov	r3, r8
  402532:	463a      	mov	r2, r7
  402534:	4669      	mov	r1, sp
  402536:	4630      	mov	r0, r6
  402538:	f7ff f990 	bl	40185c <_vfiprintf_r>
  40253c:	1e05      	subs	r5, r0, #0
  40253e:	db07      	blt.n	402550 <__sbprintf+0x64>
  402540:	4630      	mov	r0, r6
  402542:	4669      	mov	r1, sp
  402544:	f000 fe32 	bl	4031ac <_fflush_r>
  402548:	2800      	cmp	r0, #0
  40254a:	bf18      	it	ne
  40254c:	f04f 35ff 	movne.w	r5, #4294967295
  402550:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402554:	065b      	lsls	r3, r3, #25
  402556:	d503      	bpl.n	402560 <__sbprintf+0x74>
  402558:	89a3      	ldrh	r3, [r4, #12]
  40255a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40255e:	81a3      	strh	r3, [r4, #12]
  402560:	9816      	ldr	r0, [sp, #88]	; 0x58
  402562:	f001 fb73 	bl	403c4c <__retarget_lock_close_recursive>
  402566:	4628      	mov	r0, r5
  402568:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40256c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00402570 <__svfiscanf_r>:
  402570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402574:	468b      	mov	fp, r1
  402576:	b0d9      	sub	sp, #356	; 0x164
  402578:	6e49      	ldr	r1, [r1, #100]	; 0x64
  40257a:	9306      	str	r3, [sp, #24]
  40257c:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  402580:	f011 0f01 	tst.w	r1, #1
  402584:	4607      	mov	r7, r0
  402586:	b299      	uxth	r1, r3
  402588:	d102      	bne.n	402590 <__svfiscanf_r+0x20>
  40258a:	058c      	lsls	r4, r1, #22
  40258c:	f140 83e5 	bpl.w	402d5a <__svfiscanf_r+0x7ea>
  402590:	0488      	lsls	r0, r1, #18
  402592:	d409      	bmi.n	4025a8 <__svfiscanf_r+0x38>
  402594:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  402598:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40259c:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4025a0:	f8ab 300c 	strh.w	r3, [fp, #12]
  4025a4:	f8cb 1064 	str.w	r1, [fp, #100]	; 0x64
  4025a8:	4614      	mov	r4, r2
  4025aa:	4626      	mov	r6, r4
  4025ac:	2300      	movs	r3, #0
  4025ae:	9307      	str	r3, [sp, #28]
  4025b0:	9304      	str	r3, [sp, #16]
  4025b2:	469a      	mov	sl, r3
  4025b4:	9305      	str	r3, [sp, #20]
  4025b6:	f816 3b01 	ldrb.w	r3, [r6], #1
  4025ba:	930b      	str	r3, [sp, #44]	; 0x2c
  4025bc:	b363      	cbz	r3, 402618 <__svfiscanf_r+0xa8>
  4025be:	f001 fb35 	bl	403c2c <__locale_ctype_ptr>
  4025c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4025c4:	4418      	add	r0, r3
  4025c6:	7845      	ldrb	r5, [r0, #1]
  4025c8:	f015 0508 	ands.w	r5, r5, #8
  4025cc:	d033      	beq.n	402636 <__svfiscanf_r+0xc6>
  4025ce:	f8db 2004 	ldr.w	r2, [fp, #4]
  4025d2:	e012      	b.n	4025fa <__svfiscanf_r+0x8a>
  4025d4:	f001 fb2a 	bl	403c2c <__locale_ctype_ptr>
  4025d8:	f8db 3000 	ldr.w	r3, [fp]
  4025dc:	781a      	ldrb	r2, [r3, #0]
  4025de:	4410      	add	r0, r2
  4025e0:	3301      	adds	r3, #1
  4025e2:	7842      	ldrb	r2, [r0, #1]
  4025e4:	0711      	lsls	r1, r2, #28
  4025e6:	d510      	bpl.n	40260a <__svfiscanf_r+0x9a>
  4025e8:	f8db 2004 	ldr.w	r2, [fp, #4]
  4025ec:	f8cb 3000 	str.w	r3, [fp]
  4025f0:	3a01      	subs	r2, #1
  4025f2:	f10a 0a01 	add.w	sl, sl, #1
  4025f6:	f8cb 2004 	str.w	r2, [fp, #4]
  4025fa:	2a00      	cmp	r2, #0
  4025fc:	dcea      	bgt.n	4025d4 <__svfiscanf_r+0x64>
  4025fe:	4659      	mov	r1, fp
  402600:	4638      	mov	r0, r7
  402602:	f002 f9a7 	bl	404954 <__srefill_r>
  402606:	2800      	cmp	r0, #0
  402608:	d0e4      	beq.n	4025d4 <__svfiscanf_r+0x64>
  40260a:	4634      	mov	r4, r6
  40260c:	4626      	mov	r6, r4
  40260e:	f816 3b01 	ldrb.w	r3, [r6], #1
  402612:	930b      	str	r3, [sp, #44]	; 0x2c
  402614:	2b00      	cmp	r3, #0
  402616:	d1d2      	bne.n	4025be <__svfiscanf_r+0x4e>
  402618:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40261c:	07da      	lsls	r2, r3, #31
  40261e:	f100 81a7 	bmi.w	402970 <__svfiscanf_r+0x400>
  402622:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402626:	059b      	lsls	r3, r3, #22
  402628:	f100 81a2 	bmi.w	402970 <__svfiscanf_r+0x400>
  40262c:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  402630:	f001 fb10 	bl	403c54 <__retarget_lock_release_recursive>
  402634:	e19c      	b.n	402970 <__svfiscanf_r+0x400>
  402636:	2b25      	cmp	r3, #37	; 0x25
  402638:	f040 8084 	bne.w	402744 <__svfiscanf_r+0x1d4>
  40263c:	f894 8001 	ldrb.w	r8, [r4, #1]
  402640:	462c      	mov	r4, r5
  402642:	1c73      	adds	r3, r6, #1
  402644:	f1b8 0f78 	cmp.w	r8, #120	; 0x78
  402648:	f200 8196 	bhi.w	402978 <__svfiscanf_r+0x408>
  40264c:	e8df f018 	tbh	[pc, r8, lsl #1]
  402650:	01940184 	.word	0x01940184
  402654:	01940194 	.word	0x01940194
  402658:	01940194 	.word	0x01940194
  40265c:	01940194 	.word	0x01940194
  402660:	01940194 	.word	0x01940194
  402664:	01940194 	.word	0x01940194
  402668:	01940194 	.word	0x01940194
  40266c:	01940194 	.word	0x01940194
  402670:	01940194 	.word	0x01940194
  402674:	01940194 	.word	0x01940194
  402678:	01940194 	.word	0x01940194
  40267c:	01940194 	.word	0x01940194
  402680:	01940194 	.word	0x01940194
  402684:	01940194 	.word	0x01940194
  402688:	01940194 	.word	0x01940194
  40268c:	01940194 	.word	0x01940194
  402690:	01940194 	.word	0x01940194
  402694:	01940194 	.word	0x01940194
  402698:	00790194 	.word	0x00790194
  40269c:	01940194 	.word	0x01940194
  4026a0:	01940194 	.word	0x01940194
  4026a4:	0194017e 	.word	0x0194017e
  4026a8:	01940194 	.word	0x01940194
  4026ac:	01940194 	.word	0x01940194
  4026b0:	01750175 	.word	0x01750175
  4026b4:	01750175 	.word	0x01750175
  4026b8:	01750175 	.word	0x01750175
  4026bc:	01750175 	.word	0x01750175
  4026c0:	01750175 	.word	0x01750175
  4026c4:	01940194 	.word	0x01940194
  4026c8:	01940194 	.word	0x01940194
  4026cc:	01940194 	.word	0x01940194
  4026d0:	01940194 	.word	0x01940194
  4026d4:	01940194 	.word	0x01940194
  4026d8:	01940171 	.word	0x01940171
  4026dc:	01940194 	.word	0x01940194
  4026e0:	01940194 	.word	0x01940194
  4026e4:	01940194 	.word	0x01940194
  4026e8:	0194016b 	.word	0x0194016b
  4026ec:	01310194 	.word	0x01310194
  4026f0:	01940194 	.word	0x01940194
  4026f4:	01940194 	.word	0x01940194
  4026f8:	01940194 	.word	0x01940194
  4026fc:	01940194 	.word	0x01940194
  402700:	01940128 	.word	0x01940128
  402704:	011f0194 	.word	0x011f0194
  402708:	01940194 	.word	0x01940194
  40270c:	01940194 	.word	0x01940194
  402710:	01940194 	.word	0x01940194
  402714:	011a0194 	.word	0x011a0194
  402718:	01940108 	.word	0x01940108
  40271c:	01940194 	.word	0x01940194
  402720:	00930102 	.word	0x00930102
  402724:	01940194 	.word	0x01940194
  402728:	01940161 	.word	0x01940161
  40272c:	0148014a 	.word	0x0148014a
  402730:	01940144 	.word	0x01940144
  402734:	01410194 	.word	0x01410194
  402738:	013a0194 	.word	0x013a0194
  40273c:	01940194 	.word	0x01940194
  402740:	0128      	.short	0x0128
  402742:	461e      	mov	r6, r3
  402744:	f8db 3004 	ldr.w	r3, [fp, #4]
  402748:	2b00      	cmp	r3, #0
  40274a:	f340 8392 	ble.w	402e72 <__svfiscanf_r+0x902>
  40274e:	f8db 3000 	ldr.w	r3, [fp]
  402752:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  402756:	7819      	ldrb	r1, [r3, #0]
  402758:	4291      	cmp	r1, r2
  40275a:	f47f af5d 	bne.w	402618 <__svfiscanf_r+0xa8>
  40275e:	f8db 2004 	ldr.w	r2, [fp, #4]
  402762:	3301      	adds	r3, #1
  402764:	3a01      	subs	r2, #1
  402766:	f8cb 3000 	str.w	r3, [fp]
  40276a:	f10a 0a01 	add.w	sl, sl, #1
  40276e:	f8cb 2004 	str.w	r2, [fp, #4]
  402772:	4634      	mov	r4, r6
  402774:	e74a      	b.n	40260c <__svfiscanf_r+0x9c>
  402776:	9303      	str	r3, [sp, #12]
  402778:	4bb2      	ldr	r3, [pc, #712]	; (402a44 <__svfiscanf_r+0x4d4>)
  40277a:	9307      	str	r3, [sp, #28]
  40277c:	2300      	movs	r3, #0
  40277e:	9304      	str	r3, [sp, #16]
  402780:	2603      	movs	r6, #3
  402782:	f8db 3004 	ldr.w	r3, [fp, #4]
  402786:	2b00      	cmp	r3, #0
  402788:	dd75      	ble.n	402876 <__svfiscanf_r+0x306>
  40278a:	0669      	lsls	r1, r5, #25
  40278c:	d533      	bpl.n	4027f6 <__svfiscanf_r+0x286>
  40278e:	2e02      	cmp	r6, #2
  402790:	f000 820d 	beq.w	402bae <__svfiscanf_r+0x63e>
  402794:	2e03      	cmp	r6, #3
  402796:	f000 8159 	beq.w	402a4c <__svfiscanf_r+0x4dc>
  40279a:	2e01      	cmp	r6, #1
  40279c:	f000 8120 	beq.w	4029e0 <__svfiscanf_r+0x470>
  4027a0:	2c00      	cmp	r4, #0
  4027a2:	bf08      	it	eq
  4027a4:	2401      	moveq	r4, #1
  4027a6:	f015 0301 	ands.w	r3, r5, #1
  4027aa:	f040 825d 	bne.w	402c68 <__svfiscanf_r+0x6f8>
  4027ae:	06ed      	lsls	r5, r5, #27
  4027b0:	f140 830b 	bpl.w	402dca <__svfiscanf_r+0x85a>
  4027b4:	461d      	mov	r5, r3
  4027b6:	e009      	b.n	4027cc <__svfiscanf_r+0x25c>
  4027b8:	4413      	add	r3, r2
  4027ba:	f8cb 3000 	str.w	r3, [fp]
  4027be:	4415      	add	r5, r2
  4027c0:	1aa4      	subs	r4, r4, r2
  4027c2:	f002 f8c7 	bl	404954 <__srefill_r>
  4027c6:	2800      	cmp	r0, #0
  4027c8:	f040 82fb 	bne.w	402dc2 <__svfiscanf_r+0x852>
  4027cc:	f8db 2004 	ldr.w	r2, [fp, #4]
  4027d0:	f8db 3000 	ldr.w	r3, [fp]
  4027d4:	42a2      	cmp	r2, r4
  4027d6:	4659      	mov	r1, fp
  4027d8:	4638      	mov	r0, r7
  4027da:	dbed      	blt.n	4027b8 <__svfiscanf_r+0x248>
  4027dc:	1b12      	subs	r2, r2, r4
  4027de:	4423      	add	r3, r4
  4027e0:	f8cb 2004 	str.w	r2, [fp, #4]
  4027e4:	4425      	add	r5, r4
  4027e6:	f8cb 3000 	str.w	r3, [fp]
  4027ea:	9e03      	ldr	r6, [sp, #12]
  4027ec:	44aa      	add	sl, r5
  4027ee:	4634      	mov	r4, r6
  4027f0:	e70c      	b.n	40260c <__svfiscanf_r+0x9c>
  4027f2:	f8cb 3000 	str.w	r3, [fp]
  4027f6:	f001 fa19 	bl	403c2c <__locale_ctype_ptr>
  4027fa:	f8db 3000 	ldr.w	r3, [fp]
  4027fe:	781a      	ldrb	r2, [r3, #0]
  402800:	4410      	add	r0, r2
  402802:	3301      	adds	r3, #1
  402804:	7842      	ldrb	r2, [r0, #1]
  402806:	0712      	lsls	r2, r2, #28
  402808:	d5c1      	bpl.n	40278e <__svfiscanf_r+0x21e>
  40280a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40280e:	3a01      	subs	r2, #1
  402810:	2a00      	cmp	r2, #0
  402812:	f10a 0a01 	add.w	sl, sl, #1
  402816:	f8cb 2004 	str.w	r2, [fp, #4]
  40281a:	dcea      	bgt.n	4027f2 <__svfiscanf_r+0x282>
  40281c:	4659      	mov	r1, fp
  40281e:	4638      	mov	r0, r7
  402820:	f002 f898 	bl	404954 <__srefill_r>
  402824:	2800      	cmp	r0, #0
  402826:	d0e6      	beq.n	4027f6 <__svfiscanf_r+0x286>
  402828:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40282c:	07dc      	lsls	r4, r3, #31
  40282e:	d404      	bmi.n	40283a <__svfiscanf_r+0x2ca>
  402830:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402834:	0598      	lsls	r0, r3, #22
  402836:	f140 82b0 	bpl.w	402d9a <__svfiscanf_r+0x82a>
  40283a:	9b05      	ldr	r3, [sp, #20]
  40283c:	2b00      	cmp	r3, #0
  40283e:	f000 8094 	beq.w	40296a <__svfiscanf_r+0x3fa>
  402842:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402846:	0659      	lsls	r1, r3, #25
  402848:	f100 808f 	bmi.w	40296a <__svfiscanf_r+0x3fa>
  40284c:	9805      	ldr	r0, [sp, #20]
  40284e:	b059      	add	sp, #356	; 0x164
  402850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402854:	f896 8001 	ldrb.w	r8, [r6, #1]
  402858:	f045 0504 	orr.w	r5, r5, #4
  40285c:	461e      	mov	r6, r3
  40285e:	e6f0      	b.n	402642 <__svfiscanf_r+0xd2>
  402860:	9303      	str	r3, [sp, #12]
  402862:	4b78      	ldr	r3, [pc, #480]	; (402a44 <__svfiscanf_r+0x4d4>)
  402864:	9307      	str	r3, [sp, #28]
  402866:	230a      	movs	r3, #10
  402868:	9304      	str	r3, [sp, #16]
  40286a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40286e:	2b00      	cmp	r3, #0
  402870:	f04f 0603 	mov.w	r6, #3
  402874:	dc89      	bgt.n	40278a <__svfiscanf_r+0x21a>
  402876:	4659      	mov	r1, fp
  402878:	4638      	mov	r0, r7
  40287a:	f002 f86b 	bl	404954 <__srefill_r>
  40287e:	2800      	cmp	r0, #0
  402880:	d083      	beq.n	40278a <__svfiscanf_r+0x21a>
  402882:	e7d1      	b.n	402828 <__svfiscanf_r+0x2b8>
  402884:	9303      	str	r3, [sp, #12]
  402886:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  40288a:	2600      	movs	r6, #0
  40288c:	e779      	b.n	402782 <__svfiscanf_r+0x212>
  40288e:	4619      	mov	r1, r3
  402890:	a818      	add	r0, sp, #96	; 0x60
  402892:	f002 f8fb 	bl	404a8c <__sccl>
  402896:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  40289a:	9003      	str	r0, [sp, #12]
  40289c:	2601      	movs	r6, #1
  40289e:	e770      	b.n	402782 <__svfiscanf_r+0x212>
  4028a0:	9303      	str	r3, [sp, #12]
  4028a2:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  4028a6:	4b68      	ldr	r3, [pc, #416]	; (402a48 <__svfiscanf_r+0x4d8>)
  4028a8:	9307      	str	r3, [sp, #28]
  4028aa:	2310      	movs	r3, #16
  4028ac:	9304      	str	r3, [sp, #16]
  4028ae:	2603      	movs	r6, #3
  4028b0:	e767      	b.n	402782 <__svfiscanf_r+0x212>
  4028b2:	9303      	str	r3, [sp, #12]
  4028b4:	f045 0501 	orr.w	r5, r5, #1
  4028b8:	4b63      	ldr	r3, [pc, #396]	; (402a48 <__svfiscanf_r+0x4d8>)
  4028ba:	9307      	str	r3, [sp, #28]
  4028bc:	2308      	movs	r3, #8
  4028be:	9304      	str	r3, [sp, #16]
  4028c0:	2603      	movs	r6, #3
  4028c2:	e75e      	b.n	402782 <__svfiscanf_r+0x212>
  4028c4:	9303      	str	r3, [sp, #12]
  4028c6:	4b60      	ldr	r3, [pc, #384]	; (402a48 <__svfiscanf_r+0x4d8>)
  4028c8:	9307      	str	r3, [sp, #28]
  4028ca:	230a      	movs	r3, #10
  4028cc:	9304      	str	r3, [sp, #16]
  4028ce:	2603      	movs	r6, #3
  4028d0:	e757      	b.n	402782 <__svfiscanf_r+0x212>
  4028d2:	9303      	str	r3, [sp, #12]
  4028d4:	2602      	movs	r6, #2
  4028d6:	e754      	b.n	402782 <__svfiscanf_r+0x212>
  4028d8:	9303      	str	r3, [sp, #12]
  4028da:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  4028de:	e7e2      	b.n	4028a6 <__svfiscanf_r+0x336>
  4028e0:	9303      	str	r3, [sp, #12]
  4028e2:	e7e9      	b.n	4028b8 <__svfiscanf_r+0x348>
  4028e4:	06ea      	lsls	r2, r5, #27
  4028e6:	9303      	str	r3, [sp, #12]
  4028e8:	d477      	bmi.n	4029da <__svfiscanf_r+0x46a>
  4028ea:	076b      	lsls	r3, r5, #29
  4028ec:	f100 82ec 	bmi.w	402ec8 <__svfiscanf_r+0x958>
  4028f0:	07ee      	lsls	r6, r5, #31
  4028f2:	f100 82d8 	bmi.w	402ea6 <__svfiscanf_r+0x936>
  4028f6:	07ad      	lsls	r5, r5, #30
  4028f8:	f140 82d5 	bpl.w	402ea6 <__svfiscanf_r+0x936>
  4028fc:	9a06      	ldr	r2, [sp, #24]
  4028fe:	9e03      	ldr	r6, [sp, #12]
  402900:	6813      	ldr	r3, [r2, #0]
  402902:	4650      	mov	r0, sl
  402904:	17c1      	asrs	r1, r0, #31
  402906:	3204      	adds	r2, #4
  402908:	9206      	str	r2, [sp, #24]
  40290a:	e9c3 0100 	strd	r0, r1, [r3]
  40290e:	4634      	mov	r4, r6
  402910:	e67c      	b.n	40260c <__svfiscanf_r+0x9c>
  402912:	f896 8001 	ldrb.w	r8, [r6, #1]
  402916:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
  40291a:	f000 82b2 	beq.w	402e82 <__svfiscanf_r+0x912>
  40291e:	f045 0501 	orr.w	r5, r5, #1
  402922:	461e      	mov	r6, r3
  402924:	e68d      	b.n	402642 <__svfiscanf_r+0xd2>
  402926:	f896 8001 	ldrb.w	r8, [r6, #1]
  40292a:	f045 0502 	orr.w	r5, r5, #2
  40292e:	461e      	mov	r6, r3
  402930:	e687      	b.n	402642 <__svfiscanf_r+0xd2>
  402932:	9303      	str	r3, [sp, #12]
  402934:	f045 0501 	orr.w	r5, r5, #1
  402938:	e793      	b.n	402862 <__svfiscanf_r+0x2f2>
  40293a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40293e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
  402942:	3c30      	subs	r4, #48	; 0x30
  402944:	f896 8001 	ldrb.w	r8, [r6, #1]
  402948:	461e      	mov	r6, r3
  40294a:	e67a      	b.n	402642 <__svfiscanf_r+0xd2>
  40294c:	f896 8001 	ldrb.w	r8, [r6, #1]
  402950:	f045 0510 	orr.w	r5, r5, #16
  402954:	461e      	mov	r6, r3
  402956:	e674      	b.n	402642 <__svfiscanf_r+0xd2>
  402958:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40295c:	07dc      	lsls	r4, r3, #31
  40295e:	d404      	bmi.n	40296a <__svfiscanf_r+0x3fa>
  402960:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402964:	0598      	lsls	r0, r3, #22
  402966:	f140 8293 	bpl.w	402e90 <__svfiscanf_r+0x920>
  40296a:	f04f 33ff 	mov.w	r3, #4294967295
  40296e:	9305      	str	r3, [sp, #20]
  402970:	9805      	ldr	r0, [sp, #20]
  402972:	b059      	add	sp, #356	; 0x164
  402974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402978:	9303      	str	r3, [sp, #12]
  40297a:	f001 f957 	bl	403c2c <__locale_ctype_ptr>
  40297e:	4440      	add	r0, r8
  402980:	7843      	ldrb	r3, [r0, #1]
  402982:	f003 0303 	and.w	r3, r3, #3
  402986:	2b01      	cmp	r3, #1
  402988:	f47f af6b 	bne.w	402862 <__svfiscanf_r+0x2f2>
  40298c:	f045 0501 	orr.w	r5, r5, #1
  402990:	e767      	b.n	402862 <__svfiscanf_r+0x2f2>
  402992:	ab0c      	add	r3, sp, #48	; 0x30
  402994:	4618      	mov	r0, r3
  402996:	2208      	movs	r2, #8
  402998:	2100      	movs	r1, #0
  40299a:	9308      	str	r3, [sp, #32]
  40299c:	f7fe fd34 	bl	401408 <memset>
  4029a0:	f015 0310 	ands.w	r3, r5, #16
  4029a4:	9309      	str	r3, [sp, #36]	; 0x24
  4029a6:	f000 81eb 	beq.w	402d80 <__svfiscanf_r+0x810>
  4029aa:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  4029ae:	2600      	movs	r6, #0
  4029b0:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  4029b4:	f001 f93a 	bl	403c2c <__locale_ctype_ptr>
  4029b8:	f8db 3000 	ldr.w	r3, [fp]
  4029bc:	781b      	ldrb	r3, [r3, #0]
  4029be:	4403      	add	r3, r0
  4029c0:	785b      	ldrb	r3, [r3, #1]
  4029c2:	071a      	lsls	r2, r3, #28
  4029c4:	d402      	bmi.n	4029cc <__svfiscanf_r+0x45c>
  4029c6:	2c00      	cmp	r4, #0
  4029c8:	f040 8289 	bne.w	402ede <__svfiscanf_r+0x96e>
  4029cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4029ce:	b923      	cbnz	r3, 4029da <__svfiscanf_r+0x46a>
  4029d0:	f8c9 3000 	str.w	r3, [r9]
  4029d4:	9b05      	ldr	r3, [sp, #20]
  4029d6:	3301      	adds	r3, #1
  4029d8:	9305      	str	r3, [sp, #20]
  4029da:	9e03      	ldr	r6, [sp, #12]
  4029dc:	4634      	mov	r4, r6
  4029de:	e615      	b.n	40260c <__svfiscanf_r+0x9c>
  4029e0:	2c00      	cmp	r4, #0
  4029e2:	bf08      	it	eq
  4029e4:	f04f 34ff 	moveq.w	r4, #4294967295
  4029e8:	06e8      	lsls	r0, r5, #27
  4029ea:	f140 810b 	bpl.w	402c04 <__svfiscanf_r+0x694>
  4029ee:	f8db 2000 	ldr.w	r2, [fp]
  4029f2:	2500      	movs	r5, #0
  4029f4:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  4029f8:	7813      	ldrb	r3, [r2, #0]
  4029fa:	f818 3003 	ldrb.w	r3, [r8, r3]
  4029fe:	3201      	adds	r2, #1
  402a00:	b1db      	cbz	r3, 402a3a <__svfiscanf_r+0x4ca>
  402a02:	f8db 3004 	ldr.w	r3, [fp, #4]
  402a06:	f8cb 2000 	str.w	r2, [fp]
  402a0a:	3501      	adds	r5, #1
  402a0c:	3b01      	subs	r3, #1
  402a0e:	42ac      	cmp	r4, r5
  402a10:	f8cb 3004 	str.w	r3, [fp, #4]
  402a14:	f43f aee9 	beq.w	4027ea <__svfiscanf_r+0x27a>
  402a18:	2b00      	cmp	r3, #0
  402a1a:	dced      	bgt.n	4029f8 <__svfiscanf_r+0x488>
  402a1c:	4659      	mov	r1, fp
  402a1e:	4638      	mov	r0, r7
  402a20:	f001 ff98 	bl	404954 <__srefill_r>
  402a24:	2800      	cmp	r0, #0
  402a26:	f47f aee0 	bne.w	4027ea <__svfiscanf_r+0x27a>
  402a2a:	f8db 2000 	ldr.w	r2, [fp]
  402a2e:	7813      	ldrb	r3, [r2, #0]
  402a30:	f818 3003 	ldrb.w	r3, [r8, r3]
  402a34:	3201      	adds	r2, #1
  402a36:	2b00      	cmp	r3, #0
  402a38:	d1e3      	bne.n	402a02 <__svfiscanf_r+0x492>
  402a3a:	2d00      	cmp	r5, #0
  402a3c:	f47f aed5 	bne.w	4027ea <__svfiscanf_r+0x27a>
  402a40:	e5ea      	b.n	402618 <__svfiscanf_r+0xa8>
  402a42:	bf00      	nop
  402a44:	00404cb1 	.word	0x00404cb1
  402a48:	00404fdd 	.word	0x00404fdd
  402a4c:	1e63      	subs	r3, r4, #1
  402a4e:	2b26      	cmp	r3, #38	; 0x26
  402a50:	bf8c      	ite	hi
  402a52:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  402a56:	2200      	movls	r2, #0
  402a58:	f04f 0900 	mov.w	r9, #0
  402a5c:	4611      	mov	r1, r2
  402a5e:	ae0e      	add	r6, sp, #56	; 0x38
  402a60:	464b      	mov	r3, r9
  402a62:	46b9      	mov	r9, r7
  402a64:	9f04      	ldr	r7, [sp, #16]
  402a66:	4652      	mov	r2, sl
  402a68:	bf88      	it	hi
  402a6a:	2427      	movhi	r4, #39	; 0x27
  402a6c:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  402a70:	46b0      	mov	r8, r6
  402a72:	468a      	mov	sl, r1
  402a74:	f8db 0000 	ldr.w	r0, [fp]
  402a78:	f890 e000 	ldrb.w	lr, [r0]
  402a7c:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  402a80:	294d      	cmp	r1, #77	; 0x4d
  402a82:	d842      	bhi.n	402b0a <__svfiscanf_r+0x59a>
  402a84:	e8df f001 	tbb	[pc, r1]
  402a88:	418e418e 	.word	0x418e418e
  402a8c:	63636941 	.word	0x63636941
  402a90:	63636363 	.word	0x63636363
  402a94:	415d5d63 	.word	0x415d5d63
  402a98:	41414141 	.word	0x41414141
  402a9c:	58584141 	.word	0x58584141
  402aa0:	58585858 	.word	0x58585858
  402aa4:	41414141 	.word	0x41414141
  402aa8:	41414141 	.word	0x41414141
  402aac:	41414141 	.word	0x41414141
  402ab0:	41414141 	.word	0x41414141
  402ab4:	41412741 	.word	0x41412741
  402ab8:	41414141 	.word	0x41414141
  402abc:	58584141 	.word	0x58584141
  402ac0:	58585858 	.word	0x58585858
  402ac4:	41414141 	.word	0x41414141
  402ac8:	41414141 	.word	0x41414141
  402acc:	41414141 	.word	0x41414141
  402ad0:	41414141 	.word	0x41414141
  402ad4:	2741      	.short	0x2741
  402ad6:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  402ada:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  402ade:	d114      	bne.n	402b0a <__svfiscanf_r+0x59a>
  402ae0:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  402ae4:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  402ae8:	2710      	movs	r7, #16
  402aea:	f8db 1004 	ldr.w	r1, [fp, #4]
  402aee:	f888 e000 	strb.w	lr, [r8]
  402af2:	3901      	subs	r1, #1
  402af4:	2900      	cmp	r1, #0
  402af6:	f108 0801 	add.w	r8, r8, #1
  402afa:	f8cb 1004 	str.w	r1, [fp, #4]
  402afe:	dd46      	ble.n	402b8e <__svfiscanf_r+0x61e>
  402b00:	3001      	adds	r0, #1
  402b02:	f8cb 0000 	str.w	r0, [fp]
  402b06:	3c01      	subs	r4, #1
  402b08:	d1b4      	bne.n	402a74 <__svfiscanf_r+0x504>
  402b0a:	05e9      	lsls	r1, r5, #23
  402b0c:	9704      	str	r7, [sp, #16]
  402b0e:	4692      	mov	sl, r2
  402b10:	464f      	mov	r7, r9
  402b12:	4699      	mov	r9, r3
  402b14:	d505      	bpl.n	402b22 <__svfiscanf_r+0x5b2>
  402b16:	45b0      	cmp	r8, r6
  402b18:	f200 81a2 	bhi.w	402e60 <__svfiscanf_r+0x8f0>
  402b1c:	45b0      	cmp	r8, r6
  402b1e:	f43f ad7b 	beq.w	402618 <__svfiscanf_r+0xa8>
  402b22:	f015 0410 	ands.w	r4, r5, #16
  402b26:	f000 80e5 	beq.w	402cf4 <__svfiscanf_r+0x784>
  402b2a:	eba8 0606 	sub.w	r6, r8, r6
  402b2e:	44b1      	add	r9, r6
  402b30:	9e03      	ldr	r6, [sp, #12]
  402b32:	44ca      	add	sl, r9
  402b34:	4634      	mov	r4, r6
  402b36:	e569      	b.n	40260c <__svfiscanf_r+0x9c>
  402b38:	2f0a      	cmp	r7, #10
  402b3a:	dde6      	ble.n	402b0a <__svfiscanf_r+0x59a>
  402b3c:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402b40:	e7d3      	b.n	402aea <__svfiscanf_r+0x57a>
  402b42:	49ac      	ldr	r1, [pc, #688]	; (402df4 <__svfiscanf_r+0x884>)
  402b44:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402b48:	2f08      	cmp	r7, #8
  402b4a:	dcf7      	bgt.n	402b3c <__svfiscanf_r+0x5cc>
  402b4c:	e7dd      	b.n	402b0a <__svfiscanf_r+0x59a>
  402b4e:	49a9      	ldr	r1, [pc, #676]	; (402df4 <__svfiscanf_r+0x884>)
  402b50:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402b54:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402b58:	e7c7      	b.n	402aea <__svfiscanf_r+0x57a>
  402b5a:	0529      	lsls	r1, r5, #20
  402b5c:	d5c5      	bpl.n	402aea <__svfiscanf_r+0x57a>
  402b5e:	b917      	cbnz	r7, 402b66 <__svfiscanf_r+0x5f6>
  402b60:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  402b64:	2708      	movs	r7, #8
  402b66:	0569      	lsls	r1, r5, #21
  402b68:	f100 80eb 	bmi.w	402d42 <__svfiscanf_r+0x7d2>
  402b6c:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  402b70:	f1ba 0f00 	cmp.w	sl, #0
  402b74:	d002      	beq.n	402b7c <__svfiscanf_r+0x60c>
  402b76:	f10a 3aff 	add.w	sl, sl, #4294967295
  402b7a:	3401      	adds	r4, #1
  402b7c:	f8db 1004 	ldr.w	r1, [fp, #4]
  402b80:	3901      	subs	r1, #1
  402b82:	2900      	cmp	r1, #0
  402b84:	f103 0301 	add.w	r3, r3, #1
  402b88:	f8cb 1004 	str.w	r1, [fp, #4]
  402b8c:	dcb8      	bgt.n	402b00 <__svfiscanf_r+0x590>
  402b8e:	4659      	mov	r1, fp
  402b90:	4648      	mov	r0, r9
  402b92:	9308      	str	r3, [sp, #32]
  402b94:	9204      	str	r2, [sp, #16]
  402b96:	f001 fedd 	bl	404954 <__srefill_r>
  402b9a:	9a04      	ldr	r2, [sp, #16]
  402b9c:	9b08      	ldr	r3, [sp, #32]
  402b9e:	2800      	cmp	r0, #0
  402ba0:	d0b1      	beq.n	402b06 <__svfiscanf_r+0x596>
  402ba2:	e7b2      	b.n	402b0a <__svfiscanf_r+0x59a>
  402ba4:	0629      	lsls	r1, r5, #24
  402ba6:	d5b0      	bpl.n	402b0a <__svfiscanf_r+0x59a>
  402ba8:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  402bac:	e79d      	b.n	402aea <__svfiscanf_r+0x57a>
  402bae:	2c00      	cmp	r4, #0
  402bb0:	bf08      	it	eq
  402bb2:	f04f 34ff 	moveq.w	r4, #4294967295
  402bb6:	f015 0601 	ands.w	r6, r5, #1
  402bba:	f47f aeea 	bne.w	402992 <__svfiscanf_r+0x422>
  402bbe:	06eb      	lsls	r3, r5, #27
  402bc0:	f140 811c 	bpl.w	402dfc <__svfiscanf_r+0x88c>
  402bc4:	f001 f832 	bl	403c2c <__locale_ctype_ptr>
  402bc8:	f8db 3000 	ldr.w	r3, [fp]
  402bcc:	781a      	ldrb	r2, [r3, #0]
  402bce:	4410      	add	r0, r2
  402bd0:	3301      	adds	r3, #1
  402bd2:	7842      	ldrb	r2, [r0, #1]
  402bd4:	0715      	lsls	r5, r2, #28
  402bd6:	d411      	bmi.n	402bfc <__svfiscanf_r+0x68c>
  402bd8:	f8db 2004 	ldr.w	r2, [fp, #4]
  402bdc:	f8cb 3000 	str.w	r3, [fp]
  402be0:	3601      	adds	r6, #1
  402be2:	3a01      	subs	r2, #1
  402be4:	42b4      	cmp	r4, r6
  402be6:	f8cb 2004 	str.w	r2, [fp, #4]
  402bea:	d007      	beq.n	402bfc <__svfiscanf_r+0x68c>
  402bec:	2a00      	cmp	r2, #0
  402bee:	dce9      	bgt.n	402bc4 <__svfiscanf_r+0x654>
  402bf0:	4659      	mov	r1, fp
  402bf2:	4638      	mov	r0, r7
  402bf4:	f001 feae 	bl	404954 <__srefill_r>
  402bf8:	2800      	cmp	r0, #0
  402bfa:	d0e3      	beq.n	402bc4 <__svfiscanf_r+0x654>
  402bfc:	44b2      	add	sl, r6
  402bfe:	9e03      	ldr	r6, [sp, #12]
  402c00:	4634      	mov	r4, r6
  402c02:	e503      	b.n	40260c <__svfiscanf_r+0x9c>
  402c04:	9a06      	ldr	r2, [sp, #24]
  402c06:	6815      	ldr	r5, [r2, #0]
  402c08:	1d16      	adds	r6, r2, #4
  402c0a:	46a9      	mov	r9, r5
  402c0c:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  402c10:	f8db 3000 	ldr.w	r3, [fp]
  402c14:	781a      	ldrb	r2, [r3, #0]
  402c16:	f818 2002 	ldrb.w	r2, [r8, r2]
  402c1a:	1c59      	adds	r1, r3, #1
  402c1c:	b1c2      	cbz	r2, 402c50 <__svfiscanf_r+0x6e0>
  402c1e:	f8db 2004 	ldr.w	r2, [fp, #4]
  402c22:	f8cb 1000 	str.w	r1, [fp]
  402c26:	3a01      	subs	r2, #1
  402c28:	f8cb 2004 	str.w	r2, [fp, #4]
  402c2c:	781b      	ldrb	r3, [r3, #0]
  402c2e:	f809 3b01 	strb.w	r3, [r9], #1
  402c32:	3c01      	subs	r4, #1
  402c34:	d00c      	beq.n	402c50 <__svfiscanf_r+0x6e0>
  402c36:	f8db 3004 	ldr.w	r3, [fp, #4]
  402c3a:	2b00      	cmp	r3, #0
  402c3c:	dce8      	bgt.n	402c10 <__svfiscanf_r+0x6a0>
  402c3e:	4659      	mov	r1, fp
  402c40:	4638      	mov	r0, r7
  402c42:	f001 fe87 	bl	404954 <__srefill_r>
  402c46:	2800      	cmp	r0, #0
  402c48:	d0e2      	beq.n	402c10 <__svfiscanf_r+0x6a0>
  402c4a:	454d      	cmp	r5, r9
  402c4c:	f43f adec 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402c50:	ebb9 0505 	subs.w	r5, r9, r5
  402c54:	f43f ace0 	beq.w	402618 <__svfiscanf_r+0xa8>
  402c58:	9a05      	ldr	r2, [sp, #20]
  402c5a:	9606      	str	r6, [sp, #24]
  402c5c:	2300      	movs	r3, #0
  402c5e:	3201      	adds	r2, #1
  402c60:	9205      	str	r2, [sp, #20]
  402c62:	f889 3000 	strb.w	r3, [r9]
  402c66:	e5c0      	b.n	4027ea <__svfiscanf_r+0x27a>
  402c68:	ab0c      	add	r3, sp, #48	; 0x30
  402c6a:	4618      	mov	r0, r3
  402c6c:	2208      	movs	r2, #8
  402c6e:	2100      	movs	r1, #0
  402c70:	9308      	str	r3, [sp, #32]
  402c72:	f7fe fbc9 	bl	401408 <memset>
  402c76:	f015 0310 	ands.w	r3, r5, #16
  402c7a:	9309      	str	r3, [sp, #36]	; 0x24
  402c7c:	d077      	beq.n	402d6e <__svfiscanf_r+0x7fe>
  402c7e:	f04f 0900 	mov.w	r9, #0
  402c82:	2c00      	cmp	r4, #0
  402c84:	f43f aea9 	beq.w	4029da <__svfiscanf_r+0x46a>
  402c88:	2500      	movs	r5, #0
  402c8a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  402c8e:	f000 ffbb 	bl	403c08 <__locale_mb_cur_max>
  402c92:	42a8      	cmp	r0, r5
  402c94:	f43f adc8 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402c98:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402c9c:	f812 0b01 	ldrb.w	r0, [r2], #1
  402ca0:	f8cb 2000 	str.w	r2, [fp]
  402ca4:	3b01      	subs	r3, #1
  402ca6:	9a08      	ldr	r2, [sp, #32]
  402ca8:	9200      	str	r2, [sp, #0]
  402caa:	1c6e      	adds	r6, r5, #1
  402cac:	f8cb 3004 	str.w	r3, [fp, #4]
  402cb0:	f808 0005 	strb.w	r0, [r8, r5]
  402cb4:	4633      	mov	r3, r6
  402cb6:	4642      	mov	r2, r8
  402cb8:	4649      	mov	r1, r9
  402cba:	4638      	mov	r0, r7
  402cbc:	f001 fafc 	bl	4042b8 <_mbrtowc_r>
  402cc0:	1c43      	adds	r3, r0, #1
  402cc2:	f43f adb1 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402cc6:	2800      	cmp	r0, #0
  402cc8:	d16c      	bne.n	402da4 <__svfiscanf_r+0x834>
  402cca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ccc:	2b00      	cmp	r3, #0
  402cce:	d16d      	bne.n	402dac <__svfiscanf_r+0x83c>
  402cd0:	f8c9 3000 	str.w	r3, [r9]
  402cd4:	44b2      	add	sl, r6
  402cd6:	3c01      	subs	r4, #1
  402cd8:	f109 0904 	add.w	r9, r9, #4
  402cdc:	2500      	movs	r5, #0
  402cde:	f8db 3004 	ldr.w	r3, [fp, #4]
  402ce2:	2b00      	cmp	r3, #0
  402ce4:	dd30      	ble.n	402d48 <__svfiscanf_r+0x7d8>
  402ce6:	2c00      	cmp	r4, #0
  402ce8:	d1d1      	bne.n	402c8e <__svfiscanf_r+0x71e>
  402cea:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402cec:	2b00      	cmp	r3, #0
  402cee:	f47f ae74 	bne.w	4029da <__svfiscanf_r+0x46a>
  402cf2:	e66f      	b.n	4029d4 <__svfiscanf_r+0x464>
  402cf4:	4622      	mov	r2, r4
  402cf6:	f888 4000 	strb.w	r4, [r8]
  402cfa:	9b04      	ldr	r3, [sp, #16]
  402cfc:	9c07      	ldr	r4, [sp, #28]
  402cfe:	4631      	mov	r1, r6
  402d00:	4638      	mov	r0, r7
  402d02:	47a0      	blx	r4
  402d04:	06aa      	lsls	r2, r5, #26
  402d06:	d442      	bmi.n	402d8e <__svfiscanf_r+0x81e>
  402d08:	076b      	lsls	r3, r5, #29
  402d0a:	f100 80d7 	bmi.w	402ebc <__svfiscanf_r+0x94c>
  402d0e:	f015 0201 	ands.w	r2, r5, #1
  402d12:	d13c      	bne.n	402d8e <__svfiscanf_r+0x81e>
  402d14:	07ad      	lsls	r5, r5, #30
  402d16:	d53a      	bpl.n	402d8e <__svfiscanf_r+0x81e>
  402d18:	9b07      	ldr	r3, [sp, #28]
  402d1a:	4619      	mov	r1, r3
  402d1c:	4b36      	ldr	r3, [pc, #216]	; (402df8 <__svfiscanf_r+0x888>)
  402d1e:	4299      	cmp	r1, r3
  402d20:	4638      	mov	r0, r7
  402d22:	9b04      	ldr	r3, [sp, #16]
  402d24:	4631      	mov	r1, r6
  402d26:	f000 811e 	beq.w	402f66 <__svfiscanf_r+0x9f6>
  402d2a:	f002 f8a1 	bl	404e70 <_strtoll_r>
  402d2e:	9a06      	ldr	r2, [sp, #24]
  402d30:	6813      	ldr	r3, [r2, #0]
  402d32:	e9c3 0100 	strd	r0, r1, [r3]
  402d36:	3204      	adds	r2, #4
  402d38:	9206      	str	r2, [sp, #24]
  402d3a:	9b05      	ldr	r3, [sp, #20]
  402d3c:	3301      	adds	r3, #1
  402d3e:	9305      	str	r3, [sp, #20]
  402d40:	e6f3      	b.n	402b2a <__svfiscanf_r+0x5ba>
  402d42:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  402d46:	e6d0      	b.n	402aea <__svfiscanf_r+0x57a>
  402d48:	4659      	mov	r1, fp
  402d4a:	4638      	mov	r0, r7
  402d4c:	f001 fe02 	bl	404954 <__srefill_r>
  402d50:	2800      	cmp	r0, #0
  402d52:	d0c8      	beq.n	402ce6 <__svfiscanf_r+0x776>
  402d54:	2d00      	cmp	r5, #0
  402d56:	d0c8      	beq.n	402cea <__svfiscanf_r+0x77a>
  402d58:	e566      	b.n	402828 <__svfiscanf_r+0x2b8>
  402d5a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  402d5e:	9203      	str	r2, [sp, #12]
  402d60:	f000 ff76 	bl	403c50 <__retarget_lock_acquire_recursive>
  402d64:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  402d68:	9a03      	ldr	r2, [sp, #12]
  402d6a:	b299      	uxth	r1, r3
  402d6c:	e410      	b.n	402590 <__svfiscanf_r+0x20>
  402d6e:	9a06      	ldr	r2, [sp, #24]
  402d70:	4613      	mov	r3, r2
  402d72:	3304      	adds	r3, #4
  402d74:	f8d2 9000 	ldr.w	r9, [r2]
  402d78:	9306      	str	r3, [sp, #24]
  402d7a:	2c00      	cmp	r4, #0
  402d7c:	d184      	bne.n	402c88 <__svfiscanf_r+0x718>
  402d7e:	e629      	b.n	4029d4 <__svfiscanf_r+0x464>
  402d80:	9a06      	ldr	r2, [sp, #24]
  402d82:	4613      	mov	r3, r2
  402d84:	3304      	adds	r3, #4
  402d86:	f8d2 9000 	ldr.w	r9, [r2]
  402d8a:	9306      	str	r3, [sp, #24]
  402d8c:	e60f      	b.n	4029ae <__svfiscanf_r+0x43e>
  402d8e:	9a06      	ldr	r2, [sp, #24]
  402d90:	6813      	ldr	r3, [r2, #0]
  402d92:	3204      	adds	r2, #4
  402d94:	9206      	str	r2, [sp, #24]
  402d96:	6018      	str	r0, [r3, #0]
  402d98:	e7cf      	b.n	402d3a <__svfiscanf_r+0x7ca>
  402d9a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  402d9e:	f000 ff59 	bl	403c54 <__retarget_lock_release_recursive>
  402da2:	e54a      	b.n	40283a <__svfiscanf_r+0x2ca>
  402da4:	3002      	adds	r0, #2
  402da6:	d105      	bne.n	402db4 <__svfiscanf_r+0x844>
  402da8:	4635      	mov	r5, r6
  402daa:	e798      	b.n	402cde <__svfiscanf_r+0x76e>
  402dac:	44b2      	add	sl, r6
  402dae:	3c01      	subs	r4, #1
  402db0:	4605      	mov	r5, r0
  402db2:	e794      	b.n	402cde <__svfiscanf_r+0x76e>
  402db4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402db6:	44b2      	add	sl, r6
  402db8:	3c01      	subs	r4, #1
  402dba:	2b00      	cmp	r3, #0
  402dbc:	d08c      	beq.n	402cd8 <__svfiscanf_r+0x768>
  402dbe:	2500      	movs	r5, #0
  402dc0:	e78d      	b.n	402cde <__svfiscanf_r+0x76e>
  402dc2:	2d00      	cmp	r5, #0
  402dc4:	f47f ad11 	bne.w	4027ea <__svfiscanf_r+0x27a>
  402dc8:	e52e      	b.n	402828 <__svfiscanf_r+0x2b8>
  402dca:	9d06      	ldr	r5, [sp, #24]
  402dcc:	4623      	mov	r3, r4
  402dce:	6829      	ldr	r1, [r5, #0]
  402dd0:	f8cd b000 	str.w	fp, [sp]
  402dd4:	2201      	movs	r2, #1
  402dd6:	4638      	mov	r0, r7
  402dd8:	f000 fb28 	bl	40342c <_fread_r>
  402ddc:	1d2e      	adds	r6, r5, #4
  402dde:	2800      	cmp	r0, #0
  402de0:	f43f ad22 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402de4:	9b05      	ldr	r3, [sp, #20]
  402de6:	9606      	str	r6, [sp, #24]
  402de8:	9e03      	ldr	r6, [sp, #12]
  402dea:	3301      	adds	r3, #1
  402dec:	4482      	add	sl, r0
  402dee:	9305      	str	r3, [sp, #20]
  402df0:	4634      	mov	r4, r6
  402df2:	e40b      	b.n	40260c <__svfiscanf_r+0x9c>
  402df4:	00405e50 	.word	0x00405e50
  402df8:	00404fdd 	.word	0x00404fdd
  402dfc:	9a06      	ldr	r2, [sp, #24]
  402dfe:	6816      	ldr	r6, [r2, #0]
  402e00:	f102 0804 	add.w	r8, r2, #4
  402e04:	4635      	mov	r5, r6
  402e06:	f000 ff11 	bl	403c2c <__locale_ctype_ptr>
  402e0a:	f8db 2000 	ldr.w	r2, [fp]
  402e0e:	7813      	ldrb	r3, [r2, #0]
  402e10:	4418      	add	r0, r3
  402e12:	1c51      	adds	r1, r2, #1
  402e14:	7843      	ldrb	r3, [r0, #1]
  402e16:	0718      	lsls	r0, r3, #28
  402e18:	d415      	bmi.n	402e46 <__svfiscanf_r+0x8d6>
  402e1a:	f8db 3004 	ldr.w	r3, [fp, #4]
  402e1e:	f8cb 1000 	str.w	r1, [fp]
  402e22:	3b01      	subs	r3, #1
  402e24:	f8cb 3004 	str.w	r3, [fp, #4]
  402e28:	7813      	ldrb	r3, [r2, #0]
  402e2a:	f805 3b01 	strb.w	r3, [r5], #1
  402e2e:	3c01      	subs	r4, #1
  402e30:	d009      	beq.n	402e46 <__svfiscanf_r+0x8d6>
  402e32:	f8db 3004 	ldr.w	r3, [fp, #4]
  402e36:	2b00      	cmp	r3, #0
  402e38:	dce5      	bgt.n	402e06 <__svfiscanf_r+0x896>
  402e3a:	4659      	mov	r1, fp
  402e3c:	4638      	mov	r0, r7
  402e3e:	f001 fd89 	bl	404954 <__srefill_r>
  402e42:	2800      	cmp	r0, #0
  402e44:	d0df      	beq.n	402e06 <__svfiscanf_r+0x896>
  402e46:	1bae      	subs	r6, r5, r6
  402e48:	9a05      	ldr	r2, [sp, #20]
  402e4a:	f8cd 8018 	str.w	r8, [sp, #24]
  402e4e:	44b2      	add	sl, r6
  402e50:	9e03      	ldr	r6, [sp, #12]
  402e52:	2300      	movs	r3, #0
  402e54:	3201      	adds	r2, #1
  402e56:	9205      	str	r2, [sp, #20]
  402e58:	702b      	strb	r3, [r5, #0]
  402e5a:	4634      	mov	r4, r6
  402e5c:	f7ff bbd6 	b.w	40260c <__svfiscanf_r+0x9c>
  402e60:	f818 1c01 	ldrb.w	r1, [r8, #-1]
  402e64:	465a      	mov	r2, fp
  402e66:	4638      	mov	r0, r7
  402e68:	f002 f9f6 	bl	405258 <_ungetc_r>
  402e6c:	f108 38ff 	add.w	r8, r8, #4294967295
  402e70:	e654      	b.n	402b1c <__svfiscanf_r+0x5ac>
  402e72:	4659      	mov	r1, fp
  402e74:	4638      	mov	r0, r7
  402e76:	f001 fd6d 	bl	404954 <__srefill_r>
  402e7a:	2800      	cmp	r0, #0
  402e7c:	f43f ac67 	beq.w	40274e <__svfiscanf_r+0x1de>
  402e80:	e4d2      	b.n	402828 <__svfiscanf_r+0x2b8>
  402e82:	f896 8002 	ldrb.w	r8, [r6, #2]
  402e86:	f045 0502 	orr.w	r5, r5, #2
  402e8a:	3602      	adds	r6, #2
  402e8c:	f7ff bbd9 	b.w	402642 <__svfiscanf_r+0xd2>
  402e90:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  402e94:	f000 fede 	bl	403c54 <__retarget_lock_release_recursive>
  402e98:	f04f 33ff 	mov.w	r3, #4294967295
  402e9c:	9305      	str	r3, [sp, #20]
  402e9e:	9805      	ldr	r0, [sp, #20]
  402ea0:	b059      	add	sp, #356	; 0x164
  402ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ea6:	9a06      	ldr	r2, [sp, #24]
  402ea8:	9e03      	ldr	r6, [sp, #12]
  402eaa:	6813      	ldr	r3, [r2, #0]
  402eac:	f8c3 a000 	str.w	sl, [r3]
  402eb0:	4613      	mov	r3, r2
  402eb2:	3304      	adds	r3, #4
  402eb4:	9306      	str	r3, [sp, #24]
  402eb6:	4634      	mov	r4, r6
  402eb8:	f7ff bba8 	b.w	40260c <__svfiscanf_r+0x9c>
  402ebc:	9a06      	ldr	r2, [sp, #24]
  402ebe:	6813      	ldr	r3, [r2, #0]
  402ec0:	3204      	adds	r2, #4
  402ec2:	9206      	str	r2, [sp, #24]
  402ec4:	8018      	strh	r0, [r3, #0]
  402ec6:	e738      	b.n	402d3a <__svfiscanf_r+0x7ca>
  402ec8:	9a06      	ldr	r2, [sp, #24]
  402eca:	9e03      	ldr	r6, [sp, #12]
  402ecc:	6813      	ldr	r3, [r2, #0]
  402ece:	f8a3 a000 	strh.w	sl, [r3]
  402ed2:	4613      	mov	r3, r2
  402ed4:	3304      	adds	r3, #4
  402ed6:	9306      	str	r3, [sp, #24]
  402ed8:	4634      	mov	r4, r6
  402eda:	f7ff bb97 	b.w	40260c <__svfiscanf_r+0x9c>
  402ede:	f000 fe93 	bl	403c08 <__locale_mb_cur_max>
  402ee2:	4286      	cmp	r6, r0
  402ee4:	f43f aca0 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402ee8:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402eec:	f812 0b01 	ldrb.w	r0, [r2], #1
  402ef0:	f8cb 2000 	str.w	r2, [fp]
  402ef4:	3b01      	subs	r3, #1
  402ef6:	9a08      	ldr	r2, [sp, #32]
  402ef8:	9200      	str	r2, [sp, #0]
  402efa:	1c75      	adds	r5, r6, #1
  402efc:	f8cb 3004 	str.w	r3, [fp, #4]
  402f00:	4649      	mov	r1, r9
  402f02:	f808 0006 	strb.w	r0, [r8, r6]
  402f06:	462b      	mov	r3, r5
  402f08:	4642      	mov	r2, r8
  402f0a:	4638      	mov	r0, r7
  402f0c:	f001 f9d4 	bl	4042b8 <_mbrtowc_r>
  402f10:	1c41      	adds	r1, r0, #1
  402f12:	f43f ac89 	beq.w	402828 <__svfiscanf_r+0x2b8>
  402f16:	b198      	cbz	r0, 402f40 <__svfiscanf_r+0x9d0>
  402f18:	3002      	adds	r0, #2
  402f1a:	bf08      	it	eq
  402f1c:	462e      	moveq	r6, r5
  402f1e:	d12e      	bne.n	402f7e <__svfiscanf_r+0xa0e>
  402f20:	f8db 3004 	ldr.w	r3, [fp, #4]
  402f24:	2b00      	cmp	r3, #0
  402f26:	f73f ad45 	bgt.w	4029b4 <__svfiscanf_r+0x444>
  402f2a:	4659      	mov	r1, fp
  402f2c:	4638      	mov	r0, r7
  402f2e:	f001 fd11 	bl	404954 <__srefill_r>
  402f32:	2800      	cmp	r0, #0
  402f34:	f43f ad3e 	beq.w	4029b4 <__svfiscanf_r+0x444>
  402f38:	2e00      	cmp	r6, #0
  402f3a:	f47f ac75 	bne.w	402828 <__svfiscanf_r+0x2b8>
  402f3e:	e545      	b.n	4029cc <__svfiscanf_r+0x45c>
  402f40:	f8c9 0000 	str.w	r0, [r9]
  402f44:	f000 fe52 	bl	403bec <iswspace>
  402f48:	4606      	mov	r6, r0
  402f4a:	b178      	cbz	r0, 402f6c <__svfiscanf_r+0x9fc>
  402f4c:	2d00      	cmp	r5, #0
  402f4e:	f43f ad3d 	beq.w	4029cc <__svfiscanf_r+0x45c>
  402f52:	4445      	add	r5, r8
  402f54:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  402f58:	465a      	mov	r2, fp
  402f5a:	4638      	mov	r0, r7
  402f5c:	f002 f97c 	bl	405258 <_ungetc_r>
  402f60:	4545      	cmp	r5, r8
  402f62:	d1f7      	bne.n	402f54 <__svfiscanf_r+0x9e4>
  402f64:	e532      	b.n	4029cc <__svfiscanf_r+0x45c>
  402f66:	f002 f929 	bl	4051bc <_strtoull_r>
  402f6a:	e6e0      	b.n	402d2e <__svfiscanf_r+0x7be>
  402f6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402f6e:	44aa      	add	sl, r5
  402f70:	3c01      	subs	r4, #1
  402f72:	2b00      	cmp	r3, #0
  402f74:	d1d4      	bne.n	402f20 <__svfiscanf_r+0x9b0>
  402f76:	f109 0904 	add.w	r9, r9, #4
  402f7a:	461e      	mov	r6, r3
  402f7c:	e7d0      	b.n	402f20 <__svfiscanf_r+0x9b0>
  402f7e:	f8d9 0000 	ldr.w	r0, [r9]
  402f82:	e7df      	b.n	402f44 <__svfiscanf_r+0x9d4>

00402f84 <__swsetup_r>:
  402f84:	b538      	push	{r3, r4, r5, lr}
  402f86:	4b30      	ldr	r3, [pc, #192]	; (403048 <__swsetup_r+0xc4>)
  402f88:	681b      	ldr	r3, [r3, #0]
  402f8a:	4605      	mov	r5, r0
  402f8c:	460c      	mov	r4, r1
  402f8e:	b113      	cbz	r3, 402f96 <__swsetup_r+0x12>
  402f90:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402f92:	2a00      	cmp	r2, #0
  402f94:	d038      	beq.n	403008 <__swsetup_r+0x84>
  402f96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402f9a:	b293      	uxth	r3, r2
  402f9c:	0718      	lsls	r0, r3, #28
  402f9e:	d50c      	bpl.n	402fba <__swsetup_r+0x36>
  402fa0:	6920      	ldr	r0, [r4, #16]
  402fa2:	b1a8      	cbz	r0, 402fd0 <__swsetup_r+0x4c>
  402fa4:	f013 0201 	ands.w	r2, r3, #1
  402fa8:	d01e      	beq.n	402fe8 <__swsetup_r+0x64>
  402faa:	6963      	ldr	r3, [r4, #20]
  402fac:	2200      	movs	r2, #0
  402fae:	425b      	negs	r3, r3
  402fb0:	61a3      	str	r3, [r4, #24]
  402fb2:	60a2      	str	r2, [r4, #8]
  402fb4:	b1f0      	cbz	r0, 402ff4 <__swsetup_r+0x70>
  402fb6:	2000      	movs	r0, #0
  402fb8:	bd38      	pop	{r3, r4, r5, pc}
  402fba:	06d9      	lsls	r1, r3, #27
  402fbc:	d53c      	bpl.n	403038 <__swsetup_r+0xb4>
  402fbe:	0758      	lsls	r0, r3, #29
  402fc0:	d426      	bmi.n	403010 <__swsetup_r+0x8c>
  402fc2:	6920      	ldr	r0, [r4, #16]
  402fc4:	f042 0308 	orr.w	r3, r2, #8
  402fc8:	81a3      	strh	r3, [r4, #12]
  402fca:	b29b      	uxth	r3, r3
  402fcc:	2800      	cmp	r0, #0
  402fce:	d1e9      	bne.n	402fa4 <__swsetup_r+0x20>
  402fd0:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402fd4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402fd8:	d0e4      	beq.n	402fa4 <__swsetup_r+0x20>
  402fda:	4628      	mov	r0, r5
  402fdc:	4621      	mov	r1, r4
  402fde:	f000 fe69 	bl	403cb4 <__smakebuf_r>
  402fe2:	89a3      	ldrh	r3, [r4, #12]
  402fe4:	6920      	ldr	r0, [r4, #16]
  402fe6:	e7dd      	b.n	402fa4 <__swsetup_r+0x20>
  402fe8:	0799      	lsls	r1, r3, #30
  402fea:	bf58      	it	pl
  402fec:	6962      	ldrpl	r2, [r4, #20]
  402fee:	60a2      	str	r2, [r4, #8]
  402ff0:	2800      	cmp	r0, #0
  402ff2:	d1e0      	bne.n	402fb6 <__swsetup_r+0x32>
  402ff4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402ff8:	061a      	lsls	r2, r3, #24
  402ffa:	d5dd      	bpl.n	402fb8 <__swsetup_r+0x34>
  402ffc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403000:	81a3      	strh	r3, [r4, #12]
  403002:	f04f 30ff 	mov.w	r0, #4294967295
  403006:	bd38      	pop	{r3, r4, r5, pc}
  403008:	4618      	mov	r0, r3
  40300a:	f000 f939 	bl	403280 <__sinit>
  40300e:	e7c2      	b.n	402f96 <__swsetup_r+0x12>
  403010:	6b21      	ldr	r1, [r4, #48]	; 0x30
  403012:	b151      	cbz	r1, 40302a <__swsetup_r+0xa6>
  403014:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403018:	4299      	cmp	r1, r3
  40301a:	d004      	beq.n	403026 <__swsetup_r+0xa2>
  40301c:	4628      	mov	r0, r5
  40301e:	f000 fb37 	bl	403690 <_free_r>
  403022:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403026:	2300      	movs	r3, #0
  403028:	6323      	str	r3, [r4, #48]	; 0x30
  40302a:	2300      	movs	r3, #0
  40302c:	6920      	ldr	r0, [r4, #16]
  40302e:	6063      	str	r3, [r4, #4]
  403030:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  403034:	6020      	str	r0, [r4, #0]
  403036:	e7c5      	b.n	402fc4 <__swsetup_r+0x40>
  403038:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  40303c:	2309      	movs	r3, #9
  40303e:	602b      	str	r3, [r5, #0]
  403040:	f04f 30ff 	mov.w	r0, #4294967295
  403044:	81a2      	strh	r2, [r4, #12]
  403046:	bd38      	pop	{r3, r4, r5, pc}
  403048:	2000000c 	.word	0x2000000c

0040304c <register_fini>:
  40304c:	4b02      	ldr	r3, [pc, #8]	; (403058 <register_fini+0xc>)
  40304e:	b113      	cbz	r3, 403056 <register_fini+0xa>
  403050:	4802      	ldr	r0, [pc, #8]	; (40305c <register_fini+0x10>)
  403052:	f000 b805 	b.w	403060 <atexit>
  403056:	4770      	bx	lr
  403058:	00000000 	.word	0x00000000
  40305c:	004032f1 	.word	0x004032f1

00403060 <atexit>:
  403060:	2300      	movs	r3, #0
  403062:	4601      	mov	r1, r0
  403064:	461a      	mov	r2, r3
  403066:	4618      	mov	r0, r3
  403068:	f002 ba38 	b.w	4054dc <__register_exitproc>

0040306c <__sflush_r>:
  40306c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  403070:	b29a      	uxth	r2, r3
  403072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403076:	460d      	mov	r5, r1
  403078:	0711      	lsls	r1, r2, #28
  40307a:	4680      	mov	r8, r0
  40307c:	d43a      	bmi.n	4030f4 <__sflush_r+0x88>
  40307e:	686a      	ldr	r2, [r5, #4]
  403080:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  403084:	2a00      	cmp	r2, #0
  403086:	81ab      	strh	r3, [r5, #12]
  403088:	dd6f      	ble.n	40316a <__sflush_r+0xfe>
  40308a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40308c:	2c00      	cmp	r4, #0
  40308e:	d049      	beq.n	403124 <__sflush_r+0xb8>
  403090:	2200      	movs	r2, #0
  403092:	b29b      	uxth	r3, r3
  403094:	f8d8 6000 	ldr.w	r6, [r8]
  403098:	f8c8 2000 	str.w	r2, [r8]
  40309c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4030a0:	d067      	beq.n	403172 <__sflush_r+0x106>
  4030a2:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4030a4:	075f      	lsls	r7, r3, #29
  4030a6:	d505      	bpl.n	4030b4 <__sflush_r+0x48>
  4030a8:	6869      	ldr	r1, [r5, #4]
  4030aa:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4030ac:	1a52      	subs	r2, r2, r1
  4030ae:	b10b      	cbz	r3, 4030b4 <__sflush_r+0x48>
  4030b0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4030b2:	1ad2      	subs	r2, r2, r3
  4030b4:	2300      	movs	r3, #0
  4030b6:	69e9      	ldr	r1, [r5, #28]
  4030b8:	4640      	mov	r0, r8
  4030ba:	47a0      	blx	r4
  4030bc:	1c44      	adds	r4, r0, #1
  4030be:	d03c      	beq.n	40313a <__sflush_r+0xce>
  4030c0:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4030c4:	692a      	ldr	r2, [r5, #16]
  4030c6:	602a      	str	r2, [r5, #0]
  4030c8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4030cc:	2200      	movs	r2, #0
  4030ce:	81ab      	strh	r3, [r5, #12]
  4030d0:	04db      	lsls	r3, r3, #19
  4030d2:	606a      	str	r2, [r5, #4]
  4030d4:	d447      	bmi.n	403166 <__sflush_r+0xfa>
  4030d6:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4030d8:	f8c8 6000 	str.w	r6, [r8]
  4030dc:	b311      	cbz	r1, 403124 <__sflush_r+0xb8>
  4030de:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4030e2:	4299      	cmp	r1, r3
  4030e4:	d002      	beq.n	4030ec <__sflush_r+0x80>
  4030e6:	4640      	mov	r0, r8
  4030e8:	f000 fad2 	bl	403690 <_free_r>
  4030ec:	2000      	movs	r0, #0
  4030ee:	6328      	str	r0, [r5, #48]	; 0x30
  4030f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4030f4:	692e      	ldr	r6, [r5, #16]
  4030f6:	b1ae      	cbz	r6, 403124 <__sflush_r+0xb8>
  4030f8:	682c      	ldr	r4, [r5, #0]
  4030fa:	602e      	str	r6, [r5, #0]
  4030fc:	0791      	lsls	r1, r2, #30
  4030fe:	bf0c      	ite	eq
  403100:	696b      	ldreq	r3, [r5, #20]
  403102:	2300      	movne	r3, #0
  403104:	1ba4      	subs	r4, r4, r6
  403106:	60ab      	str	r3, [r5, #8]
  403108:	e00a      	b.n	403120 <__sflush_r+0xb4>
  40310a:	4623      	mov	r3, r4
  40310c:	4632      	mov	r2, r6
  40310e:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  403110:	69e9      	ldr	r1, [r5, #28]
  403112:	4640      	mov	r0, r8
  403114:	47b8      	blx	r7
  403116:	2800      	cmp	r0, #0
  403118:	eba4 0400 	sub.w	r4, r4, r0
  40311c:	4406      	add	r6, r0
  40311e:	dd04      	ble.n	40312a <__sflush_r+0xbe>
  403120:	2c00      	cmp	r4, #0
  403122:	dcf2      	bgt.n	40310a <__sflush_r+0x9e>
  403124:	2000      	movs	r0, #0
  403126:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40312a:	89ab      	ldrh	r3, [r5, #12]
  40312c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403130:	81ab      	strh	r3, [r5, #12]
  403132:	f04f 30ff 	mov.w	r0, #4294967295
  403136:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40313a:	f8d8 4000 	ldr.w	r4, [r8]
  40313e:	2c1d      	cmp	r4, #29
  403140:	d8f3      	bhi.n	40312a <__sflush_r+0xbe>
  403142:	4b19      	ldr	r3, [pc, #100]	; (4031a8 <__sflush_r+0x13c>)
  403144:	40e3      	lsrs	r3, r4
  403146:	43db      	mvns	r3, r3
  403148:	f013 0301 	ands.w	r3, r3, #1
  40314c:	d1ed      	bne.n	40312a <__sflush_r+0xbe>
  40314e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  403152:	606b      	str	r3, [r5, #4]
  403154:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  403158:	6929      	ldr	r1, [r5, #16]
  40315a:	81ab      	strh	r3, [r5, #12]
  40315c:	04da      	lsls	r2, r3, #19
  40315e:	6029      	str	r1, [r5, #0]
  403160:	d5b9      	bpl.n	4030d6 <__sflush_r+0x6a>
  403162:	2c00      	cmp	r4, #0
  403164:	d1b7      	bne.n	4030d6 <__sflush_r+0x6a>
  403166:	6528      	str	r0, [r5, #80]	; 0x50
  403168:	e7b5      	b.n	4030d6 <__sflush_r+0x6a>
  40316a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  40316c:	2a00      	cmp	r2, #0
  40316e:	dc8c      	bgt.n	40308a <__sflush_r+0x1e>
  403170:	e7d8      	b.n	403124 <__sflush_r+0xb8>
  403172:	2301      	movs	r3, #1
  403174:	69e9      	ldr	r1, [r5, #28]
  403176:	4640      	mov	r0, r8
  403178:	47a0      	blx	r4
  40317a:	1c43      	adds	r3, r0, #1
  40317c:	4602      	mov	r2, r0
  40317e:	d002      	beq.n	403186 <__sflush_r+0x11a>
  403180:	89ab      	ldrh	r3, [r5, #12]
  403182:	6aac      	ldr	r4, [r5, #40]	; 0x28
  403184:	e78e      	b.n	4030a4 <__sflush_r+0x38>
  403186:	f8d8 3000 	ldr.w	r3, [r8]
  40318a:	2b00      	cmp	r3, #0
  40318c:	d0f8      	beq.n	403180 <__sflush_r+0x114>
  40318e:	2b1d      	cmp	r3, #29
  403190:	d001      	beq.n	403196 <__sflush_r+0x12a>
  403192:	2b16      	cmp	r3, #22
  403194:	d102      	bne.n	40319c <__sflush_r+0x130>
  403196:	f8c8 6000 	str.w	r6, [r8]
  40319a:	e7c3      	b.n	403124 <__sflush_r+0xb8>
  40319c:	89ab      	ldrh	r3, [r5, #12]
  40319e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4031a2:	81ab      	strh	r3, [r5, #12]
  4031a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4031a8:	20400001 	.word	0x20400001

004031ac <_fflush_r>:
  4031ac:	b538      	push	{r3, r4, r5, lr}
  4031ae:	460d      	mov	r5, r1
  4031b0:	4604      	mov	r4, r0
  4031b2:	b108      	cbz	r0, 4031b8 <_fflush_r+0xc>
  4031b4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4031b6:	b1bb      	cbz	r3, 4031e8 <_fflush_r+0x3c>
  4031b8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4031bc:	b188      	cbz	r0, 4031e2 <_fflush_r+0x36>
  4031be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4031c0:	07db      	lsls	r3, r3, #31
  4031c2:	d401      	bmi.n	4031c8 <_fflush_r+0x1c>
  4031c4:	0581      	lsls	r1, r0, #22
  4031c6:	d517      	bpl.n	4031f8 <_fflush_r+0x4c>
  4031c8:	4620      	mov	r0, r4
  4031ca:	4629      	mov	r1, r5
  4031cc:	f7ff ff4e 	bl	40306c <__sflush_r>
  4031d0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4031d2:	07da      	lsls	r2, r3, #31
  4031d4:	4604      	mov	r4, r0
  4031d6:	d402      	bmi.n	4031de <_fflush_r+0x32>
  4031d8:	89ab      	ldrh	r3, [r5, #12]
  4031da:	059b      	lsls	r3, r3, #22
  4031dc:	d507      	bpl.n	4031ee <_fflush_r+0x42>
  4031de:	4620      	mov	r0, r4
  4031e0:	bd38      	pop	{r3, r4, r5, pc}
  4031e2:	4604      	mov	r4, r0
  4031e4:	4620      	mov	r0, r4
  4031e6:	bd38      	pop	{r3, r4, r5, pc}
  4031e8:	f000 f84a 	bl	403280 <__sinit>
  4031ec:	e7e4      	b.n	4031b8 <_fflush_r+0xc>
  4031ee:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4031f0:	f000 fd30 	bl	403c54 <__retarget_lock_release_recursive>
  4031f4:	4620      	mov	r0, r4
  4031f6:	bd38      	pop	{r3, r4, r5, pc}
  4031f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4031fa:	f000 fd29 	bl	403c50 <__retarget_lock_acquire_recursive>
  4031fe:	e7e3      	b.n	4031c8 <_fflush_r+0x1c>

00403200 <fflush>:
  403200:	b120      	cbz	r0, 40320c <fflush+0xc>
  403202:	4b05      	ldr	r3, [pc, #20]	; (403218 <fflush+0x18>)
  403204:	4601      	mov	r1, r0
  403206:	6818      	ldr	r0, [r3, #0]
  403208:	f7ff bfd0 	b.w	4031ac <_fflush_r>
  40320c:	4b03      	ldr	r3, [pc, #12]	; (40321c <fflush+0x1c>)
  40320e:	4904      	ldr	r1, [pc, #16]	; (403220 <fflush+0x20>)
  403210:	6818      	ldr	r0, [r3, #0]
  403212:	f000 bcc1 	b.w	403b98 <_fwalk_reent>
  403216:	bf00      	nop
  403218:	2000000c 	.word	0x2000000c
  40321c:	00405df8 	.word	0x00405df8
  403220:	004031ad 	.word	0x004031ad

00403224 <_cleanup_r>:
  403224:	4901      	ldr	r1, [pc, #4]	; (40322c <_cleanup_r+0x8>)
  403226:	f000 bcb7 	b.w	403b98 <_fwalk_reent>
  40322a:	bf00      	nop
  40322c:	004055c5 	.word	0x004055c5

00403230 <std.isra.0>:
  403230:	b510      	push	{r4, lr}
  403232:	2300      	movs	r3, #0
  403234:	4604      	mov	r4, r0
  403236:	8181      	strh	r1, [r0, #12]
  403238:	81c2      	strh	r2, [r0, #14]
  40323a:	6003      	str	r3, [r0, #0]
  40323c:	6043      	str	r3, [r0, #4]
  40323e:	6083      	str	r3, [r0, #8]
  403240:	6643      	str	r3, [r0, #100]	; 0x64
  403242:	6103      	str	r3, [r0, #16]
  403244:	6143      	str	r3, [r0, #20]
  403246:	6183      	str	r3, [r0, #24]
  403248:	4619      	mov	r1, r3
  40324a:	2208      	movs	r2, #8
  40324c:	305c      	adds	r0, #92	; 0x5c
  40324e:	f7fe f8db 	bl	401408 <memset>
  403252:	4807      	ldr	r0, [pc, #28]	; (403270 <std.isra.0+0x40>)
  403254:	4907      	ldr	r1, [pc, #28]	; (403274 <std.isra.0+0x44>)
  403256:	4a08      	ldr	r2, [pc, #32]	; (403278 <std.isra.0+0x48>)
  403258:	4b08      	ldr	r3, [pc, #32]	; (40327c <std.isra.0+0x4c>)
  40325a:	6220      	str	r0, [r4, #32]
  40325c:	61e4      	str	r4, [r4, #28]
  40325e:	6261      	str	r1, [r4, #36]	; 0x24
  403260:	62a2      	str	r2, [r4, #40]	; 0x28
  403262:	62e3      	str	r3, [r4, #44]	; 0x2c
  403264:	f104 0058 	add.w	r0, r4, #88	; 0x58
  403268:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40326c:	f000 bcec 	b.w	403c48 <__retarget_lock_init_recursive>
  403270:	00404b01 	.word	0x00404b01
  403274:	00404b25 	.word	0x00404b25
  403278:	00404b61 	.word	0x00404b61
  40327c:	00404b81 	.word	0x00404b81

00403280 <__sinit>:
  403280:	b510      	push	{r4, lr}
  403282:	4604      	mov	r4, r0
  403284:	4812      	ldr	r0, [pc, #72]	; (4032d0 <__sinit+0x50>)
  403286:	f000 fce3 	bl	403c50 <__retarget_lock_acquire_recursive>
  40328a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40328c:	b9d2      	cbnz	r2, 4032c4 <__sinit+0x44>
  40328e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  403292:	4810      	ldr	r0, [pc, #64]	; (4032d4 <__sinit+0x54>)
  403294:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  403298:	2103      	movs	r1, #3
  40329a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40329e:	63e0      	str	r0, [r4, #60]	; 0x3c
  4032a0:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  4032a4:	6860      	ldr	r0, [r4, #4]
  4032a6:	2104      	movs	r1, #4
  4032a8:	f7ff ffc2 	bl	403230 <std.isra.0>
  4032ac:	2201      	movs	r2, #1
  4032ae:	2109      	movs	r1, #9
  4032b0:	68a0      	ldr	r0, [r4, #8]
  4032b2:	f7ff ffbd 	bl	403230 <std.isra.0>
  4032b6:	2202      	movs	r2, #2
  4032b8:	2112      	movs	r1, #18
  4032ba:	68e0      	ldr	r0, [r4, #12]
  4032bc:	f7ff ffb8 	bl	403230 <std.isra.0>
  4032c0:	2301      	movs	r3, #1
  4032c2:	63a3      	str	r3, [r4, #56]	; 0x38
  4032c4:	4802      	ldr	r0, [pc, #8]	; (4032d0 <__sinit+0x50>)
  4032c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4032ca:	f000 bcc3 	b.w	403c54 <__retarget_lock_release_recursive>
  4032ce:	bf00      	nop
  4032d0:	20000b4c 	.word	0x20000b4c
  4032d4:	00403225 	.word	0x00403225

004032d8 <__sfp_lock_acquire>:
  4032d8:	4801      	ldr	r0, [pc, #4]	; (4032e0 <__sfp_lock_acquire+0x8>)
  4032da:	f000 bcb9 	b.w	403c50 <__retarget_lock_acquire_recursive>
  4032de:	bf00      	nop
  4032e0:	20000b60 	.word	0x20000b60

004032e4 <__sfp_lock_release>:
  4032e4:	4801      	ldr	r0, [pc, #4]	; (4032ec <__sfp_lock_release+0x8>)
  4032e6:	f000 bcb5 	b.w	403c54 <__retarget_lock_release_recursive>
  4032ea:	bf00      	nop
  4032ec:	20000b60 	.word	0x20000b60

004032f0 <__libc_fini_array>:
  4032f0:	b538      	push	{r3, r4, r5, lr}
  4032f2:	4c0a      	ldr	r4, [pc, #40]	; (40331c <__libc_fini_array+0x2c>)
  4032f4:	4d0a      	ldr	r5, [pc, #40]	; (403320 <__libc_fini_array+0x30>)
  4032f6:	1b64      	subs	r4, r4, r5
  4032f8:	10a4      	asrs	r4, r4, #2
  4032fa:	d00a      	beq.n	403312 <__libc_fini_array+0x22>
  4032fc:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403300:	3b01      	subs	r3, #1
  403302:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403306:	3c01      	subs	r4, #1
  403308:	f855 3904 	ldr.w	r3, [r5], #-4
  40330c:	4798      	blx	r3
  40330e:	2c00      	cmp	r4, #0
  403310:	d1f9      	bne.n	403306 <__libc_fini_array+0x16>
  403312:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403316:	f002 be41 	b.w	405f9c <_fini>
  40331a:	bf00      	nop
  40331c:	00405fac 	.word	0x00405fac
  403320:	00405fa8 	.word	0x00405fa8

00403324 <__fputwc>:
  403324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403328:	b082      	sub	sp, #8
  40332a:	4680      	mov	r8, r0
  40332c:	4689      	mov	r9, r1
  40332e:	4614      	mov	r4, r2
  403330:	f000 fc6a 	bl	403c08 <__locale_mb_cur_max>
  403334:	2801      	cmp	r0, #1
  403336:	d036      	beq.n	4033a6 <__fputwc+0x82>
  403338:	464a      	mov	r2, r9
  40333a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40333e:	a901      	add	r1, sp, #4
  403340:	4640      	mov	r0, r8
  403342:	f002 f87d 	bl	405440 <_wcrtomb_r>
  403346:	1c42      	adds	r2, r0, #1
  403348:	4606      	mov	r6, r0
  40334a:	d025      	beq.n	403398 <__fputwc+0x74>
  40334c:	b3a8      	cbz	r0, 4033ba <__fputwc+0x96>
  40334e:	f89d e004 	ldrb.w	lr, [sp, #4]
  403352:	2500      	movs	r5, #0
  403354:	f10d 0a04 	add.w	sl, sp, #4
  403358:	e009      	b.n	40336e <__fputwc+0x4a>
  40335a:	6823      	ldr	r3, [r4, #0]
  40335c:	1c5a      	adds	r2, r3, #1
  40335e:	6022      	str	r2, [r4, #0]
  403360:	f883 e000 	strb.w	lr, [r3]
  403364:	3501      	adds	r5, #1
  403366:	42b5      	cmp	r5, r6
  403368:	d227      	bcs.n	4033ba <__fputwc+0x96>
  40336a:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40336e:	68a3      	ldr	r3, [r4, #8]
  403370:	3b01      	subs	r3, #1
  403372:	2b00      	cmp	r3, #0
  403374:	60a3      	str	r3, [r4, #8]
  403376:	daf0      	bge.n	40335a <__fputwc+0x36>
  403378:	69a7      	ldr	r7, [r4, #24]
  40337a:	42bb      	cmp	r3, r7
  40337c:	4671      	mov	r1, lr
  40337e:	4622      	mov	r2, r4
  403380:	4640      	mov	r0, r8
  403382:	db02      	blt.n	40338a <__fputwc+0x66>
  403384:	f1be 0f0a 	cmp.w	lr, #10
  403388:	d1e7      	bne.n	40335a <__fputwc+0x36>
  40338a:	f002 f801 	bl	405390 <__swbuf_r>
  40338e:	1c43      	adds	r3, r0, #1
  403390:	d1e8      	bne.n	403364 <__fputwc+0x40>
  403392:	b002      	add	sp, #8
  403394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403398:	89a3      	ldrh	r3, [r4, #12]
  40339a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40339e:	81a3      	strh	r3, [r4, #12]
  4033a0:	b002      	add	sp, #8
  4033a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4033a6:	f109 33ff 	add.w	r3, r9, #4294967295
  4033aa:	2bfe      	cmp	r3, #254	; 0xfe
  4033ac:	d8c4      	bhi.n	403338 <__fputwc+0x14>
  4033ae:	fa5f fe89 	uxtb.w	lr, r9
  4033b2:	4606      	mov	r6, r0
  4033b4:	f88d e004 	strb.w	lr, [sp, #4]
  4033b8:	e7cb      	b.n	403352 <__fputwc+0x2e>
  4033ba:	4648      	mov	r0, r9
  4033bc:	b002      	add	sp, #8
  4033be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4033c2:	bf00      	nop

004033c4 <_fputwc_r>:
  4033c4:	b530      	push	{r4, r5, lr}
  4033c6:	6e53      	ldr	r3, [r2, #100]	; 0x64
  4033c8:	f013 0f01 	tst.w	r3, #1
  4033cc:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  4033d0:	4614      	mov	r4, r2
  4033d2:	b083      	sub	sp, #12
  4033d4:	4605      	mov	r5, r0
  4033d6:	b29a      	uxth	r2, r3
  4033d8:	d101      	bne.n	4033de <_fputwc_r+0x1a>
  4033da:	0590      	lsls	r0, r2, #22
  4033dc:	d51c      	bpl.n	403418 <_fputwc_r+0x54>
  4033de:	0490      	lsls	r0, r2, #18
  4033e0:	d406      	bmi.n	4033f0 <_fputwc_r+0x2c>
  4033e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4033e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  4033e8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4033ec:	81a3      	strh	r3, [r4, #12]
  4033ee:	6662      	str	r2, [r4, #100]	; 0x64
  4033f0:	4628      	mov	r0, r5
  4033f2:	4622      	mov	r2, r4
  4033f4:	f7ff ff96 	bl	403324 <__fputwc>
  4033f8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4033fa:	07da      	lsls	r2, r3, #31
  4033fc:	4605      	mov	r5, r0
  4033fe:	d402      	bmi.n	403406 <_fputwc_r+0x42>
  403400:	89a3      	ldrh	r3, [r4, #12]
  403402:	059b      	lsls	r3, r3, #22
  403404:	d502      	bpl.n	40340c <_fputwc_r+0x48>
  403406:	4628      	mov	r0, r5
  403408:	b003      	add	sp, #12
  40340a:	bd30      	pop	{r4, r5, pc}
  40340c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40340e:	f000 fc21 	bl	403c54 <__retarget_lock_release_recursive>
  403412:	4628      	mov	r0, r5
  403414:	b003      	add	sp, #12
  403416:	bd30      	pop	{r4, r5, pc}
  403418:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40341a:	9101      	str	r1, [sp, #4]
  40341c:	f000 fc18 	bl	403c50 <__retarget_lock_acquire_recursive>
  403420:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403424:	9901      	ldr	r1, [sp, #4]
  403426:	b29a      	uxth	r2, r3
  403428:	e7d9      	b.n	4033de <_fputwc_r+0x1a>
  40342a:	bf00      	nop

0040342c <_fread_r>:
  40342c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403430:	b085      	sub	sp, #20
  403432:	fb02 f703 	mul.w	r7, r2, r3
  403436:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  403438:	2f00      	cmp	r7, #0
  40343a:	d050      	beq.n	4034de <_fread_r+0xb2>
  40343c:	4606      	mov	r6, r0
  40343e:	460d      	mov	r5, r1
  403440:	9301      	str	r3, [sp, #4]
  403442:	9202      	str	r2, [sp, #8]
  403444:	b118      	cbz	r0, 40344e <_fread_r+0x22>
  403446:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403448:	2b00      	cmp	r3, #0
  40344a:	f000 80be 	beq.w	4035ca <_fread_r+0x19e>
  40344e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403450:	f013 0f01 	tst.w	r3, #1
  403454:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403458:	b29a      	uxth	r2, r3
  40345a:	d102      	bne.n	403462 <_fread_r+0x36>
  40345c:	0590      	lsls	r0, r2, #22
  40345e:	f140 80b7 	bpl.w	4035d0 <_fread_r+0x1a4>
  403462:	0491      	lsls	r1, r2, #18
  403464:	d407      	bmi.n	403476 <_fread_r+0x4a>
  403466:	6e62      	ldr	r2, [r4, #100]	; 0x64
  403468:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40346c:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  403470:	81a3      	strh	r3, [r4, #12]
  403472:	b29a      	uxth	r2, r3
  403474:	6661      	str	r1, [r4, #100]	; 0x64
  403476:	f8d4 9004 	ldr.w	r9, [r4, #4]
  40347a:	f1b9 0f00 	cmp.w	r9, #0
  40347e:	db49      	blt.n	403514 <_fread_r+0xe8>
  403480:	0792      	lsls	r2, r2, #30
  403482:	464b      	mov	r3, r9
  403484:	d44c      	bmi.n	403520 <_fread_r+0xf4>
  403486:	46b0      	mov	r8, r6
  403488:	46ba      	mov	sl, r7
  40348a:	464e      	mov	r6, r9
  40348c:	e00e      	b.n	4034ac <_fread_r+0x80>
  40348e:	6821      	ldr	r1, [r4, #0]
  403490:	f000 ffa6 	bl	4043e0 <memcpy>
  403494:	6823      	ldr	r3, [r4, #0]
  403496:	4433      	add	r3, r6
  403498:	6023      	str	r3, [r4, #0]
  40349a:	4621      	mov	r1, r4
  40349c:	4640      	mov	r0, r8
  40349e:	4435      	add	r5, r6
  4034a0:	ebaa 0a06 	sub.w	sl, sl, r6
  4034a4:	f001 fa56 	bl	404954 <__srefill_r>
  4034a8:	bb10      	cbnz	r0, 4034f0 <_fread_r+0xc4>
  4034aa:	6866      	ldr	r6, [r4, #4]
  4034ac:	45b2      	cmp	sl, r6
  4034ae:	4632      	mov	r2, r6
  4034b0:	4628      	mov	r0, r5
  4034b2:	d8ec      	bhi.n	40348e <_fread_r+0x62>
  4034b4:	4652      	mov	r2, sl
  4034b6:	6821      	ldr	r1, [r4, #0]
  4034b8:	f000 ff92 	bl	4043e0 <memcpy>
  4034bc:	6862      	ldr	r2, [r4, #4]
  4034be:	6823      	ldr	r3, [r4, #0]
  4034c0:	eba2 020a 	sub.w	r2, r2, sl
  4034c4:	4453      	add	r3, sl
  4034c6:	6062      	str	r2, [r4, #4]
  4034c8:	6023      	str	r3, [r4, #0]
  4034ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4034cc:	07da      	lsls	r2, r3, #31
  4034ce:	d40a      	bmi.n	4034e6 <_fread_r+0xba>
  4034d0:	89a3      	ldrh	r3, [r4, #12]
  4034d2:	059b      	lsls	r3, r3, #22
  4034d4:	d407      	bmi.n	4034e6 <_fread_r+0xba>
  4034d6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4034d8:	f000 fbbc 	bl	403c54 <__retarget_lock_release_recursive>
  4034dc:	9f01      	ldr	r7, [sp, #4]
  4034de:	4638      	mov	r0, r7
  4034e0:	b005      	add	sp, #20
  4034e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034e6:	9f01      	ldr	r7, [sp, #4]
  4034e8:	4638      	mov	r0, r7
  4034ea:	b005      	add	sp, #20
  4034ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4034f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4034f2:	07d8      	lsls	r0, r3, #31
  4034f4:	d405      	bmi.n	403502 <_fread_r+0xd6>
  4034f6:	89a3      	ldrh	r3, [r4, #12]
  4034f8:	0599      	lsls	r1, r3, #22
  4034fa:	d402      	bmi.n	403502 <_fread_r+0xd6>
  4034fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4034fe:	f000 fba9 	bl	403c54 <__retarget_lock_release_recursive>
  403502:	9b02      	ldr	r3, [sp, #8]
  403504:	eba7 070a 	sub.w	r7, r7, sl
  403508:	fbb7 f7f3 	udiv	r7, r7, r3
  40350c:	4638      	mov	r0, r7
  40350e:	b005      	add	sp, #20
  403510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403514:	2100      	movs	r1, #0
  403516:	0792      	lsls	r2, r2, #30
  403518:	460b      	mov	r3, r1
  40351a:	6061      	str	r1, [r4, #4]
  40351c:	4689      	mov	r9, r1
  40351e:	d5b2      	bpl.n	403486 <_fread_r+0x5a>
  403520:	42bb      	cmp	r3, r7
  403522:	bf28      	it	cs
  403524:	463b      	movcs	r3, r7
  403526:	461a      	mov	r2, r3
  403528:	6821      	ldr	r1, [r4, #0]
  40352a:	9303      	str	r3, [sp, #12]
  40352c:	4628      	mov	r0, r5
  40352e:	f000 ff57 	bl	4043e0 <memcpy>
  403532:	e894 0005 	ldmia.w	r4, {r0, r2}
  403536:	9b03      	ldr	r3, [sp, #12]
  403538:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40353a:	eb00 0903 	add.w	r9, r0, r3
  40353e:	1ad2      	subs	r2, r2, r3
  403540:	f8c4 9000 	str.w	r9, [r4]
  403544:	6062      	str	r2, [r4, #4]
  403546:	eba7 0803 	sub.w	r8, r7, r3
  40354a:	2900      	cmp	r1, #0
  40354c:	d04b      	beq.n	4035e6 <_fread_r+0x1ba>
  40354e:	f1b8 0f00 	cmp.w	r8, #0
  403552:	d0ba      	beq.n	4034ca <_fread_r+0x9e>
  403554:	f104 0040 	add.w	r0, r4, #64	; 0x40
  403558:	4281      	cmp	r1, r0
  40355a:	d005      	beq.n	403568 <_fread_r+0x13c>
  40355c:	4630      	mov	r0, r6
  40355e:	f000 f897 	bl	403690 <_free_r>
  403562:	f8d4 9000 	ldr.w	r9, [r4]
  403566:	9b03      	ldr	r3, [sp, #12]
  403568:	2100      	movs	r1, #0
  40356a:	6321      	str	r1, [r4, #48]	; 0x30
  40356c:	463a      	mov	r2, r7
  40356e:	441d      	add	r5, r3
  403570:	4633      	mov	r3, r6
  403572:	464f      	mov	r7, r9
  403574:	4646      	mov	r6, r8
  403576:	f8d4 b010 	ldr.w	fp, [r4, #16]
  40357a:	f8d4 a014 	ldr.w	sl, [r4, #20]
  40357e:	4698      	mov	r8, r3
  403580:	4691      	mov	r9, r2
  403582:	e001      	b.n	403588 <_fread_r+0x15c>
  403584:	2e00      	cmp	r6, #0
  403586:	d0a0      	beq.n	4034ca <_fread_r+0x9e>
  403588:	6125      	str	r5, [r4, #16]
  40358a:	6166      	str	r6, [r4, #20]
  40358c:	6025      	str	r5, [r4, #0]
  40358e:	4621      	mov	r1, r4
  403590:	4640      	mov	r0, r8
  403592:	f001 f9df 	bl	404954 <__srefill_r>
  403596:	6863      	ldr	r3, [r4, #4]
  403598:	f8c4 b010 	str.w	fp, [r4, #16]
  40359c:	1af6      	subs	r6, r6, r3
  40359e:	441d      	add	r5, r3
  4035a0:	2300      	movs	r3, #0
  4035a2:	f8c4 a014 	str.w	sl, [r4, #20]
  4035a6:	6027      	str	r7, [r4, #0]
  4035a8:	6063      	str	r3, [r4, #4]
  4035aa:	2800      	cmp	r0, #0
  4035ac:	d0ea      	beq.n	403584 <_fread_r+0x158>
  4035ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4035b0:	46b0      	mov	r8, r6
  4035b2:	07de      	lsls	r6, r3, #31
  4035b4:	464f      	mov	r7, r9
  4035b6:	d402      	bmi.n	4035be <_fread_r+0x192>
  4035b8:	89a3      	ldrh	r3, [r4, #12]
  4035ba:	059d      	lsls	r5, r3, #22
  4035bc:	d50f      	bpl.n	4035de <_fread_r+0x1b2>
  4035be:	eba7 0708 	sub.w	r7, r7, r8
  4035c2:	9b02      	ldr	r3, [sp, #8]
  4035c4:	fbb7 f7f3 	udiv	r7, r7, r3
  4035c8:	e789      	b.n	4034de <_fread_r+0xb2>
  4035ca:	f7ff fe59 	bl	403280 <__sinit>
  4035ce:	e73e      	b.n	40344e <_fread_r+0x22>
  4035d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4035d2:	f000 fb3d 	bl	403c50 <__retarget_lock_acquire_recursive>
  4035d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4035da:	b29a      	uxth	r2, r3
  4035dc:	e741      	b.n	403462 <_fread_r+0x36>
  4035de:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4035e0:	f000 fb38 	bl	403c54 <__retarget_lock_release_recursive>
  4035e4:	e7eb      	b.n	4035be <_fread_r+0x192>
  4035e6:	f1b8 0f00 	cmp.w	r8, #0
  4035ea:	d1bf      	bne.n	40356c <_fread_r+0x140>
  4035ec:	e76d      	b.n	4034ca <_fread_r+0x9e>
  4035ee:	bf00      	nop

004035f0 <_malloc_trim_r>:
  4035f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4035f2:	4f24      	ldr	r7, [pc, #144]	; (403684 <_malloc_trim_r+0x94>)
  4035f4:	460c      	mov	r4, r1
  4035f6:	4606      	mov	r6, r0
  4035f8:	f000 fff0 	bl	4045dc <__malloc_lock>
  4035fc:	68bb      	ldr	r3, [r7, #8]
  4035fe:	685d      	ldr	r5, [r3, #4]
  403600:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  403604:	310f      	adds	r1, #15
  403606:	f025 0503 	bic.w	r5, r5, #3
  40360a:	4429      	add	r1, r5
  40360c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  403610:	f021 010f 	bic.w	r1, r1, #15
  403614:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  403618:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40361c:	db07      	blt.n	40362e <_malloc_trim_r+0x3e>
  40361e:	2100      	movs	r1, #0
  403620:	4630      	mov	r0, r6
  403622:	f001 fa21 	bl	404a68 <_sbrk_r>
  403626:	68bb      	ldr	r3, [r7, #8]
  403628:	442b      	add	r3, r5
  40362a:	4298      	cmp	r0, r3
  40362c:	d004      	beq.n	403638 <_malloc_trim_r+0x48>
  40362e:	4630      	mov	r0, r6
  403630:	f000 ffda 	bl	4045e8 <__malloc_unlock>
  403634:	2000      	movs	r0, #0
  403636:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403638:	4261      	negs	r1, r4
  40363a:	4630      	mov	r0, r6
  40363c:	f001 fa14 	bl	404a68 <_sbrk_r>
  403640:	3001      	adds	r0, #1
  403642:	d00d      	beq.n	403660 <_malloc_trim_r+0x70>
  403644:	4b10      	ldr	r3, [pc, #64]	; (403688 <_malloc_trim_r+0x98>)
  403646:	68ba      	ldr	r2, [r7, #8]
  403648:	6819      	ldr	r1, [r3, #0]
  40364a:	1b2d      	subs	r5, r5, r4
  40364c:	f045 0501 	orr.w	r5, r5, #1
  403650:	4630      	mov	r0, r6
  403652:	1b09      	subs	r1, r1, r4
  403654:	6055      	str	r5, [r2, #4]
  403656:	6019      	str	r1, [r3, #0]
  403658:	f000 ffc6 	bl	4045e8 <__malloc_unlock>
  40365c:	2001      	movs	r0, #1
  40365e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403660:	2100      	movs	r1, #0
  403662:	4630      	mov	r0, r6
  403664:	f001 fa00 	bl	404a68 <_sbrk_r>
  403668:	68ba      	ldr	r2, [r7, #8]
  40366a:	1a83      	subs	r3, r0, r2
  40366c:	2b0f      	cmp	r3, #15
  40366e:	ddde      	ble.n	40362e <_malloc_trim_r+0x3e>
  403670:	4c06      	ldr	r4, [pc, #24]	; (40368c <_malloc_trim_r+0x9c>)
  403672:	4905      	ldr	r1, [pc, #20]	; (403688 <_malloc_trim_r+0x98>)
  403674:	6824      	ldr	r4, [r4, #0]
  403676:	f043 0301 	orr.w	r3, r3, #1
  40367a:	1b00      	subs	r0, r0, r4
  40367c:	6053      	str	r3, [r2, #4]
  40367e:	6008      	str	r0, [r1, #0]
  403680:	e7d5      	b.n	40362e <_malloc_trim_r+0x3e>
  403682:	bf00      	nop
  403684:	200005a8 	.word	0x200005a8
  403688:	20000afc 	.word	0x20000afc
  40368c:	200009b0 	.word	0x200009b0

00403690 <_free_r>:
  403690:	2900      	cmp	r1, #0
  403692:	d044      	beq.n	40371e <_free_r+0x8e>
  403694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403698:	460d      	mov	r5, r1
  40369a:	4680      	mov	r8, r0
  40369c:	f000 ff9e 	bl	4045dc <__malloc_lock>
  4036a0:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4036a4:	4969      	ldr	r1, [pc, #420]	; (40384c <_free_r+0x1bc>)
  4036a6:	f027 0301 	bic.w	r3, r7, #1
  4036aa:	f1a5 0408 	sub.w	r4, r5, #8
  4036ae:	18e2      	adds	r2, r4, r3
  4036b0:	688e      	ldr	r6, [r1, #8]
  4036b2:	6850      	ldr	r0, [r2, #4]
  4036b4:	42b2      	cmp	r2, r6
  4036b6:	f020 0003 	bic.w	r0, r0, #3
  4036ba:	d05e      	beq.n	40377a <_free_r+0xea>
  4036bc:	07fe      	lsls	r6, r7, #31
  4036be:	6050      	str	r0, [r2, #4]
  4036c0:	d40b      	bmi.n	4036da <_free_r+0x4a>
  4036c2:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4036c6:	1be4      	subs	r4, r4, r7
  4036c8:	f101 0e08 	add.w	lr, r1, #8
  4036cc:	68a5      	ldr	r5, [r4, #8]
  4036ce:	4575      	cmp	r5, lr
  4036d0:	443b      	add	r3, r7
  4036d2:	d06d      	beq.n	4037b0 <_free_r+0x120>
  4036d4:	68e7      	ldr	r7, [r4, #12]
  4036d6:	60ef      	str	r7, [r5, #12]
  4036d8:	60bd      	str	r5, [r7, #8]
  4036da:	1815      	adds	r5, r2, r0
  4036dc:	686d      	ldr	r5, [r5, #4]
  4036de:	07ed      	lsls	r5, r5, #31
  4036e0:	d53e      	bpl.n	403760 <_free_r+0xd0>
  4036e2:	f043 0201 	orr.w	r2, r3, #1
  4036e6:	6062      	str	r2, [r4, #4]
  4036e8:	50e3      	str	r3, [r4, r3]
  4036ea:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4036ee:	d217      	bcs.n	403720 <_free_r+0x90>
  4036f0:	08db      	lsrs	r3, r3, #3
  4036f2:	1c58      	adds	r0, r3, #1
  4036f4:	109a      	asrs	r2, r3, #2
  4036f6:	684d      	ldr	r5, [r1, #4]
  4036f8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4036fc:	60a7      	str	r7, [r4, #8]
  4036fe:	2301      	movs	r3, #1
  403700:	4093      	lsls	r3, r2
  403702:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  403706:	432b      	orrs	r3, r5
  403708:	3a08      	subs	r2, #8
  40370a:	60e2      	str	r2, [r4, #12]
  40370c:	604b      	str	r3, [r1, #4]
  40370e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  403712:	60fc      	str	r4, [r7, #12]
  403714:	4640      	mov	r0, r8
  403716:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40371a:	f000 bf65 	b.w	4045e8 <__malloc_unlock>
  40371e:	4770      	bx	lr
  403720:	0a5a      	lsrs	r2, r3, #9
  403722:	2a04      	cmp	r2, #4
  403724:	d852      	bhi.n	4037cc <_free_r+0x13c>
  403726:	099a      	lsrs	r2, r3, #6
  403728:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40372c:	00ff      	lsls	r7, r7, #3
  40372e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  403732:	19c8      	adds	r0, r1, r7
  403734:	59ca      	ldr	r2, [r1, r7]
  403736:	3808      	subs	r0, #8
  403738:	4290      	cmp	r0, r2
  40373a:	d04f      	beq.n	4037dc <_free_r+0x14c>
  40373c:	6851      	ldr	r1, [r2, #4]
  40373e:	f021 0103 	bic.w	r1, r1, #3
  403742:	428b      	cmp	r3, r1
  403744:	d232      	bcs.n	4037ac <_free_r+0x11c>
  403746:	6892      	ldr	r2, [r2, #8]
  403748:	4290      	cmp	r0, r2
  40374a:	d1f7      	bne.n	40373c <_free_r+0xac>
  40374c:	68c3      	ldr	r3, [r0, #12]
  40374e:	60a0      	str	r0, [r4, #8]
  403750:	60e3      	str	r3, [r4, #12]
  403752:	609c      	str	r4, [r3, #8]
  403754:	60c4      	str	r4, [r0, #12]
  403756:	4640      	mov	r0, r8
  403758:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40375c:	f000 bf44 	b.w	4045e8 <__malloc_unlock>
  403760:	6895      	ldr	r5, [r2, #8]
  403762:	4f3b      	ldr	r7, [pc, #236]	; (403850 <_free_r+0x1c0>)
  403764:	42bd      	cmp	r5, r7
  403766:	4403      	add	r3, r0
  403768:	d040      	beq.n	4037ec <_free_r+0x15c>
  40376a:	68d0      	ldr	r0, [r2, #12]
  40376c:	60e8      	str	r0, [r5, #12]
  40376e:	f043 0201 	orr.w	r2, r3, #1
  403772:	6085      	str	r5, [r0, #8]
  403774:	6062      	str	r2, [r4, #4]
  403776:	50e3      	str	r3, [r4, r3]
  403778:	e7b7      	b.n	4036ea <_free_r+0x5a>
  40377a:	07ff      	lsls	r7, r7, #31
  40377c:	4403      	add	r3, r0
  40377e:	d407      	bmi.n	403790 <_free_r+0x100>
  403780:	f855 2c08 	ldr.w	r2, [r5, #-8]
  403784:	1aa4      	subs	r4, r4, r2
  403786:	4413      	add	r3, r2
  403788:	68a0      	ldr	r0, [r4, #8]
  40378a:	68e2      	ldr	r2, [r4, #12]
  40378c:	60c2      	str	r2, [r0, #12]
  40378e:	6090      	str	r0, [r2, #8]
  403790:	4a30      	ldr	r2, [pc, #192]	; (403854 <_free_r+0x1c4>)
  403792:	6812      	ldr	r2, [r2, #0]
  403794:	f043 0001 	orr.w	r0, r3, #1
  403798:	4293      	cmp	r3, r2
  40379a:	6060      	str	r0, [r4, #4]
  40379c:	608c      	str	r4, [r1, #8]
  40379e:	d3b9      	bcc.n	403714 <_free_r+0x84>
  4037a0:	4b2d      	ldr	r3, [pc, #180]	; (403858 <_free_r+0x1c8>)
  4037a2:	4640      	mov	r0, r8
  4037a4:	6819      	ldr	r1, [r3, #0]
  4037a6:	f7ff ff23 	bl	4035f0 <_malloc_trim_r>
  4037aa:	e7b3      	b.n	403714 <_free_r+0x84>
  4037ac:	4610      	mov	r0, r2
  4037ae:	e7cd      	b.n	40374c <_free_r+0xbc>
  4037b0:	1811      	adds	r1, r2, r0
  4037b2:	6849      	ldr	r1, [r1, #4]
  4037b4:	07c9      	lsls	r1, r1, #31
  4037b6:	d444      	bmi.n	403842 <_free_r+0x1b2>
  4037b8:	6891      	ldr	r1, [r2, #8]
  4037ba:	68d2      	ldr	r2, [r2, #12]
  4037bc:	60ca      	str	r2, [r1, #12]
  4037be:	4403      	add	r3, r0
  4037c0:	f043 0001 	orr.w	r0, r3, #1
  4037c4:	6091      	str	r1, [r2, #8]
  4037c6:	6060      	str	r0, [r4, #4]
  4037c8:	50e3      	str	r3, [r4, r3]
  4037ca:	e7a3      	b.n	403714 <_free_r+0x84>
  4037cc:	2a14      	cmp	r2, #20
  4037ce:	d816      	bhi.n	4037fe <_free_r+0x16e>
  4037d0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4037d4:	00ff      	lsls	r7, r7, #3
  4037d6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4037da:	e7aa      	b.n	403732 <_free_r+0xa2>
  4037dc:	10aa      	asrs	r2, r5, #2
  4037de:	2301      	movs	r3, #1
  4037e0:	684d      	ldr	r5, [r1, #4]
  4037e2:	4093      	lsls	r3, r2
  4037e4:	432b      	orrs	r3, r5
  4037e6:	604b      	str	r3, [r1, #4]
  4037e8:	4603      	mov	r3, r0
  4037ea:	e7b0      	b.n	40374e <_free_r+0xbe>
  4037ec:	f043 0201 	orr.w	r2, r3, #1
  4037f0:	614c      	str	r4, [r1, #20]
  4037f2:	610c      	str	r4, [r1, #16]
  4037f4:	60e5      	str	r5, [r4, #12]
  4037f6:	60a5      	str	r5, [r4, #8]
  4037f8:	6062      	str	r2, [r4, #4]
  4037fa:	50e3      	str	r3, [r4, r3]
  4037fc:	e78a      	b.n	403714 <_free_r+0x84>
  4037fe:	2a54      	cmp	r2, #84	; 0x54
  403800:	d806      	bhi.n	403810 <_free_r+0x180>
  403802:	0b1a      	lsrs	r2, r3, #12
  403804:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  403808:	00ff      	lsls	r7, r7, #3
  40380a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40380e:	e790      	b.n	403732 <_free_r+0xa2>
  403810:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403814:	d806      	bhi.n	403824 <_free_r+0x194>
  403816:	0bda      	lsrs	r2, r3, #15
  403818:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40381c:	00ff      	lsls	r7, r7, #3
  40381e:	f102 0577 	add.w	r5, r2, #119	; 0x77
  403822:	e786      	b.n	403732 <_free_r+0xa2>
  403824:	f240 5054 	movw	r0, #1364	; 0x554
  403828:	4282      	cmp	r2, r0
  40382a:	d806      	bhi.n	40383a <_free_r+0x1aa>
  40382c:	0c9a      	lsrs	r2, r3, #18
  40382e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  403832:	00ff      	lsls	r7, r7, #3
  403834:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  403838:	e77b      	b.n	403732 <_free_r+0xa2>
  40383a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40383e:	257e      	movs	r5, #126	; 0x7e
  403840:	e777      	b.n	403732 <_free_r+0xa2>
  403842:	f043 0101 	orr.w	r1, r3, #1
  403846:	6061      	str	r1, [r4, #4]
  403848:	6013      	str	r3, [r2, #0]
  40384a:	e763      	b.n	403714 <_free_r+0x84>
  40384c:	200005a8 	.word	0x200005a8
  403850:	200005b0 	.word	0x200005b0
  403854:	200009b4 	.word	0x200009b4
  403858:	20000b2c 	.word	0x20000b2c

0040385c <__sfvwrite_r>:
  40385c:	6893      	ldr	r3, [r2, #8]
  40385e:	2b00      	cmp	r3, #0
  403860:	d073      	beq.n	40394a <__sfvwrite_r+0xee>
  403862:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403866:	898b      	ldrh	r3, [r1, #12]
  403868:	b083      	sub	sp, #12
  40386a:	460c      	mov	r4, r1
  40386c:	0719      	lsls	r1, r3, #28
  40386e:	9000      	str	r0, [sp, #0]
  403870:	4616      	mov	r6, r2
  403872:	d526      	bpl.n	4038c2 <__sfvwrite_r+0x66>
  403874:	6922      	ldr	r2, [r4, #16]
  403876:	b322      	cbz	r2, 4038c2 <__sfvwrite_r+0x66>
  403878:	f013 0002 	ands.w	r0, r3, #2
  40387c:	6835      	ldr	r5, [r6, #0]
  40387e:	d02c      	beq.n	4038da <__sfvwrite_r+0x7e>
  403880:	f04f 0900 	mov.w	r9, #0
  403884:	4fb0      	ldr	r7, [pc, #704]	; (403b48 <__sfvwrite_r+0x2ec>)
  403886:	46c8      	mov	r8, r9
  403888:	46b2      	mov	sl, r6
  40388a:	45b8      	cmp	r8, r7
  40388c:	4643      	mov	r3, r8
  40388e:	464a      	mov	r2, r9
  403890:	bf28      	it	cs
  403892:	463b      	movcs	r3, r7
  403894:	9800      	ldr	r0, [sp, #0]
  403896:	f1b8 0f00 	cmp.w	r8, #0
  40389a:	d050      	beq.n	40393e <__sfvwrite_r+0xe2>
  40389c:	69e1      	ldr	r1, [r4, #28]
  40389e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4038a0:	47b0      	blx	r6
  4038a2:	2800      	cmp	r0, #0
  4038a4:	dd58      	ble.n	403958 <__sfvwrite_r+0xfc>
  4038a6:	f8da 3008 	ldr.w	r3, [sl, #8]
  4038aa:	1a1b      	subs	r3, r3, r0
  4038ac:	4481      	add	r9, r0
  4038ae:	eba8 0800 	sub.w	r8, r8, r0
  4038b2:	f8ca 3008 	str.w	r3, [sl, #8]
  4038b6:	2b00      	cmp	r3, #0
  4038b8:	d1e7      	bne.n	40388a <__sfvwrite_r+0x2e>
  4038ba:	2000      	movs	r0, #0
  4038bc:	b003      	add	sp, #12
  4038be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038c2:	4621      	mov	r1, r4
  4038c4:	9800      	ldr	r0, [sp, #0]
  4038c6:	f7ff fb5d 	bl	402f84 <__swsetup_r>
  4038ca:	2800      	cmp	r0, #0
  4038cc:	f040 8133 	bne.w	403b36 <__sfvwrite_r+0x2da>
  4038d0:	89a3      	ldrh	r3, [r4, #12]
  4038d2:	6835      	ldr	r5, [r6, #0]
  4038d4:	f013 0002 	ands.w	r0, r3, #2
  4038d8:	d1d2      	bne.n	403880 <__sfvwrite_r+0x24>
  4038da:	f013 0901 	ands.w	r9, r3, #1
  4038de:	d145      	bne.n	40396c <__sfvwrite_r+0x110>
  4038e0:	464f      	mov	r7, r9
  4038e2:	9601      	str	r6, [sp, #4]
  4038e4:	b337      	cbz	r7, 403934 <__sfvwrite_r+0xd8>
  4038e6:	059a      	lsls	r2, r3, #22
  4038e8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4038ec:	f140 8083 	bpl.w	4039f6 <__sfvwrite_r+0x19a>
  4038f0:	4547      	cmp	r7, r8
  4038f2:	46c3      	mov	fp, r8
  4038f4:	f0c0 80ab 	bcc.w	403a4e <__sfvwrite_r+0x1f2>
  4038f8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4038fc:	f040 80ac 	bne.w	403a58 <__sfvwrite_r+0x1fc>
  403900:	6820      	ldr	r0, [r4, #0]
  403902:	46ba      	mov	sl, r7
  403904:	465a      	mov	r2, fp
  403906:	4649      	mov	r1, r9
  403908:	f000 fe04 	bl	404514 <memmove>
  40390c:	68a2      	ldr	r2, [r4, #8]
  40390e:	6823      	ldr	r3, [r4, #0]
  403910:	eba2 0208 	sub.w	r2, r2, r8
  403914:	445b      	add	r3, fp
  403916:	60a2      	str	r2, [r4, #8]
  403918:	6023      	str	r3, [r4, #0]
  40391a:	9a01      	ldr	r2, [sp, #4]
  40391c:	6893      	ldr	r3, [r2, #8]
  40391e:	eba3 030a 	sub.w	r3, r3, sl
  403922:	44d1      	add	r9, sl
  403924:	eba7 070a 	sub.w	r7, r7, sl
  403928:	6093      	str	r3, [r2, #8]
  40392a:	2b00      	cmp	r3, #0
  40392c:	d0c5      	beq.n	4038ba <__sfvwrite_r+0x5e>
  40392e:	89a3      	ldrh	r3, [r4, #12]
  403930:	2f00      	cmp	r7, #0
  403932:	d1d8      	bne.n	4038e6 <__sfvwrite_r+0x8a>
  403934:	f8d5 9000 	ldr.w	r9, [r5]
  403938:	686f      	ldr	r7, [r5, #4]
  40393a:	3508      	adds	r5, #8
  40393c:	e7d2      	b.n	4038e4 <__sfvwrite_r+0x88>
  40393e:	f8d5 9000 	ldr.w	r9, [r5]
  403942:	f8d5 8004 	ldr.w	r8, [r5, #4]
  403946:	3508      	adds	r5, #8
  403948:	e79f      	b.n	40388a <__sfvwrite_r+0x2e>
  40394a:	2000      	movs	r0, #0
  40394c:	4770      	bx	lr
  40394e:	4621      	mov	r1, r4
  403950:	9800      	ldr	r0, [sp, #0]
  403952:	f7ff fc2b 	bl	4031ac <_fflush_r>
  403956:	b370      	cbz	r0, 4039b6 <__sfvwrite_r+0x15a>
  403958:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40395c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403960:	f04f 30ff 	mov.w	r0, #4294967295
  403964:	81a3      	strh	r3, [r4, #12]
  403966:	b003      	add	sp, #12
  403968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40396c:	4681      	mov	r9, r0
  40396e:	4633      	mov	r3, r6
  403970:	464e      	mov	r6, r9
  403972:	46a8      	mov	r8, r5
  403974:	469a      	mov	sl, r3
  403976:	464d      	mov	r5, r9
  403978:	b34e      	cbz	r6, 4039ce <__sfvwrite_r+0x172>
  40397a:	b380      	cbz	r0, 4039de <__sfvwrite_r+0x182>
  40397c:	6820      	ldr	r0, [r4, #0]
  40397e:	6923      	ldr	r3, [r4, #16]
  403980:	6962      	ldr	r2, [r4, #20]
  403982:	45b1      	cmp	r9, r6
  403984:	46cb      	mov	fp, r9
  403986:	bf28      	it	cs
  403988:	46b3      	movcs	fp, r6
  40398a:	4298      	cmp	r0, r3
  40398c:	465f      	mov	r7, fp
  40398e:	d904      	bls.n	40399a <__sfvwrite_r+0x13e>
  403990:	68a3      	ldr	r3, [r4, #8]
  403992:	4413      	add	r3, r2
  403994:	459b      	cmp	fp, r3
  403996:	f300 80a6 	bgt.w	403ae6 <__sfvwrite_r+0x28a>
  40399a:	4593      	cmp	fp, r2
  40399c:	db4b      	blt.n	403a36 <__sfvwrite_r+0x1da>
  40399e:	4613      	mov	r3, r2
  4039a0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4039a2:	69e1      	ldr	r1, [r4, #28]
  4039a4:	9800      	ldr	r0, [sp, #0]
  4039a6:	462a      	mov	r2, r5
  4039a8:	47b8      	blx	r7
  4039aa:	1e07      	subs	r7, r0, #0
  4039ac:	ddd4      	ble.n	403958 <__sfvwrite_r+0xfc>
  4039ae:	ebb9 0907 	subs.w	r9, r9, r7
  4039b2:	d0cc      	beq.n	40394e <__sfvwrite_r+0xf2>
  4039b4:	2001      	movs	r0, #1
  4039b6:	f8da 3008 	ldr.w	r3, [sl, #8]
  4039ba:	1bdb      	subs	r3, r3, r7
  4039bc:	443d      	add	r5, r7
  4039be:	1bf6      	subs	r6, r6, r7
  4039c0:	f8ca 3008 	str.w	r3, [sl, #8]
  4039c4:	2b00      	cmp	r3, #0
  4039c6:	f43f af78 	beq.w	4038ba <__sfvwrite_r+0x5e>
  4039ca:	2e00      	cmp	r6, #0
  4039cc:	d1d5      	bne.n	40397a <__sfvwrite_r+0x11e>
  4039ce:	f108 0308 	add.w	r3, r8, #8
  4039d2:	e913 0060 	ldmdb	r3, {r5, r6}
  4039d6:	4698      	mov	r8, r3
  4039d8:	3308      	adds	r3, #8
  4039da:	2e00      	cmp	r6, #0
  4039dc:	d0f9      	beq.n	4039d2 <__sfvwrite_r+0x176>
  4039de:	4632      	mov	r2, r6
  4039e0:	210a      	movs	r1, #10
  4039e2:	4628      	mov	r0, r5
  4039e4:	f000 fcac 	bl	404340 <memchr>
  4039e8:	2800      	cmp	r0, #0
  4039ea:	f000 80a1 	beq.w	403b30 <__sfvwrite_r+0x2d4>
  4039ee:	3001      	adds	r0, #1
  4039f0:	eba0 0905 	sub.w	r9, r0, r5
  4039f4:	e7c2      	b.n	40397c <__sfvwrite_r+0x120>
  4039f6:	6820      	ldr	r0, [r4, #0]
  4039f8:	6923      	ldr	r3, [r4, #16]
  4039fa:	4298      	cmp	r0, r3
  4039fc:	d802      	bhi.n	403a04 <__sfvwrite_r+0x1a8>
  4039fe:	6963      	ldr	r3, [r4, #20]
  403a00:	429f      	cmp	r7, r3
  403a02:	d25d      	bcs.n	403ac0 <__sfvwrite_r+0x264>
  403a04:	45b8      	cmp	r8, r7
  403a06:	bf28      	it	cs
  403a08:	46b8      	movcs	r8, r7
  403a0a:	4642      	mov	r2, r8
  403a0c:	4649      	mov	r1, r9
  403a0e:	f000 fd81 	bl	404514 <memmove>
  403a12:	68a3      	ldr	r3, [r4, #8]
  403a14:	6822      	ldr	r2, [r4, #0]
  403a16:	eba3 0308 	sub.w	r3, r3, r8
  403a1a:	4442      	add	r2, r8
  403a1c:	60a3      	str	r3, [r4, #8]
  403a1e:	6022      	str	r2, [r4, #0]
  403a20:	b10b      	cbz	r3, 403a26 <__sfvwrite_r+0x1ca>
  403a22:	46c2      	mov	sl, r8
  403a24:	e779      	b.n	40391a <__sfvwrite_r+0xbe>
  403a26:	4621      	mov	r1, r4
  403a28:	9800      	ldr	r0, [sp, #0]
  403a2a:	f7ff fbbf 	bl	4031ac <_fflush_r>
  403a2e:	2800      	cmp	r0, #0
  403a30:	d192      	bne.n	403958 <__sfvwrite_r+0xfc>
  403a32:	46c2      	mov	sl, r8
  403a34:	e771      	b.n	40391a <__sfvwrite_r+0xbe>
  403a36:	465a      	mov	r2, fp
  403a38:	4629      	mov	r1, r5
  403a3a:	f000 fd6b 	bl	404514 <memmove>
  403a3e:	68a2      	ldr	r2, [r4, #8]
  403a40:	6823      	ldr	r3, [r4, #0]
  403a42:	eba2 020b 	sub.w	r2, r2, fp
  403a46:	445b      	add	r3, fp
  403a48:	60a2      	str	r2, [r4, #8]
  403a4a:	6023      	str	r3, [r4, #0]
  403a4c:	e7af      	b.n	4039ae <__sfvwrite_r+0x152>
  403a4e:	6820      	ldr	r0, [r4, #0]
  403a50:	46b8      	mov	r8, r7
  403a52:	46ba      	mov	sl, r7
  403a54:	46bb      	mov	fp, r7
  403a56:	e755      	b.n	403904 <__sfvwrite_r+0xa8>
  403a58:	6962      	ldr	r2, [r4, #20]
  403a5a:	6820      	ldr	r0, [r4, #0]
  403a5c:	6921      	ldr	r1, [r4, #16]
  403a5e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  403a62:	eba0 0a01 	sub.w	sl, r0, r1
  403a66:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  403a6a:	f10a 0001 	add.w	r0, sl, #1
  403a6e:	ea4f 0868 	mov.w	r8, r8, asr #1
  403a72:	4438      	add	r0, r7
  403a74:	4540      	cmp	r0, r8
  403a76:	4642      	mov	r2, r8
  403a78:	bf84      	itt	hi
  403a7a:	4680      	movhi	r8, r0
  403a7c:	4642      	movhi	r2, r8
  403a7e:	055b      	lsls	r3, r3, #21
  403a80:	d544      	bpl.n	403b0c <__sfvwrite_r+0x2b0>
  403a82:	4611      	mov	r1, r2
  403a84:	9800      	ldr	r0, [sp, #0]
  403a86:	f000 f967 	bl	403d58 <_malloc_r>
  403a8a:	4683      	mov	fp, r0
  403a8c:	2800      	cmp	r0, #0
  403a8e:	d055      	beq.n	403b3c <__sfvwrite_r+0x2e0>
  403a90:	4652      	mov	r2, sl
  403a92:	6921      	ldr	r1, [r4, #16]
  403a94:	f000 fca4 	bl	4043e0 <memcpy>
  403a98:	89a3      	ldrh	r3, [r4, #12]
  403a9a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  403a9e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403aa2:	81a3      	strh	r3, [r4, #12]
  403aa4:	eb0b 000a 	add.w	r0, fp, sl
  403aa8:	eba8 030a 	sub.w	r3, r8, sl
  403aac:	f8c4 b010 	str.w	fp, [r4, #16]
  403ab0:	f8c4 8014 	str.w	r8, [r4, #20]
  403ab4:	6020      	str	r0, [r4, #0]
  403ab6:	60a3      	str	r3, [r4, #8]
  403ab8:	46b8      	mov	r8, r7
  403aba:	46ba      	mov	sl, r7
  403abc:	46bb      	mov	fp, r7
  403abe:	e721      	b.n	403904 <__sfvwrite_r+0xa8>
  403ac0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  403ac4:	42b9      	cmp	r1, r7
  403ac6:	bf28      	it	cs
  403ac8:	4639      	movcs	r1, r7
  403aca:	464a      	mov	r2, r9
  403acc:	fb91 f1f3 	sdiv	r1, r1, r3
  403ad0:	9800      	ldr	r0, [sp, #0]
  403ad2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  403ad4:	fb03 f301 	mul.w	r3, r3, r1
  403ad8:	69e1      	ldr	r1, [r4, #28]
  403ada:	47b0      	blx	r6
  403adc:	f1b0 0a00 	subs.w	sl, r0, #0
  403ae0:	f73f af1b 	bgt.w	40391a <__sfvwrite_r+0xbe>
  403ae4:	e738      	b.n	403958 <__sfvwrite_r+0xfc>
  403ae6:	461a      	mov	r2, r3
  403ae8:	4629      	mov	r1, r5
  403aea:	9301      	str	r3, [sp, #4]
  403aec:	f000 fd12 	bl	404514 <memmove>
  403af0:	6822      	ldr	r2, [r4, #0]
  403af2:	9b01      	ldr	r3, [sp, #4]
  403af4:	9800      	ldr	r0, [sp, #0]
  403af6:	441a      	add	r2, r3
  403af8:	6022      	str	r2, [r4, #0]
  403afa:	4621      	mov	r1, r4
  403afc:	f7ff fb56 	bl	4031ac <_fflush_r>
  403b00:	9b01      	ldr	r3, [sp, #4]
  403b02:	2800      	cmp	r0, #0
  403b04:	f47f af28 	bne.w	403958 <__sfvwrite_r+0xfc>
  403b08:	461f      	mov	r7, r3
  403b0a:	e750      	b.n	4039ae <__sfvwrite_r+0x152>
  403b0c:	9800      	ldr	r0, [sp, #0]
  403b0e:	f000 fd71 	bl	4045f4 <_realloc_r>
  403b12:	4683      	mov	fp, r0
  403b14:	2800      	cmp	r0, #0
  403b16:	d1c5      	bne.n	403aa4 <__sfvwrite_r+0x248>
  403b18:	9d00      	ldr	r5, [sp, #0]
  403b1a:	6921      	ldr	r1, [r4, #16]
  403b1c:	4628      	mov	r0, r5
  403b1e:	f7ff fdb7 	bl	403690 <_free_r>
  403b22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b26:	220c      	movs	r2, #12
  403b28:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  403b2c:	602a      	str	r2, [r5, #0]
  403b2e:	e715      	b.n	40395c <__sfvwrite_r+0x100>
  403b30:	f106 0901 	add.w	r9, r6, #1
  403b34:	e722      	b.n	40397c <__sfvwrite_r+0x120>
  403b36:	f04f 30ff 	mov.w	r0, #4294967295
  403b3a:	e6bf      	b.n	4038bc <__sfvwrite_r+0x60>
  403b3c:	9a00      	ldr	r2, [sp, #0]
  403b3e:	230c      	movs	r3, #12
  403b40:	6013      	str	r3, [r2, #0]
  403b42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403b46:	e709      	b.n	40395c <__sfvwrite_r+0x100>
  403b48:	7ffffc00 	.word	0x7ffffc00

00403b4c <_fwalk>:
  403b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403b50:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403b54:	d01b      	beq.n	403b8e <_fwalk+0x42>
  403b56:	4688      	mov	r8, r1
  403b58:	2600      	movs	r6, #0
  403b5a:	687d      	ldr	r5, [r7, #4]
  403b5c:	68bc      	ldr	r4, [r7, #8]
  403b5e:	3d01      	subs	r5, #1
  403b60:	d40f      	bmi.n	403b82 <_fwalk+0x36>
  403b62:	89a3      	ldrh	r3, [r4, #12]
  403b64:	2b01      	cmp	r3, #1
  403b66:	f105 35ff 	add.w	r5, r5, #4294967295
  403b6a:	d906      	bls.n	403b7a <_fwalk+0x2e>
  403b6c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403b70:	3301      	adds	r3, #1
  403b72:	4620      	mov	r0, r4
  403b74:	d001      	beq.n	403b7a <_fwalk+0x2e>
  403b76:	47c0      	blx	r8
  403b78:	4306      	orrs	r6, r0
  403b7a:	1c6b      	adds	r3, r5, #1
  403b7c:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403b80:	d1ef      	bne.n	403b62 <_fwalk+0x16>
  403b82:	683f      	ldr	r7, [r7, #0]
  403b84:	2f00      	cmp	r7, #0
  403b86:	d1e8      	bne.n	403b5a <_fwalk+0xe>
  403b88:	4630      	mov	r0, r6
  403b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403b8e:	463e      	mov	r6, r7
  403b90:	4630      	mov	r0, r6
  403b92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403b96:	bf00      	nop

00403b98 <_fwalk_reent>:
  403b98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  403b9c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403ba0:	d01f      	beq.n	403be2 <_fwalk_reent+0x4a>
  403ba2:	4688      	mov	r8, r1
  403ba4:	4606      	mov	r6, r0
  403ba6:	f04f 0900 	mov.w	r9, #0
  403baa:	687d      	ldr	r5, [r7, #4]
  403bac:	68bc      	ldr	r4, [r7, #8]
  403bae:	3d01      	subs	r5, #1
  403bb0:	d411      	bmi.n	403bd6 <_fwalk_reent+0x3e>
  403bb2:	89a3      	ldrh	r3, [r4, #12]
  403bb4:	2b01      	cmp	r3, #1
  403bb6:	f105 35ff 	add.w	r5, r5, #4294967295
  403bba:	d908      	bls.n	403bce <_fwalk_reent+0x36>
  403bbc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403bc0:	3301      	adds	r3, #1
  403bc2:	4621      	mov	r1, r4
  403bc4:	4630      	mov	r0, r6
  403bc6:	d002      	beq.n	403bce <_fwalk_reent+0x36>
  403bc8:	47c0      	blx	r8
  403bca:	ea49 0900 	orr.w	r9, r9, r0
  403bce:	1c6b      	adds	r3, r5, #1
  403bd0:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403bd4:	d1ed      	bne.n	403bb2 <_fwalk_reent+0x1a>
  403bd6:	683f      	ldr	r7, [r7, #0]
  403bd8:	2f00      	cmp	r7, #0
  403bda:	d1e6      	bne.n	403baa <_fwalk_reent+0x12>
  403bdc:	4648      	mov	r0, r9
  403bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403be2:	46b9      	mov	r9, r7
  403be4:	4648      	mov	r0, r9
  403be6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403bea:	bf00      	nop

00403bec <iswspace>:
  403bec:	28ff      	cmp	r0, #255	; 0xff
  403bee:	d901      	bls.n	403bf4 <iswspace+0x8>
  403bf0:	2000      	movs	r0, #0
  403bf2:	4770      	bx	lr
  403bf4:	b510      	push	{r4, lr}
  403bf6:	4604      	mov	r4, r0
  403bf8:	f000 f818 	bl	403c2c <__locale_ctype_ptr>
  403bfc:	4420      	add	r0, r4
  403bfe:	7840      	ldrb	r0, [r0, #1]
  403c00:	f000 0008 	and.w	r0, r0, #8
  403c04:	bd10      	pop	{r4, pc}
  403c06:	bf00      	nop

00403c08 <__locale_mb_cur_max>:
  403c08:	4b04      	ldr	r3, [pc, #16]	; (403c1c <__locale_mb_cur_max+0x14>)
  403c0a:	4a05      	ldr	r2, [pc, #20]	; (403c20 <__locale_mb_cur_max+0x18>)
  403c0c:	681b      	ldr	r3, [r3, #0]
  403c0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  403c10:	2b00      	cmp	r3, #0
  403c12:	bf08      	it	eq
  403c14:	4613      	moveq	r3, r2
  403c16:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  403c1a:	4770      	bx	lr
  403c1c:	2000000c 	.word	0x2000000c
  403c20:	2000043c 	.word	0x2000043c

00403c24 <__locale_ctype_ptr_l>:
  403c24:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
  403c28:	4770      	bx	lr
  403c2a:	bf00      	nop

00403c2c <__locale_ctype_ptr>:
  403c2c:	4b04      	ldr	r3, [pc, #16]	; (403c40 <__locale_ctype_ptr+0x14>)
  403c2e:	4a05      	ldr	r2, [pc, #20]	; (403c44 <__locale_ctype_ptr+0x18>)
  403c30:	681b      	ldr	r3, [r3, #0]
  403c32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  403c34:	2b00      	cmp	r3, #0
  403c36:	bf08      	it	eq
  403c38:	4613      	moveq	r3, r2
  403c3a:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
  403c3e:	4770      	bx	lr
  403c40:	2000000c 	.word	0x2000000c
  403c44:	2000043c 	.word	0x2000043c

00403c48 <__retarget_lock_init_recursive>:
  403c48:	4770      	bx	lr
  403c4a:	bf00      	nop

00403c4c <__retarget_lock_close_recursive>:
  403c4c:	4770      	bx	lr
  403c4e:	bf00      	nop

00403c50 <__retarget_lock_acquire_recursive>:
  403c50:	4770      	bx	lr
  403c52:	bf00      	nop

00403c54 <__retarget_lock_release_recursive>:
  403c54:	4770      	bx	lr
  403c56:	bf00      	nop

00403c58 <__swhatbuf_r>:
  403c58:	b570      	push	{r4, r5, r6, lr}
  403c5a:	460c      	mov	r4, r1
  403c5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403c60:	2900      	cmp	r1, #0
  403c62:	b090      	sub	sp, #64	; 0x40
  403c64:	4615      	mov	r5, r2
  403c66:	461e      	mov	r6, r3
  403c68:	db14      	blt.n	403c94 <__swhatbuf_r+0x3c>
  403c6a:	aa01      	add	r2, sp, #4
  403c6c:	f001 fd0c 	bl	405688 <_fstat_r>
  403c70:	2800      	cmp	r0, #0
  403c72:	db0f      	blt.n	403c94 <__swhatbuf_r+0x3c>
  403c74:	9a02      	ldr	r2, [sp, #8]
  403c76:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  403c7a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  403c7e:	fab2 f282 	clz	r2, r2
  403c82:	0952      	lsrs	r2, r2, #5
  403c84:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403c88:	f44f 6000 	mov.w	r0, #2048	; 0x800
  403c8c:	6032      	str	r2, [r6, #0]
  403c8e:	602b      	str	r3, [r5, #0]
  403c90:	b010      	add	sp, #64	; 0x40
  403c92:	bd70      	pop	{r4, r5, r6, pc}
  403c94:	89a2      	ldrh	r2, [r4, #12]
  403c96:	2300      	movs	r3, #0
  403c98:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  403c9c:	6033      	str	r3, [r6, #0]
  403c9e:	d004      	beq.n	403caa <__swhatbuf_r+0x52>
  403ca0:	2240      	movs	r2, #64	; 0x40
  403ca2:	4618      	mov	r0, r3
  403ca4:	602a      	str	r2, [r5, #0]
  403ca6:	b010      	add	sp, #64	; 0x40
  403ca8:	bd70      	pop	{r4, r5, r6, pc}
  403caa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403cae:	602b      	str	r3, [r5, #0]
  403cb0:	b010      	add	sp, #64	; 0x40
  403cb2:	bd70      	pop	{r4, r5, r6, pc}

00403cb4 <__smakebuf_r>:
  403cb4:	898a      	ldrh	r2, [r1, #12]
  403cb6:	0792      	lsls	r2, r2, #30
  403cb8:	460b      	mov	r3, r1
  403cba:	d506      	bpl.n	403cca <__smakebuf_r+0x16>
  403cbc:	f101 0243 	add.w	r2, r1, #67	; 0x43
  403cc0:	2101      	movs	r1, #1
  403cc2:	601a      	str	r2, [r3, #0]
  403cc4:	611a      	str	r2, [r3, #16]
  403cc6:	6159      	str	r1, [r3, #20]
  403cc8:	4770      	bx	lr
  403cca:	b5f0      	push	{r4, r5, r6, r7, lr}
  403ccc:	b083      	sub	sp, #12
  403cce:	ab01      	add	r3, sp, #4
  403cd0:	466a      	mov	r2, sp
  403cd2:	460c      	mov	r4, r1
  403cd4:	4606      	mov	r6, r0
  403cd6:	f7ff ffbf 	bl	403c58 <__swhatbuf_r>
  403cda:	9900      	ldr	r1, [sp, #0]
  403cdc:	4605      	mov	r5, r0
  403cde:	4630      	mov	r0, r6
  403ce0:	f000 f83a 	bl	403d58 <_malloc_r>
  403ce4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403ce8:	b1d8      	cbz	r0, 403d22 <__smakebuf_r+0x6e>
  403cea:	9a01      	ldr	r2, [sp, #4]
  403cec:	4f15      	ldr	r7, [pc, #84]	; (403d44 <__smakebuf_r+0x90>)
  403cee:	9900      	ldr	r1, [sp, #0]
  403cf0:	63f7      	str	r7, [r6, #60]	; 0x3c
  403cf2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403cf6:	81a3      	strh	r3, [r4, #12]
  403cf8:	6020      	str	r0, [r4, #0]
  403cfa:	6120      	str	r0, [r4, #16]
  403cfc:	6161      	str	r1, [r4, #20]
  403cfe:	b91a      	cbnz	r2, 403d08 <__smakebuf_r+0x54>
  403d00:	432b      	orrs	r3, r5
  403d02:	81a3      	strh	r3, [r4, #12]
  403d04:	b003      	add	sp, #12
  403d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403d08:	4630      	mov	r0, r6
  403d0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403d0e:	f001 fccf 	bl	4056b0 <_isatty_r>
  403d12:	b1a0      	cbz	r0, 403d3e <__smakebuf_r+0x8a>
  403d14:	89a3      	ldrh	r3, [r4, #12]
  403d16:	f023 0303 	bic.w	r3, r3, #3
  403d1a:	f043 0301 	orr.w	r3, r3, #1
  403d1e:	b21b      	sxth	r3, r3
  403d20:	e7ee      	b.n	403d00 <__smakebuf_r+0x4c>
  403d22:	059a      	lsls	r2, r3, #22
  403d24:	d4ee      	bmi.n	403d04 <__smakebuf_r+0x50>
  403d26:	f023 0303 	bic.w	r3, r3, #3
  403d2a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403d2e:	f043 0302 	orr.w	r3, r3, #2
  403d32:	2101      	movs	r1, #1
  403d34:	81a3      	strh	r3, [r4, #12]
  403d36:	6022      	str	r2, [r4, #0]
  403d38:	6122      	str	r2, [r4, #16]
  403d3a:	6161      	str	r1, [r4, #20]
  403d3c:	e7e2      	b.n	403d04 <__smakebuf_r+0x50>
  403d3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403d42:	e7dd      	b.n	403d00 <__smakebuf_r+0x4c>
  403d44:	00403225 	.word	0x00403225

00403d48 <malloc>:
  403d48:	4b02      	ldr	r3, [pc, #8]	; (403d54 <malloc+0xc>)
  403d4a:	4601      	mov	r1, r0
  403d4c:	6818      	ldr	r0, [r3, #0]
  403d4e:	f000 b803 	b.w	403d58 <_malloc_r>
  403d52:	bf00      	nop
  403d54:	2000000c 	.word	0x2000000c

00403d58 <_malloc_r>:
  403d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403d5c:	f101 060b 	add.w	r6, r1, #11
  403d60:	2e16      	cmp	r6, #22
  403d62:	b083      	sub	sp, #12
  403d64:	4605      	mov	r5, r0
  403d66:	f240 809e 	bls.w	403ea6 <_malloc_r+0x14e>
  403d6a:	f036 0607 	bics.w	r6, r6, #7
  403d6e:	f100 80bd 	bmi.w	403eec <_malloc_r+0x194>
  403d72:	42b1      	cmp	r1, r6
  403d74:	f200 80ba 	bhi.w	403eec <_malloc_r+0x194>
  403d78:	f000 fc30 	bl	4045dc <__malloc_lock>
  403d7c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403d80:	f0c0 8293 	bcc.w	4042aa <_malloc_r+0x552>
  403d84:	0a73      	lsrs	r3, r6, #9
  403d86:	f000 80b8 	beq.w	403efa <_malloc_r+0x1a2>
  403d8a:	2b04      	cmp	r3, #4
  403d8c:	f200 8179 	bhi.w	404082 <_malloc_r+0x32a>
  403d90:	09b3      	lsrs	r3, r6, #6
  403d92:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403d96:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403d9a:	00c3      	lsls	r3, r0, #3
  403d9c:	4fbf      	ldr	r7, [pc, #764]	; (40409c <_malloc_r+0x344>)
  403d9e:	443b      	add	r3, r7
  403da0:	f1a3 0108 	sub.w	r1, r3, #8
  403da4:	685c      	ldr	r4, [r3, #4]
  403da6:	42a1      	cmp	r1, r4
  403da8:	d106      	bne.n	403db8 <_malloc_r+0x60>
  403daa:	e00c      	b.n	403dc6 <_malloc_r+0x6e>
  403dac:	2a00      	cmp	r2, #0
  403dae:	f280 80aa 	bge.w	403f06 <_malloc_r+0x1ae>
  403db2:	68e4      	ldr	r4, [r4, #12]
  403db4:	42a1      	cmp	r1, r4
  403db6:	d006      	beq.n	403dc6 <_malloc_r+0x6e>
  403db8:	6863      	ldr	r3, [r4, #4]
  403dba:	f023 0303 	bic.w	r3, r3, #3
  403dbe:	1b9a      	subs	r2, r3, r6
  403dc0:	2a0f      	cmp	r2, #15
  403dc2:	ddf3      	ble.n	403dac <_malloc_r+0x54>
  403dc4:	4670      	mov	r0, lr
  403dc6:	693c      	ldr	r4, [r7, #16]
  403dc8:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4040b0 <_malloc_r+0x358>
  403dcc:	4574      	cmp	r4, lr
  403dce:	f000 81ab 	beq.w	404128 <_malloc_r+0x3d0>
  403dd2:	6863      	ldr	r3, [r4, #4]
  403dd4:	f023 0303 	bic.w	r3, r3, #3
  403dd8:	1b9a      	subs	r2, r3, r6
  403dda:	2a0f      	cmp	r2, #15
  403ddc:	f300 8190 	bgt.w	404100 <_malloc_r+0x3a8>
  403de0:	2a00      	cmp	r2, #0
  403de2:	f8c7 e014 	str.w	lr, [r7, #20]
  403de6:	f8c7 e010 	str.w	lr, [r7, #16]
  403dea:	f280 809d 	bge.w	403f28 <_malloc_r+0x1d0>
  403dee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403df2:	f080 8161 	bcs.w	4040b8 <_malloc_r+0x360>
  403df6:	08db      	lsrs	r3, r3, #3
  403df8:	f103 0c01 	add.w	ip, r3, #1
  403dfc:	1099      	asrs	r1, r3, #2
  403dfe:	687a      	ldr	r2, [r7, #4]
  403e00:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403e04:	f8c4 8008 	str.w	r8, [r4, #8]
  403e08:	2301      	movs	r3, #1
  403e0a:	408b      	lsls	r3, r1
  403e0c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403e10:	4313      	orrs	r3, r2
  403e12:	3908      	subs	r1, #8
  403e14:	60e1      	str	r1, [r4, #12]
  403e16:	607b      	str	r3, [r7, #4]
  403e18:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403e1c:	f8c8 400c 	str.w	r4, [r8, #12]
  403e20:	1082      	asrs	r2, r0, #2
  403e22:	2401      	movs	r4, #1
  403e24:	4094      	lsls	r4, r2
  403e26:	429c      	cmp	r4, r3
  403e28:	f200 808b 	bhi.w	403f42 <_malloc_r+0x1ea>
  403e2c:	421c      	tst	r4, r3
  403e2e:	d106      	bne.n	403e3e <_malloc_r+0xe6>
  403e30:	f020 0003 	bic.w	r0, r0, #3
  403e34:	0064      	lsls	r4, r4, #1
  403e36:	421c      	tst	r4, r3
  403e38:	f100 0004 	add.w	r0, r0, #4
  403e3c:	d0fa      	beq.n	403e34 <_malloc_r+0xdc>
  403e3e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403e42:	46cc      	mov	ip, r9
  403e44:	4680      	mov	r8, r0
  403e46:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403e4a:	459c      	cmp	ip, r3
  403e4c:	d107      	bne.n	403e5e <_malloc_r+0x106>
  403e4e:	e16d      	b.n	40412c <_malloc_r+0x3d4>
  403e50:	2a00      	cmp	r2, #0
  403e52:	f280 817b 	bge.w	40414c <_malloc_r+0x3f4>
  403e56:	68db      	ldr	r3, [r3, #12]
  403e58:	459c      	cmp	ip, r3
  403e5a:	f000 8167 	beq.w	40412c <_malloc_r+0x3d4>
  403e5e:	6859      	ldr	r1, [r3, #4]
  403e60:	f021 0103 	bic.w	r1, r1, #3
  403e64:	1b8a      	subs	r2, r1, r6
  403e66:	2a0f      	cmp	r2, #15
  403e68:	ddf2      	ble.n	403e50 <_malloc_r+0xf8>
  403e6a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403e6e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403e72:	9300      	str	r3, [sp, #0]
  403e74:	199c      	adds	r4, r3, r6
  403e76:	4628      	mov	r0, r5
  403e78:	f046 0601 	orr.w	r6, r6, #1
  403e7c:	f042 0501 	orr.w	r5, r2, #1
  403e80:	605e      	str	r6, [r3, #4]
  403e82:	f8c8 c00c 	str.w	ip, [r8, #12]
  403e86:	f8cc 8008 	str.w	r8, [ip, #8]
  403e8a:	617c      	str	r4, [r7, #20]
  403e8c:	613c      	str	r4, [r7, #16]
  403e8e:	f8c4 e00c 	str.w	lr, [r4, #12]
  403e92:	f8c4 e008 	str.w	lr, [r4, #8]
  403e96:	6065      	str	r5, [r4, #4]
  403e98:	505a      	str	r2, [r3, r1]
  403e9a:	f000 fba5 	bl	4045e8 <__malloc_unlock>
  403e9e:	9b00      	ldr	r3, [sp, #0]
  403ea0:	f103 0408 	add.w	r4, r3, #8
  403ea4:	e01e      	b.n	403ee4 <_malloc_r+0x18c>
  403ea6:	2910      	cmp	r1, #16
  403ea8:	d820      	bhi.n	403eec <_malloc_r+0x194>
  403eaa:	f000 fb97 	bl	4045dc <__malloc_lock>
  403eae:	2610      	movs	r6, #16
  403eb0:	2318      	movs	r3, #24
  403eb2:	2002      	movs	r0, #2
  403eb4:	4f79      	ldr	r7, [pc, #484]	; (40409c <_malloc_r+0x344>)
  403eb6:	443b      	add	r3, r7
  403eb8:	f1a3 0208 	sub.w	r2, r3, #8
  403ebc:	685c      	ldr	r4, [r3, #4]
  403ebe:	4294      	cmp	r4, r2
  403ec0:	f000 813d 	beq.w	40413e <_malloc_r+0x3e6>
  403ec4:	6863      	ldr	r3, [r4, #4]
  403ec6:	68e1      	ldr	r1, [r4, #12]
  403ec8:	68a6      	ldr	r6, [r4, #8]
  403eca:	f023 0303 	bic.w	r3, r3, #3
  403ece:	4423      	add	r3, r4
  403ed0:	4628      	mov	r0, r5
  403ed2:	685a      	ldr	r2, [r3, #4]
  403ed4:	60f1      	str	r1, [r6, #12]
  403ed6:	f042 0201 	orr.w	r2, r2, #1
  403eda:	608e      	str	r6, [r1, #8]
  403edc:	605a      	str	r2, [r3, #4]
  403ede:	f000 fb83 	bl	4045e8 <__malloc_unlock>
  403ee2:	3408      	adds	r4, #8
  403ee4:	4620      	mov	r0, r4
  403ee6:	b003      	add	sp, #12
  403ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403eec:	2400      	movs	r4, #0
  403eee:	230c      	movs	r3, #12
  403ef0:	4620      	mov	r0, r4
  403ef2:	602b      	str	r3, [r5, #0]
  403ef4:	b003      	add	sp, #12
  403ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403efa:	2040      	movs	r0, #64	; 0x40
  403efc:	f44f 7300 	mov.w	r3, #512	; 0x200
  403f00:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403f04:	e74a      	b.n	403d9c <_malloc_r+0x44>
  403f06:	4423      	add	r3, r4
  403f08:	68e1      	ldr	r1, [r4, #12]
  403f0a:	685a      	ldr	r2, [r3, #4]
  403f0c:	68a6      	ldr	r6, [r4, #8]
  403f0e:	f042 0201 	orr.w	r2, r2, #1
  403f12:	60f1      	str	r1, [r6, #12]
  403f14:	4628      	mov	r0, r5
  403f16:	608e      	str	r6, [r1, #8]
  403f18:	605a      	str	r2, [r3, #4]
  403f1a:	f000 fb65 	bl	4045e8 <__malloc_unlock>
  403f1e:	3408      	adds	r4, #8
  403f20:	4620      	mov	r0, r4
  403f22:	b003      	add	sp, #12
  403f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f28:	4423      	add	r3, r4
  403f2a:	4628      	mov	r0, r5
  403f2c:	685a      	ldr	r2, [r3, #4]
  403f2e:	f042 0201 	orr.w	r2, r2, #1
  403f32:	605a      	str	r2, [r3, #4]
  403f34:	f000 fb58 	bl	4045e8 <__malloc_unlock>
  403f38:	3408      	adds	r4, #8
  403f3a:	4620      	mov	r0, r4
  403f3c:	b003      	add	sp, #12
  403f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f42:	68bc      	ldr	r4, [r7, #8]
  403f44:	6863      	ldr	r3, [r4, #4]
  403f46:	f023 0803 	bic.w	r8, r3, #3
  403f4a:	45b0      	cmp	r8, r6
  403f4c:	d304      	bcc.n	403f58 <_malloc_r+0x200>
  403f4e:	eba8 0306 	sub.w	r3, r8, r6
  403f52:	2b0f      	cmp	r3, #15
  403f54:	f300 8085 	bgt.w	404062 <_malloc_r+0x30a>
  403f58:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4040b4 <_malloc_r+0x35c>
  403f5c:	4b50      	ldr	r3, [pc, #320]	; (4040a0 <_malloc_r+0x348>)
  403f5e:	f8d9 2000 	ldr.w	r2, [r9]
  403f62:	681b      	ldr	r3, [r3, #0]
  403f64:	3201      	adds	r2, #1
  403f66:	4433      	add	r3, r6
  403f68:	eb04 0a08 	add.w	sl, r4, r8
  403f6c:	f000 8155 	beq.w	40421a <_malloc_r+0x4c2>
  403f70:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403f74:	330f      	adds	r3, #15
  403f76:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403f7a:	f02b 0b0f 	bic.w	fp, fp, #15
  403f7e:	4659      	mov	r1, fp
  403f80:	4628      	mov	r0, r5
  403f82:	f000 fd71 	bl	404a68 <_sbrk_r>
  403f86:	1c41      	adds	r1, r0, #1
  403f88:	4602      	mov	r2, r0
  403f8a:	f000 80fc 	beq.w	404186 <_malloc_r+0x42e>
  403f8e:	4582      	cmp	sl, r0
  403f90:	f200 80f7 	bhi.w	404182 <_malloc_r+0x42a>
  403f94:	4b43      	ldr	r3, [pc, #268]	; (4040a4 <_malloc_r+0x34c>)
  403f96:	6819      	ldr	r1, [r3, #0]
  403f98:	4459      	add	r1, fp
  403f9a:	6019      	str	r1, [r3, #0]
  403f9c:	f000 814d 	beq.w	40423a <_malloc_r+0x4e2>
  403fa0:	f8d9 0000 	ldr.w	r0, [r9]
  403fa4:	3001      	adds	r0, #1
  403fa6:	bf1b      	ittet	ne
  403fa8:	eba2 0a0a 	subne.w	sl, r2, sl
  403fac:	4451      	addne	r1, sl
  403fae:	f8c9 2000 	streq.w	r2, [r9]
  403fb2:	6019      	strne	r1, [r3, #0]
  403fb4:	f012 0107 	ands.w	r1, r2, #7
  403fb8:	f000 8115 	beq.w	4041e6 <_malloc_r+0x48e>
  403fbc:	f1c1 0008 	rsb	r0, r1, #8
  403fc0:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403fc4:	4402      	add	r2, r0
  403fc6:	3108      	adds	r1, #8
  403fc8:	eb02 090b 	add.w	r9, r2, fp
  403fcc:	f3c9 090b 	ubfx	r9, r9, #0, #12
  403fd0:	eba1 0909 	sub.w	r9, r1, r9
  403fd4:	4649      	mov	r1, r9
  403fd6:	4628      	mov	r0, r5
  403fd8:	9301      	str	r3, [sp, #4]
  403fda:	9200      	str	r2, [sp, #0]
  403fdc:	f000 fd44 	bl	404a68 <_sbrk_r>
  403fe0:	1c43      	adds	r3, r0, #1
  403fe2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  403fe6:	f000 8143 	beq.w	404270 <_malloc_r+0x518>
  403fea:	1a80      	subs	r0, r0, r2
  403fec:	4448      	add	r0, r9
  403fee:	f040 0001 	orr.w	r0, r0, #1
  403ff2:	6819      	ldr	r1, [r3, #0]
  403ff4:	60ba      	str	r2, [r7, #8]
  403ff6:	4449      	add	r1, r9
  403ff8:	42bc      	cmp	r4, r7
  403ffa:	6050      	str	r0, [r2, #4]
  403ffc:	6019      	str	r1, [r3, #0]
  403ffe:	d017      	beq.n	404030 <_malloc_r+0x2d8>
  404000:	f1b8 0f0f 	cmp.w	r8, #15
  404004:	f240 80fb 	bls.w	4041fe <_malloc_r+0x4a6>
  404008:	6860      	ldr	r0, [r4, #4]
  40400a:	f1a8 020c 	sub.w	r2, r8, #12
  40400e:	f022 0207 	bic.w	r2, r2, #7
  404012:	eb04 0e02 	add.w	lr, r4, r2
  404016:	f000 0001 	and.w	r0, r0, #1
  40401a:	f04f 0c05 	mov.w	ip, #5
  40401e:	4310      	orrs	r0, r2
  404020:	2a0f      	cmp	r2, #15
  404022:	6060      	str	r0, [r4, #4]
  404024:	f8ce c004 	str.w	ip, [lr, #4]
  404028:	f8ce c008 	str.w	ip, [lr, #8]
  40402c:	f200 8117 	bhi.w	40425e <_malloc_r+0x506>
  404030:	4b1d      	ldr	r3, [pc, #116]	; (4040a8 <_malloc_r+0x350>)
  404032:	68bc      	ldr	r4, [r7, #8]
  404034:	681a      	ldr	r2, [r3, #0]
  404036:	4291      	cmp	r1, r2
  404038:	bf88      	it	hi
  40403a:	6019      	strhi	r1, [r3, #0]
  40403c:	4b1b      	ldr	r3, [pc, #108]	; (4040ac <_malloc_r+0x354>)
  40403e:	681a      	ldr	r2, [r3, #0]
  404040:	4291      	cmp	r1, r2
  404042:	6862      	ldr	r2, [r4, #4]
  404044:	bf88      	it	hi
  404046:	6019      	strhi	r1, [r3, #0]
  404048:	f022 0203 	bic.w	r2, r2, #3
  40404c:	4296      	cmp	r6, r2
  40404e:	eba2 0306 	sub.w	r3, r2, r6
  404052:	d801      	bhi.n	404058 <_malloc_r+0x300>
  404054:	2b0f      	cmp	r3, #15
  404056:	dc04      	bgt.n	404062 <_malloc_r+0x30a>
  404058:	4628      	mov	r0, r5
  40405a:	f000 fac5 	bl	4045e8 <__malloc_unlock>
  40405e:	2400      	movs	r4, #0
  404060:	e740      	b.n	403ee4 <_malloc_r+0x18c>
  404062:	19a2      	adds	r2, r4, r6
  404064:	f043 0301 	orr.w	r3, r3, #1
  404068:	f046 0601 	orr.w	r6, r6, #1
  40406c:	6066      	str	r6, [r4, #4]
  40406e:	4628      	mov	r0, r5
  404070:	60ba      	str	r2, [r7, #8]
  404072:	6053      	str	r3, [r2, #4]
  404074:	f000 fab8 	bl	4045e8 <__malloc_unlock>
  404078:	3408      	adds	r4, #8
  40407a:	4620      	mov	r0, r4
  40407c:	b003      	add	sp, #12
  40407e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404082:	2b14      	cmp	r3, #20
  404084:	d971      	bls.n	40416a <_malloc_r+0x412>
  404086:	2b54      	cmp	r3, #84	; 0x54
  404088:	f200 80a3 	bhi.w	4041d2 <_malloc_r+0x47a>
  40408c:	0b33      	lsrs	r3, r6, #12
  40408e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404092:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404096:	00c3      	lsls	r3, r0, #3
  404098:	e680      	b.n	403d9c <_malloc_r+0x44>
  40409a:	bf00      	nop
  40409c:	200005a8 	.word	0x200005a8
  4040a0:	20000b2c 	.word	0x20000b2c
  4040a4:	20000afc 	.word	0x20000afc
  4040a8:	20000b24 	.word	0x20000b24
  4040ac:	20000b28 	.word	0x20000b28
  4040b0:	200005b0 	.word	0x200005b0
  4040b4:	200009b0 	.word	0x200009b0
  4040b8:	0a5a      	lsrs	r2, r3, #9
  4040ba:	2a04      	cmp	r2, #4
  4040bc:	d95b      	bls.n	404176 <_malloc_r+0x41e>
  4040be:	2a14      	cmp	r2, #20
  4040c0:	f200 80ae 	bhi.w	404220 <_malloc_r+0x4c8>
  4040c4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4040c8:	00c9      	lsls	r1, r1, #3
  4040ca:	325b      	adds	r2, #91	; 0x5b
  4040cc:	eb07 0c01 	add.w	ip, r7, r1
  4040d0:	5879      	ldr	r1, [r7, r1]
  4040d2:	f1ac 0c08 	sub.w	ip, ip, #8
  4040d6:	458c      	cmp	ip, r1
  4040d8:	f000 8088 	beq.w	4041ec <_malloc_r+0x494>
  4040dc:	684a      	ldr	r2, [r1, #4]
  4040de:	f022 0203 	bic.w	r2, r2, #3
  4040e2:	4293      	cmp	r3, r2
  4040e4:	d273      	bcs.n	4041ce <_malloc_r+0x476>
  4040e6:	6889      	ldr	r1, [r1, #8]
  4040e8:	458c      	cmp	ip, r1
  4040ea:	d1f7      	bne.n	4040dc <_malloc_r+0x384>
  4040ec:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4040f0:	687b      	ldr	r3, [r7, #4]
  4040f2:	60e2      	str	r2, [r4, #12]
  4040f4:	f8c4 c008 	str.w	ip, [r4, #8]
  4040f8:	6094      	str	r4, [r2, #8]
  4040fa:	f8cc 400c 	str.w	r4, [ip, #12]
  4040fe:	e68f      	b.n	403e20 <_malloc_r+0xc8>
  404100:	19a1      	adds	r1, r4, r6
  404102:	f046 0c01 	orr.w	ip, r6, #1
  404106:	f042 0601 	orr.w	r6, r2, #1
  40410a:	f8c4 c004 	str.w	ip, [r4, #4]
  40410e:	4628      	mov	r0, r5
  404110:	6179      	str	r1, [r7, #20]
  404112:	6139      	str	r1, [r7, #16]
  404114:	f8c1 e00c 	str.w	lr, [r1, #12]
  404118:	f8c1 e008 	str.w	lr, [r1, #8]
  40411c:	604e      	str	r6, [r1, #4]
  40411e:	50e2      	str	r2, [r4, r3]
  404120:	f000 fa62 	bl	4045e8 <__malloc_unlock>
  404124:	3408      	adds	r4, #8
  404126:	e6dd      	b.n	403ee4 <_malloc_r+0x18c>
  404128:	687b      	ldr	r3, [r7, #4]
  40412a:	e679      	b.n	403e20 <_malloc_r+0xc8>
  40412c:	f108 0801 	add.w	r8, r8, #1
  404130:	f018 0f03 	tst.w	r8, #3
  404134:	f10c 0c08 	add.w	ip, ip, #8
  404138:	f47f ae85 	bne.w	403e46 <_malloc_r+0xee>
  40413c:	e02d      	b.n	40419a <_malloc_r+0x442>
  40413e:	68dc      	ldr	r4, [r3, #12]
  404140:	42a3      	cmp	r3, r4
  404142:	bf08      	it	eq
  404144:	3002      	addeq	r0, #2
  404146:	f43f ae3e 	beq.w	403dc6 <_malloc_r+0x6e>
  40414a:	e6bb      	b.n	403ec4 <_malloc_r+0x16c>
  40414c:	4419      	add	r1, r3
  40414e:	461c      	mov	r4, r3
  404150:	684a      	ldr	r2, [r1, #4]
  404152:	68db      	ldr	r3, [r3, #12]
  404154:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404158:	f042 0201 	orr.w	r2, r2, #1
  40415c:	604a      	str	r2, [r1, #4]
  40415e:	4628      	mov	r0, r5
  404160:	60f3      	str	r3, [r6, #12]
  404162:	609e      	str	r6, [r3, #8]
  404164:	f000 fa40 	bl	4045e8 <__malloc_unlock>
  404168:	e6bc      	b.n	403ee4 <_malloc_r+0x18c>
  40416a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40416e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404172:	00c3      	lsls	r3, r0, #3
  404174:	e612      	b.n	403d9c <_malloc_r+0x44>
  404176:	099a      	lsrs	r2, r3, #6
  404178:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40417c:	00c9      	lsls	r1, r1, #3
  40417e:	3238      	adds	r2, #56	; 0x38
  404180:	e7a4      	b.n	4040cc <_malloc_r+0x374>
  404182:	42bc      	cmp	r4, r7
  404184:	d054      	beq.n	404230 <_malloc_r+0x4d8>
  404186:	68bc      	ldr	r4, [r7, #8]
  404188:	6862      	ldr	r2, [r4, #4]
  40418a:	f022 0203 	bic.w	r2, r2, #3
  40418e:	e75d      	b.n	40404c <_malloc_r+0x2f4>
  404190:	f859 3908 	ldr.w	r3, [r9], #-8
  404194:	4599      	cmp	r9, r3
  404196:	f040 8086 	bne.w	4042a6 <_malloc_r+0x54e>
  40419a:	f010 0f03 	tst.w	r0, #3
  40419e:	f100 30ff 	add.w	r0, r0, #4294967295
  4041a2:	d1f5      	bne.n	404190 <_malloc_r+0x438>
  4041a4:	687b      	ldr	r3, [r7, #4]
  4041a6:	ea23 0304 	bic.w	r3, r3, r4
  4041aa:	607b      	str	r3, [r7, #4]
  4041ac:	0064      	lsls	r4, r4, #1
  4041ae:	429c      	cmp	r4, r3
  4041b0:	f63f aec7 	bhi.w	403f42 <_malloc_r+0x1ea>
  4041b4:	2c00      	cmp	r4, #0
  4041b6:	f43f aec4 	beq.w	403f42 <_malloc_r+0x1ea>
  4041ba:	421c      	tst	r4, r3
  4041bc:	4640      	mov	r0, r8
  4041be:	f47f ae3e 	bne.w	403e3e <_malloc_r+0xe6>
  4041c2:	0064      	lsls	r4, r4, #1
  4041c4:	421c      	tst	r4, r3
  4041c6:	f100 0004 	add.w	r0, r0, #4
  4041ca:	d0fa      	beq.n	4041c2 <_malloc_r+0x46a>
  4041cc:	e637      	b.n	403e3e <_malloc_r+0xe6>
  4041ce:	468c      	mov	ip, r1
  4041d0:	e78c      	b.n	4040ec <_malloc_r+0x394>
  4041d2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4041d6:	d815      	bhi.n	404204 <_malloc_r+0x4ac>
  4041d8:	0bf3      	lsrs	r3, r6, #15
  4041da:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4041de:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4041e2:	00c3      	lsls	r3, r0, #3
  4041e4:	e5da      	b.n	403d9c <_malloc_r+0x44>
  4041e6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4041ea:	e6ed      	b.n	403fc8 <_malloc_r+0x270>
  4041ec:	687b      	ldr	r3, [r7, #4]
  4041ee:	1092      	asrs	r2, r2, #2
  4041f0:	2101      	movs	r1, #1
  4041f2:	fa01 f202 	lsl.w	r2, r1, r2
  4041f6:	4313      	orrs	r3, r2
  4041f8:	607b      	str	r3, [r7, #4]
  4041fa:	4662      	mov	r2, ip
  4041fc:	e779      	b.n	4040f2 <_malloc_r+0x39a>
  4041fe:	2301      	movs	r3, #1
  404200:	6053      	str	r3, [r2, #4]
  404202:	e729      	b.n	404058 <_malloc_r+0x300>
  404204:	f240 5254 	movw	r2, #1364	; 0x554
  404208:	4293      	cmp	r3, r2
  40420a:	d822      	bhi.n	404252 <_malloc_r+0x4fa>
  40420c:	0cb3      	lsrs	r3, r6, #18
  40420e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404212:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404216:	00c3      	lsls	r3, r0, #3
  404218:	e5c0      	b.n	403d9c <_malloc_r+0x44>
  40421a:	f103 0b10 	add.w	fp, r3, #16
  40421e:	e6ae      	b.n	403f7e <_malloc_r+0x226>
  404220:	2a54      	cmp	r2, #84	; 0x54
  404222:	d829      	bhi.n	404278 <_malloc_r+0x520>
  404224:	0b1a      	lsrs	r2, r3, #12
  404226:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40422a:	00c9      	lsls	r1, r1, #3
  40422c:	326e      	adds	r2, #110	; 0x6e
  40422e:	e74d      	b.n	4040cc <_malloc_r+0x374>
  404230:	4b20      	ldr	r3, [pc, #128]	; (4042b4 <_malloc_r+0x55c>)
  404232:	6819      	ldr	r1, [r3, #0]
  404234:	4459      	add	r1, fp
  404236:	6019      	str	r1, [r3, #0]
  404238:	e6b2      	b.n	403fa0 <_malloc_r+0x248>
  40423a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40423e:	2800      	cmp	r0, #0
  404240:	f47f aeae 	bne.w	403fa0 <_malloc_r+0x248>
  404244:	eb08 030b 	add.w	r3, r8, fp
  404248:	68ba      	ldr	r2, [r7, #8]
  40424a:	f043 0301 	orr.w	r3, r3, #1
  40424e:	6053      	str	r3, [r2, #4]
  404250:	e6ee      	b.n	404030 <_malloc_r+0x2d8>
  404252:	207f      	movs	r0, #127	; 0x7f
  404254:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404258:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  40425c:	e59e      	b.n	403d9c <_malloc_r+0x44>
  40425e:	f104 0108 	add.w	r1, r4, #8
  404262:	4628      	mov	r0, r5
  404264:	9300      	str	r3, [sp, #0]
  404266:	f7ff fa13 	bl	403690 <_free_r>
  40426a:	9b00      	ldr	r3, [sp, #0]
  40426c:	6819      	ldr	r1, [r3, #0]
  40426e:	e6df      	b.n	404030 <_malloc_r+0x2d8>
  404270:	2001      	movs	r0, #1
  404272:	f04f 0900 	mov.w	r9, #0
  404276:	e6bc      	b.n	403ff2 <_malloc_r+0x29a>
  404278:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40427c:	d805      	bhi.n	40428a <_malloc_r+0x532>
  40427e:	0bda      	lsrs	r2, r3, #15
  404280:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404284:	00c9      	lsls	r1, r1, #3
  404286:	3277      	adds	r2, #119	; 0x77
  404288:	e720      	b.n	4040cc <_malloc_r+0x374>
  40428a:	f240 5154 	movw	r1, #1364	; 0x554
  40428e:	428a      	cmp	r2, r1
  404290:	d805      	bhi.n	40429e <_malloc_r+0x546>
  404292:	0c9a      	lsrs	r2, r3, #18
  404294:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404298:	00c9      	lsls	r1, r1, #3
  40429a:	327c      	adds	r2, #124	; 0x7c
  40429c:	e716      	b.n	4040cc <_malloc_r+0x374>
  40429e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4042a2:	227e      	movs	r2, #126	; 0x7e
  4042a4:	e712      	b.n	4040cc <_malloc_r+0x374>
  4042a6:	687b      	ldr	r3, [r7, #4]
  4042a8:	e780      	b.n	4041ac <_malloc_r+0x454>
  4042aa:	08f0      	lsrs	r0, r6, #3
  4042ac:	f106 0308 	add.w	r3, r6, #8
  4042b0:	e600      	b.n	403eb4 <_malloc_r+0x15c>
  4042b2:	bf00      	nop
  4042b4:	20000afc 	.word	0x20000afc

004042b8 <_mbrtowc_r>:
  4042b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4042ba:	b083      	sub	sp, #12
  4042bc:	4607      	mov	r7, r0
  4042be:	9d08      	ldr	r5, [sp, #32]
  4042c0:	b192      	cbz	r2, 4042e8 <_mbrtowc_r+0x30>
  4042c2:	4c11      	ldr	r4, [pc, #68]	; (404308 <_mbrtowc_r+0x50>)
  4042c4:	4e11      	ldr	r6, [pc, #68]	; (40430c <_mbrtowc_r+0x54>)
  4042c6:	6824      	ldr	r4, [r4, #0]
  4042c8:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4042ca:	9500      	str	r5, [sp, #0]
  4042cc:	2c00      	cmp	r4, #0
  4042ce:	bf08      	it	eq
  4042d0:	4634      	moveq	r4, r6
  4042d2:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
  4042d6:	47a0      	blx	r4
  4042d8:	1c43      	adds	r3, r0, #1
  4042da:	d103      	bne.n	4042e4 <_mbrtowc_r+0x2c>
  4042dc:	2200      	movs	r2, #0
  4042de:	238a      	movs	r3, #138	; 0x8a
  4042e0:	602a      	str	r2, [r5, #0]
  4042e2:	603b      	str	r3, [r7, #0]
  4042e4:	b003      	add	sp, #12
  4042e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4042e8:	4b07      	ldr	r3, [pc, #28]	; (404308 <_mbrtowc_r+0x50>)
  4042ea:	4908      	ldr	r1, [pc, #32]	; (40430c <_mbrtowc_r+0x54>)
  4042ec:	681b      	ldr	r3, [r3, #0]
  4042ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4042f0:	9500      	str	r5, [sp, #0]
  4042f2:	2b00      	cmp	r3, #0
  4042f4:	bf08      	it	eq
  4042f6:	460b      	moveq	r3, r1
  4042f8:	4614      	mov	r4, r2
  4042fa:	4621      	mov	r1, r4
  4042fc:	4a04      	ldr	r2, [pc, #16]	; (404310 <_mbrtowc_r+0x58>)
  4042fe:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
  404302:	2301      	movs	r3, #1
  404304:	47a0      	blx	r4
  404306:	e7e7      	b.n	4042d8 <_mbrtowc_r+0x20>
  404308:	2000000c 	.word	0x2000000c
  40430c:	2000043c 	.word	0x2000043c
  404310:	00405dd4 	.word	0x00405dd4

00404314 <__ascii_mbtowc>:
  404314:	b082      	sub	sp, #8
  404316:	b149      	cbz	r1, 40432c <__ascii_mbtowc+0x18>
  404318:	b15a      	cbz	r2, 404332 <__ascii_mbtowc+0x1e>
  40431a:	b16b      	cbz	r3, 404338 <__ascii_mbtowc+0x24>
  40431c:	7813      	ldrb	r3, [r2, #0]
  40431e:	600b      	str	r3, [r1, #0]
  404320:	7812      	ldrb	r2, [r2, #0]
  404322:	1c10      	adds	r0, r2, #0
  404324:	bf18      	it	ne
  404326:	2001      	movne	r0, #1
  404328:	b002      	add	sp, #8
  40432a:	4770      	bx	lr
  40432c:	a901      	add	r1, sp, #4
  40432e:	2a00      	cmp	r2, #0
  404330:	d1f3      	bne.n	40431a <__ascii_mbtowc+0x6>
  404332:	4610      	mov	r0, r2
  404334:	b002      	add	sp, #8
  404336:	4770      	bx	lr
  404338:	f06f 0001 	mvn.w	r0, #1
  40433c:	e7f4      	b.n	404328 <__ascii_mbtowc+0x14>
  40433e:	bf00      	nop

00404340 <memchr>:
  404340:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404344:	2a10      	cmp	r2, #16
  404346:	db2b      	blt.n	4043a0 <memchr+0x60>
  404348:	f010 0f07 	tst.w	r0, #7
  40434c:	d008      	beq.n	404360 <memchr+0x20>
  40434e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404352:	3a01      	subs	r2, #1
  404354:	428b      	cmp	r3, r1
  404356:	d02d      	beq.n	4043b4 <memchr+0x74>
  404358:	f010 0f07 	tst.w	r0, #7
  40435c:	b342      	cbz	r2, 4043b0 <memchr+0x70>
  40435e:	d1f6      	bne.n	40434e <memchr+0xe>
  404360:	b4f0      	push	{r4, r5, r6, r7}
  404362:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404366:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40436a:	f022 0407 	bic.w	r4, r2, #7
  40436e:	f07f 0700 	mvns.w	r7, #0
  404372:	2300      	movs	r3, #0
  404374:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404378:	3c08      	subs	r4, #8
  40437a:	ea85 0501 	eor.w	r5, r5, r1
  40437e:	ea86 0601 	eor.w	r6, r6, r1
  404382:	fa85 f547 	uadd8	r5, r5, r7
  404386:	faa3 f587 	sel	r5, r3, r7
  40438a:	fa86 f647 	uadd8	r6, r6, r7
  40438e:	faa5 f687 	sel	r6, r5, r7
  404392:	b98e      	cbnz	r6, 4043b8 <memchr+0x78>
  404394:	d1ee      	bne.n	404374 <memchr+0x34>
  404396:	bcf0      	pop	{r4, r5, r6, r7}
  404398:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40439c:	f002 0207 	and.w	r2, r2, #7
  4043a0:	b132      	cbz	r2, 4043b0 <memchr+0x70>
  4043a2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4043a6:	3a01      	subs	r2, #1
  4043a8:	ea83 0301 	eor.w	r3, r3, r1
  4043ac:	b113      	cbz	r3, 4043b4 <memchr+0x74>
  4043ae:	d1f8      	bne.n	4043a2 <memchr+0x62>
  4043b0:	2000      	movs	r0, #0
  4043b2:	4770      	bx	lr
  4043b4:	3801      	subs	r0, #1
  4043b6:	4770      	bx	lr
  4043b8:	2d00      	cmp	r5, #0
  4043ba:	bf06      	itte	eq
  4043bc:	4635      	moveq	r5, r6
  4043be:	3803      	subeq	r0, #3
  4043c0:	3807      	subne	r0, #7
  4043c2:	f015 0f01 	tst.w	r5, #1
  4043c6:	d107      	bne.n	4043d8 <memchr+0x98>
  4043c8:	3001      	adds	r0, #1
  4043ca:	f415 7f80 	tst.w	r5, #256	; 0x100
  4043ce:	bf02      	ittt	eq
  4043d0:	3001      	addeq	r0, #1
  4043d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4043d6:	3001      	addeq	r0, #1
  4043d8:	bcf0      	pop	{r4, r5, r6, r7}
  4043da:	3801      	subs	r0, #1
  4043dc:	4770      	bx	lr
  4043de:	bf00      	nop

004043e0 <memcpy>:
  4043e0:	4684      	mov	ip, r0
  4043e2:	ea41 0300 	orr.w	r3, r1, r0
  4043e6:	f013 0303 	ands.w	r3, r3, #3
  4043ea:	d16d      	bne.n	4044c8 <memcpy+0xe8>
  4043ec:	3a40      	subs	r2, #64	; 0x40
  4043ee:	d341      	bcc.n	404474 <memcpy+0x94>
  4043f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4043f4:	f840 3b04 	str.w	r3, [r0], #4
  4043f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4043fc:	f840 3b04 	str.w	r3, [r0], #4
  404400:	f851 3b04 	ldr.w	r3, [r1], #4
  404404:	f840 3b04 	str.w	r3, [r0], #4
  404408:	f851 3b04 	ldr.w	r3, [r1], #4
  40440c:	f840 3b04 	str.w	r3, [r0], #4
  404410:	f851 3b04 	ldr.w	r3, [r1], #4
  404414:	f840 3b04 	str.w	r3, [r0], #4
  404418:	f851 3b04 	ldr.w	r3, [r1], #4
  40441c:	f840 3b04 	str.w	r3, [r0], #4
  404420:	f851 3b04 	ldr.w	r3, [r1], #4
  404424:	f840 3b04 	str.w	r3, [r0], #4
  404428:	f851 3b04 	ldr.w	r3, [r1], #4
  40442c:	f840 3b04 	str.w	r3, [r0], #4
  404430:	f851 3b04 	ldr.w	r3, [r1], #4
  404434:	f840 3b04 	str.w	r3, [r0], #4
  404438:	f851 3b04 	ldr.w	r3, [r1], #4
  40443c:	f840 3b04 	str.w	r3, [r0], #4
  404440:	f851 3b04 	ldr.w	r3, [r1], #4
  404444:	f840 3b04 	str.w	r3, [r0], #4
  404448:	f851 3b04 	ldr.w	r3, [r1], #4
  40444c:	f840 3b04 	str.w	r3, [r0], #4
  404450:	f851 3b04 	ldr.w	r3, [r1], #4
  404454:	f840 3b04 	str.w	r3, [r0], #4
  404458:	f851 3b04 	ldr.w	r3, [r1], #4
  40445c:	f840 3b04 	str.w	r3, [r0], #4
  404460:	f851 3b04 	ldr.w	r3, [r1], #4
  404464:	f840 3b04 	str.w	r3, [r0], #4
  404468:	f851 3b04 	ldr.w	r3, [r1], #4
  40446c:	f840 3b04 	str.w	r3, [r0], #4
  404470:	3a40      	subs	r2, #64	; 0x40
  404472:	d2bd      	bcs.n	4043f0 <memcpy+0x10>
  404474:	3230      	adds	r2, #48	; 0x30
  404476:	d311      	bcc.n	40449c <memcpy+0xbc>
  404478:	f851 3b04 	ldr.w	r3, [r1], #4
  40447c:	f840 3b04 	str.w	r3, [r0], #4
  404480:	f851 3b04 	ldr.w	r3, [r1], #4
  404484:	f840 3b04 	str.w	r3, [r0], #4
  404488:	f851 3b04 	ldr.w	r3, [r1], #4
  40448c:	f840 3b04 	str.w	r3, [r0], #4
  404490:	f851 3b04 	ldr.w	r3, [r1], #4
  404494:	f840 3b04 	str.w	r3, [r0], #4
  404498:	3a10      	subs	r2, #16
  40449a:	d2ed      	bcs.n	404478 <memcpy+0x98>
  40449c:	320c      	adds	r2, #12
  40449e:	d305      	bcc.n	4044ac <memcpy+0xcc>
  4044a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4044a4:	f840 3b04 	str.w	r3, [r0], #4
  4044a8:	3a04      	subs	r2, #4
  4044aa:	d2f9      	bcs.n	4044a0 <memcpy+0xc0>
  4044ac:	3204      	adds	r2, #4
  4044ae:	d008      	beq.n	4044c2 <memcpy+0xe2>
  4044b0:	07d2      	lsls	r2, r2, #31
  4044b2:	bf1c      	itt	ne
  4044b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4044b8:	f800 3b01 	strbne.w	r3, [r0], #1
  4044bc:	d301      	bcc.n	4044c2 <memcpy+0xe2>
  4044be:	880b      	ldrh	r3, [r1, #0]
  4044c0:	8003      	strh	r3, [r0, #0]
  4044c2:	4660      	mov	r0, ip
  4044c4:	4770      	bx	lr
  4044c6:	bf00      	nop
  4044c8:	2a08      	cmp	r2, #8
  4044ca:	d313      	bcc.n	4044f4 <memcpy+0x114>
  4044cc:	078b      	lsls	r3, r1, #30
  4044ce:	d08d      	beq.n	4043ec <memcpy+0xc>
  4044d0:	f010 0303 	ands.w	r3, r0, #3
  4044d4:	d08a      	beq.n	4043ec <memcpy+0xc>
  4044d6:	f1c3 0304 	rsb	r3, r3, #4
  4044da:	1ad2      	subs	r2, r2, r3
  4044dc:	07db      	lsls	r3, r3, #31
  4044de:	bf1c      	itt	ne
  4044e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4044e4:	f800 3b01 	strbne.w	r3, [r0], #1
  4044e8:	d380      	bcc.n	4043ec <memcpy+0xc>
  4044ea:	f831 3b02 	ldrh.w	r3, [r1], #2
  4044ee:	f820 3b02 	strh.w	r3, [r0], #2
  4044f2:	e77b      	b.n	4043ec <memcpy+0xc>
  4044f4:	3a04      	subs	r2, #4
  4044f6:	d3d9      	bcc.n	4044ac <memcpy+0xcc>
  4044f8:	3a01      	subs	r2, #1
  4044fa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4044fe:	f800 3b01 	strb.w	r3, [r0], #1
  404502:	d2f9      	bcs.n	4044f8 <memcpy+0x118>
  404504:	780b      	ldrb	r3, [r1, #0]
  404506:	7003      	strb	r3, [r0, #0]
  404508:	784b      	ldrb	r3, [r1, #1]
  40450a:	7043      	strb	r3, [r0, #1]
  40450c:	788b      	ldrb	r3, [r1, #2]
  40450e:	7083      	strb	r3, [r0, #2]
  404510:	4660      	mov	r0, ip
  404512:	4770      	bx	lr

00404514 <memmove>:
  404514:	4288      	cmp	r0, r1
  404516:	b5f0      	push	{r4, r5, r6, r7, lr}
  404518:	d90d      	bls.n	404536 <memmove+0x22>
  40451a:	188b      	adds	r3, r1, r2
  40451c:	4298      	cmp	r0, r3
  40451e:	d20a      	bcs.n	404536 <memmove+0x22>
  404520:	1884      	adds	r4, r0, r2
  404522:	2a00      	cmp	r2, #0
  404524:	d051      	beq.n	4045ca <memmove+0xb6>
  404526:	4622      	mov	r2, r4
  404528:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40452c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  404530:	4299      	cmp	r1, r3
  404532:	d1f9      	bne.n	404528 <memmove+0x14>
  404534:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404536:	2a0f      	cmp	r2, #15
  404538:	d948      	bls.n	4045cc <memmove+0xb8>
  40453a:	ea41 0300 	orr.w	r3, r1, r0
  40453e:	079b      	lsls	r3, r3, #30
  404540:	d146      	bne.n	4045d0 <memmove+0xbc>
  404542:	f100 0410 	add.w	r4, r0, #16
  404546:	f101 0310 	add.w	r3, r1, #16
  40454a:	4615      	mov	r5, r2
  40454c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  404550:	f844 6c10 	str.w	r6, [r4, #-16]
  404554:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  404558:	f844 6c0c 	str.w	r6, [r4, #-12]
  40455c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  404560:	f844 6c08 	str.w	r6, [r4, #-8]
  404564:	3d10      	subs	r5, #16
  404566:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40456a:	f844 6c04 	str.w	r6, [r4, #-4]
  40456e:	2d0f      	cmp	r5, #15
  404570:	f103 0310 	add.w	r3, r3, #16
  404574:	f104 0410 	add.w	r4, r4, #16
  404578:	d8e8      	bhi.n	40454c <memmove+0x38>
  40457a:	f1a2 0310 	sub.w	r3, r2, #16
  40457e:	f023 030f 	bic.w	r3, r3, #15
  404582:	f002 0e0f 	and.w	lr, r2, #15
  404586:	3310      	adds	r3, #16
  404588:	f1be 0f03 	cmp.w	lr, #3
  40458c:	4419      	add	r1, r3
  40458e:	4403      	add	r3, r0
  404590:	d921      	bls.n	4045d6 <memmove+0xc2>
  404592:	1f1e      	subs	r6, r3, #4
  404594:	460d      	mov	r5, r1
  404596:	4674      	mov	r4, lr
  404598:	3c04      	subs	r4, #4
  40459a:	f855 7b04 	ldr.w	r7, [r5], #4
  40459e:	f846 7f04 	str.w	r7, [r6, #4]!
  4045a2:	2c03      	cmp	r4, #3
  4045a4:	d8f8      	bhi.n	404598 <memmove+0x84>
  4045a6:	f1ae 0404 	sub.w	r4, lr, #4
  4045aa:	f024 0403 	bic.w	r4, r4, #3
  4045ae:	3404      	adds	r4, #4
  4045b0:	4421      	add	r1, r4
  4045b2:	4423      	add	r3, r4
  4045b4:	f002 0203 	and.w	r2, r2, #3
  4045b8:	b162      	cbz	r2, 4045d4 <memmove+0xc0>
  4045ba:	3b01      	subs	r3, #1
  4045bc:	440a      	add	r2, r1
  4045be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4045c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4045c6:	428a      	cmp	r2, r1
  4045c8:	d1f9      	bne.n	4045be <memmove+0xaa>
  4045ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4045cc:	4603      	mov	r3, r0
  4045ce:	e7f3      	b.n	4045b8 <memmove+0xa4>
  4045d0:	4603      	mov	r3, r0
  4045d2:	e7f2      	b.n	4045ba <memmove+0xa6>
  4045d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4045d6:	4672      	mov	r2, lr
  4045d8:	e7ee      	b.n	4045b8 <memmove+0xa4>
  4045da:	bf00      	nop

004045dc <__malloc_lock>:
  4045dc:	4801      	ldr	r0, [pc, #4]	; (4045e4 <__malloc_lock+0x8>)
  4045de:	f7ff bb37 	b.w	403c50 <__retarget_lock_acquire_recursive>
  4045e2:	bf00      	nop
  4045e4:	20000b50 	.word	0x20000b50

004045e8 <__malloc_unlock>:
  4045e8:	4801      	ldr	r0, [pc, #4]	; (4045f0 <__malloc_unlock+0x8>)
  4045ea:	f7ff bb33 	b.w	403c54 <__retarget_lock_release_recursive>
  4045ee:	bf00      	nop
  4045f0:	20000b50 	.word	0x20000b50

004045f4 <_realloc_r>:
  4045f4:	2900      	cmp	r1, #0
  4045f6:	f000 8095 	beq.w	404724 <_realloc_r+0x130>
  4045fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045fe:	460d      	mov	r5, r1
  404600:	4616      	mov	r6, r2
  404602:	b083      	sub	sp, #12
  404604:	4680      	mov	r8, r0
  404606:	f106 070b 	add.w	r7, r6, #11
  40460a:	f7ff ffe7 	bl	4045dc <__malloc_lock>
  40460e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  404612:	2f16      	cmp	r7, #22
  404614:	f02e 0403 	bic.w	r4, lr, #3
  404618:	f1a5 0908 	sub.w	r9, r5, #8
  40461c:	d83c      	bhi.n	404698 <_realloc_r+0xa4>
  40461e:	2210      	movs	r2, #16
  404620:	4617      	mov	r7, r2
  404622:	42be      	cmp	r6, r7
  404624:	d83d      	bhi.n	4046a2 <_realloc_r+0xae>
  404626:	4294      	cmp	r4, r2
  404628:	da43      	bge.n	4046b2 <_realloc_r+0xbe>
  40462a:	4bc4      	ldr	r3, [pc, #784]	; (40493c <_realloc_r+0x348>)
  40462c:	6899      	ldr	r1, [r3, #8]
  40462e:	eb09 0004 	add.w	r0, r9, r4
  404632:	4288      	cmp	r0, r1
  404634:	f000 80b4 	beq.w	4047a0 <_realloc_r+0x1ac>
  404638:	6843      	ldr	r3, [r0, #4]
  40463a:	f023 0101 	bic.w	r1, r3, #1
  40463e:	4401      	add	r1, r0
  404640:	6849      	ldr	r1, [r1, #4]
  404642:	07c9      	lsls	r1, r1, #31
  404644:	d54c      	bpl.n	4046e0 <_realloc_r+0xec>
  404646:	f01e 0f01 	tst.w	lr, #1
  40464a:	f000 809b 	beq.w	404784 <_realloc_r+0x190>
  40464e:	4631      	mov	r1, r6
  404650:	4640      	mov	r0, r8
  404652:	f7ff fb81 	bl	403d58 <_malloc_r>
  404656:	4606      	mov	r6, r0
  404658:	2800      	cmp	r0, #0
  40465a:	d03a      	beq.n	4046d2 <_realloc_r+0xde>
  40465c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  404660:	f023 0301 	bic.w	r3, r3, #1
  404664:	444b      	add	r3, r9
  404666:	f1a0 0208 	sub.w	r2, r0, #8
  40466a:	429a      	cmp	r2, r3
  40466c:	f000 8121 	beq.w	4048b2 <_realloc_r+0x2be>
  404670:	1f22      	subs	r2, r4, #4
  404672:	2a24      	cmp	r2, #36	; 0x24
  404674:	f200 8107 	bhi.w	404886 <_realloc_r+0x292>
  404678:	2a13      	cmp	r2, #19
  40467a:	f200 80db 	bhi.w	404834 <_realloc_r+0x240>
  40467e:	4603      	mov	r3, r0
  404680:	462a      	mov	r2, r5
  404682:	6811      	ldr	r1, [r2, #0]
  404684:	6019      	str	r1, [r3, #0]
  404686:	6851      	ldr	r1, [r2, #4]
  404688:	6059      	str	r1, [r3, #4]
  40468a:	6892      	ldr	r2, [r2, #8]
  40468c:	609a      	str	r2, [r3, #8]
  40468e:	4629      	mov	r1, r5
  404690:	4640      	mov	r0, r8
  404692:	f7fe fffd 	bl	403690 <_free_r>
  404696:	e01c      	b.n	4046d2 <_realloc_r+0xde>
  404698:	f027 0707 	bic.w	r7, r7, #7
  40469c:	2f00      	cmp	r7, #0
  40469e:	463a      	mov	r2, r7
  4046a0:	dabf      	bge.n	404622 <_realloc_r+0x2e>
  4046a2:	2600      	movs	r6, #0
  4046a4:	230c      	movs	r3, #12
  4046a6:	4630      	mov	r0, r6
  4046a8:	f8c8 3000 	str.w	r3, [r8]
  4046ac:	b003      	add	sp, #12
  4046ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046b2:	462e      	mov	r6, r5
  4046b4:	1be3      	subs	r3, r4, r7
  4046b6:	2b0f      	cmp	r3, #15
  4046b8:	d81e      	bhi.n	4046f8 <_realloc_r+0x104>
  4046ba:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4046be:	f003 0301 	and.w	r3, r3, #1
  4046c2:	4323      	orrs	r3, r4
  4046c4:	444c      	add	r4, r9
  4046c6:	f8c9 3004 	str.w	r3, [r9, #4]
  4046ca:	6863      	ldr	r3, [r4, #4]
  4046cc:	f043 0301 	orr.w	r3, r3, #1
  4046d0:	6063      	str	r3, [r4, #4]
  4046d2:	4640      	mov	r0, r8
  4046d4:	f7ff ff88 	bl	4045e8 <__malloc_unlock>
  4046d8:	4630      	mov	r0, r6
  4046da:	b003      	add	sp, #12
  4046dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046e0:	f023 0303 	bic.w	r3, r3, #3
  4046e4:	18e1      	adds	r1, r4, r3
  4046e6:	4291      	cmp	r1, r2
  4046e8:	db1f      	blt.n	40472a <_realloc_r+0x136>
  4046ea:	68c3      	ldr	r3, [r0, #12]
  4046ec:	6882      	ldr	r2, [r0, #8]
  4046ee:	462e      	mov	r6, r5
  4046f0:	60d3      	str	r3, [r2, #12]
  4046f2:	460c      	mov	r4, r1
  4046f4:	609a      	str	r2, [r3, #8]
  4046f6:	e7dd      	b.n	4046b4 <_realloc_r+0xc0>
  4046f8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4046fc:	eb09 0107 	add.w	r1, r9, r7
  404700:	f002 0201 	and.w	r2, r2, #1
  404704:	444c      	add	r4, r9
  404706:	f043 0301 	orr.w	r3, r3, #1
  40470a:	4317      	orrs	r7, r2
  40470c:	f8c9 7004 	str.w	r7, [r9, #4]
  404710:	604b      	str	r3, [r1, #4]
  404712:	6863      	ldr	r3, [r4, #4]
  404714:	f043 0301 	orr.w	r3, r3, #1
  404718:	3108      	adds	r1, #8
  40471a:	6063      	str	r3, [r4, #4]
  40471c:	4640      	mov	r0, r8
  40471e:	f7fe ffb7 	bl	403690 <_free_r>
  404722:	e7d6      	b.n	4046d2 <_realloc_r+0xde>
  404724:	4611      	mov	r1, r2
  404726:	f7ff bb17 	b.w	403d58 <_malloc_r>
  40472a:	f01e 0f01 	tst.w	lr, #1
  40472e:	d18e      	bne.n	40464e <_realloc_r+0x5a>
  404730:	f855 1c08 	ldr.w	r1, [r5, #-8]
  404734:	eba9 0a01 	sub.w	sl, r9, r1
  404738:	f8da 1004 	ldr.w	r1, [sl, #4]
  40473c:	f021 0103 	bic.w	r1, r1, #3
  404740:	440b      	add	r3, r1
  404742:	4423      	add	r3, r4
  404744:	4293      	cmp	r3, r2
  404746:	db25      	blt.n	404794 <_realloc_r+0x1a0>
  404748:	68c2      	ldr	r2, [r0, #12]
  40474a:	6881      	ldr	r1, [r0, #8]
  40474c:	4656      	mov	r6, sl
  40474e:	60ca      	str	r2, [r1, #12]
  404750:	6091      	str	r1, [r2, #8]
  404752:	f8da 100c 	ldr.w	r1, [sl, #12]
  404756:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40475a:	1f22      	subs	r2, r4, #4
  40475c:	2a24      	cmp	r2, #36	; 0x24
  40475e:	60c1      	str	r1, [r0, #12]
  404760:	6088      	str	r0, [r1, #8]
  404762:	f200 8094 	bhi.w	40488e <_realloc_r+0x29a>
  404766:	2a13      	cmp	r2, #19
  404768:	d96f      	bls.n	40484a <_realloc_r+0x256>
  40476a:	6829      	ldr	r1, [r5, #0]
  40476c:	f8ca 1008 	str.w	r1, [sl, #8]
  404770:	6869      	ldr	r1, [r5, #4]
  404772:	f8ca 100c 	str.w	r1, [sl, #12]
  404776:	2a1b      	cmp	r2, #27
  404778:	f200 80a2 	bhi.w	4048c0 <_realloc_r+0x2cc>
  40477c:	3508      	adds	r5, #8
  40477e:	f10a 0210 	add.w	r2, sl, #16
  404782:	e063      	b.n	40484c <_realloc_r+0x258>
  404784:	f855 3c08 	ldr.w	r3, [r5, #-8]
  404788:	eba9 0a03 	sub.w	sl, r9, r3
  40478c:	f8da 1004 	ldr.w	r1, [sl, #4]
  404790:	f021 0103 	bic.w	r1, r1, #3
  404794:	1863      	adds	r3, r4, r1
  404796:	4293      	cmp	r3, r2
  404798:	f6ff af59 	blt.w	40464e <_realloc_r+0x5a>
  40479c:	4656      	mov	r6, sl
  40479e:	e7d8      	b.n	404752 <_realloc_r+0x15e>
  4047a0:	6841      	ldr	r1, [r0, #4]
  4047a2:	f021 0b03 	bic.w	fp, r1, #3
  4047a6:	44a3      	add	fp, r4
  4047a8:	f107 0010 	add.w	r0, r7, #16
  4047ac:	4583      	cmp	fp, r0
  4047ae:	da56      	bge.n	40485e <_realloc_r+0x26a>
  4047b0:	f01e 0f01 	tst.w	lr, #1
  4047b4:	f47f af4b 	bne.w	40464e <_realloc_r+0x5a>
  4047b8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4047bc:	eba9 0a01 	sub.w	sl, r9, r1
  4047c0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4047c4:	f021 0103 	bic.w	r1, r1, #3
  4047c8:	448b      	add	fp, r1
  4047ca:	4558      	cmp	r0, fp
  4047cc:	dce2      	bgt.n	404794 <_realloc_r+0x1a0>
  4047ce:	4656      	mov	r6, sl
  4047d0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4047d4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4047d8:	1f22      	subs	r2, r4, #4
  4047da:	2a24      	cmp	r2, #36	; 0x24
  4047dc:	60c1      	str	r1, [r0, #12]
  4047de:	6088      	str	r0, [r1, #8]
  4047e0:	f200 808f 	bhi.w	404902 <_realloc_r+0x30e>
  4047e4:	2a13      	cmp	r2, #19
  4047e6:	f240 808a 	bls.w	4048fe <_realloc_r+0x30a>
  4047ea:	6829      	ldr	r1, [r5, #0]
  4047ec:	f8ca 1008 	str.w	r1, [sl, #8]
  4047f0:	6869      	ldr	r1, [r5, #4]
  4047f2:	f8ca 100c 	str.w	r1, [sl, #12]
  4047f6:	2a1b      	cmp	r2, #27
  4047f8:	f200 808a 	bhi.w	404910 <_realloc_r+0x31c>
  4047fc:	3508      	adds	r5, #8
  4047fe:	f10a 0210 	add.w	r2, sl, #16
  404802:	6829      	ldr	r1, [r5, #0]
  404804:	6011      	str	r1, [r2, #0]
  404806:	6869      	ldr	r1, [r5, #4]
  404808:	6051      	str	r1, [r2, #4]
  40480a:	68a9      	ldr	r1, [r5, #8]
  40480c:	6091      	str	r1, [r2, #8]
  40480e:	eb0a 0107 	add.w	r1, sl, r7
  404812:	ebab 0207 	sub.w	r2, fp, r7
  404816:	f042 0201 	orr.w	r2, r2, #1
  40481a:	6099      	str	r1, [r3, #8]
  40481c:	604a      	str	r2, [r1, #4]
  40481e:	f8da 3004 	ldr.w	r3, [sl, #4]
  404822:	f003 0301 	and.w	r3, r3, #1
  404826:	431f      	orrs	r7, r3
  404828:	4640      	mov	r0, r8
  40482a:	f8ca 7004 	str.w	r7, [sl, #4]
  40482e:	f7ff fedb 	bl	4045e8 <__malloc_unlock>
  404832:	e751      	b.n	4046d8 <_realloc_r+0xe4>
  404834:	682b      	ldr	r3, [r5, #0]
  404836:	6003      	str	r3, [r0, #0]
  404838:	686b      	ldr	r3, [r5, #4]
  40483a:	6043      	str	r3, [r0, #4]
  40483c:	2a1b      	cmp	r2, #27
  40483e:	d82d      	bhi.n	40489c <_realloc_r+0x2a8>
  404840:	f100 0308 	add.w	r3, r0, #8
  404844:	f105 0208 	add.w	r2, r5, #8
  404848:	e71b      	b.n	404682 <_realloc_r+0x8e>
  40484a:	4632      	mov	r2, r6
  40484c:	6829      	ldr	r1, [r5, #0]
  40484e:	6011      	str	r1, [r2, #0]
  404850:	6869      	ldr	r1, [r5, #4]
  404852:	6051      	str	r1, [r2, #4]
  404854:	68a9      	ldr	r1, [r5, #8]
  404856:	6091      	str	r1, [r2, #8]
  404858:	461c      	mov	r4, r3
  40485a:	46d1      	mov	r9, sl
  40485c:	e72a      	b.n	4046b4 <_realloc_r+0xc0>
  40485e:	eb09 0107 	add.w	r1, r9, r7
  404862:	ebab 0b07 	sub.w	fp, fp, r7
  404866:	f04b 0201 	orr.w	r2, fp, #1
  40486a:	6099      	str	r1, [r3, #8]
  40486c:	604a      	str	r2, [r1, #4]
  40486e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  404872:	f003 0301 	and.w	r3, r3, #1
  404876:	431f      	orrs	r7, r3
  404878:	4640      	mov	r0, r8
  40487a:	f845 7c04 	str.w	r7, [r5, #-4]
  40487e:	f7ff feb3 	bl	4045e8 <__malloc_unlock>
  404882:	462e      	mov	r6, r5
  404884:	e728      	b.n	4046d8 <_realloc_r+0xe4>
  404886:	4629      	mov	r1, r5
  404888:	f7ff fe44 	bl	404514 <memmove>
  40488c:	e6ff      	b.n	40468e <_realloc_r+0x9a>
  40488e:	4629      	mov	r1, r5
  404890:	4630      	mov	r0, r6
  404892:	461c      	mov	r4, r3
  404894:	46d1      	mov	r9, sl
  404896:	f7ff fe3d 	bl	404514 <memmove>
  40489a:	e70b      	b.n	4046b4 <_realloc_r+0xc0>
  40489c:	68ab      	ldr	r3, [r5, #8]
  40489e:	6083      	str	r3, [r0, #8]
  4048a0:	68eb      	ldr	r3, [r5, #12]
  4048a2:	60c3      	str	r3, [r0, #12]
  4048a4:	2a24      	cmp	r2, #36	; 0x24
  4048a6:	d017      	beq.n	4048d8 <_realloc_r+0x2e4>
  4048a8:	f100 0310 	add.w	r3, r0, #16
  4048ac:	f105 0210 	add.w	r2, r5, #16
  4048b0:	e6e7      	b.n	404682 <_realloc_r+0x8e>
  4048b2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4048b6:	f023 0303 	bic.w	r3, r3, #3
  4048ba:	441c      	add	r4, r3
  4048bc:	462e      	mov	r6, r5
  4048be:	e6f9      	b.n	4046b4 <_realloc_r+0xc0>
  4048c0:	68a9      	ldr	r1, [r5, #8]
  4048c2:	f8ca 1010 	str.w	r1, [sl, #16]
  4048c6:	68e9      	ldr	r1, [r5, #12]
  4048c8:	f8ca 1014 	str.w	r1, [sl, #20]
  4048cc:	2a24      	cmp	r2, #36	; 0x24
  4048ce:	d00c      	beq.n	4048ea <_realloc_r+0x2f6>
  4048d0:	3510      	adds	r5, #16
  4048d2:	f10a 0218 	add.w	r2, sl, #24
  4048d6:	e7b9      	b.n	40484c <_realloc_r+0x258>
  4048d8:	692b      	ldr	r3, [r5, #16]
  4048da:	6103      	str	r3, [r0, #16]
  4048dc:	696b      	ldr	r3, [r5, #20]
  4048de:	6143      	str	r3, [r0, #20]
  4048e0:	f105 0218 	add.w	r2, r5, #24
  4048e4:	f100 0318 	add.w	r3, r0, #24
  4048e8:	e6cb      	b.n	404682 <_realloc_r+0x8e>
  4048ea:	692a      	ldr	r2, [r5, #16]
  4048ec:	f8ca 2018 	str.w	r2, [sl, #24]
  4048f0:	696a      	ldr	r2, [r5, #20]
  4048f2:	f8ca 201c 	str.w	r2, [sl, #28]
  4048f6:	3518      	adds	r5, #24
  4048f8:	f10a 0220 	add.w	r2, sl, #32
  4048fc:	e7a6      	b.n	40484c <_realloc_r+0x258>
  4048fe:	4632      	mov	r2, r6
  404900:	e77f      	b.n	404802 <_realloc_r+0x20e>
  404902:	4629      	mov	r1, r5
  404904:	4630      	mov	r0, r6
  404906:	9301      	str	r3, [sp, #4]
  404908:	f7ff fe04 	bl	404514 <memmove>
  40490c:	9b01      	ldr	r3, [sp, #4]
  40490e:	e77e      	b.n	40480e <_realloc_r+0x21a>
  404910:	68a9      	ldr	r1, [r5, #8]
  404912:	f8ca 1010 	str.w	r1, [sl, #16]
  404916:	68e9      	ldr	r1, [r5, #12]
  404918:	f8ca 1014 	str.w	r1, [sl, #20]
  40491c:	2a24      	cmp	r2, #36	; 0x24
  40491e:	d003      	beq.n	404928 <_realloc_r+0x334>
  404920:	3510      	adds	r5, #16
  404922:	f10a 0218 	add.w	r2, sl, #24
  404926:	e76c      	b.n	404802 <_realloc_r+0x20e>
  404928:	692a      	ldr	r2, [r5, #16]
  40492a:	f8ca 2018 	str.w	r2, [sl, #24]
  40492e:	696a      	ldr	r2, [r5, #20]
  404930:	f8ca 201c 	str.w	r2, [sl, #28]
  404934:	3518      	adds	r5, #24
  404936:	f10a 0220 	add.w	r2, sl, #32
  40493a:	e762      	b.n	404802 <_realloc_r+0x20e>
  40493c:	200005a8 	.word	0x200005a8

00404940 <lflush>:
  404940:	8983      	ldrh	r3, [r0, #12]
  404942:	f003 0309 	and.w	r3, r3, #9
  404946:	2b09      	cmp	r3, #9
  404948:	d001      	beq.n	40494e <lflush+0xe>
  40494a:	2000      	movs	r0, #0
  40494c:	4770      	bx	lr
  40494e:	f7fe bc57 	b.w	403200 <fflush>
  404952:	bf00      	nop

00404954 <__srefill_r>:
  404954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404956:	460c      	mov	r4, r1
  404958:	4605      	mov	r5, r0
  40495a:	b110      	cbz	r0, 404962 <__srefill_r+0xe>
  40495c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40495e:	2b00      	cmp	r3, #0
  404960:	d045      	beq.n	4049ee <__srefill_r+0x9a>
  404962:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404966:	b29a      	uxth	r2, r3
  404968:	0497      	lsls	r7, r2, #18
  40496a:	d407      	bmi.n	40497c <__srefill_r+0x28>
  40496c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40496e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404972:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404976:	6662      	str	r2, [r4, #100]	; 0x64
  404978:	81a3      	strh	r3, [r4, #12]
  40497a:	b29a      	uxth	r2, r3
  40497c:	2100      	movs	r1, #0
  40497e:	0696      	lsls	r6, r2, #26
  404980:	6061      	str	r1, [r4, #4]
  404982:	d431      	bmi.n	4049e8 <__srefill_r+0x94>
  404984:	0750      	lsls	r0, r2, #29
  404986:	d522      	bpl.n	4049ce <__srefill_r+0x7a>
  404988:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40498a:	b161      	cbz	r1, 4049a6 <__srefill_r+0x52>
  40498c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404990:	4299      	cmp	r1, r3
  404992:	d002      	beq.n	40499a <__srefill_r+0x46>
  404994:	4628      	mov	r0, r5
  404996:	f7fe fe7b 	bl	403690 <_free_r>
  40499a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  40499c:	6063      	str	r3, [r4, #4]
  40499e:	2000      	movs	r0, #0
  4049a0:	6320      	str	r0, [r4, #48]	; 0x30
  4049a2:	2b00      	cmp	r3, #0
  4049a4:	d13f      	bne.n	404a26 <__srefill_r+0xd2>
  4049a6:	6923      	ldr	r3, [r4, #16]
  4049a8:	2b00      	cmp	r3, #0
  4049aa:	d04c      	beq.n	404a46 <__srefill_r+0xf2>
  4049ac:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  4049b0:	b2be      	uxth	r6, r7
  4049b2:	07b3      	lsls	r3, r6, #30
  4049b4:	d11e      	bne.n	4049f4 <__srefill_r+0xa0>
  4049b6:	6922      	ldr	r2, [r4, #16]
  4049b8:	6022      	str	r2, [r4, #0]
  4049ba:	4628      	mov	r0, r5
  4049bc:	6963      	ldr	r3, [r4, #20]
  4049be:	6a25      	ldr	r5, [r4, #32]
  4049c0:	69e1      	ldr	r1, [r4, #28]
  4049c2:	47a8      	blx	r5
  4049c4:	2800      	cmp	r0, #0
  4049c6:	6060      	str	r0, [r4, #4]
  4049c8:	dd09      	ble.n	4049de <__srefill_r+0x8a>
  4049ca:	2000      	movs	r0, #0
  4049cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4049ce:	06d1      	lsls	r1, r2, #27
  4049d0:	d53e      	bpl.n	404a50 <__srefill_r+0xfc>
  4049d2:	0712      	lsls	r2, r2, #28
  4049d4:	d42a      	bmi.n	404a2c <__srefill_r+0xd8>
  4049d6:	f043 0304 	orr.w	r3, r3, #4
  4049da:	81a3      	strh	r3, [r4, #12]
  4049dc:	e7e3      	b.n	4049a6 <__srefill_r+0x52>
  4049de:	89a3      	ldrh	r3, [r4, #12]
  4049e0:	d119      	bne.n	404a16 <__srefill_r+0xc2>
  4049e2:	f043 0320 	orr.w	r3, r3, #32
  4049e6:	81a3      	strh	r3, [r4, #12]
  4049e8:	f04f 30ff 	mov.w	r0, #4294967295
  4049ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4049ee:	f7fe fc47 	bl	403280 <__sinit>
  4049f2:	e7b6      	b.n	404962 <__srefill_r+0xe>
  4049f4:	4b1a      	ldr	r3, [pc, #104]	; (404a60 <__srefill_r+0x10c>)
  4049f6:	491b      	ldr	r1, [pc, #108]	; (404a64 <__srefill_r+0x110>)
  4049f8:	6818      	ldr	r0, [r3, #0]
  4049fa:	2301      	movs	r3, #1
  4049fc:	81a3      	strh	r3, [r4, #12]
  4049fe:	f006 0609 	and.w	r6, r6, #9
  404a02:	f7ff f8a3 	bl	403b4c <_fwalk>
  404a06:	2e09      	cmp	r6, #9
  404a08:	81a7      	strh	r7, [r4, #12]
  404a0a:	d1d4      	bne.n	4049b6 <__srefill_r+0x62>
  404a0c:	4621      	mov	r1, r4
  404a0e:	4628      	mov	r0, r5
  404a10:	f7fe fb2c 	bl	40306c <__sflush_r>
  404a14:	e7cf      	b.n	4049b6 <__srefill_r+0x62>
  404a16:	2200      	movs	r2, #0
  404a18:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a1c:	81a3      	strh	r3, [r4, #12]
  404a1e:	6062      	str	r2, [r4, #4]
  404a20:	f04f 30ff 	mov.w	r0, #4294967295
  404a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404a26:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  404a28:	6023      	str	r3, [r4, #0]
  404a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404a2c:	4621      	mov	r1, r4
  404a2e:	4628      	mov	r0, r5
  404a30:	f7fe fbbc 	bl	4031ac <_fflush_r>
  404a34:	2800      	cmp	r0, #0
  404a36:	d1d7      	bne.n	4049e8 <__srefill_r+0x94>
  404a38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404a3c:	60a0      	str	r0, [r4, #8]
  404a3e:	61a0      	str	r0, [r4, #24]
  404a40:	f023 0308 	bic.w	r3, r3, #8
  404a44:	e7c7      	b.n	4049d6 <__srefill_r+0x82>
  404a46:	4621      	mov	r1, r4
  404a48:	4628      	mov	r0, r5
  404a4a:	f7ff f933 	bl	403cb4 <__smakebuf_r>
  404a4e:	e7ad      	b.n	4049ac <__srefill_r+0x58>
  404a50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404a54:	2209      	movs	r2, #9
  404a56:	602a      	str	r2, [r5, #0]
  404a58:	f04f 30ff 	mov.w	r0, #4294967295
  404a5c:	81a3      	strh	r3, [r4, #12]
  404a5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404a60:	00405df8 	.word	0x00405df8
  404a64:	00404941 	.word	0x00404941

00404a68 <_sbrk_r>:
  404a68:	b538      	push	{r3, r4, r5, lr}
  404a6a:	4c07      	ldr	r4, [pc, #28]	; (404a88 <_sbrk_r+0x20>)
  404a6c:	2300      	movs	r3, #0
  404a6e:	4605      	mov	r5, r0
  404a70:	4608      	mov	r0, r1
  404a72:	6023      	str	r3, [r4, #0]
  404a74:	f7fc f876 	bl	400b64 <_sbrk>
  404a78:	1c43      	adds	r3, r0, #1
  404a7a:	d000      	beq.n	404a7e <_sbrk_r+0x16>
  404a7c:	bd38      	pop	{r3, r4, r5, pc}
  404a7e:	6823      	ldr	r3, [r4, #0]
  404a80:	2b00      	cmp	r3, #0
  404a82:	d0fb      	beq.n	404a7c <_sbrk_r+0x14>
  404a84:	602b      	str	r3, [r5, #0]
  404a86:	bd38      	pop	{r3, r4, r5, pc}
  404a88:	20000b64 	.word	0x20000b64

00404a8c <__sccl>:
  404a8c:	b470      	push	{r4, r5, r6}
  404a8e:	780c      	ldrb	r4, [r1, #0]
  404a90:	2c5e      	cmp	r4, #94	; 0x5e
  404a92:	d02f      	beq.n	404af4 <__sccl+0x68>
  404a94:	2200      	movs	r2, #0
  404a96:	1c4d      	adds	r5, r1, #1
  404a98:	4616      	mov	r6, r2
  404a9a:	1e43      	subs	r3, r0, #1
  404a9c:	f100 01ff 	add.w	r1, r0, #255	; 0xff
  404aa0:	f803 2f01 	strb.w	r2, [r3, #1]!
  404aa4:	428b      	cmp	r3, r1
  404aa6:	d1fb      	bne.n	404aa0 <__sccl+0x14>
  404aa8:	b174      	cbz	r4, 404ac8 <__sccl+0x3c>
  404aaa:	f086 0201 	eor.w	r2, r6, #1
  404aae:	5502      	strb	r2, [r0, r4]
  404ab0:	1c6e      	adds	r6, r5, #1
  404ab2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  404ab6:	2b2d      	cmp	r3, #45	; 0x2d
  404ab8:	4631      	mov	r1, r6
  404aba:	d00d      	beq.n	404ad8 <__sccl+0x4c>
  404abc:	2b5d      	cmp	r3, #93	; 0x5d
  404abe:	d004      	beq.n	404aca <__sccl+0x3e>
  404ac0:	b133      	cbz	r3, 404ad0 <__sccl+0x44>
  404ac2:	461c      	mov	r4, r3
  404ac4:	4635      	mov	r5, r6
  404ac6:	e7f2      	b.n	404aae <__sccl+0x22>
  404ac8:	1e69      	subs	r1, r5, #1
  404aca:	4608      	mov	r0, r1
  404acc:	bc70      	pop	{r4, r5, r6}
  404ace:	4770      	bx	lr
  404ad0:	4629      	mov	r1, r5
  404ad2:	4608      	mov	r0, r1
  404ad4:	bc70      	pop	{r4, r5, r6}
  404ad6:	4770      	bx	lr
  404ad8:	7869      	ldrb	r1, [r5, #1]
  404ada:	295d      	cmp	r1, #93	; 0x5d
  404adc:	d0f1      	beq.n	404ac2 <__sccl+0x36>
  404ade:	428c      	cmp	r4, r1
  404ae0:	dcef      	bgt.n	404ac2 <__sccl+0x36>
  404ae2:	3502      	adds	r5, #2
  404ae4:	1903      	adds	r3, r0, r4
  404ae6:	3401      	adds	r4, #1
  404ae8:	42a1      	cmp	r1, r4
  404aea:	f803 2f01 	strb.w	r2, [r3, #1]!
  404aee:	dcfa      	bgt.n	404ae6 <__sccl+0x5a>
  404af0:	3602      	adds	r6, #2
  404af2:	e7de      	b.n	404ab2 <__sccl+0x26>
  404af4:	2201      	movs	r2, #1
  404af6:	784c      	ldrb	r4, [r1, #1]
  404af8:	4616      	mov	r6, r2
  404afa:	1c8d      	adds	r5, r1, #2
  404afc:	e7cd      	b.n	404a9a <__sccl+0xe>
  404afe:	bf00      	nop

00404b00 <__sread>:
  404b00:	b510      	push	{r4, lr}
  404b02:	460c      	mov	r4, r1
  404b04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404b08:	f000 fdfa 	bl	405700 <_read_r>
  404b0c:	2800      	cmp	r0, #0
  404b0e:	db03      	blt.n	404b18 <__sread+0x18>
  404b10:	6d23      	ldr	r3, [r4, #80]	; 0x50
  404b12:	4403      	add	r3, r0
  404b14:	6523      	str	r3, [r4, #80]	; 0x50
  404b16:	bd10      	pop	{r4, pc}
  404b18:	89a3      	ldrh	r3, [r4, #12]
  404b1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  404b1e:	81a3      	strh	r3, [r4, #12]
  404b20:	bd10      	pop	{r4, pc}
  404b22:	bf00      	nop

00404b24 <__swrite>:
  404b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b28:	4616      	mov	r6, r2
  404b2a:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  404b2e:	461f      	mov	r7, r3
  404b30:	05d3      	lsls	r3, r2, #23
  404b32:	460c      	mov	r4, r1
  404b34:	4605      	mov	r5, r0
  404b36:	d507      	bpl.n	404b48 <__swrite+0x24>
  404b38:	2200      	movs	r2, #0
  404b3a:	2302      	movs	r3, #2
  404b3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404b40:	f000 fdc8 	bl	4056d4 <_lseek_r>
  404b44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404b48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  404b4c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404b50:	81a2      	strh	r2, [r4, #12]
  404b52:	463b      	mov	r3, r7
  404b54:	4632      	mov	r2, r6
  404b56:	4628      	mov	r0, r5
  404b58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404b5c:	f000 bca8 	b.w	4054b0 <_write_r>

00404b60 <__sseek>:
  404b60:	b510      	push	{r4, lr}
  404b62:	460c      	mov	r4, r1
  404b64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404b68:	f000 fdb4 	bl	4056d4 <_lseek_r>
  404b6c:	89a3      	ldrh	r3, [r4, #12]
  404b6e:	1c42      	adds	r2, r0, #1
  404b70:	bf0e      	itee	eq
  404b72:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  404b76:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  404b7a:	6520      	strne	r0, [r4, #80]	; 0x50
  404b7c:	81a3      	strh	r3, [r4, #12]
  404b7e:	bd10      	pop	{r4, pc}

00404b80 <__sclose>:
  404b80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404b84:	f000 bd0c 	b.w	4055a0 <_close_r>

00404b88 <_strtol_l.isra.0>:
  404b88:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b8c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  404b90:	460f      	mov	r7, r1
  404b92:	4680      	mov	r8, r0
  404b94:	4616      	mov	r6, r2
  404b96:	461d      	mov	r5, r3
  404b98:	468a      	mov	sl, r1
  404b9a:	e000      	b.n	404b9e <_strtol_l.isra.0+0x16>
  404b9c:	46a2      	mov	sl, r4
  404b9e:	4654      	mov	r4, sl
  404ba0:	4648      	mov	r0, r9
  404ba2:	f814 bb01 	ldrb.w	fp, [r4], #1
  404ba6:	f7ff f83d 	bl	403c24 <__locale_ctype_ptr_l>
  404baa:	4458      	add	r0, fp
  404bac:	7842      	ldrb	r2, [r0, #1]
  404bae:	f012 0208 	ands.w	r2, r2, #8
  404bb2:	d1f3      	bne.n	404b9c <_strtol_l.isra.0+0x14>
  404bb4:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
  404bb8:	d04f      	beq.n	404c5a <_strtol_l.isra.0+0xd2>
  404bba:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
  404bbe:	bf04      	itt	eq
  404bc0:	f894 b000 	ldrbeq.w	fp, [r4]
  404bc4:	f10a 0402 	addeq.w	r4, sl, #2
  404bc8:	b11d      	cbz	r5, 404bd2 <_strtol_l.isra.0+0x4a>
  404bca:	2d10      	cmp	r5, #16
  404bcc:	d056      	beq.n	404c7c <_strtol_l.isra.0+0xf4>
  404bce:	46ac      	mov	ip, r5
  404bd0:	e004      	b.n	404bdc <_strtol_l.isra.0+0x54>
  404bd2:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  404bd6:	d060      	beq.n	404c9a <_strtol_l.isra.0+0x112>
  404bd8:	250a      	movs	r5, #10
  404bda:	46ac      	mov	ip, r5
  404bdc:	2a00      	cmp	r2, #0
  404bde:	bf0c      	ite	eq
  404be0:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
  404be4:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
  404be8:	2100      	movs	r1, #0
  404bea:	fbb9 fefc 	udiv	lr, r9, ip
  404bee:	4608      	mov	r0, r1
  404bf0:	fb0c 9a1e 	mls	sl, ip, lr, r9
  404bf4:	e005      	b.n	404c02 <_strtol_l.isra.0+0x7a>
  404bf6:	d029      	beq.n	404c4c <_strtol_l.isra.0+0xc4>
  404bf8:	fb0c 3000 	mla	r0, ip, r0, r3
  404bfc:	2101      	movs	r1, #1
  404bfe:	f814 bb01 	ldrb.w	fp, [r4], #1
  404c02:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
  404c06:	2b09      	cmp	r3, #9
  404c08:	d905      	bls.n	404c16 <_strtol_l.isra.0+0x8e>
  404c0a:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
  404c0e:	2b19      	cmp	r3, #25
  404c10:	d80b      	bhi.n	404c2a <_strtol_l.isra.0+0xa2>
  404c12:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
  404c16:	429d      	cmp	r5, r3
  404c18:	dd0f      	ble.n	404c3a <_strtol_l.isra.0+0xb2>
  404c1a:	f1b1 3fff 	cmp.w	r1, #4294967295
  404c1e:	d0ee      	beq.n	404bfe <_strtol_l.isra.0+0x76>
  404c20:	4586      	cmp	lr, r0
  404c22:	d2e8      	bcs.n	404bf6 <_strtol_l.isra.0+0x6e>
  404c24:	f04f 31ff 	mov.w	r1, #4294967295
  404c28:	e7e9      	b.n	404bfe <_strtol_l.isra.0+0x76>
  404c2a:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
  404c2e:	2b19      	cmp	r3, #25
  404c30:	d803      	bhi.n	404c3a <_strtol_l.isra.0+0xb2>
  404c32:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
  404c36:	429d      	cmp	r5, r3
  404c38:	dcef      	bgt.n	404c1a <_strtol_l.isra.0+0x92>
  404c3a:	1c4b      	adds	r3, r1, #1
  404c3c:	d013      	beq.n	404c66 <_strtol_l.isra.0+0xde>
  404c3e:	b102      	cbz	r2, 404c42 <_strtol_l.isra.0+0xba>
  404c40:	4240      	negs	r0, r0
  404c42:	b146      	cbz	r6, 404c56 <_strtol_l.isra.0+0xce>
  404c44:	b9c1      	cbnz	r1, 404c78 <_strtol_l.isra.0+0xf0>
  404c46:	6037      	str	r7, [r6, #0]
  404c48:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c4c:	459a      	cmp	sl, r3
  404c4e:	dad3      	bge.n	404bf8 <_strtol_l.isra.0+0x70>
  404c50:	f04f 31ff 	mov.w	r1, #4294967295
  404c54:	e7d3      	b.n	404bfe <_strtol_l.isra.0+0x76>
  404c56:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c5a:	f894 b000 	ldrb.w	fp, [r4]
  404c5e:	2201      	movs	r2, #1
  404c60:	f10a 0402 	add.w	r4, sl, #2
  404c64:	e7b0      	b.n	404bc8 <_strtol_l.isra.0+0x40>
  404c66:	2322      	movs	r3, #34	; 0x22
  404c68:	f8c8 3000 	str.w	r3, [r8]
  404c6c:	b1ee      	cbz	r6, 404caa <_strtol_l.isra.0+0x122>
  404c6e:	1e67      	subs	r7, r4, #1
  404c70:	4648      	mov	r0, r9
  404c72:	6037      	str	r7, [r6, #0]
  404c74:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c78:	4681      	mov	r9, r0
  404c7a:	e7f8      	b.n	404c6e <_strtol_l.isra.0+0xe6>
  404c7c:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  404c80:	d1a5      	bne.n	404bce <_strtol_l.isra.0+0x46>
  404c82:	7823      	ldrb	r3, [r4, #0]
  404c84:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404c88:	2b58      	cmp	r3, #88	; 0x58
  404c8a:	d1a0      	bne.n	404bce <_strtol_l.isra.0+0x46>
  404c8c:	f04f 0c10 	mov.w	ip, #16
  404c90:	f894 b001 	ldrb.w	fp, [r4, #1]
  404c94:	4665      	mov	r5, ip
  404c96:	3402      	adds	r4, #2
  404c98:	e7a0      	b.n	404bdc <_strtol_l.isra.0+0x54>
  404c9a:	7823      	ldrb	r3, [r4, #0]
  404c9c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404ca0:	2b58      	cmp	r3, #88	; 0x58
  404ca2:	d0f3      	beq.n	404c8c <_strtol_l.isra.0+0x104>
  404ca4:	2508      	movs	r5, #8
  404ca6:	46ac      	mov	ip, r5
  404ca8:	e798      	b.n	404bdc <_strtol_l.isra.0+0x54>
  404caa:	4648      	mov	r0, r9
  404cac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404cb0 <_strtol_r>:
  404cb0:	b530      	push	{r4, r5, lr}
  404cb2:	4c06      	ldr	r4, [pc, #24]	; (404ccc <_strtol_r+0x1c>)
  404cb4:	4d06      	ldr	r5, [pc, #24]	; (404cd0 <_strtol_r+0x20>)
  404cb6:	6824      	ldr	r4, [r4, #0]
  404cb8:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404cba:	b083      	sub	sp, #12
  404cbc:	2c00      	cmp	r4, #0
  404cbe:	bf08      	it	eq
  404cc0:	462c      	moveq	r4, r5
  404cc2:	9400      	str	r4, [sp, #0]
  404cc4:	f7ff ff60 	bl	404b88 <_strtol_l.isra.0>
  404cc8:	b003      	add	sp, #12
  404cca:	bd30      	pop	{r4, r5, pc}
  404ccc:	2000000c 	.word	0x2000000c
  404cd0:	2000043c 	.word	0x2000043c

00404cd4 <_strtoll_l.isra.0>:
  404cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404cd8:	b085      	sub	sp, #20
  404cda:	461e      	mov	r6, r3
  404cdc:	9102      	str	r1, [sp, #8]
  404cde:	9003      	str	r0, [sp, #12]
  404ce0:	9200      	str	r2, [sp, #0]
  404ce2:	4688      	mov	r8, r1
  404ce4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  404ce6:	e000      	b.n	404cea <_strtoll_l.isra.0+0x16>
  404ce8:	46a8      	mov	r8, r5
  404cea:	4645      	mov	r5, r8
  404cec:	4638      	mov	r0, r7
  404cee:	f815 4b01 	ldrb.w	r4, [r5], #1
  404cf2:	f7fe ff97 	bl	403c24 <__locale_ctype_ptr_l>
  404cf6:	4420      	add	r0, r4
  404cf8:	7843      	ldrb	r3, [r0, #1]
  404cfa:	f013 0308 	ands.w	r3, r3, #8
  404cfe:	d1f3      	bne.n	404ce8 <_strtoll_l.isra.0+0x14>
  404d00:	2c2d      	cmp	r4, #45	; 0x2d
  404d02:	f000 8081 	beq.w	404e08 <_strtoll_l.isra.0+0x134>
  404d06:	2c2b      	cmp	r4, #43	; 0x2b
  404d08:	bf03      	ittte	eq
  404d0a:	782c      	ldrbeq	r4, [r5, #0]
  404d0c:	9301      	streq	r3, [sp, #4]
  404d0e:	f108 0502 	addeq.w	r5, r8, #2
  404d12:	9301      	strne	r3, [sp, #4]
  404d14:	b166      	cbz	r6, 404d30 <_strtoll_l.isra.0+0x5c>
  404d16:	2e10      	cmp	r6, #16
  404d18:	f000 8088 	beq.w	404e2c <_strtoll_l.isra.0+0x158>
  404d1c:	9b01      	ldr	r3, [sp, #4]
  404d1e:	46b0      	mov	r8, r6
  404d20:	ea4f 79e6 	mov.w	r9, r6, asr #31
  404d24:	b97b      	cbnz	r3, 404d46 <_strtoll_l.isra.0+0x72>
  404d26:	f04f 3aff 	mov.w	sl, #4294967295
  404d2a:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
  404d2e:	e00e      	b.n	404d4e <_strtoll_l.isra.0+0x7a>
  404d30:	2c30      	cmp	r4, #48	; 0x30
  404d32:	f000 808a 	beq.w	404e4a <_strtoll_l.isra.0+0x176>
  404d36:	f04f 080a 	mov.w	r8, #10
  404d3a:	f04f 0900 	mov.w	r9, #0
  404d3e:	260a      	movs	r6, #10
  404d40:	9b01      	ldr	r3, [sp, #4]
  404d42:	2b00      	cmp	r3, #0
  404d44:	d0ef      	beq.n	404d26 <_strtoll_l.isra.0+0x52>
  404d46:	f04f 0a00 	mov.w	sl, #0
  404d4a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
  404d4e:	4642      	mov	r2, r8
  404d50:	464b      	mov	r3, r9
  404d52:	4650      	mov	r0, sl
  404d54:	4639      	mov	r1, r7
  404d56:	f000 fce9 	bl	40572c <__aeabi_uldivmod>
  404d5a:	464b      	mov	r3, r9
  404d5c:	4693      	mov	fp, r2
  404d5e:	4650      	mov	r0, sl
  404d60:	4642      	mov	r2, r8
  404d62:	4639      	mov	r1, r7
  404d64:	f000 fce2 	bl	40572c <__aeabi_uldivmod>
  404d68:	f04f 0e00 	mov.w	lr, #0
  404d6c:	2200      	movs	r2, #0
  404d6e:	2300      	movs	r3, #0
  404d70:	e00f      	b.n	404d92 <_strtoll_l.isra.0+0xbe>
  404d72:	d044      	beq.n	404dfe <_strtoll_l.isra.0+0x12a>
  404d74:	fb02 f409 	mul.w	r4, r2, r9
  404d78:	fb08 4403 	mla	r4, r8, r3, r4
  404d7c:	fba2 2308 	umull	r2, r3, r2, r8
  404d80:	4423      	add	r3, r4
  404d82:	eb12 020c 	adds.w	r2, r2, ip
  404d86:	eb43 73ec 	adc.w	r3, r3, ip, asr #31
  404d8a:	f04f 0e01 	mov.w	lr, #1
  404d8e:	f815 4b01 	ldrb.w	r4, [r5], #1
  404d92:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
  404d96:	f1bc 0f09 	cmp.w	ip, #9
  404d9a:	d906      	bls.n	404daa <_strtoll_l.isra.0+0xd6>
  404d9c:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
  404da0:	f1bc 0f19 	cmp.w	ip, #25
  404da4:	d80d      	bhi.n	404dc2 <_strtoll_l.isra.0+0xee>
  404da6:	f1a4 0c37 	sub.w	ip, r4, #55	; 0x37
  404daa:	4566      	cmp	r6, ip
  404dac:	dd12      	ble.n	404dd4 <_strtoll_l.isra.0+0x100>
  404dae:	f1be 3fff 	cmp.w	lr, #4294967295
  404db2:	d0ec      	beq.n	404d8e <_strtoll_l.isra.0+0xba>
  404db4:	4299      	cmp	r1, r3
  404db6:	bf08      	it	eq
  404db8:	4290      	cmpeq	r0, r2
  404dba:	d2da      	bcs.n	404d72 <_strtoll_l.isra.0+0x9e>
  404dbc:	f04f 3eff 	mov.w	lr, #4294967295
  404dc0:	e7e5      	b.n	404d8e <_strtoll_l.isra.0+0xba>
  404dc2:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
  404dc6:	f1bc 0f19 	cmp.w	ip, #25
  404dca:	d803      	bhi.n	404dd4 <_strtoll_l.isra.0+0x100>
  404dcc:	f1a4 0c57 	sub.w	ip, r4, #87	; 0x57
  404dd0:	4566      	cmp	r6, ip
  404dd2:	dcec      	bgt.n	404dae <_strtoll_l.isra.0+0xda>
  404dd4:	f1be 3fff 	cmp.w	lr, #4294967295
  404dd8:	d01c      	beq.n	404e14 <_strtoll_l.isra.0+0x140>
  404dda:	9901      	ldr	r1, [sp, #4]
  404ddc:	b111      	cbz	r1, 404de4 <_strtoll_l.isra.0+0x110>
  404dde:	4252      	negs	r2, r2
  404de0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  404de4:	9900      	ldr	r1, [sp, #0]
  404de6:	b129      	cbz	r1, 404df4 <_strtoll_l.isra.0+0x120>
  404de8:	f1be 0f00 	cmp.w	lr, #0
  404dec:	d11b      	bne.n	404e26 <_strtoll_l.isra.0+0x152>
  404dee:	9d02      	ldr	r5, [sp, #8]
  404df0:	9900      	ldr	r1, [sp, #0]
  404df2:	600d      	str	r5, [r1, #0]
  404df4:	4610      	mov	r0, r2
  404df6:	4619      	mov	r1, r3
  404df8:	b005      	add	sp, #20
  404dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404dfe:	45e3      	cmp	fp, ip
  404e00:	dab8      	bge.n	404d74 <_strtoll_l.isra.0+0xa0>
  404e02:	f04f 3eff 	mov.w	lr, #4294967295
  404e06:	e7c2      	b.n	404d8e <_strtoll_l.isra.0+0xba>
  404e08:	2301      	movs	r3, #1
  404e0a:	782c      	ldrb	r4, [r5, #0]
  404e0c:	9301      	str	r3, [sp, #4]
  404e0e:	f108 0502 	add.w	r5, r8, #2
  404e12:	e77f      	b.n	404d14 <_strtoll_l.isra.0+0x40>
  404e14:	9a03      	ldr	r2, [sp, #12]
  404e16:	2322      	movs	r3, #34	; 0x22
  404e18:	6013      	str	r3, [r2, #0]
  404e1a:	9b00      	ldr	r3, [sp, #0]
  404e1c:	b32b      	cbz	r3, 404e6a <_strtoll_l.isra.0+0x196>
  404e1e:	4652      	mov	r2, sl
  404e20:	463b      	mov	r3, r7
  404e22:	3d01      	subs	r5, #1
  404e24:	e7e4      	b.n	404df0 <_strtoll_l.isra.0+0x11c>
  404e26:	4692      	mov	sl, r2
  404e28:	461f      	mov	r7, r3
  404e2a:	e7f8      	b.n	404e1e <_strtoll_l.isra.0+0x14a>
  404e2c:	2c30      	cmp	r4, #48	; 0x30
  404e2e:	d117      	bne.n	404e60 <_strtoll_l.isra.0+0x18c>
  404e30:	782b      	ldrb	r3, [r5, #0]
  404e32:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404e36:	2b58      	cmp	r3, #88	; 0x58
  404e38:	d112      	bne.n	404e60 <_strtoll_l.isra.0+0x18c>
  404e3a:	786c      	ldrb	r4, [r5, #1]
  404e3c:	f04f 0810 	mov.w	r8, #16
  404e40:	f04f 0900 	mov.w	r9, #0
  404e44:	3502      	adds	r5, #2
  404e46:	2610      	movs	r6, #16
  404e48:	e77a      	b.n	404d40 <_strtoll_l.isra.0+0x6c>
  404e4a:	782b      	ldrb	r3, [r5, #0]
  404e4c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404e50:	2b58      	cmp	r3, #88	; 0x58
  404e52:	d0f2      	beq.n	404e3a <_strtoll_l.isra.0+0x166>
  404e54:	f04f 0808 	mov.w	r8, #8
  404e58:	f04f 0900 	mov.w	r9, #0
  404e5c:	2608      	movs	r6, #8
  404e5e:	e76f      	b.n	404d40 <_strtoll_l.isra.0+0x6c>
  404e60:	f04f 0810 	mov.w	r8, #16
  404e64:	f04f 0900 	mov.w	r9, #0
  404e68:	e76a      	b.n	404d40 <_strtoll_l.isra.0+0x6c>
  404e6a:	4652      	mov	r2, sl
  404e6c:	463b      	mov	r3, r7
  404e6e:	e7c1      	b.n	404df4 <_strtoll_l.isra.0+0x120>

00404e70 <_strtoll_r>:
  404e70:	b530      	push	{r4, r5, lr}
  404e72:	4c06      	ldr	r4, [pc, #24]	; (404e8c <_strtoll_r+0x1c>)
  404e74:	4d06      	ldr	r5, [pc, #24]	; (404e90 <_strtoll_r+0x20>)
  404e76:	6824      	ldr	r4, [r4, #0]
  404e78:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404e7a:	b083      	sub	sp, #12
  404e7c:	2c00      	cmp	r4, #0
  404e7e:	bf08      	it	eq
  404e80:	462c      	moveq	r4, r5
  404e82:	9400      	str	r4, [sp, #0]
  404e84:	f7ff ff26 	bl	404cd4 <_strtoll_l.isra.0>
  404e88:	b003      	add	sp, #12
  404e8a:	bd30      	pop	{r4, r5, pc}
  404e8c:	2000000c 	.word	0x2000000c
  404e90:	2000043c 	.word	0x2000043c

00404e94 <_strtoul_l.isra.0>:
  404e94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e98:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  404e9c:	460e      	mov	r6, r1
  404e9e:	4607      	mov	r7, r0
  404ea0:	4615      	mov	r5, r2
  404ea2:	4698      	mov	r8, r3
  404ea4:	468a      	mov	sl, r1
  404ea6:	e000      	b.n	404eaa <_strtoul_l.isra.0+0x16>
  404ea8:	46a2      	mov	sl, r4
  404eaa:	4654      	mov	r4, sl
  404eac:	4648      	mov	r0, r9
  404eae:	f814 bb01 	ldrb.w	fp, [r4], #1
  404eb2:	f7fe feb7 	bl	403c24 <__locale_ctype_ptr_l>
  404eb6:	4458      	add	r0, fp
  404eb8:	7840      	ldrb	r0, [r0, #1]
  404eba:	f010 0008 	ands.w	r0, r0, #8
  404ebe:	d1f3      	bne.n	404ea8 <_strtoul_l.isra.0+0x14>
  404ec0:	4659      	mov	r1, fp
  404ec2:	292d      	cmp	r1, #45	; 0x2d
  404ec4:	d059      	beq.n	404f7a <_strtoul_l.isra.0+0xe6>
  404ec6:	292b      	cmp	r1, #43	; 0x2b
  404ec8:	bf04      	itt	eq
  404eca:	7821      	ldrbeq	r1, [r4, #0]
  404ecc:	f10a 0402 	addeq.w	r4, sl, #2
  404ed0:	f1b8 0f00 	cmp.w	r8, #0
  404ed4:	d00c      	beq.n	404ef0 <_strtoul_l.isra.0+0x5c>
  404ed6:	f1b8 0f10 	cmp.w	r8, #16
  404eda:	d053      	beq.n	404f84 <_strtoul_l.isra.0+0xf0>
  404edc:	f04f 3cff 	mov.w	ip, #4294967295
  404ee0:	fbbc fcf8 	udiv	ip, ip, r8
  404ee4:	fb08 fa0c 	mul.w	sl, r8, ip
  404ee8:	ea6f 0a0a 	mvn.w	sl, sl
  404eec:	46c1      	mov	r9, r8
  404eee:	e008      	b.n	404f02 <_strtoul_l.isra.0+0x6e>
  404ef0:	2930      	cmp	r1, #48	; 0x30
  404ef2:	d058      	beq.n	404fa6 <_strtoul_l.isra.0+0x112>
  404ef4:	f04f 080a 	mov.w	r8, #10
  404ef8:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 404fd8 <_strtoul_l.isra.0+0x144>
  404efc:	46c1      	mov	r9, r8
  404efe:	f04f 0a05 	mov.w	sl, #5
  404f02:	2300      	movs	r3, #0
  404f04:	469e      	mov	lr, r3
  404f06:	e005      	b.n	404f14 <_strtoul_l.isra.0+0x80>
  404f08:	d02a      	beq.n	404f60 <_strtoul_l.isra.0+0xcc>
  404f0a:	fb09 2e0e 	mla	lr, r9, lr, r2
  404f0e:	2301      	movs	r3, #1
  404f10:	f814 1b01 	ldrb.w	r1, [r4], #1
  404f14:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
  404f18:	2a09      	cmp	r2, #9
  404f1a:	d905      	bls.n	404f28 <_strtoul_l.isra.0+0x94>
  404f1c:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
  404f20:	2a19      	cmp	r2, #25
  404f22:	d80a      	bhi.n	404f3a <_strtoul_l.isra.0+0xa6>
  404f24:	f1a1 0237 	sub.w	r2, r1, #55	; 0x37
  404f28:	4590      	cmp	r8, r2
  404f2a:	dd0e      	ble.n	404f4a <_strtoul_l.isra.0+0xb6>
  404f2c:	2b00      	cmp	r3, #0
  404f2e:	db01      	blt.n	404f34 <_strtoul_l.isra.0+0xa0>
  404f30:	45e6      	cmp	lr, ip
  404f32:	d9e9      	bls.n	404f08 <_strtoul_l.isra.0+0x74>
  404f34:	f04f 33ff 	mov.w	r3, #4294967295
  404f38:	e7ea      	b.n	404f10 <_strtoul_l.isra.0+0x7c>
  404f3a:	f1a1 0261 	sub.w	r2, r1, #97	; 0x61
  404f3e:	2a19      	cmp	r2, #25
  404f40:	d803      	bhi.n	404f4a <_strtoul_l.isra.0+0xb6>
  404f42:	f1a1 0257 	sub.w	r2, r1, #87	; 0x57
  404f46:	4590      	cmp	r8, r2
  404f48:	dcf0      	bgt.n	404f2c <_strtoul_l.isra.0+0x98>
  404f4a:	2b00      	cmp	r3, #0
  404f4c:	db0d      	blt.n	404f6a <_strtoul_l.isra.0+0xd6>
  404f4e:	b108      	cbz	r0, 404f54 <_strtoul_l.isra.0+0xc0>
  404f50:	f1ce 0e00 	rsb	lr, lr, #0
  404f54:	b10d      	cbz	r5, 404f5a <_strtoul_l.isra.0+0xc6>
  404f56:	b973      	cbnz	r3, 404f76 <_strtoul_l.isra.0+0xe2>
  404f58:	602e      	str	r6, [r5, #0]
  404f5a:	4670      	mov	r0, lr
  404f5c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f60:	4552      	cmp	r2, sl
  404f62:	ddd2      	ble.n	404f0a <_strtoul_l.isra.0+0x76>
  404f64:	f04f 33ff 	mov.w	r3, #4294967295
  404f68:	e7d2      	b.n	404f10 <_strtoul_l.isra.0+0x7c>
  404f6a:	2322      	movs	r3, #34	; 0x22
  404f6c:	603b      	str	r3, [r7, #0]
  404f6e:	f04f 3eff 	mov.w	lr, #4294967295
  404f72:	2d00      	cmp	r5, #0
  404f74:	d0f1      	beq.n	404f5a <_strtoul_l.isra.0+0xc6>
  404f76:	1e66      	subs	r6, r4, #1
  404f78:	e7ee      	b.n	404f58 <_strtoul_l.isra.0+0xc4>
  404f7a:	7821      	ldrb	r1, [r4, #0]
  404f7c:	2001      	movs	r0, #1
  404f7e:	f10a 0402 	add.w	r4, sl, #2
  404f82:	e7a5      	b.n	404ed0 <_strtoul_l.isra.0+0x3c>
  404f84:	2930      	cmp	r1, #48	; 0x30
  404f86:	d11b      	bne.n	404fc0 <_strtoul_l.isra.0+0x12c>
  404f88:	7823      	ldrb	r3, [r4, #0]
  404f8a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404f8e:	2b58      	cmp	r3, #88	; 0x58
  404f90:	d11c      	bne.n	404fcc <_strtoul_l.isra.0+0x138>
  404f92:	f04f 0910 	mov.w	r9, #16
  404f96:	7861      	ldrb	r1, [r4, #1]
  404f98:	46c8      	mov	r8, r9
  404f9a:	f04f 0a0f 	mov.w	sl, #15
  404f9e:	3402      	adds	r4, #2
  404fa0:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404fa4:	e7ad      	b.n	404f02 <_strtoul_l.isra.0+0x6e>
  404fa6:	7823      	ldrb	r3, [r4, #0]
  404fa8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404fac:	2b58      	cmp	r3, #88	; 0x58
  404fae:	d0f0      	beq.n	404f92 <_strtoul_l.isra.0+0xfe>
  404fb0:	f04f 0808 	mov.w	r8, #8
  404fb4:	46c1      	mov	r9, r8
  404fb6:	f04f 0a07 	mov.w	sl, #7
  404fba:	f06f 4c60 	mvn.w	ip, #3758096384	; 0xe0000000
  404fbe:	e7a0      	b.n	404f02 <_strtoul_l.isra.0+0x6e>
  404fc0:	f04f 0a0f 	mov.w	sl, #15
  404fc4:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404fc8:	46c1      	mov	r9, r8
  404fca:	e79a      	b.n	404f02 <_strtoul_l.isra.0+0x6e>
  404fcc:	46c1      	mov	r9, r8
  404fce:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404fd2:	f04f 0a0f 	mov.w	sl, #15
  404fd6:	e794      	b.n	404f02 <_strtoul_l.isra.0+0x6e>
  404fd8:	19999999 	.word	0x19999999

00404fdc <_strtoul_r>:
  404fdc:	b530      	push	{r4, r5, lr}
  404fde:	4c06      	ldr	r4, [pc, #24]	; (404ff8 <_strtoul_r+0x1c>)
  404fe0:	4d06      	ldr	r5, [pc, #24]	; (404ffc <_strtoul_r+0x20>)
  404fe2:	6824      	ldr	r4, [r4, #0]
  404fe4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404fe6:	b083      	sub	sp, #12
  404fe8:	2c00      	cmp	r4, #0
  404fea:	bf08      	it	eq
  404fec:	462c      	moveq	r4, r5
  404fee:	9400      	str	r4, [sp, #0]
  404ff0:	f7ff ff50 	bl	404e94 <_strtoul_l.isra.0>
  404ff4:	b003      	add	sp, #12
  404ff6:	bd30      	pop	{r4, r5, pc}
  404ff8:	2000000c 	.word	0x2000000c
  404ffc:	2000043c 	.word	0x2000043c

00405000 <_strtoull_l.isra.0>:
  405000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405004:	b085      	sub	sp, #20
  405006:	4693      	mov	fp, r2
  405008:	9102      	str	r1, [sp, #8]
  40500a:	9003      	str	r0, [sp, #12]
  40500c:	469a      	mov	sl, r3
  40500e:	460f      	mov	r7, r1
  405010:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  405012:	e000      	b.n	405016 <_strtoull_l.isra.0+0x16>
  405014:	462f      	mov	r7, r5
  405016:	463d      	mov	r5, r7
  405018:	4630      	mov	r0, r6
  40501a:	f815 4b01 	ldrb.w	r4, [r5], #1
  40501e:	f7fe fe01 	bl	403c24 <__locale_ctype_ptr_l>
  405022:	4420      	add	r0, r4
  405024:	7843      	ldrb	r3, [r0, #1]
  405026:	f013 0308 	ands.w	r3, r3, #8
  40502a:	d1f3      	bne.n	405014 <_strtoull_l.isra.0+0x14>
  40502c:	2c2d      	cmp	r4, #45	; 0x2d
  40502e:	f000 8089 	beq.w	405144 <_strtoull_l.isra.0+0x144>
  405032:	2c2b      	cmp	r4, #43	; 0x2b
  405034:	bf03      	ittte	eq
  405036:	782c      	ldrbeq	r4, [r5, #0]
  405038:	9301      	streq	r3, [sp, #4]
  40503a:	1cbd      	addeq	r5, r7, #2
  40503c:	9301      	strne	r3, [sp, #4]
  40503e:	f1ba 0f00 	cmp.w	sl, #0
  405042:	d019      	beq.n	405078 <_strtoull_l.isra.0+0x78>
  405044:	f1ba 0f10 	cmp.w	sl, #16
  405048:	f000 8081 	beq.w	40514e <_strtoull_l.isra.0+0x14e>
  40504c:	46d0      	mov	r8, sl
  40504e:	ea4f 79ea 	mov.w	r9, sl, asr #31
  405052:	4642      	mov	r2, r8
  405054:	464b      	mov	r3, r9
  405056:	f04f 30ff 	mov.w	r0, #4294967295
  40505a:	f04f 31ff 	mov.w	r1, #4294967295
  40505e:	f000 fb65 	bl	40572c <__aeabi_uldivmod>
  405062:	4642      	mov	r2, r8
  405064:	4606      	mov	r6, r0
  405066:	460f      	mov	r7, r1
  405068:	464b      	mov	r3, r9
  40506a:	f04f 30ff 	mov.w	r0, #4294967295
  40506e:	f04f 31ff 	mov.w	r1, #4294967295
  405072:	f000 fb5b 	bl	40572c <__aeabi_uldivmod>
  405076:	e00b      	b.n	405090 <_strtoull_l.isra.0+0x90>
  405078:	2c30      	cmp	r4, #48	; 0x30
  40507a:	d07d      	beq.n	405178 <_strtoull_l.isra.0+0x178>
  40507c:	4f4e      	ldr	r7, [pc, #312]	; (4051b8 <_strtoull_l.isra.0+0x1b8>)
  40507e:	2205      	movs	r2, #5
  405080:	f04f 3699 	mov.w	r6, #2576980377	; 0x99999999
  405084:	f04f 080a 	mov.w	r8, #10
  405088:	f04f 0900 	mov.w	r9, #0
  40508c:	f04f 0a0a 	mov.w	sl, #10
  405090:	f04f 0e00 	mov.w	lr, #0
  405094:	2000      	movs	r0, #0
  405096:	2100      	movs	r1, #0
  405098:	e011      	b.n	4050be <_strtoull_l.isra.0+0xbe>
  40509a:	42b9      	cmp	r1, r7
  40509c:	bf08      	it	eq
  40509e:	42b0      	cmpeq	r0, r6
  4050a0:	d03f      	beq.n	405122 <_strtoull_l.isra.0+0x122>
  4050a2:	fb00 f409 	mul.w	r4, r0, r9
  4050a6:	fb08 4401 	mla	r4, r8, r1, r4
  4050aa:	fba0 0108 	umull	r0, r1, r0, r8
  4050ae:	4421      	add	r1, r4
  4050b0:	18c0      	adds	r0, r0, r3
  4050b2:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
  4050b6:	f04f 0e01 	mov.w	lr, #1
  4050ba:	f815 4b01 	ldrb.w	r4, [r5], #1
  4050be:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
  4050c2:	2b09      	cmp	r3, #9
  4050c4:	d905      	bls.n	4050d2 <_strtoull_l.isra.0+0xd2>
  4050c6:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
  4050ca:	2b19      	cmp	r3, #25
  4050cc:	d80d      	bhi.n	4050ea <_strtoull_l.isra.0+0xea>
  4050ce:	f1a4 0337 	sub.w	r3, r4, #55	; 0x37
  4050d2:	459a      	cmp	sl, r3
  4050d4:	dd11      	ble.n	4050fa <_strtoull_l.isra.0+0xfa>
  4050d6:	f1be 0f00 	cmp.w	lr, #0
  4050da:	db03      	blt.n	4050e4 <_strtoull_l.isra.0+0xe4>
  4050dc:	428f      	cmp	r7, r1
  4050de:	bf08      	it	eq
  4050e0:	4286      	cmpeq	r6, r0
  4050e2:	d2da      	bcs.n	40509a <_strtoull_l.isra.0+0x9a>
  4050e4:	f04f 3eff 	mov.w	lr, #4294967295
  4050e8:	e7e7      	b.n	4050ba <_strtoull_l.isra.0+0xba>
  4050ea:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
  4050ee:	2b19      	cmp	r3, #25
  4050f0:	d803      	bhi.n	4050fa <_strtoull_l.isra.0+0xfa>
  4050f2:	f1a4 0357 	sub.w	r3, r4, #87	; 0x57
  4050f6:	459a      	cmp	sl, r3
  4050f8:	dced      	bgt.n	4050d6 <_strtoull_l.isra.0+0xd6>
  4050fa:	f1be 0f00 	cmp.w	lr, #0
  4050fe:	db15      	blt.n	40512c <_strtoull_l.isra.0+0x12c>
  405100:	9b01      	ldr	r3, [sp, #4]
  405102:	b113      	cbz	r3, 40510a <_strtoull_l.isra.0+0x10a>
  405104:	4240      	negs	r0, r0
  405106:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40510a:	f1bb 0f00 	cmp.w	fp, #0
  40510e:	d005      	beq.n	40511c <_strtoull_l.isra.0+0x11c>
  405110:	f1be 0f00 	cmp.w	lr, #0
  405114:	d114      	bne.n	405140 <_strtoull_l.isra.0+0x140>
  405116:	9d02      	ldr	r5, [sp, #8]
  405118:	f8cb 5000 	str.w	r5, [fp]
  40511c:	b005      	add	sp, #20
  40511e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405122:	4293      	cmp	r3, r2
  405124:	ddbd      	ble.n	4050a2 <_strtoull_l.isra.0+0xa2>
  405126:	f04f 3eff 	mov.w	lr, #4294967295
  40512a:	e7c6      	b.n	4050ba <_strtoull_l.isra.0+0xba>
  40512c:	9a03      	ldr	r2, [sp, #12]
  40512e:	2322      	movs	r3, #34	; 0x22
  405130:	6013      	str	r3, [r2, #0]
  405132:	f04f 30ff 	mov.w	r0, #4294967295
  405136:	f04f 31ff 	mov.w	r1, #4294967295
  40513a:	f1bb 0f00 	cmp.w	fp, #0
  40513e:	d0ed      	beq.n	40511c <_strtoull_l.isra.0+0x11c>
  405140:	3d01      	subs	r5, #1
  405142:	e7e9      	b.n	405118 <_strtoull_l.isra.0+0x118>
  405144:	2301      	movs	r3, #1
  405146:	782c      	ldrb	r4, [r5, #0]
  405148:	9301      	str	r3, [sp, #4]
  40514a:	1cbd      	adds	r5, r7, #2
  40514c:	e777      	b.n	40503e <_strtoull_l.isra.0+0x3e>
  40514e:	2c30      	cmp	r4, #48	; 0x30
  405150:	d123      	bne.n	40519a <_strtoull_l.isra.0+0x19a>
  405152:	782b      	ldrb	r3, [r5, #0]
  405154:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  405158:	2b58      	cmp	r3, #88	; 0x58
  40515a:	d128      	bne.n	4051ae <_strtoull_l.isra.0+0x1ae>
  40515c:	786c      	ldrb	r4, [r5, #1]
  40515e:	220f      	movs	r2, #15
  405160:	3502      	adds	r5, #2
  405162:	f04f 36ff 	mov.w	r6, #4294967295
  405166:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  40516a:	f04f 0810 	mov.w	r8, #16
  40516e:	f04f 0900 	mov.w	r9, #0
  405172:	f04f 0a10 	mov.w	sl, #16
  405176:	e78b      	b.n	405090 <_strtoull_l.isra.0+0x90>
  405178:	782b      	ldrb	r3, [r5, #0]
  40517a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40517e:	2b58      	cmp	r3, #88	; 0x58
  405180:	d0ec      	beq.n	40515c <_strtoull_l.isra.0+0x15c>
  405182:	2207      	movs	r2, #7
  405184:	f04f 36ff 	mov.w	r6, #4294967295
  405188:	f06f 4760 	mvn.w	r7, #3758096384	; 0xe0000000
  40518c:	f04f 0808 	mov.w	r8, #8
  405190:	f04f 0900 	mov.w	r9, #0
  405194:	f04f 0a08 	mov.w	sl, #8
  405198:	e77a      	b.n	405090 <_strtoull_l.isra.0+0x90>
  40519a:	220f      	movs	r2, #15
  40519c:	f04f 36ff 	mov.w	r6, #4294967295
  4051a0:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  4051a4:	f04f 0810 	mov.w	r8, #16
  4051a8:	f04f 0900 	mov.w	r9, #0
  4051ac:	e770      	b.n	405090 <_strtoull_l.isra.0+0x90>
  4051ae:	f04f 0810 	mov.w	r8, #16
  4051b2:	f04f 0900 	mov.w	r9, #0
  4051b6:	e74c      	b.n	405052 <_strtoull_l.isra.0+0x52>
  4051b8:	19999999 	.word	0x19999999

004051bc <_strtoull_r>:
  4051bc:	b530      	push	{r4, r5, lr}
  4051be:	4c06      	ldr	r4, [pc, #24]	; (4051d8 <_strtoull_r+0x1c>)
  4051c0:	4d06      	ldr	r5, [pc, #24]	; (4051dc <_strtoull_r+0x20>)
  4051c2:	6824      	ldr	r4, [r4, #0]
  4051c4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4051c6:	b083      	sub	sp, #12
  4051c8:	2c00      	cmp	r4, #0
  4051ca:	bf08      	it	eq
  4051cc:	462c      	moveq	r4, r5
  4051ce:	9400      	str	r4, [sp, #0]
  4051d0:	f7ff ff16 	bl	405000 <_strtoull_l.isra.0>
  4051d4:	b003      	add	sp, #12
  4051d6:	bd30      	pop	{r4, r5, pc}
  4051d8:	2000000c 	.word	0x2000000c
  4051dc:	2000043c 	.word	0x2000043c

004051e0 <__submore>:
  4051e0:	f101 0340 	add.w	r3, r1, #64	; 0x40
  4051e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051e8:	460c      	mov	r4, r1
  4051ea:	6b09      	ldr	r1, [r1, #48]	; 0x30
  4051ec:	4299      	cmp	r1, r3
  4051ee:	d014      	beq.n	40521a <__submore+0x3a>
  4051f0:	6b66      	ldr	r6, [r4, #52]	; 0x34
  4051f2:	0077      	lsls	r7, r6, #1
  4051f4:	463a      	mov	r2, r7
  4051f6:	f7ff f9fd 	bl	4045f4 <_realloc_r>
  4051fa:	4605      	mov	r5, r0
  4051fc:	b340      	cbz	r0, 405250 <__submore+0x70>
  4051fe:	eb00 0806 	add.w	r8, r0, r6
  405202:	4632      	mov	r2, r6
  405204:	4640      	mov	r0, r8
  405206:	4629      	mov	r1, r5
  405208:	f7ff f8ea 	bl	4043e0 <memcpy>
  40520c:	f8c4 8000 	str.w	r8, [r4]
  405210:	6325      	str	r5, [r4, #48]	; 0x30
  405212:	6367      	str	r7, [r4, #52]	; 0x34
  405214:	2000      	movs	r0, #0
  405216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40521a:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40521e:	f7fe fd9b 	bl	403d58 <_malloc_r>
  405222:	b1a8      	cbz	r0, 405250 <__submore+0x70>
  405224:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  405228:	6320      	str	r0, [r4, #48]	; 0x30
  40522a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40522e:	6362      	str	r2, [r4, #52]	; 0x34
  405230:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  405234:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  405238:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  40523c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  405240:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  405244:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  405248:	6020      	str	r0, [r4, #0]
  40524a:	2000      	movs	r0, #0
  40524c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405250:	f04f 30ff 	mov.w	r0, #4294967295
  405254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00405258 <_ungetc_r>:
  405258:	b570      	push	{r4, r5, r6, lr}
  40525a:	1c4c      	adds	r4, r1, #1
  40525c:	d024      	beq.n	4052a8 <_ungetc_r+0x50>
  40525e:	4606      	mov	r6, r0
  405260:	4614      	mov	r4, r2
  405262:	460d      	mov	r5, r1
  405264:	b110      	cbz	r0, 40526c <_ungetc_r+0x14>
  405266:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405268:	2b00      	cmp	r3, #0
  40526a:	d04d      	beq.n	405308 <_ungetc_r+0xb0>
  40526c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40526e:	f013 0f01 	tst.w	r3, #1
  405272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405276:	b29a      	uxth	r2, r3
  405278:	d101      	bne.n	40527e <_ungetc_r+0x26>
  40527a:	0591      	lsls	r1, r2, #22
  40527c:	d559      	bpl.n	405332 <_ungetc_r+0xda>
  40527e:	0492      	lsls	r2, r2, #18
  405280:	d405      	bmi.n	40528e <_ungetc_r+0x36>
  405282:	6e62      	ldr	r2, [r4, #100]	; 0x64
  405284:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  405288:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40528c:	6662      	str	r2, [r4, #100]	; 0x64
  40528e:	f023 0320 	bic.w	r3, r3, #32
  405292:	b29a      	uxth	r2, r3
  405294:	0750      	lsls	r0, r2, #29
  405296:	81a3      	strh	r3, [r4, #12]
  405298:	d41b      	bmi.n	4052d2 <_ungetc_r+0x7a>
  40529a:	06d1      	lsls	r1, r2, #27
  40529c:	d408      	bmi.n	4052b0 <_ungetc_r+0x58>
  40529e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4052a0:	07d8      	lsls	r0, r3, #31
  4052a2:	d401      	bmi.n	4052a8 <_ungetc_r+0x50>
  4052a4:	0591      	lsls	r1, r2, #22
  4052a6:	d53e      	bpl.n	405326 <_ungetc_r+0xce>
  4052a8:	f04f 35ff 	mov.w	r5, #4294967295
  4052ac:	4628      	mov	r0, r5
  4052ae:	bd70      	pop	{r4, r5, r6, pc}
  4052b0:	0712      	lsls	r2, r2, #28
  4052b2:	d50b      	bpl.n	4052cc <_ungetc_r+0x74>
  4052b4:	4621      	mov	r1, r4
  4052b6:	4630      	mov	r0, r6
  4052b8:	f7fd ff78 	bl	4031ac <_fflush_r>
  4052bc:	2800      	cmp	r0, #0
  4052be:	d12c      	bne.n	40531a <_ungetc_r+0xc2>
  4052c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4052c4:	60a0      	str	r0, [r4, #8]
  4052c6:	61a0      	str	r0, [r4, #24]
  4052c8:	f023 0308 	bic.w	r3, r3, #8
  4052cc:	f043 0304 	orr.w	r3, r3, #4
  4052d0:	81a3      	strh	r3, [r4, #12]
  4052d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4052d4:	b2ed      	uxtb	r5, r5
  4052d6:	2b00      	cmp	r3, #0
  4052d8:	d034      	beq.n	405344 <_ungetc_r+0xec>
  4052da:	6862      	ldr	r2, [r4, #4]
  4052dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
  4052de:	429a      	cmp	r2, r3
  4052e0:	da15      	bge.n	40530e <_ungetc_r+0xb6>
  4052e2:	6823      	ldr	r3, [r4, #0]
  4052e4:	1e5a      	subs	r2, r3, #1
  4052e6:	6022      	str	r2, [r4, #0]
  4052e8:	f803 5c01 	strb.w	r5, [r3, #-1]
  4052ec:	6863      	ldr	r3, [r4, #4]
  4052ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4052f0:	3301      	adds	r3, #1
  4052f2:	07d0      	lsls	r0, r2, #31
  4052f4:	6063      	str	r3, [r4, #4]
  4052f6:	d4d9      	bmi.n	4052ac <_ungetc_r+0x54>
  4052f8:	89a3      	ldrh	r3, [r4, #12]
  4052fa:	059b      	lsls	r3, r3, #22
  4052fc:	d4d6      	bmi.n	4052ac <_ungetc_r+0x54>
  4052fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405300:	f7fe fca8 	bl	403c54 <__retarget_lock_release_recursive>
  405304:	4628      	mov	r0, r5
  405306:	bd70      	pop	{r4, r5, r6, pc}
  405308:	f7fd ffba 	bl	403280 <__sinit>
  40530c:	e7ae      	b.n	40526c <_ungetc_r+0x14>
  40530e:	4630      	mov	r0, r6
  405310:	4621      	mov	r1, r4
  405312:	f7ff ff65 	bl	4051e0 <__submore>
  405316:	2800      	cmp	r0, #0
  405318:	d0e3      	beq.n	4052e2 <_ungetc_r+0x8a>
  40531a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40531c:	07de      	lsls	r6, r3, #31
  40531e:	d4c3      	bmi.n	4052a8 <_ungetc_r+0x50>
  405320:	89a3      	ldrh	r3, [r4, #12]
  405322:	059d      	lsls	r5, r3, #22
  405324:	d4c0      	bmi.n	4052a8 <_ungetc_r+0x50>
  405326:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405328:	f7fe fc94 	bl	403c54 <__retarget_lock_release_recursive>
  40532c:	f04f 35ff 	mov.w	r5, #4294967295
  405330:	e7bc      	b.n	4052ac <_ungetc_r+0x54>
  405332:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405334:	f7fe fc8c 	bl	403c50 <__retarget_lock_acquire_recursive>
  405338:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40533c:	b29a      	uxth	r2, r3
  40533e:	0492      	lsls	r2, r2, #18
  405340:	d4a5      	bmi.n	40528e <_ungetc_r+0x36>
  405342:	e79e      	b.n	405282 <_ungetc_r+0x2a>
  405344:	6922      	ldr	r2, [r4, #16]
  405346:	6823      	ldr	r3, [r4, #0]
  405348:	b172      	cbz	r2, 405368 <_ungetc_r+0x110>
  40534a:	429a      	cmp	r2, r3
  40534c:	d20c      	bcs.n	405368 <_ungetc_r+0x110>
  40534e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  405352:	42aa      	cmp	r2, r5
  405354:	d108      	bne.n	405368 <_ungetc_r+0x110>
  405356:	6862      	ldr	r2, [r4, #4]
  405358:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40535a:	3b01      	subs	r3, #1
  40535c:	3201      	adds	r2, #1
  40535e:	07c9      	lsls	r1, r1, #31
  405360:	6023      	str	r3, [r4, #0]
  405362:	6062      	str	r2, [r4, #4]
  405364:	d5c8      	bpl.n	4052f8 <_ungetc_r+0xa0>
  405366:	e7a1      	b.n	4052ac <_ungetc_r+0x54>
  405368:	63a3      	str	r3, [r4, #56]	; 0x38
  40536a:	4623      	mov	r3, r4
  40536c:	6860      	ldr	r0, [r4, #4]
  40536e:	63e0      	str	r0, [r4, #60]	; 0x3c
  405370:	2203      	movs	r2, #3
  405372:	f104 0140 	add.w	r1, r4, #64	; 0x40
  405376:	6362      	str	r2, [r4, #52]	; 0x34
  405378:	6321      	str	r1, [r4, #48]	; 0x30
  40537a:	f803 5f42 	strb.w	r5, [r3, #66]!
  40537e:	6e62      	ldr	r2, [r4, #100]	; 0x64
  405380:	6023      	str	r3, [r4, #0]
  405382:	07d2      	lsls	r2, r2, #31
  405384:	f04f 0301 	mov.w	r3, #1
  405388:	6063      	str	r3, [r4, #4]
  40538a:	d48f      	bmi.n	4052ac <_ungetc_r+0x54>
  40538c:	e7b4      	b.n	4052f8 <_ungetc_r+0xa0>
  40538e:	bf00      	nop

00405390 <__swbuf_r>:
  405390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405392:	460d      	mov	r5, r1
  405394:	4614      	mov	r4, r2
  405396:	4606      	mov	r6, r0
  405398:	b110      	cbz	r0, 4053a0 <__swbuf_r+0x10>
  40539a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40539c:	2b00      	cmp	r3, #0
  40539e:	d04b      	beq.n	405438 <__swbuf_r+0xa8>
  4053a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4053a4:	69a3      	ldr	r3, [r4, #24]
  4053a6:	60a3      	str	r3, [r4, #8]
  4053a8:	b291      	uxth	r1, r2
  4053aa:	0708      	lsls	r0, r1, #28
  4053ac:	d539      	bpl.n	405422 <__swbuf_r+0x92>
  4053ae:	6923      	ldr	r3, [r4, #16]
  4053b0:	2b00      	cmp	r3, #0
  4053b2:	d036      	beq.n	405422 <__swbuf_r+0x92>
  4053b4:	b2ed      	uxtb	r5, r5
  4053b6:	0489      	lsls	r1, r1, #18
  4053b8:	462f      	mov	r7, r5
  4053ba:	d515      	bpl.n	4053e8 <__swbuf_r+0x58>
  4053bc:	6822      	ldr	r2, [r4, #0]
  4053be:	6961      	ldr	r1, [r4, #20]
  4053c0:	1ad3      	subs	r3, r2, r3
  4053c2:	428b      	cmp	r3, r1
  4053c4:	da1c      	bge.n	405400 <__swbuf_r+0x70>
  4053c6:	3301      	adds	r3, #1
  4053c8:	68a1      	ldr	r1, [r4, #8]
  4053ca:	1c50      	adds	r0, r2, #1
  4053cc:	3901      	subs	r1, #1
  4053ce:	60a1      	str	r1, [r4, #8]
  4053d0:	6020      	str	r0, [r4, #0]
  4053d2:	7015      	strb	r5, [r2, #0]
  4053d4:	6962      	ldr	r2, [r4, #20]
  4053d6:	429a      	cmp	r2, r3
  4053d8:	d01a      	beq.n	405410 <__swbuf_r+0x80>
  4053da:	89a3      	ldrh	r3, [r4, #12]
  4053dc:	07db      	lsls	r3, r3, #31
  4053de:	d501      	bpl.n	4053e4 <__swbuf_r+0x54>
  4053e0:	2d0a      	cmp	r5, #10
  4053e2:	d015      	beq.n	405410 <__swbuf_r+0x80>
  4053e4:	4638      	mov	r0, r7
  4053e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4053e8:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4053ea:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4053ee:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  4053f2:	81a2      	strh	r2, [r4, #12]
  4053f4:	6822      	ldr	r2, [r4, #0]
  4053f6:	6661      	str	r1, [r4, #100]	; 0x64
  4053f8:	6961      	ldr	r1, [r4, #20]
  4053fa:	1ad3      	subs	r3, r2, r3
  4053fc:	428b      	cmp	r3, r1
  4053fe:	dbe2      	blt.n	4053c6 <__swbuf_r+0x36>
  405400:	4621      	mov	r1, r4
  405402:	4630      	mov	r0, r6
  405404:	f7fd fed2 	bl	4031ac <_fflush_r>
  405408:	b940      	cbnz	r0, 40541c <__swbuf_r+0x8c>
  40540a:	6822      	ldr	r2, [r4, #0]
  40540c:	2301      	movs	r3, #1
  40540e:	e7db      	b.n	4053c8 <__swbuf_r+0x38>
  405410:	4621      	mov	r1, r4
  405412:	4630      	mov	r0, r6
  405414:	f7fd feca 	bl	4031ac <_fflush_r>
  405418:	2800      	cmp	r0, #0
  40541a:	d0e3      	beq.n	4053e4 <__swbuf_r+0x54>
  40541c:	f04f 37ff 	mov.w	r7, #4294967295
  405420:	e7e0      	b.n	4053e4 <__swbuf_r+0x54>
  405422:	4621      	mov	r1, r4
  405424:	4630      	mov	r0, r6
  405426:	f7fd fdad 	bl	402f84 <__swsetup_r>
  40542a:	2800      	cmp	r0, #0
  40542c:	d1f6      	bne.n	40541c <__swbuf_r+0x8c>
  40542e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405432:	6923      	ldr	r3, [r4, #16]
  405434:	b291      	uxth	r1, r2
  405436:	e7bd      	b.n	4053b4 <__swbuf_r+0x24>
  405438:	f7fd ff22 	bl	403280 <__sinit>
  40543c:	e7b0      	b.n	4053a0 <__swbuf_r+0x10>
  40543e:	bf00      	nop

00405440 <_wcrtomb_r>:
  405440:	b5f0      	push	{r4, r5, r6, r7, lr}
  405442:	4606      	mov	r6, r0
  405444:	b085      	sub	sp, #20
  405446:	461f      	mov	r7, r3
  405448:	b189      	cbz	r1, 40546e <_wcrtomb_r+0x2e>
  40544a:	4c10      	ldr	r4, [pc, #64]	; (40548c <_wcrtomb_r+0x4c>)
  40544c:	4d10      	ldr	r5, [pc, #64]	; (405490 <_wcrtomb_r+0x50>)
  40544e:	6824      	ldr	r4, [r4, #0]
  405450:	6b64      	ldr	r4, [r4, #52]	; 0x34
  405452:	2c00      	cmp	r4, #0
  405454:	bf08      	it	eq
  405456:	462c      	moveq	r4, r5
  405458:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40545c:	47a0      	blx	r4
  40545e:	1c43      	adds	r3, r0, #1
  405460:	d103      	bne.n	40546a <_wcrtomb_r+0x2a>
  405462:	2200      	movs	r2, #0
  405464:	238a      	movs	r3, #138	; 0x8a
  405466:	603a      	str	r2, [r7, #0]
  405468:	6033      	str	r3, [r6, #0]
  40546a:	b005      	add	sp, #20
  40546c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40546e:	460c      	mov	r4, r1
  405470:	4906      	ldr	r1, [pc, #24]	; (40548c <_wcrtomb_r+0x4c>)
  405472:	4a07      	ldr	r2, [pc, #28]	; (405490 <_wcrtomb_r+0x50>)
  405474:	6809      	ldr	r1, [r1, #0]
  405476:	6b49      	ldr	r1, [r1, #52]	; 0x34
  405478:	2900      	cmp	r1, #0
  40547a:	bf08      	it	eq
  40547c:	4611      	moveq	r1, r2
  40547e:	4622      	mov	r2, r4
  405480:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  405484:	a901      	add	r1, sp, #4
  405486:	47a0      	blx	r4
  405488:	e7e9      	b.n	40545e <_wcrtomb_r+0x1e>
  40548a:	bf00      	nop
  40548c:	2000000c 	.word	0x2000000c
  405490:	2000043c 	.word	0x2000043c

00405494 <__ascii_wctomb>:
  405494:	b121      	cbz	r1, 4054a0 <__ascii_wctomb+0xc>
  405496:	2aff      	cmp	r2, #255	; 0xff
  405498:	d804      	bhi.n	4054a4 <__ascii_wctomb+0x10>
  40549a:	700a      	strb	r2, [r1, #0]
  40549c:	2001      	movs	r0, #1
  40549e:	4770      	bx	lr
  4054a0:	4608      	mov	r0, r1
  4054a2:	4770      	bx	lr
  4054a4:	238a      	movs	r3, #138	; 0x8a
  4054a6:	6003      	str	r3, [r0, #0]
  4054a8:	f04f 30ff 	mov.w	r0, #4294967295
  4054ac:	4770      	bx	lr
  4054ae:	bf00      	nop

004054b0 <_write_r>:
  4054b0:	b570      	push	{r4, r5, r6, lr}
  4054b2:	460d      	mov	r5, r1
  4054b4:	4c08      	ldr	r4, [pc, #32]	; (4054d8 <_write_r+0x28>)
  4054b6:	4611      	mov	r1, r2
  4054b8:	4606      	mov	r6, r0
  4054ba:	461a      	mov	r2, r3
  4054bc:	4628      	mov	r0, r5
  4054be:	2300      	movs	r3, #0
  4054c0:	6023      	str	r3, [r4, #0]
  4054c2:	f7fa fe89 	bl	4001d8 <_write>
  4054c6:	1c43      	adds	r3, r0, #1
  4054c8:	d000      	beq.n	4054cc <_write_r+0x1c>
  4054ca:	bd70      	pop	{r4, r5, r6, pc}
  4054cc:	6823      	ldr	r3, [r4, #0]
  4054ce:	2b00      	cmp	r3, #0
  4054d0:	d0fb      	beq.n	4054ca <_write_r+0x1a>
  4054d2:	6033      	str	r3, [r6, #0]
  4054d4:	bd70      	pop	{r4, r5, r6, pc}
  4054d6:	bf00      	nop
  4054d8:	20000b64 	.word	0x20000b64

004054dc <__register_exitproc>:
  4054dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4054e0:	4d2c      	ldr	r5, [pc, #176]	; (405594 <__register_exitproc+0xb8>)
  4054e2:	4606      	mov	r6, r0
  4054e4:	6828      	ldr	r0, [r5, #0]
  4054e6:	4698      	mov	r8, r3
  4054e8:	460f      	mov	r7, r1
  4054ea:	4691      	mov	r9, r2
  4054ec:	f7fe fbb0 	bl	403c50 <__retarget_lock_acquire_recursive>
  4054f0:	4b29      	ldr	r3, [pc, #164]	; (405598 <__register_exitproc+0xbc>)
  4054f2:	681c      	ldr	r4, [r3, #0]
  4054f4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4054f8:	2b00      	cmp	r3, #0
  4054fa:	d03e      	beq.n	40557a <__register_exitproc+0x9e>
  4054fc:	685a      	ldr	r2, [r3, #4]
  4054fe:	2a1f      	cmp	r2, #31
  405500:	dc1c      	bgt.n	40553c <__register_exitproc+0x60>
  405502:	f102 0e01 	add.w	lr, r2, #1
  405506:	b176      	cbz	r6, 405526 <__register_exitproc+0x4a>
  405508:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40550c:	2401      	movs	r4, #1
  40550e:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405512:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405516:	4094      	lsls	r4, r2
  405518:	4320      	orrs	r0, r4
  40551a:	2e02      	cmp	r6, #2
  40551c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405520:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405524:	d023      	beq.n	40556e <__register_exitproc+0x92>
  405526:	3202      	adds	r2, #2
  405528:	f8c3 e004 	str.w	lr, [r3, #4]
  40552c:	6828      	ldr	r0, [r5, #0]
  40552e:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405532:	f7fe fb8f 	bl	403c54 <__retarget_lock_release_recursive>
  405536:	2000      	movs	r0, #0
  405538:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40553c:	4b17      	ldr	r3, [pc, #92]	; (40559c <__register_exitproc+0xc0>)
  40553e:	b30b      	cbz	r3, 405584 <__register_exitproc+0xa8>
  405540:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405544:	f7fe fc00 	bl	403d48 <malloc>
  405548:	4603      	mov	r3, r0
  40554a:	b1d8      	cbz	r0, 405584 <__register_exitproc+0xa8>
  40554c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405550:	6002      	str	r2, [r0, #0]
  405552:	2100      	movs	r1, #0
  405554:	6041      	str	r1, [r0, #4]
  405556:	460a      	mov	r2, r1
  405558:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40555c:	f04f 0e01 	mov.w	lr, #1
  405560:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405564:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405568:	2e00      	cmp	r6, #0
  40556a:	d0dc      	beq.n	405526 <__register_exitproc+0x4a>
  40556c:	e7cc      	b.n	405508 <__register_exitproc+0x2c>
  40556e:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405572:	430c      	orrs	r4, r1
  405574:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405578:	e7d5      	b.n	405526 <__register_exitproc+0x4a>
  40557a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40557e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405582:	e7bb      	b.n	4054fc <__register_exitproc+0x20>
  405584:	6828      	ldr	r0, [r5, #0]
  405586:	f7fe fb65 	bl	403c54 <__retarget_lock_release_recursive>
  40558a:	f04f 30ff 	mov.w	r0, #4294967295
  40558e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405592:	bf00      	nop
  405594:	20000438 	.word	0x20000438
  405598:	00405df8 	.word	0x00405df8
  40559c:	00403d49 	.word	0x00403d49

004055a0 <_close_r>:
  4055a0:	b538      	push	{r3, r4, r5, lr}
  4055a2:	4c07      	ldr	r4, [pc, #28]	; (4055c0 <_close_r+0x20>)
  4055a4:	2300      	movs	r3, #0
  4055a6:	4605      	mov	r5, r0
  4055a8:	4608      	mov	r0, r1
  4055aa:	6023      	str	r3, [r4, #0]
  4055ac:	f7fb faf6 	bl	400b9c <_close>
  4055b0:	1c43      	adds	r3, r0, #1
  4055b2:	d000      	beq.n	4055b6 <_close_r+0x16>
  4055b4:	bd38      	pop	{r3, r4, r5, pc}
  4055b6:	6823      	ldr	r3, [r4, #0]
  4055b8:	2b00      	cmp	r3, #0
  4055ba:	d0fb      	beq.n	4055b4 <_close_r+0x14>
  4055bc:	602b      	str	r3, [r5, #0]
  4055be:	bd38      	pop	{r3, r4, r5, pc}
  4055c0:	20000b64 	.word	0x20000b64

004055c4 <_fclose_r>:
  4055c4:	b570      	push	{r4, r5, r6, lr}
  4055c6:	b159      	cbz	r1, 4055e0 <_fclose_r+0x1c>
  4055c8:	4605      	mov	r5, r0
  4055ca:	460c      	mov	r4, r1
  4055cc:	b110      	cbz	r0, 4055d4 <_fclose_r+0x10>
  4055ce:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4055d0:	2b00      	cmp	r3, #0
  4055d2:	d03c      	beq.n	40564e <_fclose_r+0x8a>
  4055d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4055d6:	07d8      	lsls	r0, r3, #31
  4055d8:	d505      	bpl.n	4055e6 <_fclose_r+0x22>
  4055da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4055de:	b92b      	cbnz	r3, 4055ec <_fclose_r+0x28>
  4055e0:	2600      	movs	r6, #0
  4055e2:	4630      	mov	r0, r6
  4055e4:	bd70      	pop	{r4, r5, r6, pc}
  4055e6:	89a3      	ldrh	r3, [r4, #12]
  4055e8:	0599      	lsls	r1, r3, #22
  4055ea:	d53c      	bpl.n	405666 <_fclose_r+0xa2>
  4055ec:	4621      	mov	r1, r4
  4055ee:	4628      	mov	r0, r5
  4055f0:	f7fd fd3c 	bl	40306c <__sflush_r>
  4055f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4055f6:	4606      	mov	r6, r0
  4055f8:	b133      	cbz	r3, 405608 <_fclose_r+0x44>
  4055fa:	69e1      	ldr	r1, [r4, #28]
  4055fc:	4628      	mov	r0, r5
  4055fe:	4798      	blx	r3
  405600:	2800      	cmp	r0, #0
  405602:	bfb8      	it	lt
  405604:	f04f 36ff 	movlt.w	r6, #4294967295
  405608:	89a3      	ldrh	r3, [r4, #12]
  40560a:	061a      	lsls	r2, r3, #24
  40560c:	d422      	bmi.n	405654 <_fclose_r+0x90>
  40560e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405610:	b141      	cbz	r1, 405624 <_fclose_r+0x60>
  405612:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405616:	4299      	cmp	r1, r3
  405618:	d002      	beq.n	405620 <_fclose_r+0x5c>
  40561a:	4628      	mov	r0, r5
  40561c:	f7fe f838 	bl	403690 <_free_r>
  405620:	2300      	movs	r3, #0
  405622:	6323      	str	r3, [r4, #48]	; 0x30
  405624:	6c61      	ldr	r1, [r4, #68]	; 0x44
  405626:	b121      	cbz	r1, 405632 <_fclose_r+0x6e>
  405628:	4628      	mov	r0, r5
  40562a:	f7fe f831 	bl	403690 <_free_r>
  40562e:	2300      	movs	r3, #0
  405630:	6463      	str	r3, [r4, #68]	; 0x44
  405632:	f7fd fe51 	bl	4032d8 <__sfp_lock_acquire>
  405636:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405638:	2200      	movs	r2, #0
  40563a:	07db      	lsls	r3, r3, #31
  40563c:	81a2      	strh	r2, [r4, #12]
  40563e:	d50e      	bpl.n	40565e <_fclose_r+0x9a>
  405640:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405642:	f7fe fb03 	bl	403c4c <__retarget_lock_close_recursive>
  405646:	f7fd fe4d 	bl	4032e4 <__sfp_lock_release>
  40564a:	4630      	mov	r0, r6
  40564c:	bd70      	pop	{r4, r5, r6, pc}
  40564e:	f7fd fe17 	bl	403280 <__sinit>
  405652:	e7bf      	b.n	4055d4 <_fclose_r+0x10>
  405654:	6921      	ldr	r1, [r4, #16]
  405656:	4628      	mov	r0, r5
  405658:	f7fe f81a 	bl	403690 <_free_r>
  40565c:	e7d7      	b.n	40560e <_fclose_r+0x4a>
  40565e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405660:	f7fe faf8 	bl	403c54 <__retarget_lock_release_recursive>
  405664:	e7ec      	b.n	405640 <_fclose_r+0x7c>
  405666:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405668:	f7fe faf2 	bl	403c50 <__retarget_lock_acquire_recursive>
  40566c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405670:	2b00      	cmp	r3, #0
  405672:	d1bb      	bne.n	4055ec <_fclose_r+0x28>
  405674:	6e66      	ldr	r6, [r4, #100]	; 0x64
  405676:	f016 0601 	ands.w	r6, r6, #1
  40567a:	d1b1      	bne.n	4055e0 <_fclose_r+0x1c>
  40567c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40567e:	f7fe fae9 	bl	403c54 <__retarget_lock_release_recursive>
  405682:	4630      	mov	r0, r6
  405684:	bd70      	pop	{r4, r5, r6, pc}
  405686:	bf00      	nop

00405688 <_fstat_r>:
  405688:	b538      	push	{r3, r4, r5, lr}
  40568a:	460b      	mov	r3, r1
  40568c:	4c07      	ldr	r4, [pc, #28]	; (4056ac <_fstat_r+0x24>)
  40568e:	4605      	mov	r5, r0
  405690:	4611      	mov	r1, r2
  405692:	4618      	mov	r0, r3
  405694:	2300      	movs	r3, #0
  405696:	6023      	str	r3, [r4, #0]
  405698:	f7fb fa83 	bl	400ba2 <_fstat>
  40569c:	1c43      	adds	r3, r0, #1
  40569e:	d000      	beq.n	4056a2 <_fstat_r+0x1a>
  4056a0:	bd38      	pop	{r3, r4, r5, pc}
  4056a2:	6823      	ldr	r3, [r4, #0]
  4056a4:	2b00      	cmp	r3, #0
  4056a6:	d0fb      	beq.n	4056a0 <_fstat_r+0x18>
  4056a8:	602b      	str	r3, [r5, #0]
  4056aa:	bd38      	pop	{r3, r4, r5, pc}
  4056ac:	20000b64 	.word	0x20000b64

004056b0 <_isatty_r>:
  4056b0:	b538      	push	{r3, r4, r5, lr}
  4056b2:	4c07      	ldr	r4, [pc, #28]	; (4056d0 <_isatty_r+0x20>)
  4056b4:	2300      	movs	r3, #0
  4056b6:	4605      	mov	r5, r0
  4056b8:	4608      	mov	r0, r1
  4056ba:	6023      	str	r3, [r4, #0]
  4056bc:	f7fb fa76 	bl	400bac <_isatty>
  4056c0:	1c43      	adds	r3, r0, #1
  4056c2:	d000      	beq.n	4056c6 <_isatty_r+0x16>
  4056c4:	bd38      	pop	{r3, r4, r5, pc}
  4056c6:	6823      	ldr	r3, [r4, #0]
  4056c8:	2b00      	cmp	r3, #0
  4056ca:	d0fb      	beq.n	4056c4 <_isatty_r+0x14>
  4056cc:	602b      	str	r3, [r5, #0]
  4056ce:	bd38      	pop	{r3, r4, r5, pc}
  4056d0:	20000b64 	.word	0x20000b64

004056d4 <_lseek_r>:
  4056d4:	b570      	push	{r4, r5, r6, lr}
  4056d6:	460d      	mov	r5, r1
  4056d8:	4c08      	ldr	r4, [pc, #32]	; (4056fc <_lseek_r+0x28>)
  4056da:	4611      	mov	r1, r2
  4056dc:	4606      	mov	r6, r0
  4056de:	461a      	mov	r2, r3
  4056e0:	4628      	mov	r0, r5
  4056e2:	2300      	movs	r3, #0
  4056e4:	6023      	str	r3, [r4, #0]
  4056e6:	f7fb fa63 	bl	400bb0 <_lseek>
  4056ea:	1c43      	adds	r3, r0, #1
  4056ec:	d000      	beq.n	4056f0 <_lseek_r+0x1c>
  4056ee:	bd70      	pop	{r4, r5, r6, pc}
  4056f0:	6823      	ldr	r3, [r4, #0]
  4056f2:	2b00      	cmp	r3, #0
  4056f4:	d0fb      	beq.n	4056ee <_lseek_r+0x1a>
  4056f6:	6033      	str	r3, [r6, #0]
  4056f8:	bd70      	pop	{r4, r5, r6, pc}
  4056fa:	bf00      	nop
  4056fc:	20000b64 	.word	0x20000b64

00405700 <_read_r>:
  405700:	b570      	push	{r4, r5, r6, lr}
  405702:	460d      	mov	r5, r1
  405704:	4c08      	ldr	r4, [pc, #32]	; (405728 <_read_r+0x28>)
  405706:	4611      	mov	r1, r2
  405708:	4606      	mov	r6, r0
  40570a:	461a      	mov	r2, r3
  40570c:	4628      	mov	r0, r5
  40570e:	2300      	movs	r3, #0
  405710:	6023      	str	r3, [r4, #0]
  405712:	f7fa fd43 	bl	40019c <_read>
  405716:	1c43      	adds	r3, r0, #1
  405718:	d000      	beq.n	40571c <_read_r+0x1c>
  40571a:	bd70      	pop	{r4, r5, r6, pc}
  40571c:	6823      	ldr	r3, [r4, #0]
  40571e:	2b00      	cmp	r3, #0
  405720:	d0fb      	beq.n	40571a <_read_r+0x1a>
  405722:	6033      	str	r3, [r6, #0]
  405724:	bd70      	pop	{r4, r5, r6, pc}
  405726:	bf00      	nop
  405728:	20000b64 	.word	0x20000b64

0040572c <__aeabi_uldivmod>:
  40572c:	b953      	cbnz	r3, 405744 <__aeabi_uldivmod+0x18>
  40572e:	b94a      	cbnz	r2, 405744 <__aeabi_uldivmod+0x18>
  405730:	2900      	cmp	r1, #0
  405732:	bf08      	it	eq
  405734:	2800      	cmpeq	r0, #0
  405736:	bf1c      	itt	ne
  405738:	f04f 31ff 	movne.w	r1, #4294967295
  40573c:	f04f 30ff 	movne.w	r0, #4294967295
  405740:	f000 b97a 	b.w	405a38 <__aeabi_idiv0>
  405744:	f1ad 0c08 	sub.w	ip, sp, #8
  405748:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40574c:	f000 f806 	bl	40575c <__udivmoddi4>
  405750:	f8dd e004 	ldr.w	lr, [sp, #4]
  405754:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405758:	b004      	add	sp, #16
  40575a:	4770      	bx	lr

0040575c <__udivmoddi4>:
  40575c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405760:	468c      	mov	ip, r1
  405762:	460d      	mov	r5, r1
  405764:	4604      	mov	r4, r0
  405766:	9e08      	ldr	r6, [sp, #32]
  405768:	2b00      	cmp	r3, #0
  40576a:	d151      	bne.n	405810 <__udivmoddi4+0xb4>
  40576c:	428a      	cmp	r2, r1
  40576e:	4617      	mov	r7, r2
  405770:	d96d      	bls.n	40584e <__udivmoddi4+0xf2>
  405772:	fab2 fe82 	clz	lr, r2
  405776:	f1be 0f00 	cmp.w	lr, #0
  40577a:	d00b      	beq.n	405794 <__udivmoddi4+0x38>
  40577c:	f1ce 0c20 	rsb	ip, lr, #32
  405780:	fa01 f50e 	lsl.w	r5, r1, lr
  405784:	fa20 fc0c 	lsr.w	ip, r0, ip
  405788:	fa02 f70e 	lsl.w	r7, r2, lr
  40578c:	ea4c 0c05 	orr.w	ip, ip, r5
  405790:	fa00 f40e 	lsl.w	r4, r0, lr
  405794:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405798:	0c25      	lsrs	r5, r4, #16
  40579a:	fbbc f8fa 	udiv	r8, ip, sl
  40579e:	fa1f f987 	uxth.w	r9, r7
  4057a2:	fb0a cc18 	mls	ip, sl, r8, ip
  4057a6:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4057aa:	fb08 f309 	mul.w	r3, r8, r9
  4057ae:	42ab      	cmp	r3, r5
  4057b0:	d90a      	bls.n	4057c8 <__udivmoddi4+0x6c>
  4057b2:	19ed      	adds	r5, r5, r7
  4057b4:	f108 32ff 	add.w	r2, r8, #4294967295
  4057b8:	f080 8123 	bcs.w	405a02 <__udivmoddi4+0x2a6>
  4057bc:	42ab      	cmp	r3, r5
  4057be:	f240 8120 	bls.w	405a02 <__udivmoddi4+0x2a6>
  4057c2:	f1a8 0802 	sub.w	r8, r8, #2
  4057c6:	443d      	add	r5, r7
  4057c8:	1aed      	subs	r5, r5, r3
  4057ca:	b2a4      	uxth	r4, r4
  4057cc:	fbb5 f0fa 	udiv	r0, r5, sl
  4057d0:	fb0a 5510 	mls	r5, sl, r0, r5
  4057d4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4057d8:	fb00 f909 	mul.w	r9, r0, r9
  4057dc:	45a1      	cmp	r9, r4
  4057de:	d909      	bls.n	4057f4 <__udivmoddi4+0x98>
  4057e0:	19e4      	adds	r4, r4, r7
  4057e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4057e6:	f080 810a 	bcs.w	4059fe <__udivmoddi4+0x2a2>
  4057ea:	45a1      	cmp	r9, r4
  4057ec:	f240 8107 	bls.w	4059fe <__udivmoddi4+0x2a2>
  4057f0:	3802      	subs	r0, #2
  4057f2:	443c      	add	r4, r7
  4057f4:	eba4 0409 	sub.w	r4, r4, r9
  4057f8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4057fc:	2100      	movs	r1, #0
  4057fe:	2e00      	cmp	r6, #0
  405800:	d061      	beq.n	4058c6 <__udivmoddi4+0x16a>
  405802:	fa24 f40e 	lsr.w	r4, r4, lr
  405806:	2300      	movs	r3, #0
  405808:	6034      	str	r4, [r6, #0]
  40580a:	6073      	str	r3, [r6, #4]
  40580c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405810:	428b      	cmp	r3, r1
  405812:	d907      	bls.n	405824 <__udivmoddi4+0xc8>
  405814:	2e00      	cmp	r6, #0
  405816:	d054      	beq.n	4058c2 <__udivmoddi4+0x166>
  405818:	2100      	movs	r1, #0
  40581a:	e886 0021 	stmia.w	r6, {r0, r5}
  40581e:	4608      	mov	r0, r1
  405820:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405824:	fab3 f183 	clz	r1, r3
  405828:	2900      	cmp	r1, #0
  40582a:	f040 808e 	bne.w	40594a <__udivmoddi4+0x1ee>
  40582e:	42ab      	cmp	r3, r5
  405830:	d302      	bcc.n	405838 <__udivmoddi4+0xdc>
  405832:	4282      	cmp	r2, r0
  405834:	f200 80fa 	bhi.w	405a2c <__udivmoddi4+0x2d0>
  405838:	1a84      	subs	r4, r0, r2
  40583a:	eb65 0503 	sbc.w	r5, r5, r3
  40583e:	2001      	movs	r0, #1
  405840:	46ac      	mov	ip, r5
  405842:	2e00      	cmp	r6, #0
  405844:	d03f      	beq.n	4058c6 <__udivmoddi4+0x16a>
  405846:	e886 1010 	stmia.w	r6, {r4, ip}
  40584a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40584e:	b912      	cbnz	r2, 405856 <__udivmoddi4+0xfa>
  405850:	2701      	movs	r7, #1
  405852:	fbb7 f7f2 	udiv	r7, r7, r2
  405856:	fab7 fe87 	clz	lr, r7
  40585a:	f1be 0f00 	cmp.w	lr, #0
  40585e:	d134      	bne.n	4058ca <__udivmoddi4+0x16e>
  405860:	1beb      	subs	r3, r5, r7
  405862:	0c3a      	lsrs	r2, r7, #16
  405864:	fa1f fc87 	uxth.w	ip, r7
  405868:	2101      	movs	r1, #1
  40586a:	fbb3 f8f2 	udiv	r8, r3, r2
  40586e:	0c25      	lsrs	r5, r4, #16
  405870:	fb02 3318 	mls	r3, r2, r8, r3
  405874:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405878:	fb0c f308 	mul.w	r3, ip, r8
  40587c:	42ab      	cmp	r3, r5
  40587e:	d907      	bls.n	405890 <__udivmoddi4+0x134>
  405880:	19ed      	adds	r5, r5, r7
  405882:	f108 30ff 	add.w	r0, r8, #4294967295
  405886:	d202      	bcs.n	40588e <__udivmoddi4+0x132>
  405888:	42ab      	cmp	r3, r5
  40588a:	f200 80d1 	bhi.w	405a30 <__udivmoddi4+0x2d4>
  40588e:	4680      	mov	r8, r0
  405890:	1aed      	subs	r5, r5, r3
  405892:	b2a3      	uxth	r3, r4
  405894:	fbb5 f0f2 	udiv	r0, r5, r2
  405898:	fb02 5510 	mls	r5, r2, r0, r5
  40589c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4058a0:	fb0c fc00 	mul.w	ip, ip, r0
  4058a4:	45a4      	cmp	ip, r4
  4058a6:	d907      	bls.n	4058b8 <__udivmoddi4+0x15c>
  4058a8:	19e4      	adds	r4, r4, r7
  4058aa:	f100 33ff 	add.w	r3, r0, #4294967295
  4058ae:	d202      	bcs.n	4058b6 <__udivmoddi4+0x15a>
  4058b0:	45a4      	cmp	ip, r4
  4058b2:	f200 80b8 	bhi.w	405a26 <__udivmoddi4+0x2ca>
  4058b6:	4618      	mov	r0, r3
  4058b8:	eba4 040c 	sub.w	r4, r4, ip
  4058bc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4058c0:	e79d      	b.n	4057fe <__udivmoddi4+0xa2>
  4058c2:	4631      	mov	r1, r6
  4058c4:	4630      	mov	r0, r6
  4058c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4058ca:	f1ce 0420 	rsb	r4, lr, #32
  4058ce:	fa05 f30e 	lsl.w	r3, r5, lr
  4058d2:	fa07 f70e 	lsl.w	r7, r7, lr
  4058d6:	fa20 f804 	lsr.w	r8, r0, r4
  4058da:	0c3a      	lsrs	r2, r7, #16
  4058dc:	fa25 f404 	lsr.w	r4, r5, r4
  4058e0:	ea48 0803 	orr.w	r8, r8, r3
  4058e4:	fbb4 f1f2 	udiv	r1, r4, r2
  4058e8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4058ec:	fb02 4411 	mls	r4, r2, r1, r4
  4058f0:	fa1f fc87 	uxth.w	ip, r7
  4058f4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4058f8:	fb01 f30c 	mul.w	r3, r1, ip
  4058fc:	42ab      	cmp	r3, r5
  4058fe:	fa00 f40e 	lsl.w	r4, r0, lr
  405902:	d909      	bls.n	405918 <__udivmoddi4+0x1bc>
  405904:	19ed      	adds	r5, r5, r7
  405906:	f101 30ff 	add.w	r0, r1, #4294967295
  40590a:	f080 808a 	bcs.w	405a22 <__udivmoddi4+0x2c6>
  40590e:	42ab      	cmp	r3, r5
  405910:	f240 8087 	bls.w	405a22 <__udivmoddi4+0x2c6>
  405914:	3902      	subs	r1, #2
  405916:	443d      	add	r5, r7
  405918:	1aeb      	subs	r3, r5, r3
  40591a:	fa1f f588 	uxth.w	r5, r8
  40591e:	fbb3 f0f2 	udiv	r0, r3, r2
  405922:	fb02 3310 	mls	r3, r2, r0, r3
  405926:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40592a:	fb00 f30c 	mul.w	r3, r0, ip
  40592e:	42ab      	cmp	r3, r5
  405930:	d907      	bls.n	405942 <__udivmoddi4+0x1e6>
  405932:	19ed      	adds	r5, r5, r7
  405934:	f100 38ff 	add.w	r8, r0, #4294967295
  405938:	d26f      	bcs.n	405a1a <__udivmoddi4+0x2be>
  40593a:	42ab      	cmp	r3, r5
  40593c:	d96d      	bls.n	405a1a <__udivmoddi4+0x2be>
  40593e:	3802      	subs	r0, #2
  405940:	443d      	add	r5, r7
  405942:	1aeb      	subs	r3, r5, r3
  405944:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  405948:	e78f      	b.n	40586a <__udivmoddi4+0x10e>
  40594a:	f1c1 0720 	rsb	r7, r1, #32
  40594e:	fa22 f807 	lsr.w	r8, r2, r7
  405952:	408b      	lsls	r3, r1
  405954:	fa05 f401 	lsl.w	r4, r5, r1
  405958:	ea48 0303 	orr.w	r3, r8, r3
  40595c:	fa20 fe07 	lsr.w	lr, r0, r7
  405960:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405964:	40fd      	lsrs	r5, r7
  405966:	ea4e 0e04 	orr.w	lr, lr, r4
  40596a:	fbb5 f9fc 	udiv	r9, r5, ip
  40596e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  405972:	fb0c 5519 	mls	r5, ip, r9, r5
  405976:	fa1f f883 	uxth.w	r8, r3
  40597a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40597e:	fb09 f408 	mul.w	r4, r9, r8
  405982:	42ac      	cmp	r4, r5
  405984:	fa02 f201 	lsl.w	r2, r2, r1
  405988:	fa00 fa01 	lsl.w	sl, r0, r1
  40598c:	d908      	bls.n	4059a0 <__udivmoddi4+0x244>
  40598e:	18ed      	adds	r5, r5, r3
  405990:	f109 30ff 	add.w	r0, r9, #4294967295
  405994:	d243      	bcs.n	405a1e <__udivmoddi4+0x2c2>
  405996:	42ac      	cmp	r4, r5
  405998:	d941      	bls.n	405a1e <__udivmoddi4+0x2c2>
  40599a:	f1a9 0902 	sub.w	r9, r9, #2
  40599e:	441d      	add	r5, r3
  4059a0:	1b2d      	subs	r5, r5, r4
  4059a2:	fa1f fe8e 	uxth.w	lr, lr
  4059a6:	fbb5 f0fc 	udiv	r0, r5, ip
  4059aa:	fb0c 5510 	mls	r5, ip, r0, r5
  4059ae:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4059b2:	fb00 f808 	mul.w	r8, r0, r8
  4059b6:	45a0      	cmp	r8, r4
  4059b8:	d907      	bls.n	4059ca <__udivmoddi4+0x26e>
  4059ba:	18e4      	adds	r4, r4, r3
  4059bc:	f100 35ff 	add.w	r5, r0, #4294967295
  4059c0:	d229      	bcs.n	405a16 <__udivmoddi4+0x2ba>
  4059c2:	45a0      	cmp	r8, r4
  4059c4:	d927      	bls.n	405a16 <__udivmoddi4+0x2ba>
  4059c6:	3802      	subs	r0, #2
  4059c8:	441c      	add	r4, r3
  4059ca:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4059ce:	eba4 0408 	sub.w	r4, r4, r8
  4059d2:	fba0 8902 	umull	r8, r9, r0, r2
  4059d6:	454c      	cmp	r4, r9
  4059d8:	46c6      	mov	lr, r8
  4059da:	464d      	mov	r5, r9
  4059dc:	d315      	bcc.n	405a0a <__udivmoddi4+0x2ae>
  4059de:	d012      	beq.n	405a06 <__udivmoddi4+0x2aa>
  4059e0:	b156      	cbz	r6, 4059f8 <__udivmoddi4+0x29c>
  4059e2:	ebba 030e 	subs.w	r3, sl, lr
  4059e6:	eb64 0405 	sbc.w	r4, r4, r5
  4059ea:	fa04 f707 	lsl.w	r7, r4, r7
  4059ee:	40cb      	lsrs	r3, r1
  4059f0:	431f      	orrs	r7, r3
  4059f2:	40cc      	lsrs	r4, r1
  4059f4:	6037      	str	r7, [r6, #0]
  4059f6:	6074      	str	r4, [r6, #4]
  4059f8:	2100      	movs	r1, #0
  4059fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4059fe:	4618      	mov	r0, r3
  405a00:	e6f8      	b.n	4057f4 <__udivmoddi4+0x98>
  405a02:	4690      	mov	r8, r2
  405a04:	e6e0      	b.n	4057c8 <__udivmoddi4+0x6c>
  405a06:	45c2      	cmp	sl, r8
  405a08:	d2ea      	bcs.n	4059e0 <__udivmoddi4+0x284>
  405a0a:	ebb8 0e02 	subs.w	lr, r8, r2
  405a0e:	eb69 0503 	sbc.w	r5, r9, r3
  405a12:	3801      	subs	r0, #1
  405a14:	e7e4      	b.n	4059e0 <__udivmoddi4+0x284>
  405a16:	4628      	mov	r0, r5
  405a18:	e7d7      	b.n	4059ca <__udivmoddi4+0x26e>
  405a1a:	4640      	mov	r0, r8
  405a1c:	e791      	b.n	405942 <__udivmoddi4+0x1e6>
  405a1e:	4681      	mov	r9, r0
  405a20:	e7be      	b.n	4059a0 <__udivmoddi4+0x244>
  405a22:	4601      	mov	r1, r0
  405a24:	e778      	b.n	405918 <__udivmoddi4+0x1bc>
  405a26:	3802      	subs	r0, #2
  405a28:	443c      	add	r4, r7
  405a2a:	e745      	b.n	4058b8 <__udivmoddi4+0x15c>
  405a2c:	4608      	mov	r0, r1
  405a2e:	e708      	b.n	405842 <__udivmoddi4+0xe6>
  405a30:	f1a8 0802 	sub.w	r8, r8, #2
  405a34:	443d      	add	r5, r7
  405a36:	e72b      	b.n	405890 <__udivmoddi4+0x134>

00405a38 <__aeabi_idiv0>:
  405a38:	4770      	bx	lr
  405a3a:	bf00      	nop
  405a3c:	654d0d0a 	.word	0x654d0d0a
  405a40:	3a20756e 	.word	0x3a20756e
  405a44:	2d2d0d0a 	.word	0x2d2d0d0a
  405a48:	2d2d2d2d 	.word	0x2d2d2d2d
  405a4c:	0000000d 	.word	0x0000000d
  405a50:	75252020 	.word	0x75252020
  405a54:	6553203a 	.word	0x6553203a
  405a58:	50532074 	.word	0x50532074
  405a5c:	3d204b43 	.word	0x3d204b43
  405a60:	6c372520 	.word	0x6c372520
  405a64:	7a482075 	.word	0x7a482075
  405a68:	00000d0a 	.word	0x00000d0a
  405a6c:	3a742020 	.word	0x3a742020
  405a70:	72655020 	.word	0x72655020
  405a74:	6d726f66 	.word	0x6d726f66
  405a78:	49505320 	.word	0x49505320
  405a7c:	73616d20 	.word	0x73616d20
  405a80:	0a726574 	.word	0x0a726574
  405a84:	6820200d 	.word	0x6820200d
  405a88:	6944203a 	.word	0x6944203a
  405a8c:	616c7073 	.word	0x616c7073
  405a90:	68742079 	.word	0x68742079
  405a94:	6d207369 	.word	0x6d207369
  405a98:	20756e65 	.word	0x20756e65
  405a9c:	69616761 	.word	0x69616761
  405aa0:	0d0d0a6e 	.word	0x0d0d0a6e
  405aa4:	00000000 	.word	0x00000000

00405aa8 <gs_ul_clock_configurations>:
  405aa8:	0007a120 000f4240 001e8480 004c4b40      ...@B......@KL.
  405ab8:	70532d2d 78452069 6c706d61 2d2d2065     --Spi Example --
  405ac8:	2d2d0a0d 4d415320 452d5334 2d20324b     ..-- SAM4S-EK2 -
  405ad8:	2d0a0d2d 6f43202d 6c69706d 203a6465     -..-- Compiled: 
  405ae8:	2079614d 32203232 20383130 323a3531     May 22 2018 15:2
  405af8:	33303a39 0d2d2d20 00000000 202d492d     9:03 --.....-I- 
  405b08:	74696e49 696c6169 5320657a 61204950     Initialize SPI a
  405b18:	6c732073 20657661 0000000d 00006325     s slave ....%c..
  405b28:	4d203e2d 65747361 65732072 6e69646e     -> Master sendin
  405b38:	4d432067 45545f44 2e2e5453 000d202e     g CMD_TEST... ..
  405b48:	3c202020 6c53202d 20657661 70736572        <- Slave resp
  405b58:	65736e6f 5f435220 2c4e5953 5f435220     onse RC_SYN, RC_
  405b68:	20594452 0000000d 4d203e2d 65747361     RDY ....-> Maste
  405b78:	65732072 6e69646e 4d432067 41445f44     r sending CMD_DA
  405b88:	2e2e4154 000d202e 20202020 20202020     TA... ..        
  405b98:	20202020 20202020 20202020 20202020                     
  405ba8:	20202020 20202020 2d2d2d3c 6c53202d             <---- Sl
  405bb8:	20657661 70736572 65736e6f 5f435220     ave response RC_
  405bc8:	20594452 0000000d 202d452d 70736552     RDY ....-E- Resp
  405bd8:	65736e6f 656e7520 63657078 3a646574     onse unexpected:
  405be8:	25783020 0d0a2078 00000000 4d203e2d      0x%x ......-> M
  405bf8:	65747361 65732072 6e69646e 6c622067     aster sending bl
  405c08:	206b636f 2e207525 0a202e2e 0000000d     ock %u ... .....
  405c18:	4d203e2d 65747361 65732072 6e69646e     -> Master sendin
  405c28:	4d432067 54535f44 53555441 202e2e2e     g CMD_STATUS... 
  405c38:	0000000d 3c202020 6c53202d 20657661     ....   <- Slave 
  405c48:	70736572 65736e6f 5f435220 20594452     response RC_RDY 
  405c58:	0000000d 3c202020 6c53202d 20657661     ....   <- Slave 
  405c68:	72206f6e 6f707365 2065736e 0000000d     no response ....
  405c78:	4d203e2d 65747361 65722072 73657571     -> Master reques
  405c88:	6c732074 20657661 74617473 2e2e7375     t slave status..
  405c98:	000d202e 3c202020 6c53202d 20657661     . ..   <- Slave 
  405ca8:	6f706572 20737472 74617473 2e2e7375     reports status..
  405cb8:	00000d2e 202d492d 65636552 64657669     ....-I- Received
  405cc8:	75252020 6d6f6320 646e616d 00003a73       %u commands:..
  405cd8:	25783020 00783830 2d0d0a20 52202d49      0x%08x. ..-I- R
  405ce8:	69656365 20646576 756c2520 74616420     eceived  %lu dat
  405cf8:	6c622061 736b636f 000d0a20 4d203e2d     a blocks ...-> M
  405d08:	65747361 65732072 6e69646e 4d432067     aster sending CM
  405d18:	4e455f44 2e2e2e44 00000d20 3c202020     D_END... ...   <
  405d28:	6c53202d 20657661 70736572 65736e6f     - Slave response
  405d38:	5f435220 204e5953 0000000d 20495053      RC_SYN ....SPI 
  405d48:	6e617274 72656673 73657420 69662074     transfer test fi
  405d58:	6873696e 20216465 0000000d 74746553     nished! ....Sett
  405d68:	20676e69 20495053 636f6c63 2523206b     ing SPI clock #%
  405d78:	2e20756c 0a202e2e 0000000d 3c202020     lu ... .....   <
  405d88:	6c53202d 20657661 70736572 65736e6f     - Slave response
  405d98:	73616c20 6c622074 206b636f 0a207825      last block %x .
  405da8:	0000000d 202d452d 636f6c62 7525206b     ....-E- block %u
  405db8:	6e6f6320 6e696174 6e752073 65707865      contains unexpe
  405dc8:	64657463 74616420 0d0a2061 00000000     cted data ......
  405dd8:	202d492d 74696e49 696c6169 5320657a     -I- Initialize S
  405de8:	61204950 616d2073 72657473 0000000d     PI as master....

00405df8 <_global_impure_ptr>:
  405df8:	20000010 0000000a 33323130 37363534     ... ....01234567
  405e08:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  405e18:	37363534 62613938 66656463 00000000     456789abcdef....
  405e28:	6c756e28 0000296c                       (null)..

00405e30 <blanks.7217>:
  405e30:	20202020 20202020 20202020 20202020                     

00405e40 <zeroes.7218>:
  405e40:	30303030 30303030 30303030 30303030     0000000000000000

00405e50 <basefix.6805>:
  405e50:	0001000a 00030002 00050004 00070006     ................
  405e60:	00090008 000b000a 000d000c 000f000e     ................
  405e70:	00000010 00000043 49534f50 00000058     ....C...POSIX...
  405e80:	0000002e                                ....

00405e84 <_ctype_>:
  405e84:	20202000 20202020 28282020 20282828     .         ((((( 
  405e94:	20202020 20202020 20202020 20202020                     
  405ea4:	10108820 10101010 10101010 10101010      ...............
  405eb4:	04040410 04040404 10040404 10101010     ................
  405ec4:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405ed4:	01010101 01010101 01010101 10101010     ................
  405ee4:	42421010 42424242 02020202 02020202     ..BBBBBB........
  405ef4:	02020202 02020202 02020202 10101010     ................
  405f04:	00000020 00000000 00000000 00000000      ...............
	...

00405f88 <_init>:
  405f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405f8a:	bf00      	nop
  405f8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405f8e:	bc08      	pop	{r3}
  405f90:	469e      	mov	lr, r3
  405f92:	4770      	bx	lr

00405f94 <__init_array_start>:
  405f94:	0040304d 	.word	0x0040304d

00405f98 <__frame_dummy_init_array_entry>:
  405f98:	004000f1                                ..@.

00405f9c <_fini>:
  405f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405f9e:	bf00      	nop
  405fa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405fa2:	bc08      	pop	{r3}
  405fa4:	469e      	mov	lr, r3
  405fa6:	4770      	bx	lr

00405fa8 <__fini_array_start>:
  405fa8:	004000cd 	.word	0x004000cd
