
OLED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e18  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00405e18  00405e18  00015e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000c84  20000000  00405e20  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000d0  20000c84  00406aa4  00020c84  2**2
                  ALLOC
  4 .stack        00003004  20000d54  00406b74  00020c84  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020c84  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020cae  2**0
                  CONTENTS, READONLY
  7 .debug_info   00009ec3  00000000  00000000  00020d07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001bfc  00000000  00000000  0002abca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000680  00000000  00000000  0002c7c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  00013dcf  00000000  00000000  0002ce46  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000a42e  00000000  00000000  00040c15  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0005332e  00000000  00000000  0004b043  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00003ddb  00000000  00000000  0009e371  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000006d0  00000000  00000000  000a214c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001668  00000000  00000000  000a281c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003d58 	.word	0x20003d58
  400004:	00400bb1 	.word	0x00400bb1
  400008:	00400bad 	.word	0x00400bad
  40000c:	00400bad 	.word	0x00400bad
  400010:	00400bad 	.word	0x00400bad
  400014:	00400bad 	.word	0x00400bad
  400018:	00400bad 	.word	0x00400bad
	...
  40002c:	00400bad 	.word	0x00400bad
  400030:	00400bad 	.word	0x00400bad
  400034:	00000000 	.word	0x00000000
  400038:	00400bad 	.word	0x00400bad
  40003c:	00400bad 	.word	0x00400bad
  400040:	00400bad 	.word	0x00400bad
  400044:	00400bad 	.word	0x00400bad
  400048:	00400bad 	.word	0x00400bad
  40004c:	00400bad 	.word	0x00400bad
  400050:	00400bad 	.word	0x00400bad
  400054:	00400bad 	.word	0x00400bad
  400058:	00400bad 	.word	0x00400bad
  40005c:	00400bad 	.word	0x00400bad
  400060:	00400bad 	.word	0x00400bad
  400064:	00400bad 	.word	0x00400bad
  400068:	00000000 	.word	0x00000000
  40006c:	00400a31 	.word	0x00400a31
  400070:	00400a45 	.word	0x00400a45
  400074:	00400a59 	.word	0x00400a59
  400078:	00400bad 	.word	0x00400bad
  40007c:	00400bad 	.word	0x00400bad
	...
  400088:	00400bad 	.word	0x00400bad
  40008c:	00400bad 	.word	0x00400bad
  400090:	00400bad 	.word	0x00400bad
  400094:	00400bad 	.word	0x00400bad
  400098:	00400bad 	.word	0x00400bad
  40009c:	00400bad 	.word	0x00400bad
  4000a0:	00400bad 	.word	0x00400bad
  4000a4:	00400bad 	.word	0x00400bad
  4000a8:	00400bad 	.word	0x00400bad
  4000ac:	00400bad 	.word	0x00400bad
  4000b0:	00400bad 	.word	0x00400bad
  4000b4:	00400bad 	.word	0x00400bad
  4000b8:	00400bad 	.word	0x00400bad
  4000bc:	00400bad 	.word	0x00400bad
  4000c0:	00400bad 	.word	0x00400bad
  4000c4:	00400bad 	.word	0x00400bad
  4000c8:	00400bad 	.word	0x00400bad

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000c84 	.word	0x20000c84
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00405e20 	.word	0x00405e20

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4908      	ldr	r1, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4808      	ldr	r0, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	20000c88 	.word	0x20000c88
  40011c:	00405e20 	.word	0x00405e20
  400120:	00405e20 	.word	0x00405e20
  400124:	00000000 	.word	0x00000000

00400128 <spi_master_init>:
 *
 * \param p_spi  Base address of the SPI instance.
 *
 */
void spi_master_init(Spi *p_spi)
{
  400128:	b510      	push	{r4, lr}
  40012a:	4604      	mov	r4, r0
#if SAMG55
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	spi_enable_clock(p_spi);
  40012c:	4b10      	ldr	r3, [pc, #64]	; (400170 <spi_master_init+0x48>)
  40012e:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400130:	2380      	movs	r3, #128	; 0x80
  400132:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400134:	6863      	ldr	r3, [r4, #4]
  400136:	f043 0301 	orr.w	r3, r3, #1
  40013a:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40013c:	6863      	ldr	r3, [r4, #4]
  40013e:	f043 0310 	orr.w	r3, r3, #16
  400142:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400144:	6863      	ldr	r3, [r4, #4]
  400146:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40014a:	6063      	str	r3, [r4, #4]
#endif
	spi_reset(p_spi);
	spi_set_master_mode(p_spi);
	spi_disable_mode_fault_detect(p_spi);
	spi_disable_loopback(p_spi);
	spi_set_peripheral_chip_select_value(p_spi, DEFAULT_CHIP_ID);
  40014c:	2100      	movs	r1, #0
  40014e:	4620      	mov	r0, r4
  400150:	4b08      	ldr	r3, [pc, #32]	; (400174 <spi_master_init+0x4c>)
  400152:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_fixed_peripheral_select(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400154:	6863      	ldr	r3, [r4, #4]
  400156:	f023 0302 	bic.w	r3, r3, #2
  40015a:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_peripheral_select_decode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
  40015c:	6863      	ldr	r3, [r4, #4]
  40015e:	f023 0304 	bic.w	r3, r3, #4
  400162:	6063      	str	r3, [r4, #4]
	spi_set_fixed_peripheral_select(p_spi);
	spi_disable_peripheral_select_decode(p_spi);
	spi_set_delay_between_chip_select(p_spi, CONFIG_SPI_MASTER_DELAY_BCS);
  400164:	2100      	movs	r1, #0
  400166:	4620      	mov	r0, r4
  400168:	4b03      	ldr	r3, [pc, #12]	; (400178 <spi_master_init+0x50>)
  40016a:	4798      	blx	r3
  40016c:	bd10      	pop	{r4, pc}
  40016e:	bf00      	nop
  400170:	00400249 	.word	0x00400249
  400174:	00400259 	.word	0x00400259
  400178:	00400271 	.word	0x00400271

0040017c <spi_master_setup_device>:
 * \param baud_rate Baud rate for communication with slave device in Hz.
 * \param sel_id    Board specific select id.
 */
void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id)
{
  40017c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400180:	4604      	mov	r4, r0
  400182:	460d      	mov	r5, r1
  400184:	4616      	mov	r6, r2
#if (SAM4L)
    int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_pba_hz());
#else
	int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_peripheral_hz());
  400186:	4915      	ldr	r1, [pc, #84]	; (4001dc <spi_master_setup_device+0x60>)
  400188:	4618      	mov	r0, r3
  40018a:	4b15      	ldr	r3, [pc, #84]	; (4001e0 <spi_master_setup_device+0x64>)
  40018c:	4798      	blx	r3
  40018e:	4607      	mov	r7, r0
	/* avoid Cppcheck Warning */
	UNUSED(sel_id);
	if (-1 == baud_div) {
		Assert(0 == "Failed to find baudrate divider");
	}
	spi_set_transfer_delay(p_spi, device->id, CONFIG_SPI_MASTER_DELAY_BS,
  400190:	2300      	movs	r3, #0
  400192:	461a      	mov	r2, r3
  400194:	6829      	ldr	r1, [r5, #0]
  400196:	4620      	mov	r0, r4
  400198:	f8df 805c 	ldr.w	r8, [pc, #92]	; 4001f8 <spi_master_setup_device+0x7c>
  40019c:	47c0      	blx	r8
			CONFIG_SPI_MASTER_DELAY_BCT);
	spi_set_bits_per_transfer(p_spi, device->id,
  40019e:	2208      	movs	r2, #8
  4001a0:	6829      	ldr	r1, [r5, #0]
  4001a2:	4620      	mov	r0, r4
  4001a4:	4b0f      	ldr	r3, [pc, #60]	; (4001e4 <spi_master_setup_device+0x68>)
  4001a6:	4798      	blx	r3
			CONFIG_SPI_MASTER_BITS_PER_TRANSFER);
	spi_set_baudrate_div(p_spi, device->id, baud_div);
  4001a8:	b2fa      	uxtb	r2, r7
  4001aa:	6829      	ldr	r1, [r5, #0]
  4001ac:	4620      	mov	r0, r4
  4001ae:	4b0e      	ldr	r3, [pc, #56]	; (4001e8 <spi_master_setup_device+0x6c>)
  4001b0:	4798      	blx	r3
	spi_configure_cs_behavior(p_spi, device->id, SPI_CS_KEEP_LOW);
  4001b2:	2208      	movs	r2, #8
  4001b4:	6829      	ldr	r1, [r5, #0]
  4001b6:	4620      	mov	r0, r4
  4001b8:	4b0c      	ldr	r3, [pc, #48]	; (4001ec <spi_master_setup_device+0x70>)
  4001ba:	4798      	blx	r3
	spi_set_clock_polarity(p_spi, device->id, flags >> 1);
  4001bc:	0872      	lsrs	r2, r6, #1
  4001be:	6829      	ldr	r1, [r5, #0]
  4001c0:	4620      	mov	r0, r4
  4001c2:	4b0b      	ldr	r3, [pc, #44]	; (4001f0 <spi_master_setup_device+0x74>)
  4001c4:	4798      	blx	r3
	spi_set_clock_phase(p_spi, device->id, ((flags & 0x1) ^ 0x1));
  4001c6:	f086 0201 	eor.w	r2, r6, #1
  4001ca:	f002 0201 	and.w	r2, r2, #1
  4001ce:	6829      	ldr	r1, [r5, #0]
  4001d0:	4620      	mov	r0, r4
  4001d2:	4b08      	ldr	r3, [pc, #32]	; (4001f4 <spi_master_setup_device+0x78>)
  4001d4:	4798      	blx	r3
  4001d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001da:	bf00      	nop
  4001dc:	07270e00 	.word	0x07270e00
  4001e0:	0040031d 	.word	0x0040031d
  4001e4:	00400309 	.word	0x00400309
  4001e8:	00400335 	.word	0x00400335
  4001ec:	004002c5 	.word	0x004002c5
  4001f0:	00400285 	.word	0x00400285
  4001f4:	004002a5 	.word	0x004002a5
  4001f8:	0040035d 	.word	0x0040035d

004001fc <spi_select_device>:
 * \param p_spi   Base address of the SPI instance.
 * \param device  SPI device.
 *
 */
void spi_select_device(Spi *p_spi, struct spi_device *device)
{
  4001fc:	b508      	push	{r3, lr}
 *
 * \return 1 for decode mode, 0 for direct mode.
 */
static inline uint32_t spi_get_peripheral_select_decode_setting(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
  4001fe:	6843      	ldr	r3, [r0, #4]
	if (spi_get_peripheral_select_decode_setting(p_spi)) {
  400200:	f013 0f04 	tst.w	r3, #4
  400204:	d005      	beq.n	400212 <spi_select_device+0x16>
		if (device->id < MAX_NUM_WITH_DECODER) {
  400206:	6809      	ldr	r1, [r1, #0]
  400208:	290f      	cmp	r1, #15
  40020a:	d80a      	bhi.n	400222 <spi_select_device+0x26>
			spi_set_peripheral_chip_select_value(p_spi, device->id);
  40020c:	4b05      	ldr	r3, [pc, #20]	; (400224 <spi_select_device+0x28>)
  40020e:	4798      	blx	r3
  400210:	bd08      	pop	{r3, pc}
		}
	} else {
		if (device->id < MAX_NUM_WITHOUT_DECODER) {
  400212:	680b      	ldr	r3, [r1, #0]
  400214:	2b03      	cmp	r3, #3
  400216:	d804      	bhi.n	400222 <spi_select_device+0x26>
			spi_set_peripheral_chip_select_value(p_spi, (~(1 << device->id)));
  400218:	2101      	movs	r1, #1
  40021a:	4099      	lsls	r1, r3
  40021c:	43c9      	mvns	r1, r1
  40021e:	4b01      	ldr	r3, [pc, #4]	; (400224 <spi_select_device+0x28>)
  400220:	4798      	blx	r3
  400222:	bd08      	pop	{r3, pc}
  400224:	00400259 	.word	0x00400259

00400228 <spi_deselect_device>:
 * \param device  SPI device.
 *
 * \pre SPI device must be selected with spi_select_device() first.
 */
void spi_deselect_device(Spi *p_spi, struct spi_device *device)
{
  400228:	b510      	push	{r4, lr}
  40022a:	4604      	mov	r4, r0
 * \retval 1 if transmissions are complete.
 * \retval 0 if transmissions are not complete.
 */
static inline uint32_t spi_is_tx_empty(Spi *p_spi)
{
	if (p_spi->SPI_SR & SPI_SR_TXEMPTY) {
  40022c:	6923      	ldr	r3, [r4, #16]
	/* avoid Cppcheck Warning */
	UNUSED(device);
	while (!spi_is_tx_empty(p_spi)) {
  40022e:	f413 7f00 	tst.w	r3, #512	; 0x200
  400232:	d0fb      	beq.n	40022c <spi_deselect_device+0x4>
	}

	// Assert all lines; no peripheral is selected.
	spi_set_peripheral_chip_select_value(p_spi, NONE_CHIP_SELECT_ID);
  400234:	210f      	movs	r1, #15
  400236:	4620      	mov	r0, r4
  400238:	4b02      	ldr	r3, [pc, #8]	; (400244 <spi_deselect_device+0x1c>)
  40023a:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_lastxfer(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  40023c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400240:	6023      	str	r3, [r4, #0]
  400242:	bd10      	pop	{r4, pc}
  400244:	00400259 	.word	0x00400259

00400248 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400248:	b508      	push	{r3, lr}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40024a:	2015      	movs	r0, #21
  40024c:	4b01      	ldr	r3, [pc, #4]	; (400254 <spi_enable_clock+0xc>)
  40024e:	4798      	blx	r3
  400250:	bd08      	pop	{r3, pc}
  400252:	bf00      	nop
  400254:	00400b59 	.word	0x00400b59

00400258 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400258:	6843      	ldr	r3, [r0, #4]
  40025a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40025e:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400260:	6843      	ldr	r3, [r0, #4]
  400262:	0409      	lsls	r1, r1, #16
  400264:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400268:	430b      	orrs	r3, r1
  40026a:	6043      	str	r3, [r0, #4]
  40026c:	4770      	bx	lr
  40026e:	bf00      	nop

00400270 <spi_set_delay_between_chip_select>:
 * \param p_spi Pointer to an SPI instance.
 * \param ul_delay Delay between chip selects (in number of MCK clocks).
 */
void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay)
{
	p_spi->SPI_MR &= (~SPI_MR_DLYBCS_Msk);
  400270:	6843      	ldr	r3, [r0, #4]
  400272:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  400276:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_DLYBCS(ul_delay);
  400278:	6843      	ldr	r3, [r0, #4]
  40027a:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  40027e:	6041      	str	r1, [r0, #4]
  400280:	4770      	bx	lr
  400282:	bf00      	nop

00400284 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400284:	b132      	cbz	r2, 400294 <spi_set_clock_polarity+0x10>
  400286:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  40028a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40028c:	f043 0301 	orr.w	r3, r3, #1
  400290:	6303      	str	r3, [r0, #48]	; 0x30
  400292:	4770      	bx	lr
  400294:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400298:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40029a:	f023 0301 	bic.w	r3, r3, #1
  40029e:	6303      	str	r3, [r0, #48]	; 0x30
  4002a0:	4770      	bx	lr
  4002a2:	bf00      	nop

004002a4 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4002a4:	b132      	cbz	r2, 4002b4 <spi_set_clock_phase+0x10>
  4002a6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4002aa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ac:	f043 0302 	orr.w	r3, r3, #2
  4002b0:	6303      	str	r3, [r0, #48]	; 0x30
  4002b2:	4770      	bx	lr
  4002b4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4002b8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ba:	f023 0302 	bic.w	r3, r3, #2
  4002be:	6303      	str	r3, [r0, #48]	; 0x30
  4002c0:	4770      	bx	lr
  4002c2:	bf00      	nop

004002c4 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4002c4:	2a04      	cmp	r2, #4
  4002c6:	d10a      	bne.n	4002de <spi_configure_cs_behavior+0x1a>
  4002c8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002cc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ce:	f023 0308 	bic.w	r3, r3, #8
  4002d2:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4002d4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002d6:	f043 0304 	orr.w	r3, r3, #4
  4002da:	6303      	str	r3, [r0, #48]	; 0x30
  4002dc:	4770      	bx	lr
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4002de:	b952      	cbnz	r2, 4002f6 <spi_configure_cs_behavior+0x32>
  4002e0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002e6:	f023 0308 	bic.w	r3, r3, #8
  4002ea:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4002ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ee:	f023 0304 	bic.w	r3, r3, #4
  4002f2:	6303      	str	r3, [r0, #48]	; 0x30
  4002f4:	4770      	bx	lr
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4002f6:	2a08      	cmp	r2, #8
  4002f8:	d105      	bne.n	400306 <spi_configure_cs_behavior+0x42>
  4002fa:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4002fe:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400300:	f043 0308 	orr.w	r3, r3, #8
  400304:	6303      	str	r3, [r0, #48]	; 0x30
  400306:	4770      	bx	lr

00400308 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400308:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40030c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40030e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400312:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400314:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400316:	431a      	orrs	r2, r3
  400318:	630a      	str	r2, [r1, #48]	; 0x30
  40031a:	4770      	bx	lr

0040031c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40031c:	1e43      	subs	r3, r0, #1
  40031e:	4419      	add	r1, r3
  400320:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400324:	1e43      	subs	r3, r0, #1
  400326:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400328:	bf94      	ite	ls
  40032a:	b200      	sxthls	r0, r0
{
	int baud_div = div_ceil(mck, baudrate);

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
		return -1;
  40032c:	f04f 30ff 	movhi.w	r0, #4294967295
	}

	return baud_div;
}
  400330:	4770      	bx	lr
  400332:	bf00      	nop

00400334 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400334:	b16a      	cbz	r2, 400352 <spi_set_baudrate_div+0x1e>
 * \retval is 0 Success.
 * \retval is -1 Error.
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
  400336:	b410      	push	{r4}
  400338:	4614      	mov	r4, r2
  40033a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40033e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400340:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  400344:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400346:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400348:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40034c:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  40034e:	2000      	movs	r0, #0
  400350:	e002      	b.n	400358 <spi_set_baudrate_div+0x24>
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
        return -1;
  400352:	f04f 30ff 	mov.w	r0, #4294967295
  400356:	4770      	bx	lr

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
    return 0;
}
  400358:	bc10      	pop	{r4}
  40035a:	4770      	bx	lr

0040035c <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  40035c:	b410      	push	{r4}
  40035e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  400362:	6b08      	ldr	r0, [r1, #48]	; 0x30
  400364:	b280      	uxth	r0, r0
  400366:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  400368:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  40036a:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  40036e:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  400372:	630a      	str	r2, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  400374:	bc10      	pop	{r4}
  400376:	4770      	bx	lr

00400378 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
static void ssd1306_write_command(uint8_t command)
{
  400378:	b570      	push	{r4, r5, r6, lr}
  40037a:	b082      	sub	sp, #8
  40037c:	4606      	mov	r6, r0
	usart_spi_select_device(SSD1306_USART_SPI, &device);
	ssd1306_sel_cmd();
	usart_spi_transmit(SSD1306_USART_SPI, command);
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  40037e:	2501      	movs	r5, #1
  400380:	ac02      	add	r4, sp, #8
  400382:	f844 5d04 	str.w	r5, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400386:	4621      	mov	r1, r4
  400388:	2000      	movs	r0, #0
  40038a:	4b07      	ldr	r3, [pc, #28]	; (4003a8 <ssd1306_write_command+0x30>)
  40038c:	4798      	blx	r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40038e:	4b07      	ldr	r3, [pc, #28]	; (4003ac <ssd1306_write_command+0x34>)
  400390:	635d      	str	r5, [r3, #52]	; 0x34
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(Spi *p_spi, uint16_t data)
{
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  400392:	2500      	movs	r5, #0
  400394:	60ee      	str	r6, [r5, #12]
	ssd1306_sel_cmd();
	spi_write_single(SSD1306_SPI, command);
	delay_us(SSD1306_LATENCY); // At least 3us
  400396:	2056      	movs	r0, #86	; 0x56
  400398:	4b05      	ldr	r3, [pc, #20]	; (4003b0 <ssd1306_write_command+0x38>)
  40039a:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  40039c:	4621      	mov	r1, r4
  40039e:	4628      	mov	r0, r5
  4003a0:	4b04      	ldr	r3, [pc, #16]	; (4003b4 <ssd1306_write_command+0x3c>)
  4003a2:	4798      	blx	r3
#endif
}
  4003a4:	b002      	add	sp, #8
  4003a6:	bd70      	pop	{r4, r5, r6, pc}
  4003a8:	004001fd 	.word	0x004001fd
  4003ac:	400e0e00 	.word	0x400e0e00
  4003b0:	20000001 	.word	0x20000001
  4003b4:	00400229 	.word	0x00400229

004003b8 <ssd1306_init>:
 * Call this function to initialize the hardware interface and the OLED
 * controller. When initialization is done the display is turned on and ready
 * to receive data.
 */
void ssd1306_init(void)
{
  4003b8:	b570      	push	{r4, r5, r6, lr}
  4003ba:	b084      	sub	sp, #16
  4003bc:	4d23      	ldr	r5, [pc, #140]	; (40044c <ssd1306_init+0x94>)
  4003be:	2604      	movs	r6, #4
  4003c0:	636e      	str	r6, [r5, #52]	; 0x34
 * function, this command will control the RST pin.
 */
static inline void ssd1306_hard_reset(void)
{
	arch_ioport_set_pin_level(SSD1306_RES_PIN, false);
	delay_us(SSD1306_LATENCY); // At least 3us
  4003c2:	2056      	movs	r0, #86	; 0x56
  4003c4:	4c22      	ldr	r4, [pc, #136]	; (400450 <ssd1306_init+0x98>)
  4003c6:	47a0      	blx	r4
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4003c8:	632e      	str	r6, [r5, #48]	; 0x30
	arch_ioport_set_pin_level(SSD1306_RES_PIN, true);
	delay_us(SSD1306_LATENCY); // At least 3us
  4003ca:	2056      	movs	r0, #86	; 0x56
  4003cc:	47a0      	blx	r4
	};
	usart_spi_init(SSD1306_USART_SPI);
	usart_spi_setup_device(SSD1306_USART_SPI, &device, spi_flags,
			SSD1306_CLOCK_SPEED, spi_select_id);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {
  4003ce:	2601      	movs	r6, #1
  4003d0:	ac04      	add	r4, sp, #16
  4003d2:	f844 6d04 	str.w	r6, [r4, #-4]!
		.id = SSD1306_CS_PIN,
	};
	spi_master_init(SSD1306_SPI);
  4003d6:	2000      	movs	r0, #0
  4003d8:	4b1e      	ldr	r3, [pc, #120]	; (400454 <ssd1306_init+0x9c>)
  4003da:	4798      	blx	r3
	spi_master_setup_device(SSD1306_SPI, &device, spi_flags,
  4003dc:	2500      	movs	r5, #0
  4003de:	9500      	str	r5, [sp, #0]
  4003e0:	4b1d      	ldr	r3, [pc, #116]	; (400458 <ssd1306_init+0xa0>)
  4003e2:	462a      	mov	r2, r5
  4003e4:	4621      	mov	r1, r4
  4003e6:	4628      	mov	r0, r5
  4003e8:	4c1c      	ldr	r4, [pc, #112]	; (40045c <ssd1306_init+0xa4>)
  4003ea:	47a0      	blx	r4
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4003ec:	602e      	str	r6, [r5, #0]

	// Initialize the interface
	ssd1306_interface_init();

	// 1/32 Duty (0x0F~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4003ee:	20a8      	movs	r0, #168	; 0xa8
  4003f0:	4c1b      	ldr	r4, [pc, #108]	; (400460 <ssd1306_init+0xa8>)
  4003f2:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4003f4:	201f      	movs	r0, #31
  4003f6:	47a0      	blx	r4

	// Shift Mapping RAM Counter (0x00~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4003f8:	20d3      	movs	r0, #211	; 0xd3
  4003fa:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4003fc:	4628      	mov	r0, r5
  4003fe:	47a0      	blx	r4

	// Set Mapping RAM Display Start Line (0x00~0x3F)
	ssd1306_write_command(SSD1306_CMD_SET_START_LINE(0x00));
  400400:	2040      	movs	r0, #64	; 0x40
  400402:	47a0      	blx	r4

	// Set Column Address 0 Mapped to SEG0
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400404:	20a1      	movs	r0, #161	; 0xa1
  400406:	47a0      	blx	r4

	// Set COM/Row Scan Scan from COM63 to 0
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400408:	20c8      	movs	r0, #200	; 0xc8
  40040a:	47a0      	blx	r4

	// Set COM Pins hardware configuration
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  40040c:	20da      	movs	r0, #218	; 0xda
  40040e:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400410:	2002      	movs	r0, #2
  400412:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400414:	2081      	movs	r0, #129	; 0x81
  400416:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400418:	208f      	movs	r0, #143	; 0x8f
  40041a:	47a0      	blx	r4

	ssd1306_set_contrast(0x8F);

	// Disable Entire display On
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  40041c:	20a4      	movs	r0, #164	; 0xa4
  40041e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400420:	20a6      	movs	r0, #166	; 0xa6
  400422:	47a0      	blx	r4

	ssd1306_display_invert_disable();

	// Set Display Clock Divide Ratio / Oscillator Frequency (Default => 0x80)
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400424:	20d5      	movs	r0, #213	; 0xd5
  400426:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400428:	2080      	movs	r0, #128	; 0x80
  40042a:	47a0      	blx	r4

	// Enable charge pump regulator
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  40042c:	208d      	movs	r0, #141	; 0x8d
  40042e:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400430:	2014      	movs	r0, #20
  400432:	47a0      	blx	r4

	// Set VCOMH Deselect Level
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400434:	20db      	movs	r0, #219	; 0xdb
  400436:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400438:	2040      	movs	r0, #64	; 0x40
  40043a:	47a0      	blx	r4

	// Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  40043c:	20d9      	movs	r0, #217	; 0xd9
  40043e:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400440:	20f1      	movs	r0, #241	; 0xf1
  400442:	47a0      	blx	r4
 *
 * This function will turn on the OLED.
 */
static inline void ssd1306_display_on(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400444:	20af      	movs	r0, #175	; 0xaf
  400446:	47a0      	blx	r4

	ssd1306_display_on();
}
  400448:	b004      	add	sp, #16
  40044a:	bd70      	pop	{r4, r5, r6, pc}
  40044c:	400e0e00 	.word	0x400e0e00
  400450:	20000001 	.word	0x20000001
  400454:	00400129 	.word	0x00400129
  400458:	00b71b00 	.word	0x00b71b00
  40045c:	0040017d 	.word	0x0040017d
  400460:	00400379 	.word	0x00400379

00400464 <ssd1306_write_text>:
/**
 * \brief Display text on OLED screen.
 * \param string String to display.
 */
void ssd1306_write_text(const char *string)
{
  400464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400468:	b085      	sub	sp, #20
  40046a:	9001      	str	r0, [sp, #4]
	uint8_t *char_ptr;
	uint8_t i;

	while (*string != 0) {
  40046c:	7803      	ldrb	r3, [r0, #0]
  40046e:	2b00      	cmp	r3, #0
  400470:	d040      	beq.n	4004f4 <ssd1306_write_text+0x90>
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
	spi_select_device(SSD1306_SPI, &device);
  400472:	f8df b094 	ldr.w	fp, [pc, #148]	; 400508 <ssd1306_write_text+0xa4>
  400476:	f8df a094 	ldr.w	sl, [pc, #148]	; 40050c <ssd1306_write_text+0xa8>
		if (*string < 0x7F) {
  40047a:	2b7e      	cmp	r3, #126	; 0x7e
  40047c:	d834      	bhi.n	4004e8 <ssd1306_write_text+0x84>
			char_ptr = font_table[*string - 32];
  40047e:	3b20      	subs	r3, #32
  400480:	4a1e      	ldr	r2, [pc, #120]	; (4004fc <ssd1306_write_text+0x98>)
  400482:	f852 8023 	ldr.w	r8, [r2, r3, lsl #2]
			for (i = 1; i <= char_ptr[0]; i++) {
  400486:	f898 3000 	ldrb.w	r3, [r8]
  40048a:	b1db      	cbz	r3, 4004c4 <ssd1306_write_text+0x60>
  40048c:	2401      	movs	r4, #1
  40048e:	2600      	movs	r6, #0
				ssd1306_write_data(char_ptr[i]);
  400490:	f818 9004 	ldrb.w	r9, [r8, r4]
	arch_ioport_set_pin_level(SSD1306_DC_PIN, true);
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400494:	2701      	movs	r7, #1
  400496:	ad04      	add	r5, sp, #16
  400498:	f845 7d04 	str.w	r7, [r5, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  40049c:	4629      	mov	r1, r5
  40049e:	4630      	mov	r0, r6
  4004a0:	47d8      	blx	fp
  4004a2:	f8ca 7030 	str.w	r7, [sl, #48]	; 0x30
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(Spi *p_spi, uint16_t data)
{
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4004a6:	f8c6 900c 	str.w	r9, [r6, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  4004aa:	2056      	movs	r0, #86	; 0x56
  4004ac:	4b14      	ldr	r3, [pc, #80]	; (400500 <ssd1306_write_text+0x9c>)
  4004ae:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  4004b0:	4629      	mov	r1, r5
  4004b2:	4630      	mov	r0, r6
  4004b4:	4b13      	ldr	r3, [pc, #76]	; (400504 <ssd1306_write_text+0xa0>)
  4004b6:	4798      	blx	r3
	uint8_t i;

	while (*string != 0) {
		if (*string < 0x7F) {
			char_ptr = font_table[*string - 32];
			for (i = 1; i <= char_ptr[0]; i++) {
  4004b8:	443c      	add	r4, r7
  4004ba:	b2e4      	uxtb	r4, r4
  4004bc:	f898 3000 	ldrb.w	r3, [r8]
  4004c0:	42a3      	cmp	r3, r4
  4004c2:	d2e5      	bcs.n	400490 <ssd1306_write_text+0x2c>
	arch_ioport_set_pin_level(SSD1306_DC_PIN, true);
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  4004c4:	2501      	movs	r5, #1
  4004c6:	ac04      	add	r4, sp, #16
  4004c8:	f844 5d04 	str.w	r5, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  4004cc:	4621      	mov	r1, r4
  4004ce:	2000      	movs	r0, #0
  4004d0:	47d8      	blx	fp
  4004d2:	f8ca 5030 	str.w	r5, [sl, #48]	; 0x30
  4004d6:	2500      	movs	r5, #0
  4004d8:	60ed      	str	r5, [r5, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  4004da:	2056      	movs	r0, #86	; 0x56
  4004dc:	4b08      	ldr	r3, [pc, #32]	; (400500 <ssd1306_write_text+0x9c>)
  4004de:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  4004e0:	4621      	mov	r1, r4
  4004e2:	4628      	mov	r0, r5
  4004e4:	4b07      	ldr	r3, [pc, #28]	; (400504 <ssd1306_write_text+0xa0>)
  4004e6:	4798      	blx	r3
void ssd1306_write_text(const char *string)
{
	uint8_t *char_ptr;
	uint8_t i;

	while (*string != 0) {
  4004e8:	9a01      	ldr	r2, [sp, #4]
  4004ea:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  4004ee:	9201      	str	r2, [sp, #4]
  4004f0:	2b00      	cmp	r3, #0
  4004f2:	d1c2      	bne.n	40047a <ssd1306_write_text+0x16>
			}
			ssd1306_write_data(0x00);
		}
			string++;
	}
}
  4004f4:	b005      	add	sp, #20
  4004f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4004fa:	bf00      	nop
  4004fc:	20000034 	.word	0x20000034
  400500:	20000001 	.word	0x20000001
  400504:	00400229 	.word	0x00400229
  400508:	004001fd 	.word	0x004001fd
  40050c:	400e0e00 	.word	0x400e0e00

00400510 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400510:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400512:	480e      	ldr	r0, [pc, #56]	; (40054c <sysclk_init+0x3c>)
  400514:	4b0e      	ldr	r3, [pc, #56]	; (400550 <sysclk_init+0x40>)
  400516:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400518:	213e      	movs	r1, #62	; 0x3e
  40051a:	2000      	movs	r0, #0
  40051c:	4b0d      	ldr	r3, [pc, #52]	; (400554 <sysclk_init+0x44>)
  40051e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400520:	4c0d      	ldr	r4, [pc, #52]	; (400558 <sysclk_init+0x48>)
  400522:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400524:	2800      	cmp	r0, #0
  400526:	d0fc      	beq.n	400522 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400528:	4b0c      	ldr	r3, [pc, #48]	; (40055c <sysclk_init+0x4c>)
  40052a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40052c:	4a0c      	ldr	r2, [pc, #48]	; (400560 <sysclk_init+0x50>)
  40052e:	4b0d      	ldr	r3, [pc, #52]	; (400564 <sysclk_init+0x54>)
  400530:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400532:	4c0d      	ldr	r4, [pc, #52]	; (400568 <sysclk_init+0x58>)
  400534:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400536:	2800      	cmp	r0, #0
  400538:	d0fc      	beq.n	400534 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40053a:	2010      	movs	r0, #16
  40053c:	4b0b      	ldr	r3, [pc, #44]	; (40056c <sysclk_init+0x5c>)
  40053e:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400540:	4b0b      	ldr	r3, [pc, #44]	; (400570 <sysclk_init+0x60>)
  400542:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400544:	4801      	ldr	r0, [pc, #4]	; (40054c <sysclk_init+0x3c>)
  400546:	4b02      	ldr	r3, [pc, #8]	; (400550 <sysclk_init+0x40>)
  400548:	4798      	blx	r3
  40054a:	bd10      	pop	{r4, pc}
  40054c:	07270e00 	.word	0x07270e00
  400550:	00400d75 	.word	0x00400d75
  400554:	00400ad5 	.word	0x00400ad5
  400558:	00400b29 	.word	0x00400b29
  40055c:	00400b39 	.word	0x00400b39
  400560:	20133f01 	.word	0x20133f01
  400564:	400e0400 	.word	0x400e0400
  400568:	00400b49 	.word	0x00400b49
  40056c:	00400a6d 	.word	0x00400a6d
  400570:	00400c61 	.word	0x00400c61

00400574 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400574:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400576:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40057a:	4b46      	ldr	r3, [pc, #280]	; (400694 <board_init+0x120>)
  40057c:	605a      	str	r2, [r3, #4]
  40057e:	200b      	movs	r0, #11
  400580:	4c45      	ldr	r4, [pc, #276]	; (400698 <board_init+0x124>)
  400582:	47a0      	blx	r4
  400584:	200c      	movs	r0, #12
  400586:	47a0      	blx	r4
  400588:	200d      	movs	r0, #13
  40058a:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  40058c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400590:	2013      	movs	r0, #19
  400592:	4c42      	ldr	r4, [pc, #264]	; (40069c <board_init+0x128>)
  400594:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400596:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40059a:	2014      	movs	r0, #20
  40059c:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  40059e:	4940      	ldr	r1, [pc, #256]	; (4006a0 <board_init+0x12c>)
  4005a0:	2023      	movs	r0, #35	; 0x23
  4005a2:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  4005a4:	493f      	ldr	r1, [pc, #252]	; (4006a4 <board_init+0x130>)
  4005a6:	204c      	movs	r0, #76	; 0x4c
  4005a8:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  4005aa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  4005ae:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  4005b2:	483d      	ldr	r0, [pc, #244]	; (4006a8 <board_init+0x134>)
  4005b4:	4b3d      	ldr	r3, [pc, #244]	; (4006ac <board_init+0x138>)
  4005b6:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  4005b8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4005bc:	2000      	movs	r0, #0
  4005be:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  4005c0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4005c4:	2008      	movs	r0, #8
  4005c6:	47a0      	blx	r4

	/* PWMH0 configuration */
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
  4005c8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4005cc:	2052      	movs	r0, #82	; 0x52
  4005ce:	47a0      	blx	r4
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  4005d0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005d4:	200c      	movs	r0, #12
  4005d6:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4005d8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005dc:	200d      	movs	r0, #13
  4005de:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4005e0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005e4:	200e      	movs	r0, #14
  4005e6:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  4005e8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005ec:	200b      	movs	r0, #11
  4005ee:	47a0      	blx	r4
#  endif
#endif /* CONF_BOARD_SPI */

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  4005f0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005f4:	2015      	movs	r0, #21
  4005f6:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  4005f8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4005fc:	2016      	movs	r0, #22
  4005fe:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
#endif

#ifdef CONF_BOARD_ADM3312_EN
	/* Configure ADM33312 enable pin */
	gpio_configure_pin(PIN_USART1_EN_IDX, PIN_USART1_EN_FLAGS);
  400600:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400604:	2017      	movs	r0, #23
  400606:	47a0      	blx	r4
	gpio_set_pin_low(PIN_USART1_EN_IDX);
  400608:	2017      	movs	r0, #23
  40060a:	4b29      	ldr	r3, [pc, #164]	; (4006b0 <board_init+0x13c>)
  40060c:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  40060e:	4d29      	ldr	r5, [pc, #164]	; (4006b4 <board_init+0x140>)
  400610:	4629      	mov	r1, r5
  400612:	2040      	movs	r0, #64	; 0x40
  400614:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  400616:	4629      	mov	r1, r5
  400618:	2041      	movs	r0, #65	; 0x41
  40061a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  40061c:	4629      	mov	r1, r5
  40061e:	2042      	movs	r0, #66	; 0x42
  400620:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  400622:	4629      	mov	r1, r5
  400624:	2043      	movs	r0, #67	; 0x43
  400626:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400628:	4629      	mov	r1, r5
  40062a:	2044      	movs	r0, #68	; 0x44
  40062c:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  40062e:	4629      	mov	r1, r5
  400630:	2045      	movs	r0, #69	; 0x45
  400632:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  400634:	4629      	mov	r1, r5
  400636:	2046      	movs	r0, #70	; 0x46
  400638:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  40063a:	4629      	mov	r1, r5
  40063c:	2047      	movs	r0, #71	; 0x47
  40063e:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  400640:	4629      	mov	r1, r5
  400642:	204b      	movs	r0, #75	; 0x4b
  400644:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  400646:	4629      	mov	r1, r5
  400648:	2048      	movs	r0, #72	; 0x48
  40064a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  40064c:	4629      	mov	r1, r5
  40064e:	204f      	movs	r0, #79	; 0x4f
  400650:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  400652:	4629      	mov	r1, r5
  400654:	2053      	movs	r0, #83	; 0x53
  400656:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400658:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  40065c:	204d      	movs	r0, #77	; 0x4d
  40065e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_ADS7843
	/* Configure Touchscreen SPI pins */
	gpio_configure_pin(BOARD_ADS7843_IRQ_GPIO,BOARD_ADS7843_IRQ_FLAGS);
  400660:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
  400664:	4629      	mov	r1, r5
  400666:	2010      	movs	r0, #16
  400668:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ADS7843_BUSY_GPIO, BOARD_ADS7843_BUSY_FLAGS);
  40066a:	4629      	mov	r1, r5
  40066c:	2011      	movs	r0, #17
  40066e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400670:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400674:	200c      	movs	r0, #12
  400676:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400678:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40067c:	200d      	movs	r0, #13
  40067e:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400680:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400684:	200e      	movs	r0, #14
  400686:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400688:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40068c:	200b      	movs	r0, #11
  40068e:	47a0      	blx	r4
  400690:	bd38      	pop	{r3, r4, r5, pc}
  400692:	bf00      	nop
  400694:	400e1450 	.word	0x400e1450
  400698:	00400b59 	.word	0x00400b59
  40069c:	004007c9 	.word	0x004007c9
  4006a0:	28000079 	.word	0x28000079
  4006a4:	28000059 	.word	0x28000059
  4006a8:	400e0e00 	.word	0x400e0e00
  4006ac:	004008ed 	.word	0x004008ed
  4006b0:	004007ad 	.word	0x004007ad
  4006b4:	08000001 	.word	0x08000001

004006b8 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4006b8:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4006ba:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4006be:	d02f      	beq.n	400720 <pio_set_peripheral+0x68>
  4006c0:	d807      	bhi.n	4006d2 <pio_set_peripheral+0x1a>
  4006c2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4006c6:	d014      	beq.n	4006f2 <pio_set_peripheral+0x3a>
  4006c8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4006cc:	d01e      	beq.n	40070c <pio_set_peripheral+0x54>
  4006ce:	b939      	cbnz	r1, 4006e0 <pio_set_peripheral+0x28>
  4006d0:	4770      	bx	lr
  4006d2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4006d6:	d036      	beq.n	400746 <pio_set_peripheral+0x8e>
  4006d8:	d804      	bhi.n	4006e4 <pio_set_peripheral+0x2c>
  4006da:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4006de:	d029      	beq.n	400734 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4006e0:	6042      	str	r2, [r0, #4]
  4006e2:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4006e4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4006e8:	d02d      	beq.n	400746 <pio_set_peripheral+0x8e>
  4006ea:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4006ee:	d02a      	beq.n	400746 <pio_set_peripheral+0x8e>
  4006f0:	e7f6      	b.n	4006e0 <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4006f2:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4006f4:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4006f6:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4006f8:	43d3      	mvns	r3, r2
  4006fa:	4021      	ands	r1, r4
  4006fc:	4019      	ands	r1, r3
  4006fe:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400700:	6f44      	ldr	r4, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400702:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400704:	4021      	ands	r1, r4
  400706:	400b      	ands	r3, r1
  400708:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40070a:	e01a      	b.n	400742 <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40070c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40070e:	4313      	orrs	r3, r2
  400710:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400712:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400714:	6f43      	ldr	r3, [r0, #116]	; 0x74
  400716:	400b      	ands	r3, r1
  400718:	ea23 0302 	bic.w	r3, r3, r2
  40071c:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40071e:	e7df      	b.n	4006e0 <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400720:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400722:	6f03      	ldr	r3, [r0, #112]	; 0x70
  400724:	400b      	ands	r3, r1
  400726:	ea23 0302 	bic.w	r3, r3, r2
  40072a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40072c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40072e:	4313      	orrs	r3, r2
  400730:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400732:	e7d5      	b.n	4006e0 <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400734:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400736:	4313      	orrs	r3, r2
  400738:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40073a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40073c:	4313      	orrs	r3, r2
  40073e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400740:	e7ce      	b.n	4006e0 <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400742:	6042      	str	r2, [r0, #4]
}
  400744:	bc10      	pop	{r4}
  400746:	4770      	bx	lr

00400748 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400748:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40074a:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40074e:	bf14      	ite	ne
  400750:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400752:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400754:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400758:	bf14      	ite	ne
  40075a:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  40075c:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  40075e:	f012 0f02 	tst.w	r2, #2
  400762:	d002      	beq.n	40076a <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400764:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400768:	e004      	b.n	400774 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40076a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40076e:	bf18      	it	ne
  400770:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400774:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400776:	6001      	str	r1, [r0, #0]
  400778:	4770      	bx	lr
  40077a:	bf00      	nop

0040077c <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  40077c:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40077e:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400780:	9c01      	ldr	r4, [sp, #4]
  400782:	b10c      	cbz	r4, 400788 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400784:	6641      	str	r1, [r0, #100]	; 0x64
  400786:	e000      	b.n	40078a <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400788:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40078a:	b10b      	cbz	r3, 400790 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  40078c:	6501      	str	r1, [r0, #80]	; 0x50
  40078e:	e000      	b.n	400792 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400790:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400792:	b10a      	cbz	r2, 400798 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400794:	6301      	str	r1, [r0, #48]	; 0x30
  400796:	e000      	b.n	40079a <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400798:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  40079a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40079c:	6001      	str	r1, [r0, #0]
}
  40079e:	bc10      	pop	{r4}
  4007a0:	4770      	bx	lr
  4007a2:	bf00      	nop

004007a4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4007a4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4007a6:	4770      	bx	lr

004007a8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4007a8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4007aa:	4770      	bx	lr

004007ac <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4007ac:	0943      	lsrs	r3, r0, #5
  4007ae:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4007b2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4007b6:	025b      	lsls	r3, r3, #9
void pio_set_pin_low(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 0. */
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  4007b8:	f000 001f 	and.w	r0, r0, #31
  4007bc:	2201      	movs	r2, #1
  4007be:	fa02 f000 	lsl.w	r0, r2, r0
  4007c2:	6358      	str	r0, [r3, #52]	; 0x34
  4007c4:	4770      	bx	lr
  4007c6:	bf00      	nop

004007c8 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4007c8:	b570      	push	{r4, r5, r6, lr}
  4007ca:	b082      	sub	sp, #8
  4007cc:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4007ce:	0943      	lsrs	r3, r0, #5
  4007d0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4007d4:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4007d8:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4007da:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4007de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4007e2:	d047      	beq.n	400874 <pio_configure_pin+0xac>
  4007e4:	d809      	bhi.n	4007fa <pio_configure_pin+0x32>
  4007e6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4007ea:	d021      	beq.n	400830 <pio_configure_pin+0x68>
  4007ec:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4007f0:	d02f      	beq.n	400852 <pio_configure_pin+0x8a>
  4007f2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4007f6:	d16f      	bne.n	4008d8 <pio_configure_pin+0x110>
  4007f8:	e009      	b.n	40080e <pio_configure_pin+0x46>
  4007fa:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4007fe:	d055      	beq.n	4008ac <pio_configure_pin+0xe4>
  400800:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400804:	d052      	beq.n	4008ac <pio_configure_pin+0xe4>
  400806:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40080a:	d044      	beq.n	400896 <pio_configure_pin+0xce>
  40080c:	e064      	b.n	4008d8 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  40080e:	f000 001f 	and.w	r0, r0, #31
  400812:	2601      	movs	r6, #1
  400814:	4086      	lsls	r6, r0
  400816:	4632      	mov	r2, r6
  400818:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40081c:	4620      	mov	r0, r4
  40081e:	4b30      	ldr	r3, [pc, #192]	; (4008e0 <pio_configure_pin+0x118>)
  400820:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400822:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400826:	bf14      	ite	ne
  400828:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40082a:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40082c:	2001      	movs	r0, #1
  40082e:	e054      	b.n	4008da <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400830:	f000 001f 	and.w	r0, r0, #31
  400834:	2601      	movs	r6, #1
  400836:	4086      	lsls	r6, r0
  400838:	4632      	mov	r2, r6
  40083a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40083e:	4620      	mov	r0, r4
  400840:	4b27      	ldr	r3, [pc, #156]	; (4008e0 <pio_configure_pin+0x118>)
  400842:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400844:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400848:	bf14      	ite	ne
  40084a:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40084c:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40084e:	2001      	movs	r0, #1
  400850:	e043      	b.n	4008da <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400852:	f000 001f 	and.w	r0, r0, #31
  400856:	2601      	movs	r6, #1
  400858:	4086      	lsls	r6, r0
  40085a:	4632      	mov	r2, r6
  40085c:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400860:	4620      	mov	r0, r4
  400862:	4b1f      	ldr	r3, [pc, #124]	; (4008e0 <pio_configure_pin+0x118>)
  400864:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400866:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40086a:	bf14      	ite	ne
  40086c:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40086e:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400870:	2001      	movs	r0, #1
  400872:	e032      	b.n	4008da <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400874:	f000 001f 	and.w	r0, r0, #31
  400878:	2601      	movs	r6, #1
  40087a:	4086      	lsls	r6, r0
  40087c:	4632      	mov	r2, r6
  40087e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400882:	4620      	mov	r0, r4
  400884:	4b16      	ldr	r3, [pc, #88]	; (4008e0 <pio_configure_pin+0x118>)
  400886:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400888:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40088c:	bf14      	ite	ne
  40088e:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400890:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400892:	2001      	movs	r0, #1
  400894:	e021      	b.n	4008da <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400896:	f000 011f 	and.w	r1, r0, #31
  40089a:	2601      	movs	r6, #1
  40089c:	462a      	mov	r2, r5
  40089e:	fa06 f101 	lsl.w	r1, r6, r1
  4008a2:	4620      	mov	r0, r4
  4008a4:	4b0f      	ldr	r3, [pc, #60]	; (4008e4 <pio_configure_pin+0x11c>)
  4008a6:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  4008a8:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  4008aa:	e016      	b.n	4008da <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4008ac:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  4008b0:	f000 011f 	and.w	r1, r0, #31
  4008b4:	2601      	movs	r6, #1
  4008b6:	ea05 0306 	and.w	r3, r5, r6
  4008ba:	9300      	str	r3, [sp, #0]
  4008bc:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4008c0:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4008c4:	bf14      	ite	ne
  4008c6:	2200      	movne	r2, #0
  4008c8:	2201      	moveq	r2, #1
  4008ca:	fa06 f101 	lsl.w	r1, r6, r1
  4008ce:	4620      	mov	r0, r4
  4008d0:	4c05      	ldr	r4, [pc, #20]	; (4008e8 <pio_configure_pin+0x120>)
  4008d2:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  4008d4:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  4008d6:	e000      	b.n	4008da <pio_configure_pin+0x112>

	default:
		return 0;
  4008d8:	2000      	movs	r0, #0
	}

	return 1;
}
  4008da:	b002      	add	sp, #8
  4008dc:	bd70      	pop	{r4, r5, r6, pc}
  4008de:	bf00      	nop
  4008e0:	004006b9 	.word	0x004006b9
  4008e4:	00400749 	.word	0x00400749
  4008e8:	0040077d 	.word	0x0040077d

004008ec <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  4008ec:	b570      	push	{r4, r5, r6, lr}
  4008ee:	b082      	sub	sp, #8
  4008f0:	4605      	mov	r5, r0
  4008f2:	460e      	mov	r6, r1
  4008f4:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4008f6:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4008fa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4008fe:	d038      	beq.n	400972 <pio_configure_pin_group+0x86>
  400900:	d809      	bhi.n	400916 <pio_configure_pin_group+0x2a>
  400902:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400906:	d01c      	beq.n	400942 <pio_configure_pin_group+0x56>
  400908:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40090c:	d025      	beq.n	40095a <pio_configure_pin_group+0x6e>
  40090e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400912:	d150      	bne.n	4009b6 <pio_configure_pin_group+0xca>
  400914:	e009      	b.n	40092a <pio_configure_pin_group+0x3e>
  400916:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40091a:	d03a      	beq.n	400992 <pio_configure_pin_group+0xa6>
  40091c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400920:	d037      	beq.n	400992 <pio_configure_pin_group+0xa6>
  400922:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400926:	d030      	beq.n	40098a <pio_configure_pin_group+0x9e>
  400928:	e045      	b.n	4009b6 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  40092a:	460a      	mov	r2, r1
  40092c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400930:	4b22      	ldr	r3, [pc, #136]	; (4009bc <pio_configure_pin_group+0xd0>)
  400932:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400934:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400938:	bf14      	ite	ne
  40093a:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40093c:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40093e:	2001      	movs	r0, #1
  400940:	e03a      	b.n	4009b8 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400942:	460a      	mov	r2, r1
  400944:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400948:	4b1c      	ldr	r3, [pc, #112]	; (4009bc <pio_configure_pin_group+0xd0>)
  40094a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40094c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400950:	bf14      	ite	ne
  400952:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400954:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400956:	2001      	movs	r0, #1
  400958:	e02e      	b.n	4009b8 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  40095a:	460a      	mov	r2, r1
  40095c:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400960:	4b16      	ldr	r3, [pc, #88]	; (4009bc <pio_configure_pin_group+0xd0>)
  400962:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400964:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400968:	bf14      	ite	ne
  40096a:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  40096c:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40096e:	2001      	movs	r0, #1
  400970:	e022      	b.n	4009b8 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400972:	460a      	mov	r2, r1
  400974:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400978:	4b10      	ldr	r3, [pc, #64]	; (4009bc <pio_configure_pin_group+0xd0>)
  40097a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40097c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400980:	bf14      	ite	ne
  400982:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400984:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400986:	2001      	movs	r0, #1
  400988:	e016      	b.n	4009b8 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  40098a:	4b0d      	ldr	r3, [pc, #52]	; (4009c0 <pio_configure_pin_group+0xd4>)
  40098c:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  40098e:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  400990:	e012      	b.n	4009b8 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  400992:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
  400996:	f004 0301 	and.w	r3, r4, #1
  40099a:	9300      	str	r3, [sp, #0]
  40099c:	f3c4 0380 	ubfx	r3, r4, #2, #1
  4009a0:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4009a4:	bf14      	ite	ne
  4009a6:	2200      	movne	r2, #0
  4009a8:	2201      	moveq	r2, #1
  4009aa:	4631      	mov	r1, r6
  4009ac:	4628      	mov	r0, r5
  4009ae:	4c05      	ldr	r4, [pc, #20]	; (4009c4 <pio_configure_pin_group+0xd8>)
  4009b0:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  4009b2:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  4009b4:	e000      	b.n	4009b8 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  4009b6:	2000      	movs	r0, #0
	}

	return 1;
}
  4009b8:	b002      	add	sp, #8
  4009ba:	bd70      	pop	{r4, r5, r6, pc}
  4009bc:	004006b9 	.word	0x004006b9
  4009c0:	00400749 	.word	0x00400749
  4009c4:	0040077d 	.word	0x0040077d

004009c8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4009c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4009cc:	4681      	mov	r9, r0
  4009ce:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4009d0:	4b12      	ldr	r3, [pc, #72]	; (400a1c <pio_handler_process+0x54>)
  4009d2:	4798      	blx	r3
  4009d4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4009d6:	4648      	mov	r0, r9
  4009d8:	4b11      	ldr	r3, [pc, #68]	; (400a20 <pio_handler_process+0x58>)
  4009da:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4009dc:	4005      	ands	r5, r0
  4009de:	d013      	beq.n	400a08 <pio_handler_process+0x40>
  4009e0:	4c10      	ldr	r4, [pc, #64]	; (400a24 <pio_handler_process+0x5c>)
  4009e2:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  4009e6:	6823      	ldr	r3, [r4, #0]
  4009e8:	4543      	cmp	r3, r8
  4009ea:	d108      	bne.n	4009fe <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4009ec:	6861      	ldr	r1, [r4, #4]
  4009ee:	4229      	tst	r1, r5
  4009f0:	d005      	beq.n	4009fe <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4009f2:	68e3      	ldr	r3, [r4, #12]
  4009f4:	4640      	mov	r0, r8
  4009f6:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4009f8:	6863      	ldr	r3, [r4, #4]
  4009fa:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4009fe:	42b4      	cmp	r4, r6
  400a00:	d002      	beq.n	400a08 <pio_handler_process+0x40>
  400a02:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  400a04:	2d00      	cmp	r5, #0
  400a06:	d1ee      	bne.n	4009e6 <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400a08:	4b07      	ldr	r3, [pc, #28]	; (400a28 <pio_handler_process+0x60>)
  400a0a:	681b      	ldr	r3, [r3, #0]
  400a0c:	b123      	cbz	r3, 400a18 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400a0e:	4b07      	ldr	r3, [pc, #28]	; (400a2c <pio_handler_process+0x64>)
  400a10:	681b      	ldr	r3, [r3, #0]
  400a12:	b10b      	cbz	r3, 400a18 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400a14:	4648      	mov	r0, r9
  400a16:	4798      	blx	r3
  400a18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400a1c:	004007a5 	.word	0x004007a5
  400a20:	004007a9 	.word	0x004007a9
  400a24:	20000ca4 	.word	0x20000ca4
  400a28:	20000d4c 	.word	0x20000d4c
  400a2c:	20000ca0 	.word	0x20000ca0

00400a30 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400a30:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400a32:	210b      	movs	r1, #11
  400a34:	4801      	ldr	r0, [pc, #4]	; (400a3c <PIOA_Handler+0xc>)
  400a36:	4b02      	ldr	r3, [pc, #8]	; (400a40 <PIOA_Handler+0x10>)
  400a38:	4798      	blx	r3
  400a3a:	bd08      	pop	{r3, pc}
  400a3c:	400e0e00 	.word	0x400e0e00
  400a40:	004009c9 	.word	0x004009c9

00400a44 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400a44:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400a46:	210c      	movs	r1, #12
  400a48:	4801      	ldr	r0, [pc, #4]	; (400a50 <PIOB_Handler+0xc>)
  400a4a:	4b02      	ldr	r3, [pc, #8]	; (400a54 <PIOB_Handler+0x10>)
  400a4c:	4798      	blx	r3
  400a4e:	bd08      	pop	{r3, pc}
  400a50:	400e1000 	.word	0x400e1000
  400a54:	004009c9 	.word	0x004009c9

00400a58 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400a58:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400a5a:	210d      	movs	r1, #13
  400a5c:	4801      	ldr	r0, [pc, #4]	; (400a64 <PIOC_Handler+0xc>)
  400a5e:	4b02      	ldr	r3, [pc, #8]	; (400a68 <PIOC_Handler+0x10>)
  400a60:	4798      	blx	r3
  400a62:	bd08      	pop	{r3, pc}
  400a64:	400e1200 	.word	0x400e1200
  400a68:	004009c9 	.word	0x004009c9

00400a6c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400a6c:	4a18      	ldr	r2, [pc, #96]	; (400ad0 <pmc_switch_mck_to_pllack+0x64>)
  400a6e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400a70:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400a74:	4318      	orrs	r0, r3
  400a76:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400a78:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400a7a:	f013 0f08 	tst.w	r3, #8
  400a7e:	d003      	beq.n	400a88 <pmc_switch_mck_to_pllack+0x1c>
  400a80:	e009      	b.n	400a96 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400a82:	3b01      	subs	r3, #1
  400a84:	d103      	bne.n	400a8e <pmc_switch_mck_to_pllack+0x22>
  400a86:	e01e      	b.n	400ac6 <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400a88:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400a8c:	4910      	ldr	r1, [pc, #64]	; (400ad0 <pmc_switch_mck_to_pllack+0x64>)
  400a8e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400a90:	f012 0f08 	tst.w	r2, #8
  400a94:	d0f5      	beq.n	400a82 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400a96:	4a0e      	ldr	r2, [pc, #56]	; (400ad0 <pmc_switch_mck_to_pllack+0x64>)
  400a98:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400a9a:	f023 0303 	bic.w	r3, r3, #3
  400a9e:	f043 0302 	orr.w	r3, r3, #2
  400aa2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400aa4:	6e90      	ldr	r0, [r2, #104]	; 0x68
  400aa6:	f010 0008 	ands.w	r0, r0, #8
  400aaa:	d004      	beq.n	400ab6 <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400aac:	2000      	movs	r0, #0
  400aae:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ab0:	3b01      	subs	r3, #1
  400ab2:	d103      	bne.n	400abc <pmc_switch_mck_to_pllack+0x50>
  400ab4:	e009      	b.n	400aca <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ab6:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400aba:	4905      	ldr	r1, [pc, #20]	; (400ad0 <pmc_switch_mck_to_pllack+0x64>)
  400abc:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400abe:	f012 0f08 	tst.w	r2, #8
  400ac2:	d0f5      	beq.n	400ab0 <pmc_switch_mck_to_pllack+0x44>
  400ac4:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400ac6:	2001      	movs	r0, #1
  400ac8:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400aca:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400acc:	4770      	bx	lr
  400ace:	bf00      	nop
  400ad0:	400e0400 	.word	0x400e0400

00400ad4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ad4:	b138      	cbz	r0, 400ae6 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ad6:	4911      	ldr	r1, [pc, #68]	; (400b1c <pmc_switch_mainck_to_xtal+0x48>)
  400ad8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400ada:	4a11      	ldr	r2, [pc, #68]	; (400b20 <pmc_switch_mainck_to_xtal+0x4c>)
  400adc:	401a      	ands	r2, r3
  400ade:	4b11      	ldr	r3, [pc, #68]	; (400b24 <pmc_switch_mainck_to_xtal+0x50>)
  400ae0:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ae2:	620b      	str	r3, [r1, #32]
  400ae4:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ae6:	480d      	ldr	r0, [pc, #52]	; (400b1c <pmc_switch_mainck_to_xtal+0x48>)
  400ae8:	6a02      	ldr	r2, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400aea:	0209      	lsls	r1, r1, #8
  400aec:	b289      	uxth	r1, r1
  400aee:	f422 135c 	bic.w	r3, r2, #3604480	; 0x370000
  400af2:	f023 0303 	bic.w	r3, r3, #3
  400af6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400afa:	f043 0301 	orr.w	r3, r3, #1
  400afe:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400b00:	6203      	str	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400b02:	4602      	mov	r2, r0
  400b04:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400b06:	f013 0f01 	tst.w	r3, #1
  400b0a:	d0fb      	beq.n	400b04 <pmc_switch_mainck_to_xtal+0x30>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400b0c:	4a03      	ldr	r2, [pc, #12]	; (400b1c <pmc_switch_mainck_to_xtal+0x48>)
  400b0e:	6a13      	ldr	r3, [r2, #32]
  400b10:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400b14:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400b18:	6213      	str	r3, [r2, #32]
  400b1a:	4770      	bx	lr
  400b1c:	400e0400 	.word	0x400e0400
  400b20:	fec8fffc 	.word	0xfec8fffc
  400b24:	01370002 	.word	0x01370002

00400b28 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400b28:	4b02      	ldr	r3, [pc, #8]	; (400b34 <pmc_osc_is_ready_mainck+0xc>)
  400b2a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400b2c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400b30:	4770      	bx	lr
  400b32:	bf00      	nop
  400b34:	400e0400 	.word	0x400e0400

00400b38 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400b38:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400b3c:	4b01      	ldr	r3, [pc, #4]	; (400b44 <pmc_disable_pllack+0xc>)
  400b3e:	629a      	str	r2, [r3, #40]	; 0x28
  400b40:	4770      	bx	lr
  400b42:	bf00      	nop
  400b44:	400e0400 	.word	0x400e0400

00400b48 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400b48:	4b02      	ldr	r3, [pc, #8]	; (400b54 <pmc_is_locked_pllack+0xc>)
  400b4a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400b4c:	f000 0002 	and.w	r0, r0, #2
  400b50:	4770      	bx	lr
  400b52:	bf00      	nop
  400b54:	400e0400 	.word	0x400e0400

00400b58 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400b58:	2822      	cmp	r0, #34	; 0x22
  400b5a:	d81e      	bhi.n	400b9a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400b5c:	281f      	cmp	r0, #31
  400b5e:	d80c      	bhi.n	400b7a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400b60:	4b11      	ldr	r3, [pc, #68]	; (400ba8 <pmc_enable_periph_clk+0x50>)
  400b62:	699a      	ldr	r2, [r3, #24]
  400b64:	2301      	movs	r3, #1
  400b66:	4083      	lsls	r3, r0
  400b68:	4393      	bics	r3, r2
  400b6a:	d018      	beq.n	400b9e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400b6c:	2301      	movs	r3, #1
  400b6e:	fa03 f000 	lsl.w	r0, r3, r0
  400b72:	4b0d      	ldr	r3, [pc, #52]	; (400ba8 <pmc_enable_periph_clk+0x50>)
  400b74:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400b76:	2000      	movs	r0, #0
  400b78:	4770      	bx	lr
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400b7a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400b7c:	4b0a      	ldr	r3, [pc, #40]	; (400ba8 <pmc_enable_periph_clk+0x50>)
  400b7e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400b82:	2301      	movs	r3, #1
  400b84:	4083      	lsls	r3, r0
  400b86:	4393      	bics	r3, r2
  400b88:	d00b      	beq.n	400ba2 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400b8a:	2301      	movs	r3, #1
  400b8c:	fa03 f000 	lsl.w	r0, r3, r0
  400b90:	4b05      	ldr	r3, [pc, #20]	; (400ba8 <pmc_enable_periph_clk+0x50>)
  400b92:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  400b96:	2000      	movs	r0, #0
  400b98:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400b9a:	2001      	movs	r0, #1
  400b9c:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400b9e:	2000      	movs	r0, #0
  400ba0:	4770      	bx	lr
  400ba2:	2000      	movs	r0, #0
}
  400ba4:	4770      	bx	lr
  400ba6:	bf00      	nop
  400ba8:	400e0400 	.word	0x400e0400

00400bac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400bac:	e7fe      	b.n	400bac <Dummy_Handler>
  400bae:	bf00      	nop

00400bb0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400bb0:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  400bb2:	4b20      	ldr	r3, [pc, #128]	; (400c34 <Reset_Handler+0x84>)
  400bb4:	4a20      	ldr	r2, [pc, #128]	; (400c38 <Reset_Handler+0x88>)
  400bb6:	429a      	cmp	r2, r3
  400bb8:	d912      	bls.n	400be0 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
  400bba:	4b20      	ldr	r3, [pc, #128]	; (400c3c <Reset_Handler+0x8c>)
  400bbc:	4a1d      	ldr	r2, [pc, #116]	; (400c34 <Reset_Handler+0x84>)
  400bbe:	429a      	cmp	r2, r3
  400bc0:	d21e      	bcs.n	400c00 <Reset_Handler+0x50>
  400bc2:	4611      	mov	r1, r2
  400bc4:	3b01      	subs	r3, #1
  400bc6:	1a9b      	subs	r3, r3, r2
  400bc8:	f023 0303 	bic.w	r3, r3, #3
  400bcc:	3304      	adds	r3, #4
  400bce:	4a1a      	ldr	r2, [pc, #104]	; (400c38 <Reset_Handler+0x88>)
  400bd0:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  400bd2:	f852 0b04 	ldr.w	r0, [r2], #4
  400bd6:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  400bda:	429a      	cmp	r2, r3
  400bdc:	d1f9      	bne.n	400bd2 <Reset_Handler+0x22>
  400bde:	e00f      	b.n	400c00 <Reset_Handler+0x50>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  400be0:	4b14      	ldr	r3, [pc, #80]	; (400c34 <Reset_Handler+0x84>)
  400be2:	4a15      	ldr	r2, [pc, #84]	; (400c38 <Reset_Handler+0x88>)
  400be4:	429a      	cmp	r2, r3
  400be6:	d20b      	bcs.n	400c00 <Reset_Handler+0x50>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  400be8:	4b14      	ldr	r3, [pc, #80]	; (400c3c <Reset_Handler+0x8c>)
  400bea:	4a12      	ldr	r2, [pc, #72]	; (400c34 <Reset_Handler+0x84>)
  400bec:	1a9a      	subs	r2, r3, r2
  400bee:	4814      	ldr	r0, [pc, #80]	; (400c40 <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400bf0:	1811      	adds	r1, r2, r0
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400bf2:	b12a      	cbz	r2, 400c00 <Reset_Handler+0x50>
			*pDest-- = *pSrc--;
  400bf4:	f851 2904 	ldr.w	r2, [r1], #-4
  400bf8:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  400bfc:	4281      	cmp	r1, r0
  400bfe:	d1f9      	bne.n	400bf4 <Reset_Handler+0x44>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  400c00:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400c02:	4b10      	ldr	r3, [pc, #64]	; (400c44 <Reset_Handler+0x94>)
  400c04:	4a10      	ldr	r2, [pc, #64]	; (400c48 <Reset_Handler+0x98>)
  400c06:	429a      	cmp	r2, r3
  400c08:	d20b      	bcs.n	400c22 <Reset_Handler+0x72>
  400c0a:	1d13      	adds	r3, r2, #4
  400c0c:	4a0f      	ldr	r2, [pc, #60]	; (400c4c <Reset_Handler+0x9c>)
  400c0e:	1ad2      	subs	r2, r2, r3
  400c10:	f022 0203 	bic.w	r2, r2, #3
  400c14:	441a      	add	r2, r3
  400c16:	3b04      	subs	r3, #4
		*pDest++ = 0;
  400c18:	2100      	movs	r1, #0
  400c1a:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  400c1e:	429a      	cmp	r2, r3
  400c20:	d1fb      	bne.n	400c1a <Reset_Handler+0x6a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  400c22:	4b0b      	ldr	r3, [pc, #44]	; (400c50 <Reset_Handler+0xa0>)
  400c24:	4a0b      	ldr	r2, [pc, #44]	; (400c54 <Reset_Handler+0xa4>)
  400c26:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  400c28:	4b0b      	ldr	r3, [pc, #44]	; (400c58 <Reset_Handler+0xa8>)
  400c2a:	4798      	blx	r3

	/* Branch to main function */
	main();
  400c2c:	4b0b      	ldr	r3, [pc, #44]	; (400c5c <Reset_Handler+0xac>)
  400c2e:	4798      	blx	r3
  400c30:	e7fe      	b.n	400c30 <Reset_Handler+0x80>
  400c32:	bf00      	nop
  400c34:	20000000 	.word	0x20000000
  400c38:	00405e20 	.word	0x00405e20
  400c3c:	20000c84 	.word	0x20000c84
  400c40:	00405e1c 	.word	0x00405e1c
  400c44:	20000d54 	.word	0x20000d54
  400c48:	20000c84 	.word	0x20000c84
  400c4c:	20000d57 	.word	0x20000d57
  400c50:	e000ed00 	.word	0xe000ed00
  400c54:	00400000 	.word	0x00400000
  400c58:	0040107d 	.word	0x0040107d
  400c5c:	00400e81 	.word	0x00400e81

00400c60 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  400c60:	4b3d      	ldr	r3, [pc, #244]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400c62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400c64:	f003 0303 	and.w	r3, r3, #3
  400c68:	2b03      	cmp	r3, #3
  400c6a:	d85d      	bhi.n	400d28 <SystemCoreClockUpdate+0xc8>
  400c6c:	e8df f003 	tbb	[pc, r3]
  400c70:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400c74:	4b39      	ldr	r3, [pc, #228]	; (400d5c <SystemCoreClockUpdate+0xfc>)
  400c76:	695b      	ldr	r3, [r3, #20]
  400c78:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400c7c:	bf14      	ite	ne
  400c7e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400c82:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400c86:	4b36      	ldr	r3, [pc, #216]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400c88:	601a      	str	r2, [r3, #0]
  400c8a:	e04d      	b.n	400d28 <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400c8c:	4b32      	ldr	r3, [pc, #200]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400c8e:	6a1b      	ldr	r3, [r3, #32]
  400c90:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400c94:	d003      	beq.n	400c9e <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400c96:	4a33      	ldr	r2, [pc, #204]	; (400d64 <SystemCoreClockUpdate+0x104>)
  400c98:	4b31      	ldr	r3, [pc, #196]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400c9a:	601a      	str	r2, [r3, #0]
  400c9c:	e044      	b.n	400d28 <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400c9e:	4a32      	ldr	r2, [pc, #200]	; (400d68 <SystemCoreClockUpdate+0x108>)
  400ca0:	4b2f      	ldr	r3, [pc, #188]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400ca2:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400ca4:	4b2c      	ldr	r3, [pc, #176]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400ca6:	6a1b      	ldr	r3, [r3, #32]
  400ca8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400cac:	2b10      	cmp	r3, #16
  400cae:	d002      	beq.n	400cb6 <SystemCoreClockUpdate+0x56>
  400cb0:	2b20      	cmp	r3, #32
  400cb2:	d004      	beq.n	400cbe <SystemCoreClockUpdate+0x5e>
  400cb4:	e038      	b.n	400d28 <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400cb6:	4a2d      	ldr	r2, [pc, #180]	; (400d6c <SystemCoreClockUpdate+0x10c>)
  400cb8:	4b29      	ldr	r3, [pc, #164]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cba:	601a      	str	r2, [r3, #0]
			break;
  400cbc:	e034      	b.n	400d28 <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400cbe:	4a29      	ldr	r2, [pc, #164]	; (400d64 <SystemCoreClockUpdate+0x104>)
  400cc0:	4b27      	ldr	r3, [pc, #156]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cc2:	601a      	str	r2, [r3, #0]
			break;
  400cc4:	e030      	b.n	400d28 <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400cc6:	4b24      	ldr	r3, [pc, #144]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400cc8:	6a1b      	ldr	r3, [r3, #32]
  400cca:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400cce:	d003      	beq.n	400cd8 <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400cd0:	4a24      	ldr	r2, [pc, #144]	; (400d64 <SystemCoreClockUpdate+0x104>)
  400cd2:	4b23      	ldr	r3, [pc, #140]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cd4:	601a      	str	r2, [r3, #0]
  400cd6:	e012      	b.n	400cfe <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400cd8:	4a23      	ldr	r2, [pc, #140]	; (400d68 <SystemCoreClockUpdate+0x108>)
  400cda:	4b21      	ldr	r3, [pc, #132]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cdc:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400cde:	4b1e      	ldr	r3, [pc, #120]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400ce0:	6a1b      	ldr	r3, [r3, #32]
  400ce2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400ce6:	2b10      	cmp	r3, #16
  400ce8:	d002      	beq.n	400cf0 <SystemCoreClockUpdate+0x90>
  400cea:	2b20      	cmp	r3, #32
  400cec:	d004      	beq.n	400cf8 <SystemCoreClockUpdate+0x98>
  400cee:	e006      	b.n	400cfe <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400cf0:	4a1e      	ldr	r2, [pc, #120]	; (400d6c <SystemCoreClockUpdate+0x10c>)
  400cf2:	4b1b      	ldr	r3, [pc, #108]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cf4:	601a      	str	r2, [r3, #0]
					break;
  400cf6:	e002      	b.n	400cfe <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400cf8:	4a1a      	ldr	r2, [pc, #104]	; (400d64 <SystemCoreClockUpdate+0x104>)
  400cfa:	4b19      	ldr	r3, [pc, #100]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400cfc:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400cfe:	4b16      	ldr	r3, [pc, #88]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400d00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400d02:	f003 0303 	and.w	r3, r3, #3
  400d06:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400d08:	4a13      	ldr	r2, [pc, #76]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400d0a:	bf07      	ittee	eq
  400d0c:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400d0e:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400d10:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400d12:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  400d14:	4812      	ldr	r0, [pc, #72]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400d16:	f3c3 410a 	ubfx	r1, r3, #16, #11
  400d1a:	6803      	ldr	r3, [r0, #0]
  400d1c:	fb01 3303 	mla	r3, r1, r3, r3
  400d20:	b2d2      	uxtb	r2, r2
  400d22:	fbb3 f3f2 	udiv	r3, r3, r2
  400d26:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  400d28:	4b0b      	ldr	r3, [pc, #44]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400d2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400d2c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400d30:	2b70      	cmp	r3, #112	; 0x70
  400d32:	d107      	bne.n	400d44 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  400d34:	4a0a      	ldr	r2, [pc, #40]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400d36:	6813      	ldr	r3, [r2, #0]
  400d38:	490d      	ldr	r1, [pc, #52]	; (400d70 <SystemCoreClockUpdate+0x110>)
  400d3a:	fba1 1303 	umull	r1, r3, r1, r3
  400d3e:	085b      	lsrs	r3, r3, #1
  400d40:	6013      	str	r3, [r2, #0]
  400d42:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400d44:	4b04      	ldr	r3, [pc, #16]	; (400d58 <SystemCoreClockUpdate+0xf8>)
  400d46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  400d48:	4905      	ldr	r1, [pc, #20]	; (400d60 <SystemCoreClockUpdate+0x100>)
  400d4a:	f3c3 1202 	ubfx	r2, r3, #4, #3
  400d4e:	680b      	ldr	r3, [r1, #0]
  400d50:	40d3      	lsrs	r3, r2
  400d52:	600b      	str	r3, [r1, #0]
  400d54:	4770      	bx	lr
  400d56:	bf00      	nop
  400d58:	400e0400 	.word	0x400e0400
  400d5c:	400e1410 	.word	0x400e1410
  400d60:	20000408 	.word	0x20000408
  400d64:	00b71b00 	.word	0x00b71b00
  400d68:	003d0900 	.word	0x003d0900
  400d6c:	007a1200 	.word	0x007a1200
  400d70:	aaaaaaab 	.word	0xaaaaaaab

00400d74 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400d74:	4b1a      	ldr	r3, [pc, #104]	; (400de0 <system_init_flash+0x6c>)
  400d76:	4298      	cmp	r0, r3
  400d78:	d807      	bhi.n	400d8a <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400d7a:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400d7e:	4a19      	ldr	r2, [pc, #100]	; (400de4 <system_init_flash+0x70>)
  400d80:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400d82:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400d86:	6013      	str	r3, [r2, #0]
  400d88:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400d8a:	4b17      	ldr	r3, [pc, #92]	; (400de8 <system_init_flash+0x74>)
  400d8c:	4298      	cmp	r0, r3
  400d8e:	d806      	bhi.n	400d9e <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400d90:	4b16      	ldr	r3, [pc, #88]	; (400dec <system_init_flash+0x78>)
  400d92:	4a14      	ldr	r2, [pc, #80]	; (400de4 <system_init_flash+0x70>)
  400d94:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400d96:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400d9a:	6013      	str	r3, [r2, #0]
  400d9c:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400d9e:	4b14      	ldr	r3, [pc, #80]	; (400df0 <system_init_flash+0x7c>)
  400da0:	4298      	cmp	r0, r3
  400da2:	d806      	bhi.n	400db2 <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400da4:	4b13      	ldr	r3, [pc, #76]	; (400df4 <system_init_flash+0x80>)
  400da6:	4a0f      	ldr	r2, [pc, #60]	; (400de4 <system_init_flash+0x70>)
  400da8:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400daa:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400dae:	6013      	str	r3, [r2, #0]
  400db0:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400db2:	4b11      	ldr	r3, [pc, #68]	; (400df8 <system_init_flash+0x84>)
  400db4:	4298      	cmp	r0, r3
  400db6:	d806      	bhi.n	400dc6 <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400db8:	4b10      	ldr	r3, [pc, #64]	; (400dfc <system_init_flash+0x88>)
  400dba:	4a0a      	ldr	r2, [pc, #40]	; (400de4 <system_init_flash+0x70>)
  400dbc:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400dbe:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400dc2:	6013      	str	r3, [r2, #0]
  400dc4:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400dc6:	4b0e      	ldr	r3, [pc, #56]	; (400e00 <system_init_flash+0x8c>)
  400dc8:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400dca:	bf94      	ite	ls
  400dcc:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400dd0:	4b0c      	ldrhi	r3, [pc, #48]	; (400e04 <system_init_flash+0x90>)
  400dd2:	4a04      	ldr	r2, [pc, #16]	; (400de4 <system_init_flash+0x70>)
  400dd4:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400dd6:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400dda:	6013      	str	r3, [r2, #0]
  400ddc:	4770      	bx	lr
  400dde:	bf00      	nop
  400de0:	01312cff 	.word	0x01312cff
  400de4:	400e0a00 	.word	0x400e0a00
  400de8:	026259ff 	.word	0x026259ff
  400dec:	04000100 	.word	0x04000100
  400df0:	039386ff 	.word	0x039386ff
  400df4:	04000200 	.word	0x04000200
  400df8:	04c4b3ff 	.word	0x04c4b3ff
  400dfc:	04000300 	.word	0x04000300
  400e00:	05f5e0ff 	.word	0x05f5e0ff
  400e04:	04000500 	.word	0x04000500

00400e08 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400e08:	4b09      	ldr	r3, [pc, #36]	; (400e30 <_sbrk+0x28>)
  400e0a:	681b      	ldr	r3, [r3, #0]
  400e0c:	b913      	cbnz	r3, 400e14 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  400e0e:	4a09      	ldr	r2, [pc, #36]	; (400e34 <_sbrk+0x2c>)
  400e10:	4b07      	ldr	r3, [pc, #28]	; (400e30 <_sbrk+0x28>)
  400e12:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  400e14:	4b06      	ldr	r3, [pc, #24]	; (400e30 <_sbrk+0x28>)
  400e16:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400e18:	181a      	adds	r2, r3, r0
  400e1a:	4907      	ldr	r1, [pc, #28]	; (400e38 <_sbrk+0x30>)
  400e1c:	4291      	cmp	r1, r2
  400e1e:	db04      	blt.n	400e2a <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  400e20:	4610      	mov	r0, r2
  400e22:	4a03      	ldr	r2, [pc, #12]	; (400e30 <_sbrk+0x28>)
  400e24:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400e26:	4618      	mov	r0, r3
  400e28:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  400e2a:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  400e2e:	4770      	bx	lr
  400e30:	20000d14 	.word	0x20000d14
  400e34:	20003d58 	.word	0x20003d58
  400e38:	20027ffc 	.word	0x20027ffc

00400e3c <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
static void ssd1306_write_command(uint8_t command)
{
  400e3c:	b570      	push	{r4, r5, r6, lr}
  400e3e:	b082      	sub	sp, #8
  400e40:	4606      	mov	r6, r0
	usart_spi_select_device(SSD1306_USART_SPI, &device);
	ssd1306_sel_cmd();
	usart_spi_transmit(SSD1306_USART_SPI, command);
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400e42:	2501      	movs	r5, #1
  400e44:	ac02      	add	r4, sp, #8
  400e46:	f844 5d04 	str.w	r5, [r4, #-4]!
	spi_select_device(SSD1306_SPI, &device);
  400e4a:	4621      	mov	r1, r4
  400e4c:	2000      	movs	r0, #0
  400e4e:	4b07      	ldr	r3, [pc, #28]	; (400e6c <ssd1306_write_command+0x30>)
  400e50:	4798      	blx	r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400e52:	4b07      	ldr	r3, [pc, #28]	; (400e70 <ssd1306_write_command+0x34>)
  400e54:	635d      	str	r5, [r3, #52]	; 0x34
  400e56:	2500      	movs	r5, #0
  400e58:	60ee      	str	r6, [r5, #12]
	ssd1306_sel_cmd();
	spi_write_single(SSD1306_SPI, command);
	delay_us(SSD1306_LATENCY); // At least 3us
  400e5a:	2056      	movs	r0, #86	; 0x56
  400e5c:	4b05      	ldr	r3, [pc, #20]	; (400e74 <ssd1306_write_command+0x38>)
  400e5e:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400e60:	4621      	mov	r1, r4
  400e62:	4628      	mov	r0, r5
  400e64:	4b04      	ldr	r3, [pc, #16]	; (400e78 <ssd1306_write_command+0x3c>)
  400e66:	4798      	blx	r3
#endif
}
  400e68:	b002      	add	sp, #8
  400e6a:	bd70      	pop	{r4, r5, r6, pc}
  400e6c:	004001fd 	.word	0x004001fd
  400e70:	400e0e00 	.word	0x400e0e00
  400e74:	20000001 	.word	0x20000001
  400e78:	00400229 	.word	0x00400229
  400e7c:	00000000 	.word	0x00000000

00400e80 <main>:
#include <asf.h>
#include <string.h>

int main(void)
{
  400e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400e84:	b097      	sub	sp, #92	; 0x5c

	sysclk_init();
  400e86:	4b6c      	ldr	r3, [pc, #432]	; (401038 <main+0x1b8>)
  400e88:	4798      	blx	r3
	board_init();
  400e8a:	4b6c      	ldr	r3, [pc, #432]	; (40103c <main+0x1bc>)
  400e8c:	4798      	blx	r3

	// Initialize SPI and SSD1306 controller.
	ssd1306_init();
  400e8e:	4b6c      	ldr	r3, [pc, #432]	; (401040 <main+0x1c0>)
  400e90:	4798      	blx	r3
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
	spi_select_device(SSD1306_SPI, &device);
  400e92:	f8df 81e0 	ldr.w	r8, [pc, #480]	; 401074 <main+0x1f4>
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400e96:	f8df b1e0 	ldr.w	fp, [pc, #480]	; 401078 <main+0x1f8>
#include <asf.h>
#include <string.h>

int main(void)
{
  400e9a:	f04f 0900 	mov.w	r9, #0
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400e9e:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 40104c <main+0x1cc>
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400ea2:	464d      	mov	r5, r9
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400ea4:	f009 0007 	and.w	r0, r9, #7
  400ea8:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400eac:	47d0      	blx	sl
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400eae:	2010      	movs	r0, #16
  400eb0:	47d0      	blx	sl
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400eb2:	4628      	mov	r0, r5
  400eb4:	47d0      	blx	sl
  400eb6:	2680      	movs	r6, #128	; 0x80
	arch_ioport_set_pin_level(SSD1306_DC_PIN, true);
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400eb8:	2701      	movs	r7, #1
  400eba:	ac16      	add	r4, sp, #88	; 0x58
  400ebc:	f844 7d44 	str.w	r7, [r4, #-68]!
	spi_select_device(SSD1306_SPI, &device);
  400ec0:	4621      	mov	r1, r4
  400ec2:	4628      	mov	r0, r5
  400ec4:	47c0      	blx	r8
  400ec6:	f8cb 7030 	str.w	r7, [fp, #48]	; 0x30
  400eca:	60ed      	str	r5, [r5, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  400ecc:	2056      	movs	r0, #86	; 0x56
  400ece:	4b5d      	ldr	r3, [pc, #372]	; (401044 <main+0x1c4>)
  400ed0:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400ed2:	4621      	mov	r1, r4
  400ed4:	4628      	mov	r0, r5
  400ed6:	4b5c      	ldr	r3, [pc, #368]	; (401048 <main+0x1c8>)
  400ed8:	4798      	blx	r3

	for (page = 0; page < 4; ++page)
	{
		ssd1306_set_page_address(page);
		ssd1306_set_column_address(0);
		for (col = 0; col < 128; ++col)
  400eda:	3e01      	subs	r6, #1
  400edc:	d1ec      	bne.n	400eb8 <main+0x38>
  400ede:	44b9      	add	r9, r7
static inline void ssd1306_clear(void)
{
	uint8_t page = 0;
	uint8_t col = 0;

	for (page = 0; page < 4; ++page)
  400ee0:	f1b9 0f04 	cmp.w	r9, #4
  400ee4:	d1de      	bne.n	400ea4 <main+0x24>
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400ee6:	20b0      	movs	r0, #176	; 0xb0
  400ee8:	4c58      	ldr	r4, [pc, #352]	; (40104c <main+0x1cc>)
  400eea:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400eec:	2010      	movs	r0, #16
  400eee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400ef0:	2000      	movs	r0, #0
  400ef2:	47a0      	blx	r4
		//Set line and column to 0
		ssd1306_set_page_address(0);
		ssd1306_set_column_address(0);
		
		/// -------- First Screen --------
		ssd1306_write_text("Coffee consumption improves");
  400ef4:	4856      	ldr	r0, [pc, #344]	; (401050 <main+0x1d0>)
  400ef6:	4e57      	ldr	r6, [pc, #348]	; (401054 <main+0x1d4>)
  400ef8:	47b0      	blx	r6
		
		delay_ms(1500);
  400efa:	4857      	ldr	r0, [pc, #348]	; (401058 <main+0x1d8>)
  400efc:	4d51      	ldr	r5, [pc, #324]	; (401044 <main+0x1c4>)
  400efe:	47a8      	blx	r5
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400f00:	20b1      	movs	r0, #177	; 0xb1
  400f02:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400f04:	2010      	movs	r0, #16
  400f06:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400f08:	2008      	movs	r0, #8
  400f0a:	47a0      	blx	r4
		
		ssd1306_set_page_address(1);
		ssd1306_set_column_address(8);
		
		ssd1306_write_text("programming performance");
  400f0c:	4853      	ldr	r0, [pc, #332]	; (40105c <main+0x1dc>)
  400f0e:	47b0      	blx	r6
		
		delay_ms(1500);
  400f10:	4851      	ldr	r0, [pc, #324]	; (401058 <main+0x1d8>)
  400f12:	47a8      	blx	r5
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400f14:	20b2      	movs	r0, #178	; 0xb2
  400f16:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400f18:	2011      	movs	r0, #17
  400f1a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400f1c:	2004      	movs	r0, #4
  400f1e:	47a0      	blx	r4
		
		ssd1306_set_page_address(2);
		ssd1306_set_column_address(20);
		
		ssd1306_write_text("when coding in C.");
  400f20:	484f      	ldr	r0, [pc, #316]	; (401060 <main+0x1e0>)
  400f22:	47b0      	blx	r6
		
		delay_ms(1500);
  400f24:	484c      	ldr	r0, [pc, #304]	; (401058 <main+0x1d8>)
  400f26:	47a8      	blx	r5
  400f28:	f04f 0900 	mov.w	r9, #0
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400f2c:	46a2      	mov	sl, r4
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400f2e:	464d      	mov	r5, r9
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400f30:	f009 0007 	and.w	r0, r9, #7
  400f34:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400f38:	47d0      	blx	sl
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400f3a:	2010      	movs	r0, #16
  400f3c:	47d0      	blx	sl
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400f3e:	4628      	mov	r0, r5
  400f40:	47d0      	blx	sl
  400f42:	2680      	movs	r6, #128	; 0x80
	arch_ioport_set_pin_level(SSD1306_DC_PIN, true);
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400f44:	2701      	movs	r7, #1
  400f46:	ac16      	add	r4, sp, #88	; 0x58
  400f48:	f844 7d44 	str.w	r7, [r4, #-68]!
	spi_select_device(SSD1306_SPI, &device);
  400f4c:	4621      	mov	r1, r4
  400f4e:	4628      	mov	r0, r5
  400f50:	47c0      	blx	r8
  400f52:	f8cb 7030 	str.w	r7, [fp, #48]	; 0x30
  400f56:	60ed      	str	r5, [r5, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  400f58:	2056      	movs	r0, #86	; 0x56
  400f5a:	4b3a      	ldr	r3, [pc, #232]	; (401044 <main+0x1c4>)
  400f5c:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400f5e:	4621      	mov	r1, r4
  400f60:	4628      	mov	r0, r5
  400f62:	4b39      	ldr	r3, [pc, #228]	; (401048 <main+0x1c8>)
  400f64:	4798      	blx	r3

	for (page = 0; page < 4; ++page)
	{
		ssd1306_set_page_address(page);
		ssd1306_set_column_address(0);
		for (col = 0; col < 128; ++col)
  400f66:	3e01      	subs	r6, #1
  400f68:	d1ec      	bne.n	400f44 <main+0xc4>
  400f6a:	44b9      	add	r9, r7
static inline void ssd1306_clear(void)
{
	uint8_t page = 0;
	uint8_t col = 0;

	for (page = 0; page < 4; ++page)
  400f6c:	f1b9 0f04 	cmp.w	r9, #4
  400f70:	d1de      	bne.n	400f30 <main+0xb0>
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400f72:	20b0      	movs	r0, #176	; 0xb0
  400f74:	4c35      	ldr	r4, [pc, #212]	; (40104c <main+0x1cc>)
  400f76:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400f78:	2010      	movs	r0, #16
  400f7a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  400f7c:	2000      	movs	r0, #0
  400f7e:	47a0      	blx	r4
		uint8_t* pText = text;
		uint8_t *char_ptr;
		uint8_t i=0, column=0, page=0;
		
		//use sprintf to create strings from numbers, variables and other strings
		sprintf(text, "When coding in Java, however, performance decreases in %f %%", 73.37);
  400f80:	a32b      	add	r3, pc, #172	; (adr r3, 401030 <main+0x1b0>)
  400f82:	e9d3 2300 	ldrd	r2, r3, [r3]
  400f86:	4937      	ldr	r1, [pc, #220]	; (401064 <main+0x1e4>)
  400f88:	a805      	add	r0, sp, #20
  400f8a:	4c37      	ldr	r4, [pc, #220]	; (401068 <main+0x1e8>)
  400f8c:	47a0      	blx	r4

		//print text character by character
		while(*pText){
  400f8e:	f89d 3014 	ldrb.w	r3, [sp, #20]
  400f92:	2b00      	cmp	r3, #0
  400f94:	d081      	beq.n	400e9a <main+0x1a>
  400f96:	aa05      	add	r2, sp, #20
  400f98:	9201      	str	r2, [sp, #4]
  400f9a:	2200      	movs	r2, #0
  400f9c:	9203      	str	r2, [sp, #12]
  400f9e:	9202      	str	r2, [sp, #8]
			//write a single character
			char_ptr = font_table[*pText++ - 32];
  400fa0:	3b20      	subs	r3, #32
  400fa2:	4a32      	ldr	r2, [pc, #200]	; (40106c <main+0x1ec>)
  400fa4:	f852 9023 	ldr.w	r9, [r2, r3, lsl #2]
			for (i = 1; i <= char_ptr[0]; i++) {
  400fa8:	f899 3000 	ldrb.w	r3, [r9]
  400fac:	b1db      	cbz	r3, 400fe6 <main+0x166>
  400fae:	2401      	movs	r4, #1
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
	spi_select_device(SSD1306_SPI, &device);
  400fb0:	2600      	movs	r6, #0
				ssd1306_write_data(char_ptr[i]);
  400fb2:	f819 a004 	ldrb.w	sl, [r9, r4]
	arch_ioport_set_pin_level(SSD1306_DC_PIN, true);
	usart_spi_transmit(SSD1306_USART_SPI, data);
	ssd1306_sel_cmd();
	usart_spi_deselect_device(SSD1306_USART_SPI, &device);
#elif defined(SSD1306_SPI_INTERFACE)
	struct spi_device device = {.id = SSD1306_CS_PIN};
  400fb6:	2701      	movs	r7, #1
  400fb8:	ad16      	add	r5, sp, #88	; 0x58
  400fba:	f845 7d48 	str.w	r7, [r5, #-72]!
	spi_select_device(SSD1306_SPI, &device);
  400fbe:	4629      	mov	r1, r5
  400fc0:	4630      	mov	r0, r6
  400fc2:	47c0      	blx	r8
  400fc4:	f8cb 7030 	str.w	r7, [fp, #48]	; 0x30
  400fc8:	f8c6 a00c 	str.w	sl, [r6, #12]
	ssd1306_sel_data();
	spi_write_single(SSD1306_SPI, data);
	delay_us(SSD1306_LATENCY); // At least 3us
  400fcc:	2056      	movs	r0, #86	; 0x56
  400fce:	4b1d      	ldr	r3, [pc, #116]	; (401044 <main+0x1c4>)
  400fd0:	4798      	blx	r3
	spi_deselect_device(SSD1306_SPI, &device);
  400fd2:	4629      	mov	r1, r5
  400fd4:	4630      	mov	r0, r6
  400fd6:	4b1c      	ldr	r3, [pc, #112]	; (401048 <main+0x1c8>)
  400fd8:	4798      	blx	r3

		//print text character by character
		while(*pText){
			//write a single character
			char_ptr = font_table[*pText++ - 32];
			for (i = 1; i <= char_ptr[0]; i++) {
  400fda:	443c      	add	r4, r7
  400fdc:	b2e4      	uxtb	r4, r4
  400fde:	f899 3000 	ldrb.w	r3, [r9]
  400fe2:	42a3      	cmp	r3, r4
  400fe4:	d2e5      	bcs.n	400fb2 <main+0x132>
				ssd1306_write_data(char_ptr[i]);
			}
			
			//newline
			if(column++ == 35){
  400fe6:	9a02      	ldr	r2, [sp, #8]
  400fe8:	4613      	mov	r3, r2
  400fea:	3301      	adds	r3, #1
  400fec:	b2db      	uxtb	r3, r3
  400fee:	2a23      	cmp	r2, #35	; 0x23
  400ff0:	d111      	bne.n	401016 <main+0x196>
				column = 0;
				page++;
  400ff2:	9b03      	ldr	r3, [sp, #12]
  400ff4:	3301      	adds	r3, #1
  400ff6:	b2db      	uxtb	r3, r3
  400ff8:	461d      	mov	r5, r3
  400ffa:	9303      	str	r3, [sp, #12]
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_SET_HIGH_COL(address >> 4));
  400ffc:	2010      	movs	r0, #16
  400ffe:	4c13      	ldr	r4, [pc, #76]	; (40104c <main+0x1cc>)
  401000:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_LOW_COL(address & 0x0F));
  401002:	2000      	movs	r0, #0
  401004:	47a0      	blx	r4
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  401006:	f005 0007 	and.w	r0, r5, #7
  40100a:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  40100e:	47a0      	blx	r4
				ssd1306_write_data(char_ptr[i]);
			}
			
			//newline
			if(column++ == 35){
				column = 0;
  401010:	2300      	movs	r3, #0
  401012:	9302      	str	r3, [sp, #8]
  401014:	e000      	b.n	401018 <main+0x198>
			for (i = 1; i <= char_ptr[0]; i++) {
				ssd1306_write_data(char_ptr[i]);
			}
			
			//newline
			if(column++ == 35){
  401016:	9302      	str	r3, [sp, #8]
				ssd1306_set_column_address(column);
				ssd1306_set_page_address(page);
			}
			
			//wait
			delay_ms(100);
  401018:	4815      	ldr	r0, [pc, #84]	; (401070 <main+0x1f0>)
  40101a:	4b0a      	ldr	r3, [pc, #40]	; (401044 <main+0x1c4>)
  40101c:	4798      	blx	r3
		
		//use sprintf to create strings from numbers, variables and other strings
		sprintf(text, "When coding in Java, however, performance decreases in %f %%", 73.37);

		//print text character by character
		while(*pText){
  40101e:	9a01      	ldr	r2, [sp, #4]
  401020:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  401024:	9201      	str	r2, [sp, #4]
  401026:	2b00      	cmp	r3, #0
  401028:	d1ba      	bne.n	400fa0 <main+0x120>
  40102a:	e736      	b.n	400e9a <main+0x1a>
  40102c:	f3af 8000 	nop.w
  401030:	147ae148 	.word	0x147ae148
  401034:	405257ae 	.word	0x405257ae
  401038:	00400511 	.word	0x00400511
  40103c:	00400575 	.word	0x00400575
  401040:	004003b9 	.word	0x004003b9
  401044:	20000001 	.word	0x20000001
  401048:	00400229 	.word	0x00400229
  40104c:	00400e3d 	.word	0x00400e3d
  401050:	00405bec 	.word	0x00405bec
  401054:	00400465 	.word	0x00400465
  401058:	00c42f37 	.word	0x00c42f37
  40105c:	00405c08 	.word	0x00405c08
  401060:	00405c20 	.word	0x00405c20
  401064:	00405c34 	.word	0x00405c34
  401068:	00401169 	.word	0x00401169
  40106c:	20000034 	.word	0x20000034
  401070:	000d1437 	.word	0x000d1437
  401074:	004001fd 	.word	0x004001fd
  401078:	400e0e00 	.word	0x400e0e00

0040107c <__libc_init_array>:
  40107c:	b570      	push	{r4, r5, r6, lr}
  40107e:	4e0f      	ldr	r6, [pc, #60]	; (4010bc <__libc_init_array+0x40>)
  401080:	4d0f      	ldr	r5, [pc, #60]	; (4010c0 <__libc_init_array+0x44>)
  401082:	1b76      	subs	r6, r6, r5
  401084:	10b6      	asrs	r6, r6, #2
  401086:	bf18      	it	ne
  401088:	2400      	movne	r4, #0
  40108a:	d005      	beq.n	401098 <__libc_init_array+0x1c>
  40108c:	3401      	adds	r4, #1
  40108e:	f855 3b04 	ldr.w	r3, [r5], #4
  401092:	4798      	blx	r3
  401094:	42a6      	cmp	r6, r4
  401096:	d1f9      	bne.n	40108c <__libc_init_array+0x10>
  401098:	4e0a      	ldr	r6, [pc, #40]	; (4010c4 <__libc_init_array+0x48>)
  40109a:	4d0b      	ldr	r5, [pc, #44]	; (4010c8 <__libc_init_array+0x4c>)
  40109c:	1b76      	subs	r6, r6, r5
  40109e:	f004 fea9 	bl	405df4 <_init>
  4010a2:	10b6      	asrs	r6, r6, #2
  4010a4:	bf18      	it	ne
  4010a6:	2400      	movne	r4, #0
  4010a8:	d006      	beq.n	4010b8 <__libc_init_array+0x3c>
  4010aa:	3401      	adds	r4, #1
  4010ac:	f855 3b04 	ldr.w	r3, [r5], #4
  4010b0:	4798      	blx	r3
  4010b2:	42a6      	cmp	r6, r4
  4010b4:	d1f9      	bne.n	4010aa <__libc_init_array+0x2e>
  4010b6:	bd70      	pop	{r4, r5, r6, pc}
  4010b8:	bd70      	pop	{r4, r5, r6, pc}
  4010ba:	bf00      	nop
  4010bc:	00405e00 	.word	0x00405e00
  4010c0:	00405e00 	.word	0x00405e00
  4010c4:	00405e08 	.word	0x00405e08
  4010c8:	00405e00 	.word	0x00405e00

004010cc <memset>:
  4010cc:	b470      	push	{r4, r5, r6}
  4010ce:	0784      	lsls	r4, r0, #30
  4010d0:	d046      	beq.n	401160 <memset+0x94>
  4010d2:	1e54      	subs	r4, r2, #1
  4010d4:	2a00      	cmp	r2, #0
  4010d6:	d041      	beq.n	40115c <memset+0x90>
  4010d8:	b2cd      	uxtb	r5, r1
  4010da:	4603      	mov	r3, r0
  4010dc:	e002      	b.n	4010e4 <memset+0x18>
  4010de:	1e62      	subs	r2, r4, #1
  4010e0:	b3e4      	cbz	r4, 40115c <memset+0x90>
  4010e2:	4614      	mov	r4, r2
  4010e4:	f803 5b01 	strb.w	r5, [r3], #1
  4010e8:	079a      	lsls	r2, r3, #30
  4010ea:	d1f8      	bne.n	4010de <memset+0x12>
  4010ec:	2c03      	cmp	r4, #3
  4010ee:	d92e      	bls.n	40114e <memset+0x82>
  4010f0:	b2cd      	uxtb	r5, r1
  4010f2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4010f6:	2c0f      	cmp	r4, #15
  4010f8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4010fc:	d919      	bls.n	401132 <memset+0x66>
  4010fe:	f103 0210 	add.w	r2, r3, #16
  401102:	4626      	mov	r6, r4
  401104:	3e10      	subs	r6, #16
  401106:	2e0f      	cmp	r6, #15
  401108:	f842 5c10 	str.w	r5, [r2, #-16]
  40110c:	f842 5c0c 	str.w	r5, [r2, #-12]
  401110:	f842 5c08 	str.w	r5, [r2, #-8]
  401114:	f842 5c04 	str.w	r5, [r2, #-4]
  401118:	f102 0210 	add.w	r2, r2, #16
  40111c:	d8f2      	bhi.n	401104 <memset+0x38>
  40111e:	f1a4 0210 	sub.w	r2, r4, #16
  401122:	f022 020f 	bic.w	r2, r2, #15
  401126:	f004 040f 	and.w	r4, r4, #15
  40112a:	3210      	adds	r2, #16
  40112c:	2c03      	cmp	r4, #3
  40112e:	4413      	add	r3, r2
  401130:	d90d      	bls.n	40114e <memset+0x82>
  401132:	461e      	mov	r6, r3
  401134:	4622      	mov	r2, r4
  401136:	3a04      	subs	r2, #4
  401138:	2a03      	cmp	r2, #3
  40113a:	f846 5b04 	str.w	r5, [r6], #4
  40113e:	d8fa      	bhi.n	401136 <memset+0x6a>
  401140:	1f22      	subs	r2, r4, #4
  401142:	f022 0203 	bic.w	r2, r2, #3
  401146:	3204      	adds	r2, #4
  401148:	4413      	add	r3, r2
  40114a:	f004 0403 	and.w	r4, r4, #3
  40114e:	b12c      	cbz	r4, 40115c <memset+0x90>
  401150:	b2c9      	uxtb	r1, r1
  401152:	441c      	add	r4, r3
  401154:	f803 1b01 	strb.w	r1, [r3], #1
  401158:	42a3      	cmp	r3, r4
  40115a:	d1fb      	bne.n	401154 <memset+0x88>
  40115c:	bc70      	pop	{r4, r5, r6}
  40115e:	4770      	bx	lr
  401160:	4614      	mov	r4, r2
  401162:	4603      	mov	r3, r0
  401164:	e7c2      	b.n	4010ec <memset+0x20>
  401166:	bf00      	nop

00401168 <sprintf>:
  401168:	b40e      	push	{r1, r2, r3}
  40116a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40116c:	b09c      	sub	sp, #112	; 0x70
  40116e:	ab21      	add	r3, sp, #132	; 0x84
  401170:	490f      	ldr	r1, [pc, #60]	; (4011b0 <sprintf+0x48>)
  401172:	f853 2b04 	ldr.w	r2, [r3], #4
  401176:	9301      	str	r3, [sp, #4]
  401178:	4605      	mov	r5, r0
  40117a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40117e:	6808      	ldr	r0, [r1, #0]
  401180:	9502      	str	r5, [sp, #8]
  401182:	f44f 7702 	mov.w	r7, #520	; 0x208
  401186:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40118a:	a902      	add	r1, sp, #8
  40118c:	9506      	str	r5, [sp, #24]
  40118e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401192:	9404      	str	r4, [sp, #16]
  401194:	9407      	str	r4, [sp, #28]
  401196:	f8ad 6016 	strh.w	r6, [sp, #22]
  40119a:	f000 f80b 	bl	4011b4 <_svfprintf_r>
  40119e:	9b02      	ldr	r3, [sp, #8]
  4011a0:	2200      	movs	r2, #0
  4011a2:	701a      	strb	r2, [r3, #0]
  4011a4:	b01c      	add	sp, #112	; 0x70
  4011a6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4011aa:	b003      	add	sp, #12
  4011ac:	4770      	bx	lr
  4011ae:	bf00      	nop
  4011b0:	20000838 	.word	0x20000838

004011b4 <_svfprintf_r>:
  4011b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4011b8:	b0c1      	sub	sp, #260	; 0x104
  4011ba:	460c      	mov	r4, r1
  4011bc:	9109      	str	r1, [sp, #36]	; 0x24
  4011be:	4615      	mov	r5, r2
  4011c0:	930e      	str	r3, [sp, #56]	; 0x38
  4011c2:	900a      	str	r0, [sp, #40]	; 0x28
  4011c4:	f002 fb28 	bl	403818 <_localeconv_r>
  4011c8:	6803      	ldr	r3, [r0, #0]
  4011ca:	9317      	str	r3, [sp, #92]	; 0x5c
  4011cc:	4618      	mov	r0, r3
  4011ce:	f003 f9f7 	bl	4045c0 <strlen>
  4011d2:	89a3      	ldrh	r3, [r4, #12]
  4011d4:	9016      	str	r0, [sp, #88]	; 0x58
  4011d6:	061e      	lsls	r6, r3, #24
  4011d8:	d503      	bpl.n	4011e2 <_svfprintf_r+0x2e>
  4011da:	6923      	ldr	r3, [r4, #16]
  4011dc:	2b00      	cmp	r3, #0
  4011de:	f001 8119 	beq.w	402414 <_svfprintf_r+0x1260>
  4011e2:	2300      	movs	r3, #0
  4011e4:	461a      	mov	r2, r3
  4011e6:	9312      	str	r3, [sp, #72]	; 0x48
  4011e8:	9325      	str	r3, [sp, #148]	; 0x94
  4011ea:	9324      	str	r3, [sp, #144]	; 0x90
  4011ec:	9319      	str	r3, [sp, #100]	; 0x64
  4011ee:	930b      	str	r3, [sp, #44]	; 0x2c
  4011f0:	f8df a464 	ldr.w	sl, [pc, #1124]	; 401658 <_svfprintf_r+0x4a4>
  4011f4:	9214      	str	r2, [sp, #80]	; 0x50
  4011f6:	ab30      	add	r3, sp, #192	; 0xc0
  4011f8:	9323      	str	r3, [sp, #140]	; 0x8c
  4011fa:	4699      	mov	r9, r3
  4011fc:	9215      	str	r2, [sp, #84]	; 0x54
  4011fe:	46a8      	mov	r8, r5
  401200:	f898 3000 	ldrb.w	r3, [r8]
  401204:	4644      	mov	r4, r8
  401206:	b1eb      	cbz	r3, 401244 <_svfprintf_r+0x90>
  401208:	2b25      	cmp	r3, #37	; 0x25
  40120a:	d102      	bne.n	401212 <_svfprintf_r+0x5e>
  40120c:	e01a      	b.n	401244 <_svfprintf_r+0x90>
  40120e:	2b25      	cmp	r3, #37	; 0x25
  401210:	d003      	beq.n	40121a <_svfprintf_r+0x66>
  401212:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401216:	2b00      	cmp	r3, #0
  401218:	d1f9      	bne.n	40120e <_svfprintf_r+0x5a>
  40121a:	ebc8 0504 	rsb	r5, r8, r4
  40121e:	b18d      	cbz	r5, 401244 <_svfprintf_r+0x90>
  401220:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401222:	9a25      	ldr	r2, [sp, #148]	; 0x94
  401224:	f8c9 8000 	str.w	r8, [r9]
  401228:	3301      	adds	r3, #1
  40122a:	442a      	add	r2, r5
  40122c:	2b07      	cmp	r3, #7
  40122e:	f8c9 5004 	str.w	r5, [r9, #4]
  401232:	9225      	str	r2, [sp, #148]	; 0x94
  401234:	9324      	str	r3, [sp, #144]	; 0x90
  401236:	f300 80a6 	bgt.w	401386 <_svfprintf_r+0x1d2>
  40123a:	f109 0908 	add.w	r9, r9, #8
  40123e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401240:	442b      	add	r3, r5
  401242:	930b      	str	r3, [sp, #44]	; 0x2c
  401244:	7823      	ldrb	r3, [r4, #0]
  401246:	2b00      	cmp	r3, #0
  401248:	f000 80a6 	beq.w	401398 <_svfprintf_r+0x1e4>
  40124c:	2300      	movs	r3, #0
  40124e:	461a      	mov	r2, r3
  401250:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401254:	4619      	mov	r1, r3
  401256:	930c      	str	r3, [sp, #48]	; 0x30
  401258:	9307      	str	r3, [sp, #28]
  40125a:	f04f 3bff 	mov.w	fp, #4294967295
  40125e:	7863      	ldrb	r3, [r4, #1]
  401260:	f104 0801 	add.w	r8, r4, #1
  401264:	465d      	mov	r5, fp
  401266:	f108 0801 	add.w	r8, r8, #1
  40126a:	f1a3 0020 	sub.w	r0, r3, #32
  40126e:	2858      	cmp	r0, #88	; 0x58
  401270:	f200 8425 	bhi.w	401abe <_svfprintf_r+0x90a>
  401274:	e8df f010 	tbh	[pc, r0, lsl #1]
  401278:	04230388 	.word	0x04230388
  40127c:	03900423 	.word	0x03900423
  401280:	04230423 	.word	0x04230423
  401284:	04230423 	.word	0x04230423
  401288:	04230423 	.word	0x04230423
  40128c:	03a50397 	.word	0x03a50397
  401290:	005d0423 	.word	0x005d0423
  401294:	042300e2 	.word	0x042300e2
  401298:	010500fe 	.word	0x010500fe
  40129c:	01050105 	.word	0x01050105
  4012a0:	01050105 	.word	0x01050105
  4012a4:	01050105 	.word	0x01050105
  4012a8:	01050105 	.word	0x01050105
  4012ac:	04230423 	.word	0x04230423
  4012b0:	04230423 	.word	0x04230423
  4012b4:	04230423 	.word	0x04230423
  4012b8:	04230423 	.word	0x04230423
  4012bc:	04230423 	.word	0x04230423
  4012c0:	02810115 	.word	0x02810115
  4012c4:	02810423 	.word	0x02810423
  4012c8:	04230423 	.word	0x04230423
  4012cc:	04230423 	.word	0x04230423
  4012d0:	042302c6 	.word	0x042302c6
  4012d4:	02cd0423 	.word	0x02cd0423
  4012d8:	04230423 	.word	0x04230423
  4012dc:	04230423 	.word	0x04230423
  4012e0:	02f70423 	.word	0x02f70423
  4012e4:	04230423 	.word	0x04230423
  4012e8:	04230325 	.word	0x04230325
  4012ec:	04230423 	.word	0x04230423
  4012f0:	04230423 	.word	0x04230423
  4012f4:	04230423 	.word	0x04230423
  4012f8:	04230423 	.word	0x04230423
  4012fc:	03660423 	.word	0x03660423
  401300:	02810379 	.word	0x02810379
  401304:	02810281 	.word	0x02810281
  401308:	03790381 	.word	0x03790381
  40130c:	04230423 	.word	0x04230423
  401310:	042303d1 	.word	0x042303d1
  401314:	00a303db 	.word	0x00a303db
  401318:	03ee0064 	.word	0x03ee0064
  40131c:	03f50423 	.word	0x03f50423
  401320:	03aa0423 	.word	0x03aa0423
  401324:	04230423 	.word	0x04230423
  401328:	03bc      	.short	0x03bc
  40132a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40132c:	930e      	str	r3, [sp, #56]	; 0x38
  40132e:	4240      	negs	r0, r0
  401330:	900c      	str	r0, [sp, #48]	; 0x30
  401332:	9b07      	ldr	r3, [sp, #28]
  401334:	f043 0304 	orr.w	r3, r3, #4
  401338:	9307      	str	r3, [sp, #28]
  40133a:	f898 3000 	ldrb.w	r3, [r8]
  40133e:	e792      	b.n	401266 <_svfprintf_r+0xb2>
  401340:	980e      	ldr	r0, [sp, #56]	; 0x38
  401342:	46ab      	mov	fp, r5
  401344:	2100      	movs	r1, #0
  401346:	6804      	ldr	r4, [r0, #0]
  401348:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40134c:	1d07      	adds	r7, r0, #4
  40134e:	9807      	ldr	r0, [sp, #28]
  401350:	2330      	movs	r3, #48	; 0x30
  401352:	2278      	movs	r2, #120	; 0x78
  401354:	458b      	cmp	fp, r1
  401356:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  40135a:	f04f 0500 	mov.w	r5, #0
  40135e:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  401362:	f040 0302 	orr.w	r3, r0, #2
  401366:	f2c0 83c7 	blt.w	401af8 <_svfprintf_r+0x944>
  40136a:	f020 0380 	bic.w	r3, r0, #128	; 0x80
  40136e:	f043 0302 	orr.w	r3, r3, #2
  401372:	9307      	str	r3, [sp, #28]
  401374:	ea54 0305 	orrs.w	r3, r4, r5
  401378:	970e      	str	r7, [sp, #56]	; 0x38
  40137a:	f000 8393 	beq.w	401aa4 <_svfprintf_r+0x8f0>
  40137e:	460f      	mov	r7, r1
  401380:	9211      	str	r2, [sp, #68]	; 0x44
  401382:	48b3      	ldr	r0, [pc, #716]	; (401650 <_svfprintf_r+0x49c>)
  401384:	e2ce      	b.n	401924 <_svfprintf_r+0x770>
  401386:	aa23      	add	r2, sp, #140	; 0x8c
  401388:	9909      	ldr	r1, [sp, #36]	; 0x24
  40138a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40138c:	f003 f986 	bl	40469c <__ssprint_r>
  401390:	b948      	cbnz	r0, 4013a6 <_svfprintf_r+0x1f2>
  401392:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401396:	e752      	b.n	40123e <_svfprintf_r+0x8a>
  401398:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40139a:	b123      	cbz	r3, 4013a6 <_svfprintf_r+0x1f2>
  40139c:	980a      	ldr	r0, [sp, #40]	; 0x28
  40139e:	9909      	ldr	r1, [sp, #36]	; 0x24
  4013a0:	aa23      	add	r2, sp, #140	; 0x8c
  4013a2:	f003 f97b 	bl	40469c <__ssprint_r>
  4013a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4013a8:	899b      	ldrh	r3, [r3, #12]
  4013aa:	f013 0f40 	tst.w	r3, #64	; 0x40
  4013ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4013b0:	bf18      	it	ne
  4013b2:	f04f 33ff 	movne.w	r3, #4294967295
  4013b6:	4618      	mov	r0, r3
  4013b8:	b041      	add	sp, #260	; 0x104
  4013ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4013be:	9311      	str	r3, [sp, #68]	; 0x44
  4013c0:	46ab      	mov	fp, r5
  4013c2:	2a00      	cmp	r2, #0
  4013c4:	f041 8223 	bne.w	40280e <_svfprintf_r+0x165a>
  4013c8:	9a07      	ldr	r2, [sp, #28]
  4013ca:	f012 0320 	ands.w	r3, r2, #32
  4013ce:	f000 822e 	beq.w	40182e <_svfprintf_r+0x67a>
  4013d2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4013d4:	3707      	adds	r7, #7
  4013d6:	f027 0307 	bic.w	r3, r7, #7
  4013da:	2700      	movs	r7, #0
  4013dc:	f103 0108 	add.w	r1, r3, #8
  4013e0:	45bb      	cmp	fp, r7
  4013e2:	910e      	str	r1, [sp, #56]	; 0x38
  4013e4:	e9d3 4500 	ldrd	r4, r5, [r3]
  4013e8:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  4013ec:	f2c0 8752 	blt.w	402294 <_svfprintf_r+0x10e0>
  4013f0:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  4013f4:	9307      	str	r3, [sp, #28]
  4013f6:	ea54 0305 	orrs.w	r3, r4, r5
  4013fa:	f000 8375 	beq.w	401ae8 <_svfprintf_r+0x934>
  4013fe:	ae30      	add	r6, sp, #192	; 0xc0
  401400:	08e2      	lsrs	r2, r4, #3
  401402:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  401406:	08e9      	lsrs	r1, r5, #3
  401408:	f004 0307 	and.w	r3, r4, #7
  40140c:	460d      	mov	r5, r1
  40140e:	4614      	mov	r4, r2
  401410:	3330      	adds	r3, #48	; 0x30
  401412:	ea54 0205 	orrs.w	r2, r4, r5
  401416:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40141a:	d1f1      	bne.n	401400 <_svfprintf_r+0x24c>
  40141c:	9a07      	ldr	r2, [sp, #28]
  40141e:	07d1      	lsls	r1, r2, #31
  401420:	f140 8084 	bpl.w	40152c <_svfprintf_r+0x378>
  401424:	2b30      	cmp	r3, #48	; 0x30
  401426:	f000 8081 	beq.w	40152c <_svfprintf_r+0x378>
  40142a:	2230      	movs	r2, #48	; 0x30
  40142c:	1e73      	subs	r3, r6, #1
  40142e:	f806 2c01 	strb.w	r2, [r6, #-1]
  401432:	aa30      	add	r2, sp, #192	; 0xc0
  401434:	1ad2      	subs	r2, r2, r3
  401436:	920d      	str	r2, [sp, #52]	; 0x34
  401438:	461e      	mov	r6, r3
  40143a:	e07a      	b.n	401532 <_svfprintf_r+0x37e>
  40143c:	f898 3000 	ldrb.w	r3, [r8]
  401440:	2b2a      	cmp	r3, #42	; 0x2a
  401442:	f108 0401 	add.w	r4, r8, #1
  401446:	f001 81b1 	beq.w	4027ac <_svfprintf_r+0x15f8>
  40144a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40144e:	2809      	cmp	r0, #9
  401450:	bf98      	it	ls
  401452:	2500      	movls	r5, #0
  401454:	f201 8164 	bhi.w	402720 <_svfprintf_r+0x156c>
  401458:	f814 3b01 	ldrb.w	r3, [r4], #1
  40145c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401460:	eb00 0545 	add.w	r5, r0, r5, lsl #1
  401464:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401468:	2809      	cmp	r0, #9
  40146a:	d9f5      	bls.n	401458 <_svfprintf_r+0x2a4>
  40146c:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  401470:	46a0      	mov	r8, r4
  401472:	e6fa      	b.n	40126a <_svfprintf_r+0xb6>
  401474:	9b07      	ldr	r3, [sp, #28]
  401476:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40147a:	9307      	str	r3, [sp, #28]
  40147c:	f898 3000 	ldrb.w	r3, [r8]
  401480:	e6f1      	b.n	401266 <_svfprintf_r+0xb2>
  401482:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401486:	2300      	movs	r3, #0
  401488:	461c      	mov	r4, r3
  40148a:	f818 3b01 	ldrb.w	r3, [r8], #1
  40148e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401492:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  401496:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40149a:	2809      	cmp	r0, #9
  40149c:	d9f5      	bls.n	40148a <_svfprintf_r+0x2d6>
  40149e:	940c      	str	r4, [sp, #48]	; 0x30
  4014a0:	e6e3      	b.n	40126a <_svfprintf_r+0xb6>
  4014a2:	9311      	str	r3, [sp, #68]	; 0x44
  4014a4:	46ab      	mov	fp, r5
  4014a6:	2a00      	cmp	r2, #0
  4014a8:	f041 81c9 	bne.w	40283e <_svfprintf_r+0x168a>
  4014ac:	9b07      	ldr	r3, [sp, #28]
  4014ae:	f043 0310 	orr.w	r3, r3, #16
  4014b2:	9307      	str	r3, [sp, #28]
  4014b4:	9b07      	ldr	r3, [sp, #28]
  4014b6:	0698      	lsls	r0, r3, #26
  4014b8:	f140 8530 	bpl.w	401f1c <_svfprintf_r+0xd68>
  4014bc:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4014be:	3707      	adds	r7, #7
  4014c0:	f027 0707 	bic.w	r7, r7, #7
  4014c4:	e9d7 2300 	ldrd	r2, r3, [r7]
  4014c8:	f107 0108 	add.w	r1, r7, #8
  4014cc:	910e      	str	r1, [sp, #56]	; 0x38
  4014ce:	4614      	mov	r4, r2
  4014d0:	461d      	mov	r5, r3
  4014d2:	2a00      	cmp	r2, #0
  4014d4:	f173 0300 	sbcs.w	r3, r3, #0
  4014d8:	f2c0 855b 	blt.w	401f92 <_svfprintf_r+0xdde>
  4014dc:	f1bb 0f00 	cmp.w	fp, #0
  4014e0:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4014e4:	f2c0 8538 	blt.w	401f58 <_svfprintf_r+0xda4>
  4014e8:	9b07      	ldr	r3, [sp, #28]
  4014ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4014ee:	9307      	str	r3, [sp, #28]
  4014f0:	ea54 0305 	orrs.w	r3, r4, r5
  4014f4:	f000 81db 	beq.w	4018ae <_svfprintf_r+0x6fa>
  4014f8:	2d00      	cmp	r5, #0
  4014fa:	bf08      	it	eq
  4014fc:	2c0a      	cmpeq	r4, #10
  4014fe:	f0c0 81db 	bcc.w	4018b8 <_svfprintf_r+0x704>
  401502:	ae30      	add	r6, sp, #192	; 0xc0
  401504:	4620      	mov	r0, r4
  401506:	4629      	mov	r1, r5
  401508:	220a      	movs	r2, #10
  40150a:	2300      	movs	r3, #0
  40150c:	f004 f9e2 	bl	4058d4 <__aeabi_uldivmod>
  401510:	3230      	adds	r2, #48	; 0x30
  401512:	f806 2d01 	strb.w	r2, [r6, #-1]!
  401516:	4620      	mov	r0, r4
  401518:	4629      	mov	r1, r5
  40151a:	2300      	movs	r3, #0
  40151c:	220a      	movs	r2, #10
  40151e:	f004 f9d9 	bl	4058d4 <__aeabi_uldivmod>
  401522:	4604      	mov	r4, r0
  401524:	460d      	mov	r5, r1
  401526:	ea54 0305 	orrs.w	r3, r4, r5
  40152a:	d1eb      	bne.n	401504 <_svfprintf_r+0x350>
  40152c:	ab30      	add	r3, sp, #192	; 0xc0
  40152e:	1b9b      	subs	r3, r3, r6
  401530:	930d      	str	r3, [sp, #52]	; 0x34
  401532:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401534:	455b      	cmp	r3, fp
  401536:	bfb8      	it	lt
  401538:	465b      	movlt	r3, fp
  40153a:	9308      	str	r3, [sp, #32]
  40153c:	2300      	movs	r3, #0
  40153e:	9313      	str	r3, [sp, #76]	; 0x4c
  401540:	b117      	cbz	r7, 401548 <_svfprintf_r+0x394>
  401542:	9b08      	ldr	r3, [sp, #32]
  401544:	3301      	adds	r3, #1
  401546:	9308      	str	r3, [sp, #32]
  401548:	9b07      	ldr	r3, [sp, #28]
  40154a:	f013 0302 	ands.w	r3, r3, #2
  40154e:	930f      	str	r3, [sp, #60]	; 0x3c
  401550:	d002      	beq.n	401558 <_svfprintf_r+0x3a4>
  401552:	9b08      	ldr	r3, [sp, #32]
  401554:	3302      	adds	r3, #2
  401556:	9308      	str	r3, [sp, #32]
  401558:	9b07      	ldr	r3, [sp, #28]
  40155a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  40155e:	9310      	str	r3, [sp, #64]	; 0x40
  401560:	f040 82d7 	bne.w	401b12 <_svfprintf_r+0x95e>
  401564:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401566:	9a08      	ldr	r2, [sp, #32]
  401568:	1a9d      	subs	r5, r3, r2
  40156a:	2d00      	cmp	r5, #0
  40156c:	f340 82d1 	ble.w	401b12 <_svfprintf_r+0x95e>
  401570:	2d10      	cmp	r5, #16
  401572:	9925      	ldr	r1, [sp, #148]	; 0x94
  401574:	9a24      	ldr	r2, [sp, #144]	; 0x90
  401576:	4f37      	ldr	r7, [pc, #220]	; (401654 <_svfprintf_r+0x4a0>)
  401578:	dd27      	ble.n	4015ca <_svfprintf_r+0x416>
  40157a:	9618      	str	r6, [sp, #96]	; 0x60
  40157c:	4648      	mov	r0, r9
  40157e:	2410      	movs	r4, #16
  401580:	46b9      	mov	r9, r7
  401582:	9e09      	ldr	r6, [sp, #36]	; 0x24
  401584:	462f      	mov	r7, r5
  401586:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  401588:	e004      	b.n	401594 <_svfprintf_r+0x3e0>
  40158a:	3f10      	subs	r7, #16
  40158c:	2f10      	cmp	r7, #16
  40158e:	f100 0008 	add.w	r0, r0, #8
  401592:	dd16      	ble.n	4015c2 <_svfprintf_r+0x40e>
  401594:	3201      	adds	r2, #1
  401596:	4b2f      	ldr	r3, [pc, #188]	; (401654 <_svfprintf_r+0x4a0>)
  401598:	9224      	str	r2, [sp, #144]	; 0x90
  40159a:	3110      	adds	r1, #16
  40159c:	2a07      	cmp	r2, #7
  40159e:	9125      	str	r1, [sp, #148]	; 0x94
  4015a0:	e880 0018 	stmia.w	r0, {r3, r4}
  4015a4:	ddf1      	ble.n	40158a <_svfprintf_r+0x3d6>
  4015a6:	aa23      	add	r2, sp, #140	; 0x8c
  4015a8:	4631      	mov	r1, r6
  4015aa:	4628      	mov	r0, r5
  4015ac:	f003 f876 	bl	40469c <__ssprint_r>
  4015b0:	2800      	cmp	r0, #0
  4015b2:	f47f aef8 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4015b6:	3f10      	subs	r7, #16
  4015b8:	2f10      	cmp	r7, #16
  4015ba:	9925      	ldr	r1, [sp, #148]	; 0x94
  4015bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4015be:	a830      	add	r0, sp, #192	; 0xc0
  4015c0:	dce8      	bgt.n	401594 <_svfprintf_r+0x3e0>
  4015c2:	9e18      	ldr	r6, [sp, #96]	; 0x60
  4015c4:	463d      	mov	r5, r7
  4015c6:	464f      	mov	r7, r9
  4015c8:	4681      	mov	r9, r0
  4015ca:	3201      	adds	r2, #1
  4015cc:	186c      	adds	r4, r5, r1
  4015ce:	2a07      	cmp	r2, #7
  4015d0:	9425      	str	r4, [sp, #148]	; 0x94
  4015d2:	9224      	str	r2, [sp, #144]	; 0x90
  4015d4:	f8c9 7000 	str.w	r7, [r9]
  4015d8:	f8c9 5004 	str.w	r5, [r9, #4]
  4015dc:	f300 8428 	bgt.w	401e30 <_svfprintf_r+0xc7c>
  4015e0:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4015e4:	f109 0908 	add.w	r9, r9, #8
  4015e8:	b177      	cbz	r7, 401608 <_svfprintf_r+0x454>
  4015ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4015ec:	3301      	adds	r3, #1
  4015ee:	3401      	adds	r4, #1
  4015f0:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  4015f4:	2201      	movs	r2, #1
  4015f6:	2b07      	cmp	r3, #7
  4015f8:	9425      	str	r4, [sp, #148]	; 0x94
  4015fa:	9324      	str	r3, [sp, #144]	; 0x90
  4015fc:	e889 0006 	stmia.w	r9, {r1, r2}
  401600:	f300 83a0 	bgt.w	401d44 <_svfprintf_r+0xb90>
  401604:	f109 0908 	add.w	r9, r9, #8
  401608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40160a:	b16b      	cbz	r3, 401628 <_svfprintf_r+0x474>
  40160c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40160e:	3301      	adds	r3, #1
  401610:	3402      	adds	r4, #2
  401612:	a91c      	add	r1, sp, #112	; 0x70
  401614:	2202      	movs	r2, #2
  401616:	2b07      	cmp	r3, #7
  401618:	9425      	str	r4, [sp, #148]	; 0x94
  40161a:	9324      	str	r3, [sp, #144]	; 0x90
  40161c:	e889 0006 	stmia.w	r9, {r1, r2}
  401620:	f300 839c 	bgt.w	401d5c <_svfprintf_r+0xba8>
  401624:	f109 0908 	add.w	r9, r9, #8
  401628:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40162a:	2b80      	cmp	r3, #128	; 0x80
  40162c:	f000 82d5 	beq.w	401bda <_svfprintf_r+0xa26>
  401630:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401632:	ebc3 070b 	rsb	r7, r3, fp
  401636:	2f00      	cmp	r7, #0
  401638:	dd39      	ble.n	4016ae <_svfprintf_r+0x4fa>
  40163a:	4a07      	ldr	r2, [pc, #28]	; (401658 <_svfprintf_r+0x4a4>)
  40163c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40163e:	920f      	str	r2, [sp, #60]	; 0x3c
  401640:	2f10      	cmp	r7, #16
  401642:	dd28      	ble.n	401696 <_svfprintf_r+0x4e2>
  401644:	4622      	mov	r2, r4
  401646:	f04f 0b10 	mov.w	fp, #16
  40164a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40164c:	9c09      	ldr	r4, [sp, #36]	; 0x24
  40164e:	e00a      	b.n	401666 <_svfprintf_r+0x4b2>
  401650:	00405cb0 	.word	0x00405cb0
  401654:	00405cd0 	.word	0x00405cd0
  401658:	00405c7c 	.word	0x00405c7c
  40165c:	3f10      	subs	r7, #16
  40165e:	2f10      	cmp	r7, #16
  401660:	f109 0908 	add.w	r9, r9, #8
  401664:	dd16      	ble.n	401694 <_svfprintf_r+0x4e0>
  401666:	3301      	adds	r3, #1
  401668:	3210      	adds	r2, #16
  40166a:	2b07      	cmp	r3, #7
  40166c:	9225      	str	r2, [sp, #148]	; 0x94
  40166e:	9324      	str	r3, [sp, #144]	; 0x90
  401670:	e889 0c00 	stmia.w	r9, {sl, fp}
  401674:	ddf2      	ble.n	40165c <_svfprintf_r+0x4a8>
  401676:	aa23      	add	r2, sp, #140	; 0x8c
  401678:	4621      	mov	r1, r4
  40167a:	4628      	mov	r0, r5
  40167c:	f003 f80e 	bl	40469c <__ssprint_r>
  401680:	2800      	cmp	r0, #0
  401682:	f47f ae90 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401686:	3f10      	subs	r7, #16
  401688:	2f10      	cmp	r7, #16
  40168a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40168c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40168e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401692:	dce8      	bgt.n	401666 <_svfprintf_r+0x4b2>
  401694:	4614      	mov	r4, r2
  401696:	3301      	adds	r3, #1
  401698:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40169a:	9324      	str	r3, [sp, #144]	; 0x90
  40169c:	443c      	add	r4, r7
  40169e:	2b07      	cmp	r3, #7
  4016a0:	9425      	str	r4, [sp, #148]	; 0x94
  4016a2:	e889 0084 	stmia.w	r9, {r2, r7}
  4016a6:	f300 8341 	bgt.w	401d2c <_svfprintf_r+0xb78>
  4016aa:	f109 0908 	add.w	r9, r9, #8
  4016ae:	9b07      	ldr	r3, [sp, #28]
  4016b0:	05da      	lsls	r2, r3, #23
  4016b2:	f100 8230 	bmi.w	401b16 <_svfprintf_r+0x962>
  4016b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4016b8:	990d      	ldr	r1, [sp, #52]	; 0x34
  4016ba:	f8c9 6000 	str.w	r6, [r9]
  4016be:	3301      	adds	r3, #1
  4016c0:	440c      	add	r4, r1
  4016c2:	2b07      	cmp	r3, #7
  4016c4:	9425      	str	r4, [sp, #148]	; 0x94
  4016c6:	f8c9 1004 	str.w	r1, [r9, #4]
  4016ca:	9324      	str	r3, [sp, #144]	; 0x90
  4016cc:	f300 8318 	bgt.w	401d00 <_svfprintf_r+0xb4c>
  4016d0:	f109 0908 	add.w	r9, r9, #8
  4016d4:	9b07      	ldr	r3, [sp, #28]
  4016d6:	0759      	lsls	r1, r3, #29
  4016d8:	d53f      	bpl.n	40175a <_svfprintf_r+0x5a6>
  4016da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4016dc:	9a08      	ldr	r2, [sp, #32]
  4016de:	1a9d      	subs	r5, r3, r2
  4016e0:	2d00      	cmp	r5, #0
  4016e2:	dd3a      	ble.n	40175a <_svfprintf_r+0x5a6>
  4016e4:	2d10      	cmp	r5, #16
  4016e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4016e8:	4fbc      	ldr	r7, [pc, #752]	; (4019dc <_svfprintf_r+0x828>)
  4016ea:	dd23      	ble.n	401734 <_svfprintf_r+0x580>
  4016ec:	4622      	mov	r2, r4
  4016ee:	2610      	movs	r6, #16
  4016f0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4016f4:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4016f6:	e004      	b.n	401702 <_svfprintf_r+0x54e>
  4016f8:	3d10      	subs	r5, #16
  4016fa:	2d10      	cmp	r5, #16
  4016fc:	f109 0908 	add.w	r9, r9, #8
  401700:	dd17      	ble.n	401732 <_svfprintf_r+0x57e>
  401702:	3301      	adds	r3, #1
  401704:	49b5      	ldr	r1, [pc, #724]	; (4019dc <_svfprintf_r+0x828>)
  401706:	9324      	str	r3, [sp, #144]	; 0x90
  401708:	3210      	adds	r2, #16
  40170a:	2b07      	cmp	r3, #7
  40170c:	9225      	str	r2, [sp, #148]	; 0x94
  40170e:	e889 0042 	stmia.w	r9, {r1, r6}
  401712:	ddf1      	ble.n	4016f8 <_svfprintf_r+0x544>
  401714:	aa23      	add	r2, sp, #140	; 0x8c
  401716:	4621      	mov	r1, r4
  401718:	4658      	mov	r0, fp
  40171a:	f002 ffbf 	bl	40469c <__ssprint_r>
  40171e:	2800      	cmp	r0, #0
  401720:	f47f ae41 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401724:	3d10      	subs	r5, #16
  401726:	2d10      	cmp	r5, #16
  401728:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40172a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40172c:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401730:	dce7      	bgt.n	401702 <_svfprintf_r+0x54e>
  401732:	4614      	mov	r4, r2
  401734:	3301      	adds	r3, #1
  401736:	442c      	add	r4, r5
  401738:	2b07      	cmp	r3, #7
  40173a:	9425      	str	r4, [sp, #148]	; 0x94
  40173c:	9324      	str	r3, [sp, #144]	; 0x90
  40173e:	f8c9 7000 	str.w	r7, [r9]
  401742:	f8c9 5004 	str.w	r5, [r9, #4]
  401746:	dd08      	ble.n	40175a <_svfprintf_r+0x5a6>
  401748:	aa23      	add	r2, sp, #140	; 0x8c
  40174a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40174c:	980a      	ldr	r0, [sp, #40]	; 0x28
  40174e:	f002 ffa5 	bl	40469c <__ssprint_r>
  401752:	2800      	cmp	r0, #0
  401754:	f47f ae27 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401758:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40175a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40175c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40175e:	9908      	ldr	r1, [sp, #32]
  401760:	428a      	cmp	r2, r1
  401762:	bfac      	ite	ge
  401764:	189b      	addge	r3, r3, r2
  401766:	185b      	addlt	r3, r3, r1
  401768:	930b      	str	r3, [sp, #44]	; 0x2c
  40176a:	2c00      	cmp	r4, #0
  40176c:	f040 82d4 	bne.w	401d18 <_svfprintf_r+0xb64>
  401770:	2300      	movs	r3, #0
  401772:	9324      	str	r3, [sp, #144]	; 0x90
  401774:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401778:	e542      	b.n	401200 <_svfprintf_r+0x4c>
  40177a:	9311      	str	r3, [sp, #68]	; 0x44
  40177c:	46ab      	mov	fp, r5
  40177e:	2a00      	cmp	r2, #0
  401780:	f041 8059 	bne.w	402836 <_svfprintf_r+0x1682>
  401784:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401786:	3707      	adds	r7, #7
  401788:	f027 0307 	bic.w	r3, r7, #7
  40178c:	f103 0208 	add.w	r2, r3, #8
  401790:	920e      	str	r2, [sp, #56]	; 0x38
  401792:	681a      	ldr	r2, [r3, #0]
  401794:	9214      	str	r2, [sp, #80]	; 0x50
  401796:	685b      	ldr	r3, [r3, #4]
  401798:	9315      	str	r3, [sp, #84]	; 0x54
  40179a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40179c:	9d14      	ldr	r5, [sp, #80]	; 0x50
  40179e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4017a2:	4628      	mov	r0, r5
  4017a4:	4621      	mov	r1, r4
  4017a6:	f04f 32ff 	mov.w	r2, #4294967295
  4017aa:	4b8d      	ldr	r3, [pc, #564]	; (4019e0 <_svfprintf_r+0x82c>)
  4017ac:	f004 f854 	bl	405858 <__aeabi_dcmpun>
  4017b0:	2800      	cmp	r0, #0
  4017b2:	f040 84c1 	bne.w	402138 <_svfprintf_r+0xf84>
  4017b6:	4628      	mov	r0, r5
  4017b8:	4621      	mov	r1, r4
  4017ba:	f04f 32ff 	mov.w	r2, #4294967295
  4017be:	4b88      	ldr	r3, [pc, #544]	; (4019e0 <_svfprintf_r+0x82c>)
  4017c0:	f004 f82c 	bl	40581c <__aeabi_dcmple>
  4017c4:	2800      	cmp	r0, #0
  4017c6:	f040 84b7 	bne.w	402138 <_svfprintf_r+0xf84>
  4017ca:	9814      	ldr	r0, [sp, #80]	; 0x50
  4017cc:	9915      	ldr	r1, [sp, #84]	; 0x54
  4017ce:	2200      	movs	r2, #0
  4017d0:	2300      	movs	r3, #0
  4017d2:	f004 f819 	bl	405808 <__aeabi_dcmplt>
  4017d6:	2800      	cmp	r0, #0
  4017d8:	f040 874b 	bne.w	402672 <_svfprintf_r+0x14be>
  4017dc:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4017e0:	4e80      	ldr	r6, [pc, #512]	; (4019e4 <_svfprintf_r+0x830>)
  4017e2:	4b81      	ldr	r3, [pc, #516]	; (4019e8 <_svfprintf_r+0x834>)
  4017e4:	9907      	ldr	r1, [sp, #28]
  4017e6:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  4017ea:	9107      	str	r1, [sp, #28]
  4017ec:	9911      	ldr	r1, [sp, #68]	; 0x44
  4017ee:	2203      	movs	r2, #3
  4017f0:	f04f 0b00 	mov.w	fp, #0
  4017f4:	9208      	str	r2, [sp, #32]
  4017f6:	2947      	cmp	r1, #71	; 0x47
  4017f8:	bfd8      	it	le
  4017fa:	461e      	movle	r6, r3
  4017fc:	920d      	str	r2, [sp, #52]	; 0x34
  4017fe:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  401802:	e69d      	b.n	401540 <_svfprintf_r+0x38c>
  401804:	9b07      	ldr	r3, [sp, #28]
  401806:	f043 0308 	orr.w	r3, r3, #8
  40180a:	9307      	str	r3, [sp, #28]
  40180c:	f898 3000 	ldrb.w	r3, [r8]
  401810:	e529      	b.n	401266 <_svfprintf_r+0xb2>
  401812:	9311      	str	r3, [sp, #68]	; 0x44
  401814:	46ab      	mov	fp, r5
  401816:	2a00      	cmp	r2, #0
  401818:	f041 8009 	bne.w	40282e <_svfprintf_r+0x167a>
  40181c:	9b07      	ldr	r3, [sp, #28]
  40181e:	f043 0310 	orr.w	r3, r3, #16
  401822:	9307      	str	r3, [sp, #28]
  401824:	9a07      	ldr	r2, [sp, #28]
  401826:	f012 0320 	ands.w	r3, r2, #32
  40182a:	f47f add2 	bne.w	4013d2 <_svfprintf_r+0x21e>
  40182e:	9907      	ldr	r1, [sp, #28]
  401830:	f011 0210 	ands.w	r2, r1, #16
  401834:	f000 8507 	beq.w	402246 <_svfprintf_r+0x1092>
  401838:	980e      	ldr	r0, [sp, #56]	; 0x38
  40183a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  40183e:	f1bb 0f00 	cmp.w	fp, #0
  401842:	6804      	ldr	r4, [r0, #0]
  401844:	f100 0704 	add.w	r7, r0, #4
  401848:	f04f 0500 	mov.w	r5, #0
  40184c:	f2c0 8521 	blt.w	402292 <_svfprintf_r+0x10de>
  401850:	460a      	mov	r2, r1
  401852:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  401856:	9207      	str	r2, [sp, #28]
  401858:	ea54 0205 	orrs.w	r2, r4, r5
  40185c:	970e      	str	r7, [sp, #56]	; 0x38
  40185e:	f000 8143 	beq.w	401ae8 <_svfprintf_r+0x934>
  401862:	461f      	mov	r7, r3
  401864:	e5cb      	b.n	4013fe <_svfprintf_r+0x24a>
  401866:	9311      	str	r3, [sp, #68]	; 0x44
  401868:	46ab      	mov	fp, r5
  40186a:	2a00      	cmp	r2, #0
  40186c:	f040 87d7 	bne.w	40281e <_svfprintf_r+0x166a>
  401870:	9b07      	ldr	r3, [sp, #28]
  401872:	f043 0310 	orr.w	r3, r3, #16
  401876:	9307      	str	r3, [sp, #28]
  401878:	9a07      	ldr	r2, [sp, #28]
  40187a:	f012 0320 	ands.w	r3, r2, #32
  40187e:	f000 8332 	beq.w	401ee6 <_svfprintf_r+0xd32>
  401882:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401884:	3707      	adds	r7, #7
  401886:	f027 0307 	bic.w	r3, r7, #7
  40188a:	2700      	movs	r7, #0
  40188c:	f103 0108 	add.w	r1, r3, #8
  401890:	45bb      	cmp	fp, r7
  401892:	910e      	str	r1, [sp, #56]	; 0x38
  401894:	e9d3 4500 	ldrd	r4, r5, [r3]
  401898:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40189c:	f2c0 835c 	blt.w	401f58 <_svfprintf_r+0xda4>
  4018a0:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  4018a4:	9307      	str	r3, [sp, #28]
  4018a6:	ea54 0305 	orrs.w	r3, r4, r5
  4018aa:	f47f ae25 	bne.w	4014f8 <_svfprintf_r+0x344>
  4018ae:	f1bb 0f00 	cmp.w	fp, #0
  4018b2:	f000 80fe 	beq.w	401ab2 <_svfprintf_r+0x8fe>
  4018b6:	2400      	movs	r4, #0
  4018b8:	ae40      	add	r6, sp, #256	; 0x100
  4018ba:	3430      	adds	r4, #48	; 0x30
  4018bc:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4018c0:	e634      	b.n	40152c <_svfprintf_r+0x378>
  4018c2:	9311      	str	r3, [sp, #68]	; 0x44
  4018c4:	46ab      	mov	fp, r5
  4018c6:	2a00      	cmp	r2, #0
  4018c8:	f040 87a5 	bne.w	402816 <_svfprintf_r+0x1662>
  4018cc:	9b07      	ldr	r3, [sp, #28]
  4018ce:	4847      	ldr	r0, [pc, #284]	; (4019ec <_svfprintf_r+0x838>)
  4018d0:	069d      	lsls	r5, r3, #26
  4018d2:	f140 8097 	bpl.w	401a04 <_svfprintf_r+0x850>
  4018d6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4018d8:	3707      	adds	r7, #7
  4018da:	f027 0307 	bic.w	r3, r7, #7
  4018de:	e9d3 4500 	ldrd	r4, r5, [r3]
  4018e2:	f103 0208 	add.w	r2, r3, #8
  4018e6:	920e      	str	r2, [sp, #56]	; 0x38
  4018e8:	9a07      	ldr	r2, [sp, #28]
  4018ea:	f012 0701 	ands.w	r7, r2, #1
  4018ee:	f000 8241 	beq.w	401d74 <_svfprintf_r+0xbc0>
  4018f2:	ea54 0305 	orrs.w	r3, r4, r5
  4018f6:	f000 84f5 	beq.w	4022e4 <_svfprintf_r+0x1130>
  4018fa:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4018fe:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  401902:	2700      	movs	r7, #0
  401904:	9a07      	ldr	r2, [sp, #28]
  401906:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40190a:	2330      	movs	r3, #48	; 0x30
  40190c:	45bb      	cmp	fp, r7
  40190e:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  401912:	f042 0302 	orr.w	r3, r2, #2
  401916:	f2c0 86a9 	blt.w	40266c <_svfprintf_r+0x14b8>
  40191a:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  40191e:	f043 0302 	orr.w	r3, r3, #2
  401922:	9307      	str	r3, [sp, #28]
  401924:	ae30      	add	r6, sp, #192	; 0xc0
  401926:	0923      	lsrs	r3, r4, #4
  401928:	f004 010f 	and.w	r1, r4, #15
  40192c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  401930:	092a      	lsrs	r2, r5, #4
  401932:	461c      	mov	r4, r3
  401934:	4615      	mov	r5, r2
  401936:	5c43      	ldrb	r3, [r0, r1]
  401938:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40193c:	ea54 0305 	orrs.w	r3, r4, r5
  401940:	d1f1      	bne.n	401926 <_svfprintf_r+0x772>
  401942:	e5f3      	b.n	40152c <_svfprintf_r+0x378>
  401944:	990e      	ldr	r1, [sp, #56]	; 0x38
  401946:	9311      	str	r3, [sp, #68]	; 0x44
  401948:	680a      	ldr	r2, [r1, #0]
  40194a:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  40194e:	2300      	movs	r3, #0
  401950:	460a      	mov	r2, r1
  401952:	461f      	mov	r7, r3
  401954:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401958:	3204      	adds	r2, #4
  40195a:	2301      	movs	r3, #1
  40195c:	9308      	str	r3, [sp, #32]
  40195e:	46bb      	mov	fp, r7
  401960:	9713      	str	r7, [sp, #76]	; 0x4c
  401962:	920e      	str	r2, [sp, #56]	; 0x38
  401964:	930d      	str	r3, [sp, #52]	; 0x34
  401966:	ae26      	add	r6, sp, #152	; 0x98
  401968:	e5ee      	b.n	401548 <_svfprintf_r+0x394>
  40196a:	9311      	str	r3, [sp, #68]	; 0x44
  40196c:	46ab      	mov	fp, r5
  40196e:	2a00      	cmp	r2, #0
  401970:	f43f ada0 	beq.w	4014b4 <_svfprintf_r+0x300>
  401974:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  401978:	e59c      	b.n	4014b4 <_svfprintf_r+0x300>
  40197a:	9b07      	ldr	r3, [sp, #28]
  40197c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401980:	9307      	str	r3, [sp, #28]
  401982:	f898 3000 	ldrb.w	r3, [r8]
  401986:	e46e      	b.n	401266 <_svfprintf_r+0xb2>
  401988:	f898 3000 	ldrb.w	r3, [r8]
  40198c:	2900      	cmp	r1, #0
  40198e:	f47f ac6a 	bne.w	401266 <_svfprintf_r+0xb2>
  401992:	2201      	movs	r2, #1
  401994:	2120      	movs	r1, #32
  401996:	e466      	b.n	401266 <_svfprintf_r+0xb2>
  401998:	9b07      	ldr	r3, [sp, #28]
  40199a:	f043 0301 	orr.w	r3, r3, #1
  40199e:	9307      	str	r3, [sp, #28]
  4019a0:	f898 3000 	ldrb.w	r3, [r8]
  4019a4:	e45f      	b.n	401266 <_svfprintf_r+0xb2>
  4019a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4019a8:	6823      	ldr	r3, [r4, #0]
  4019aa:	930c      	str	r3, [sp, #48]	; 0x30
  4019ac:	4618      	mov	r0, r3
  4019ae:	2800      	cmp	r0, #0
  4019b0:	4623      	mov	r3, r4
  4019b2:	f103 0304 	add.w	r3, r3, #4
  4019b6:	f6ff acb8 	blt.w	40132a <_svfprintf_r+0x176>
  4019ba:	930e      	str	r3, [sp, #56]	; 0x38
  4019bc:	f898 3000 	ldrb.w	r3, [r8]
  4019c0:	e451      	b.n	401266 <_svfprintf_r+0xb2>
  4019c2:	f898 3000 	ldrb.w	r3, [r8]
  4019c6:	2201      	movs	r2, #1
  4019c8:	212b      	movs	r1, #43	; 0x2b
  4019ca:	e44c      	b.n	401266 <_svfprintf_r+0xb2>
  4019cc:	9311      	str	r3, [sp, #68]	; 0x44
  4019ce:	46ab      	mov	fp, r5
  4019d0:	2a00      	cmp	r2, #0
  4019d2:	f43f af51 	beq.w	401878 <_svfprintf_r+0x6c4>
  4019d6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4019da:	e74d      	b.n	401878 <_svfprintf_r+0x6c4>
  4019dc:	00405cd0 	.word	0x00405cd0
  4019e0:	7fefffff 	.word	0x7fefffff
  4019e4:	00405c90 	.word	0x00405c90
  4019e8:	00405c8c 	.word	0x00405c8c
  4019ec:	00405c9c 	.word	0x00405c9c
  4019f0:	9311      	str	r3, [sp, #68]	; 0x44
  4019f2:	46ab      	mov	fp, r5
  4019f4:	2a00      	cmp	r2, #0
  4019f6:	f040 8703 	bne.w	402800 <_svfprintf_r+0x164c>
  4019fa:	9b07      	ldr	r3, [sp, #28]
  4019fc:	4899      	ldr	r0, [pc, #612]	; (401c64 <_svfprintf_r+0xab0>)
  4019fe:	069d      	lsls	r5, r3, #26
  401a00:	f53f af69 	bmi.w	4018d6 <_svfprintf_r+0x722>
  401a04:	9b07      	ldr	r3, [sp, #28]
  401a06:	06dc      	lsls	r4, r3, #27
  401a08:	f140 845e 	bpl.w	4022c8 <_svfprintf_r+0x1114>
  401a0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401a0e:	4613      	mov	r3, r2
  401a10:	3304      	adds	r3, #4
  401a12:	6814      	ldr	r4, [r2, #0]
  401a14:	930e      	str	r3, [sp, #56]	; 0x38
  401a16:	2500      	movs	r5, #0
  401a18:	e766      	b.n	4018e8 <_svfprintf_r+0x734>
  401a1a:	f898 3000 	ldrb.w	r3, [r8]
  401a1e:	2b6c      	cmp	r3, #108	; 0x6c
  401a20:	f000 84e1 	beq.w	4023e6 <_svfprintf_r+0x1232>
  401a24:	9807      	ldr	r0, [sp, #28]
  401a26:	f040 0010 	orr.w	r0, r0, #16
  401a2a:	9007      	str	r0, [sp, #28]
  401a2c:	e41b      	b.n	401266 <_svfprintf_r+0xb2>
  401a2e:	2a00      	cmp	r2, #0
  401a30:	f040 86db 	bne.w	4027ea <_svfprintf_r+0x1636>
  401a34:	9b07      	ldr	r3, [sp, #28]
  401a36:	069b      	lsls	r3, r3, #26
  401a38:	f140 842f 	bpl.w	40229a <_svfprintf_r+0x10e6>
  401a3c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401a3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401a40:	6813      	ldr	r3, [r2, #0]
  401a42:	17cd      	asrs	r5, r1, #31
  401a44:	4608      	mov	r0, r1
  401a46:	3204      	adds	r2, #4
  401a48:	4629      	mov	r1, r5
  401a4a:	920e      	str	r2, [sp, #56]	; 0x38
  401a4c:	e9c3 0100 	strd	r0, r1, [r3]
  401a50:	f7ff bbd6 	b.w	401200 <_svfprintf_r+0x4c>
  401a54:	9b07      	ldr	r3, [sp, #28]
  401a56:	f043 0320 	orr.w	r3, r3, #32
  401a5a:	9307      	str	r3, [sp, #28]
  401a5c:	f898 3000 	ldrb.w	r3, [r8]
  401a60:	e401      	b.n	401266 <_svfprintf_r+0xb2>
  401a62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401a64:	9311      	str	r3, [sp, #68]	; 0x44
  401a66:	6816      	ldr	r6, [r2, #0]
  401a68:	2400      	movs	r4, #0
  401a6a:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  401a6e:	1d17      	adds	r7, r2, #4
  401a70:	2e00      	cmp	r6, #0
  401a72:	f000 85bd 	beq.w	4025f0 <_svfprintf_r+0x143c>
  401a76:	2d00      	cmp	r5, #0
  401a78:	f2c0 850f 	blt.w	40249a <_svfprintf_r+0x12e6>
  401a7c:	462a      	mov	r2, r5
  401a7e:	4621      	mov	r1, r4
  401a80:	4630      	mov	r0, r6
  401a82:	f002 f985 	bl	403d90 <memchr>
  401a86:	2800      	cmp	r0, #0
  401a88:	f000 8604 	beq.w	402694 <_svfprintf_r+0x14e0>
  401a8c:	1b83      	subs	r3, r0, r6
  401a8e:	930d      	str	r3, [sp, #52]	; 0x34
  401a90:	46a3      	mov	fp, r4
  401a92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401a96:	970e      	str	r7, [sp, #56]	; 0x38
  401a98:	9308      	str	r3, [sp, #32]
  401a9a:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  401a9e:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  401aa2:	e54d      	b.n	401540 <_svfprintf_r+0x38c>
  401aa4:	486f      	ldr	r0, [pc, #444]	; (401c64 <_svfprintf_r+0xab0>)
  401aa6:	9211      	str	r2, [sp, #68]	; 0x44
  401aa8:	f1bb 0f00 	cmp.w	fp, #0
  401aac:	f040 8173 	bne.w	401d96 <_svfprintf_r+0xbe2>
  401ab0:	465f      	mov	r7, fp
  401ab2:	f04f 0b00 	mov.w	fp, #0
  401ab6:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  401aba:	ae30      	add	r6, sp, #192	; 0xc0
  401abc:	e539      	b.n	401532 <_svfprintf_r+0x37e>
  401abe:	9311      	str	r3, [sp, #68]	; 0x44
  401ac0:	2a00      	cmp	r2, #0
  401ac2:	f040 86b0 	bne.w	402826 <_svfprintf_r+0x1672>
  401ac6:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ac8:	2a00      	cmp	r2, #0
  401aca:	f43f ac65 	beq.w	401398 <_svfprintf_r+0x1e4>
  401ace:	2300      	movs	r3, #0
  401ad0:	2101      	movs	r1, #1
  401ad2:	461f      	mov	r7, r3
  401ad4:	9108      	str	r1, [sp, #32]
  401ad6:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  401ada:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401ade:	469b      	mov	fp, r3
  401ae0:	9313      	str	r3, [sp, #76]	; 0x4c
  401ae2:	910d      	str	r1, [sp, #52]	; 0x34
  401ae4:	ae26      	add	r6, sp, #152	; 0x98
  401ae6:	e52f      	b.n	401548 <_svfprintf_r+0x394>
  401ae8:	f1bb 0f00 	cmp.w	fp, #0
  401aec:	f000 85dd 	beq.w	4026aa <_svfprintf_r+0x14f6>
  401af0:	2700      	movs	r7, #0
  401af2:	2400      	movs	r4, #0
  401af4:	2500      	movs	r5, #0
  401af6:	e482      	b.n	4013fe <_svfprintf_r+0x24a>
  401af8:	485a      	ldr	r0, [pc, #360]	; (401c64 <_svfprintf_r+0xab0>)
  401afa:	9307      	str	r3, [sp, #28]
  401afc:	9211      	str	r2, [sp, #68]	; 0x44
  401afe:	ea54 0305 	orrs.w	r3, r4, r5
  401b02:	970e      	str	r7, [sp, #56]	; 0x38
  401b04:	f04f 0700 	mov.w	r7, #0
  401b08:	f47f af0c 	bne.w	401924 <_svfprintf_r+0x770>
  401b0c:	2400      	movs	r4, #0
  401b0e:	2500      	movs	r5, #0
  401b10:	e708      	b.n	401924 <_svfprintf_r+0x770>
  401b12:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401b14:	e568      	b.n	4015e8 <_svfprintf_r+0x434>
  401b16:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401b18:	2b65      	cmp	r3, #101	; 0x65
  401b1a:	f340 80a9 	ble.w	401c70 <_svfprintf_r+0xabc>
  401b1e:	9814      	ldr	r0, [sp, #80]	; 0x50
  401b20:	9915      	ldr	r1, [sp, #84]	; 0x54
  401b22:	2200      	movs	r2, #0
  401b24:	2300      	movs	r3, #0
  401b26:	f003 fe65 	bl	4057f4 <__aeabi_dcmpeq>
  401b2a:	2800      	cmp	r0, #0
  401b2c:	f000 8135 	beq.w	401d9a <_svfprintf_r+0xbe6>
  401b30:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401b32:	4a4d      	ldr	r2, [pc, #308]	; (401c68 <_svfprintf_r+0xab4>)
  401b34:	f8c9 2000 	str.w	r2, [r9]
  401b38:	3301      	adds	r3, #1
  401b3a:	3401      	adds	r4, #1
  401b3c:	2201      	movs	r2, #1
  401b3e:	2b07      	cmp	r3, #7
  401b40:	9425      	str	r4, [sp, #148]	; 0x94
  401b42:	9324      	str	r3, [sp, #144]	; 0x90
  401b44:	f8c9 2004 	str.w	r2, [r9, #4]
  401b48:	f300 83e6 	bgt.w	402318 <_svfprintf_r+0x1164>
  401b4c:	f109 0908 	add.w	r9, r9, #8
  401b50:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  401b52:	9a12      	ldr	r2, [sp, #72]	; 0x48
  401b54:	4293      	cmp	r3, r2
  401b56:	db03      	blt.n	401b60 <_svfprintf_r+0x9ac>
  401b58:	9b07      	ldr	r3, [sp, #28]
  401b5a:	07db      	lsls	r3, r3, #31
  401b5c:	f57f adba 	bpl.w	4016d4 <_svfprintf_r+0x520>
  401b60:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401b62:	9916      	ldr	r1, [sp, #88]	; 0x58
  401b64:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  401b66:	f8c9 2000 	str.w	r2, [r9]
  401b6a:	3301      	adds	r3, #1
  401b6c:	440c      	add	r4, r1
  401b6e:	2b07      	cmp	r3, #7
  401b70:	9425      	str	r4, [sp, #148]	; 0x94
  401b72:	f8c9 1004 	str.w	r1, [r9, #4]
  401b76:	9324      	str	r3, [sp, #144]	; 0x90
  401b78:	f300 843f 	bgt.w	4023fa <_svfprintf_r+0x1246>
  401b7c:	f109 0908 	add.w	r9, r9, #8
  401b80:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401b82:	1e5d      	subs	r5, r3, #1
  401b84:	2d00      	cmp	r5, #0
  401b86:	f77f ada5 	ble.w	4016d4 <_svfprintf_r+0x520>
  401b8a:	4a38      	ldr	r2, [pc, #224]	; (401c6c <_svfprintf_r+0xab8>)
  401b8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401b8e:	920f      	str	r2, [sp, #60]	; 0x3c
  401b90:	2d10      	cmp	r5, #16
  401b92:	f340 81e6 	ble.w	401f62 <_svfprintf_r+0xdae>
  401b96:	2610      	movs	r6, #16
  401b98:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  401b9a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  401b9e:	e005      	b.n	401bac <_svfprintf_r+0x9f8>
  401ba0:	f109 0908 	add.w	r9, r9, #8
  401ba4:	3d10      	subs	r5, #16
  401ba6:	2d10      	cmp	r5, #16
  401ba8:	f340 81db 	ble.w	401f62 <_svfprintf_r+0xdae>
  401bac:	3301      	adds	r3, #1
  401bae:	3410      	adds	r4, #16
  401bb0:	2b07      	cmp	r3, #7
  401bb2:	9425      	str	r4, [sp, #148]	; 0x94
  401bb4:	9324      	str	r3, [sp, #144]	; 0x90
  401bb6:	f8c9 a000 	str.w	sl, [r9]
  401bba:	f8c9 6004 	str.w	r6, [r9, #4]
  401bbe:	ddef      	ble.n	401ba0 <_svfprintf_r+0x9ec>
  401bc0:	aa23      	add	r2, sp, #140	; 0x8c
  401bc2:	4659      	mov	r1, fp
  401bc4:	4638      	mov	r0, r7
  401bc6:	f002 fd69 	bl	40469c <__ssprint_r>
  401bca:	2800      	cmp	r0, #0
  401bcc:	f47f abeb 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401bd0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401bd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401bd4:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401bd8:	e7e4      	b.n	401ba4 <_svfprintf_r+0x9f0>
  401bda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401bdc:	9a08      	ldr	r2, [sp, #32]
  401bde:	1a9f      	subs	r7, r3, r2
  401be0:	2f00      	cmp	r7, #0
  401be2:	f77f ad25 	ble.w	401630 <_svfprintf_r+0x47c>
  401be6:	4a21      	ldr	r2, [pc, #132]	; (401c6c <_svfprintf_r+0xab8>)
  401be8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401bea:	920f      	str	r2, [sp, #60]	; 0x3c
  401bec:	2f10      	cmp	r7, #16
  401bee:	dd2b      	ble.n	401c48 <_svfprintf_r+0xa94>
  401bf0:	464a      	mov	r2, r9
  401bf2:	4621      	mov	r1, r4
  401bf4:	46b9      	mov	r9, r7
  401bf6:	2510      	movs	r5, #16
  401bf8:	4637      	mov	r7, r6
  401bfa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  401bfc:	9e09      	ldr	r6, [sp, #36]	; 0x24
  401bfe:	e006      	b.n	401c0e <_svfprintf_r+0xa5a>
  401c00:	f1a9 0910 	sub.w	r9, r9, #16
  401c04:	f1b9 0f10 	cmp.w	r9, #16
  401c08:	f102 0208 	add.w	r2, r2, #8
  401c0c:	dd18      	ble.n	401c40 <_svfprintf_r+0xa8c>
  401c0e:	3301      	adds	r3, #1
  401c10:	3110      	adds	r1, #16
  401c12:	2b07      	cmp	r3, #7
  401c14:	9125      	str	r1, [sp, #148]	; 0x94
  401c16:	9324      	str	r3, [sp, #144]	; 0x90
  401c18:	f8c2 a000 	str.w	sl, [r2]
  401c1c:	6055      	str	r5, [r2, #4]
  401c1e:	ddef      	ble.n	401c00 <_svfprintf_r+0xa4c>
  401c20:	aa23      	add	r2, sp, #140	; 0x8c
  401c22:	4631      	mov	r1, r6
  401c24:	4620      	mov	r0, r4
  401c26:	f002 fd39 	bl	40469c <__ssprint_r>
  401c2a:	2800      	cmp	r0, #0
  401c2c:	f47f abbb 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401c30:	f1a9 0910 	sub.w	r9, r9, #16
  401c34:	f1b9 0f10 	cmp.w	r9, #16
  401c38:	9925      	ldr	r1, [sp, #148]	; 0x94
  401c3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401c3c:	aa30      	add	r2, sp, #192	; 0xc0
  401c3e:	dce6      	bgt.n	401c0e <_svfprintf_r+0xa5a>
  401c40:	463e      	mov	r6, r7
  401c42:	460c      	mov	r4, r1
  401c44:	464f      	mov	r7, r9
  401c46:	4691      	mov	r9, r2
  401c48:	3301      	adds	r3, #1
  401c4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401c4c:	9324      	str	r3, [sp, #144]	; 0x90
  401c4e:	443c      	add	r4, r7
  401c50:	2b07      	cmp	r3, #7
  401c52:	9425      	str	r4, [sp, #148]	; 0x94
  401c54:	e889 0084 	stmia.w	r9, {r2, r7}
  401c58:	f300 8245 	bgt.w	4020e6 <_svfprintf_r+0xf32>
  401c5c:	f109 0908 	add.w	r9, r9, #8
  401c60:	e4e6      	b.n	401630 <_svfprintf_r+0x47c>
  401c62:	bf00      	nop
  401c64:	00405cb0 	.word	0x00405cb0
  401c68:	00405ccc 	.word	0x00405ccc
  401c6c:	00405c7c 	.word	0x00405c7c
  401c70:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401c72:	9d24      	ldr	r5, [sp, #144]	; 0x90
  401c74:	2b01      	cmp	r3, #1
  401c76:	f340 8208 	ble.w	40208a <_svfprintf_r+0xed6>
  401c7a:	3501      	adds	r5, #1
  401c7c:	3401      	adds	r4, #1
  401c7e:	2301      	movs	r3, #1
  401c80:	2d07      	cmp	r5, #7
  401c82:	9425      	str	r4, [sp, #148]	; 0x94
  401c84:	9524      	str	r5, [sp, #144]	; 0x90
  401c86:	f8c9 6000 	str.w	r6, [r9]
  401c8a:	f8c9 3004 	str.w	r3, [r9, #4]
  401c8e:	f300 820d 	bgt.w	4020ac <_svfprintf_r+0xef8>
  401c92:	f109 0908 	add.w	r9, r9, #8
  401c96:	9a16      	ldr	r2, [sp, #88]	; 0x58
  401c98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  401c9a:	f8c9 3000 	str.w	r3, [r9]
  401c9e:	3501      	adds	r5, #1
  401ca0:	4414      	add	r4, r2
  401ca2:	2d07      	cmp	r5, #7
  401ca4:	9425      	str	r4, [sp, #148]	; 0x94
  401ca6:	9524      	str	r5, [sp, #144]	; 0x90
  401ca8:	f8c9 2004 	str.w	r2, [r9, #4]
  401cac:	f300 820e 	bgt.w	4020cc <_svfprintf_r+0xf18>
  401cb0:	f109 0908 	add.w	r9, r9, #8
  401cb4:	2300      	movs	r3, #0
  401cb6:	9814      	ldr	r0, [sp, #80]	; 0x50
  401cb8:	9915      	ldr	r1, [sp, #84]	; 0x54
  401cba:	2200      	movs	r2, #0
  401cbc:	f003 fd9a 	bl	4057f4 <__aeabi_dcmpeq>
  401cc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401cc2:	2800      	cmp	r0, #0
  401cc4:	f040 80c3 	bne.w	401e4e <_svfprintf_r+0xc9a>
  401cc8:	3b01      	subs	r3, #1
  401cca:	3501      	adds	r5, #1
  401ccc:	3601      	adds	r6, #1
  401cce:	441c      	add	r4, r3
  401cd0:	2d07      	cmp	r5, #7
  401cd2:	9524      	str	r5, [sp, #144]	; 0x90
  401cd4:	9425      	str	r4, [sp, #148]	; 0x94
  401cd6:	f8c9 6000 	str.w	r6, [r9]
  401cda:	f8c9 3004 	str.w	r3, [r9, #4]
  401cde:	f300 80f5 	bgt.w	401ecc <_svfprintf_r+0xd18>
  401ce2:	f109 0908 	add.w	r9, r9, #8
  401ce6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  401ce8:	f8c9 2004 	str.w	r2, [r9, #4]
  401cec:	3501      	adds	r5, #1
  401cee:	4414      	add	r4, r2
  401cf0:	ab1f      	add	r3, sp, #124	; 0x7c
  401cf2:	2d07      	cmp	r5, #7
  401cf4:	9425      	str	r4, [sp, #148]	; 0x94
  401cf6:	9524      	str	r5, [sp, #144]	; 0x90
  401cf8:	f8c9 3000 	str.w	r3, [r9]
  401cfc:	f77f ace8 	ble.w	4016d0 <_svfprintf_r+0x51c>
  401d00:	aa23      	add	r2, sp, #140	; 0x8c
  401d02:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d04:	980a      	ldr	r0, [sp, #40]	; 0x28
  401d06:	f002 fcc9 	bl	40469c <__ssprint_r>
  401d0a:	2800      	cmp	r0, #0
  401d0c:	f47f ab4b 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401d10:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401d12:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401d16:	e4dd      	b.n	4016d4 <_svfprintf_r+0x520>
  401d18:	aa23      	add	r2, sp, #140	; 0x8c
  401d1a:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d1c:	980a      	ldr	r0, [sp, #40]	; 0x28
  401d1e:	f002 fcbd 	bl	40469c <__ssprint_r>
  401d22:	2800      	cmp	r0, #0
  401d24:	f43f ad24 	beq.w	401770 <_svfprintf_r+0x5bc>
  401d28:	f7ff bb3d 	b.w	4013a6 <_svfprintf_r+0x1f2>
  401d2c:	aa23      	add	r2, sp, #140	; 0x8c
  401d2e:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d30:	980a      	ldr	r0, [sp, #40]	; 0x28
  401d32:	f002 fcb3 	bl	40469c <__ssprint_r>
  401d36:	2800      	cmp	r0, #0
  401d38:	f47f ab35 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401d3c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401d3e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401d42:	e4b4      	b.n	4016ae <_svfprintf_r+0x4fa>
  401d44:	aa23      	add	r2, sp, #140	; 0x8c
  401d46:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d48:	980a      	ldr	r0, [sp, #40]	; 0x28
  401d4a:	f002 fca7 	bl	40469c <__ssprint_r>
  401d4e:	2800      	cmp	r0, #0
  401d50:	f47f ab29 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401d54:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401d56:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401d5a:	e455      	b.n	401608 <_svfprintf_r+0x454>
  401d5c:	aa23      	add	r2, sp, #140	; 0x8c
  401d5e:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d60:	980a      	ldr	r0, [sp, #40]	; 0x28
  401d62:	f002 fc9b 	bl	40469c <__ssprint_r>
  401d66:	2800      	cmp	r0, #0
  401d68:	f47f ab1d 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401d6c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401d6e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401d72:	e459      	b.n	401628 <_svfprintf_r+0x474>
  401d74:	f1bb 0f00 	cmp.w	fp, #0
  401d78:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  401d7c:	f2c0 82d8 	blt.w	402330 <_svfprintf_r+0x117c>
  401d80:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  401d84:	9307      	str	r3, [sp, #28]
  401d86:	ea54 0305 	orrs.w	r3, r4, r5
  401d8a:	f47f adcb 	bne.w	401924 <_svfprintf_r+0x770>
  401d8e:	f1bb 0f00 	cmp.w	fp, #0
  401d92:	f43f ae8d 	beq.w	401ab0 <_svfprintf_r+0x8fc>
  401d96:	2700      	movs	r7, #0
  401d98:	e6b8      	b.n	401b0c <_svfprintf_r+0x958>
  401d9a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  401d9c:	2d00      	cmp	r5, #0
  401d9e:	f340 82ca 	ble.w	402336 <_svfprintf_r+0x1182>
  401da2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401da4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  401da6:	4293      	cmp	r3, r2
  401da8:	bfa8      	it	ge
  401daa:	4613      	movge	r3, r2
  401dac:	2b00      	cmp	r3, #0
  401dae:	461d      	mov	r5, r3
  401db0:	dd0d      	ble.n	401dce <_svfprintf_r+0xc1a>
  401db2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401db4:	f8c9 6000 	str.w	r6, [r9]
  401db8:	3301      	adds	r3, #1
  401dba:	442c      	add	r4, r5
  401dbc:	2b07      	cmp	r3, #7
  401dbe:	9425      	str	r4, [sp, #148]	; 0x94
  401dc0:	f8c9 5004 	str.w	r5, [r9, #4]
  401dc4:	9324      	str	r3, [sp, #144]	; 0x90
  401dc6:	f300 839c 	bgt.w	402502 <_svfprintf_r+0x134e>
  401dca:	f109 0908 	add.w	r9, r9, #8
  401dce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401dd0:	2d00      	cmp	r5, #0
  401dd2:	bfa8      	it	ge
  401dd4:	1b5b      	subge	r3, r3, r5
  401dd6:	2b00      	cmp	r3, #0
  401dd8:	461d      	mov	r5, r3
  401dda:	f340 80f6 	ble.w	401fca <_svfprintf_r+0xe16>
  401dde:	4aba      	ldr	r2, [pc, #744]	; (4020c8 <_svfprintf_r+0xf14>)
  401de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401de2:	920f      	str	r2, [sp, #60]	; 0x3c
  401de4:	2d10      	cmp	r5, #16
  401de6:	f340 828a 	ble.w	4022fe <_svfprintf_r+0x114a>
  401dea:	4622      	mov	r2, r4
  401dec:	2710      	movs	r7, #16
  401dee:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  401df2:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401df4:	e005      	b.n	401e02 <_svfprintf_r+0xc4e>
  401df6:	f109 0908 	add.w	r9, r9, #8
  401dfa:	3d10      	subs	r5, #16
  401dfc:	2d10      	cmp	r5, #16
  401dfe:	f340 827d 	ble.w	4022fc <_svfprintf_r+0x1148>
  401e02:	3301      	adds	r3, #1
  401e04:	3210      	adds	r2, #16
  401e06:	2b07      	cmp	r3, #7
  401e08:	9225      	str	r2, [sp, #148]	; 0x94
  401e0a:	9324      	str	r3, [sp, #144]	; 0x90
  401e0c:	f8c9 a000 	str.w	sl, [r9]
  401e10:	f8c9 7004 	str.w	r7, [r9, #4]
  401e14:	ddef      	ble.n	401df6 <_svfprintf_r+0xc42>
  401e16:	aa23      	add	r2, sp, #140	; 0x8c
  401e18:	4621      	mov	r1, r4
  401e1a:	4658      	mov	r0, fp
  401e1c:	f002 fc3e 	bl	40469c <__ssprint_r>
  401e20:	2800      	cmp	r0, #0
  401e22:	f47f aac0 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401e26:	9a25      	ldr	r2, [sp, #148]	; 0x94
  401e28:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401e2a:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401e2e:	e7e4      	b.n	401dfa <_svfprintf_r+0xc46>
  401e30:	aa23      	add	r2, sp, #140	; 0x8c
  401e32:	9909      	ldr	r1, [sp, #36]	; 0x24
  401e34:	980a      	ldr	r0, [sp, #40]	; 0x28
  401e36:	f002 fc31 	bl	40469c <__ssprint_r>
  401e3a:	2800      	cmp	r0, #0
  401e3c:	f47f aab3 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401e40:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  401e44:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401e46:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401e4a:	f7ff bbcd 	b.w	4015e8 <_svfprintf_r+0x434>
  401e4e:	1e5e      	subs	r6, r3, #1
  401e50:	2e00      	cmp	r6, #0
  401e52:	f77f af48 	ble.w	401ce6 <_svfprintf_r+0xb32>
  401e56:	4b9c      	ldr	r3, [pc, #624]	; (4020c8 <_svfprintf_r+0xf14>)
  401e58:	930f      	str	r3, [sp, #60]	; 0x3c
  401e5a:	2e10      	cmp	r6, #16
  401e5c:	dd2c      	ble.n	401eb8 <_svfprintf_r+0xd04>
  401e5e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  401e62:	2710      	movs	r7, #16
  401e64:	46b0      	mov	r8, r6
  401e66:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  401e6a:	9e09      	ldr	r6, [sp, #36]	; 0x24
  401e6c:	e006      	b.n	401e7c <_svfprintf_r+0xcc8>
  401e6e:	f1a8 0810 	sub.w	r8, r8, #16
  401e72:	f1b8 0f10 	cmp.w	r8, #16
  401e76:	f109 0908 	add.w	r9, r9, #8
  401e7a:	dd1a      	ble.n	401eb2 <_svfprintf_r+0xcfe>
  401e7c:	3501      	adds	r5, #1
  401e7e:	3410      	adds	r4, #16
  401e80:	2d07      	cmp	r5, #7
  401e82:	9425      	str	r4, [sp, #148]	; 0x94
  401e84:	9524      	str	r5, [sp, #144]	; 0x90
  401e86:	f8c9 a000 	str.w	sl, [r9]
  401e8a:	f8c9 7004 	str.w	r7, [r9, #4]
  401e8e:	ddee      	ble.n	401e6e <_svfprintf_r+0xcba>
  401e90:	aa23      	add	r2, sp, #140	; 0x8c
  401e92:	4631      	mov	r1, r6
  401e94:	4658      	mov	r0, fp
  401e96:	f002 fc01 	bl	40469c <__ssprint_r>
  401e9a:	2800      	cmp	r0, #0
  401e9c:	f47f aa83 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401ea0:	f1a8 0810 	sub.w	r8, r8, #16
  401ea4:	f1b8 0f10 	cmp.w	r8, #16
  401ea8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401eaa:	9d24      	ldr	r5, [sp, #144]	; 0x90
  401eac:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401eb0:	dce4      	bgt.n	401e7c <_svfprintf_r+0xcc8>
  401eb2:	4646      	mov	r6, r8
  401eb4:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  401eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401eba:	3501      	adds	r5, #1
  401ebc:	4434      	add	r4, r6
  401ebe:	2d07      	cmp	r5, #7
  401ec0:	9425      	str	r4, [sp, #148]	; 0x94
  401ec2:	9524      	str	r5, [sp, #144]	; 0x90
  401ec4:	e889 0048 	stmia.w	r9, {r3, r6}
  401ec8:	f77f af0b 	ble.w	401ce2 <_svfprintf_r+0xb2e>
  401ecc:	aa23      	add	r2, sp, #140	; 0x8c
  401ece:	9909      	ldr	r1, [sp, #36]	; 0x24
  401ed0:	980a      	ldr	r0, [sp, #40]	; 0x28
  401ed2:	f002 fbe3 	bl	40469c <__ssprint_r>
  401ed6:	2800      	cmp	r0, #0
  401ed8:	f47f aa65 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401edc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401ede:	9d24      	ldr	r5, [sp, #144]	; 0x90
  401ee0:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401ee4:	e6ff      	b.n	401ce6 <_svfprintf_r+0xb32>
  401ee6:	9907      	ldr	r1, [sp, #28]
  401ee8:	f011 0210 	ands.w	r2, r1, #16
  401eec:	f000 8108 	beq.w	402100 <_svfprintf_r+0xf4c>
  401ef0:	980e      	ldr	r0, [sp, #56]	; 0x38
  401ef2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401ef6:	f1bb 0f00 	cmp.w	fp, #0
  401efa:	6804      	ldr	r4, [r0, #0]
  401efc:	f100 0704 	add.w	r7, r0, #4
  401f00:	f04f 0500 	mov.w	r5, #0
  401f04:	db26      	blt.n	401f54 <_svfprintf_r+0xda0>
  401f06:	460a      	mov	r2, r1
  401f08:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  401f0c:	9207      	str	r2, [sp, #28]
  401f0e:	ea54 0205 	orrs.w	r2, r4, r5
  401f12:	970e      	str	r7, [sp, #56]	; 0x38
  401f14:	461f      	mov	r7, r3
  401f16:	f47f aaef 	bne.w	4014f8 <_svfprintf_r+0x344>
  401f1a:	e4c8      	b.n	4018ae <_svfprintf_r+0x6fa>
  401f1c:	9b07      	ldr	r3, [sp, #28]
  401f1e:	06d9      	lsls	r1, r3, #27
  401f20:	d42a      	bmi.n	401f78 <_svfprintf_r+0xdc4>
  401f22:	9b07      	ldr	r3, [sp, #28]
  401f24:	065a      	lsls	r2, r3, #25
  401f26:	d527      	bpl.n	401f78 <_svfprintf_r+0xdc4>
  401f28:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f2a:	f9b1 4000 	ldrsh.w	r4, [r1]
  401f2e:	3104      	adds	r1, #4
  401f30:	17e5      	asrs	r5, r4, #31
  401f32:	4622      	mov	r2, r4
  401f34:	462b      	mov	r3, r5
  401f36:	910e      	str	r1, [sp, #56]	; 0x38
  401f38:	f7ff bacb 	b.w	4014d2 <_svfprintf_r+0x31e>
  401f3c:	990e      	ldr	r1, [sp, #56]	; 0x38
  401f3e:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401f42:	f1bb 0f00 	cmp.w	fp, #0
  401f46:	680c      	ldr	r4, [r1, #0]
  401f48:	f101 0704 	add.w	r7, r1, #4
  401f4c:	f04f 0500 	mov.w	r5, #0
  401f50:	f280 8247 	bge.w	4023e2 <_svfprintf_r+0x122e>
  401f54:	970e      	str	r7, [sp, #56]	; 0x38
  401f56:	461f      	mov	r7, r3
  401f58:	ea54 0305 	orrs.w	r3, r4, r5
  401f5c:	f47f aacc 	bne.w	4014f8 <_svfprintf_r+0x344>
  401f60:	e4aa      	b.n	4018b8 <_svfprintf_r+0x704>
  401f62:	3301      	adds	r3, #1
  401f64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f66:	9324      	str	r3, [sp, #144]	; 0x90
  401f68:	442c      	add	r4, r5
  401f6a:	2b07      	cmp	r3, #7
  401f6c:	9425      	str	r4, [sp, #148]	; 0x94
  401f6e:	e889 0024 	stmia.w	r9, {r2, r5}
  401f72:	f77f abad 	ble.w	4016d0 <_svfprintf_r+0x51c>
  401f76:	e6c3      	b.n	401d00 <_svfprintf_r+0xb4c>
  401f78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401f7a:	6814      	ldr	r4, [r2, #0]
  401f7c:	4613      	mov	r3, r2
  401f7e:	3304      	adds	r3, #4
  401f80:	17e5      	asrs	r5, r4, #31
  401f82:	4622      	mov	r2, r4
  401f84:	930e      	str	r3, [sp, #56]	; 0x38
  401f86:	2a00      	cmp	r2, #0
  401f88:	462b      	mov	r3, r5
  401f8a:	f173 0300 	sbcs.w	r3, r3, #0
  401f8e:	f6bf aaa5 	bge.w	4014dc <_svfprintf_r+0x328>
  401f92:	4264      	negs	r4, r4
  401f94:	f04f 072d 	mov.w	r7, #45	; 0x2d
  401f98:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  401f9c:	f1bb 0f00 	cmp.w	fp, #0
  401fa0:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  401fa4:	f6ff aaa8 	blt.w	4014f8 <_svfprintf_r+0x344>
  401fa8:	9b07      	ldr	r3, [sp, #28]
  401faa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401fae:	9307      	str	r3, [sp, #28]
  401fb0:	f7ff baa2 	b.w	4014f8 <_svfprintf_r+0x344>
  401fb4:	aa23      	add	r2, sp, #140	; 0x8c
  401fb6:	9909      	ldr	r1, [sp, #36]	; 0x24
  401fb8:	980a      	ldr	r0, [sp, #40]	; 0x28
  401fba:	f002 fb6f 	bl	40469c <__ssprint_r>
  401fbe:	2800      	cmp	r0, #0
  401fc0:	f47f a9f1 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  401fc4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401fc6:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401fca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  401fcc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  401fce:	4432      	add	r2, r6
  401fd0:	4617      	mov	r7, r2
  401fd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  401fd4:	4293      	cmp	r3, r2
  401fd6:	db47      	blt.n	402068 <_svfprintf_r+0xeb4>
  401fd8:	9a07      	ldr	r2, [sp, #28]
  401fda:	07d5      	lsls	r5, r2, #31
  401fdc:	d444      	bmi.n	402068 <_svfprintf_r+0xeb4>
  401fde:	9912      	ldr	r1, [sp, #72]	; 0x48
  401fe0:	440e      	add	r6, r1
  401fe2:	1bf5      	subs	r5, r6, r7
  401fe4:	1acb      	subs	r3, r1, r3
  401fe6:	429d      	cmp	r5, r3
  401fe8:	bfa8      	it	ge
  401fea:	461d      	movge	r5, r3
  401fec:	2d00      	cmp	r5, #0
  401fee:	462e      	mov	r6, r5
  401ff0:	dd0d      	ble.n	40200e <_svfprintf_r+0xe5a>
  401ff2:	9a24      	ldr	r2, [sp, #144]	; 0x90
  401ff4:	f8c9 7000 	str.w	r7, [r9]
  401ff8:	3201      	adds	r2, #1
  401ffa:	442c      	add	r4, r5
  401ffc:	2a07      	cmp	r2, #7
  401ffe:	9425      	str	r4, [sp, #148]	; 0x94
  402000:	f8c9 5004 	str.w	r5, [r9, #4]
  402004:	9224      	str	r2, [sp, #144]	; 0x90
  402006:	f300 830b 	bgt.w	402620 <_svfprintf_r+0x146c>
  40200a:	f109 0908 	add.w	r9, r9, #8
  40200e:	2e00      	cmp	r6, #0
  402010:	bfac      	ite	ge
  402012:	1b9d      	subge	r5, r3, r6
  402014:	461d      	movlt	r5, r3
  402016:	2d00      	cmp	r5, #0
  402018:	f77f ab5c 	ble.w	4016d4 <_svfprintf_r+0x520>
  40201c:	4a2a      	ldr	r2, [pc, #168]	; (4020c8 <_svfprintf_r+0xf14>)
  40201e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402020:	920f      	str	r2, [sp, #60]	; 0x3c
  402022:	2d10      	cmp	r5, #16
  402024:	dd9d      	ble.n	401f62 <_svfprintf_r+0xdae>
  402026:	2610      	movs	r6, #16
  402028:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40202a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  40202e:	e004      	b.n	40203a <_svfprintf_r+0xe86>
  402030:	f109 0908 	add.w	r9, r9, #8
  402034:	3d10      	subs	r5, #16
  402036:	2d10      	cmp	r5, #16
  402038:	dd93      	ble.n	401f62 <_svfprintf_r+0xdae>
  40203a:	3301      	adds	r3, #1
  40203c:	3410      	adds	r4, #16
  40203e:	2b07      	cmp	r3, #7
  402040:	9425      	str	r4, [sp, #148]	; 0x94
  402042:	9324      	str	r3, [sp, #144]	; 0x90
  402044:	f8c9 a000 	str.w	sl, [r9]
  402048:	f8c9 6004 	str.w	r6, [r9, #4]
  40204c:	ddf0      	ble.n	402030 <_svfprintf_r+0xe7c>
  40204e:	aa23      	add	r2, sp, #140	; 0x8c
  402050:	4659      	mov	r1, fp
  402052:	4638      	mov	r0, r7
  402054:	f002 fb22 	bl	40469c <__ssprint_r>
  402058:	2800      	cmp	r0, #0
  40205a:	f47f a9a4 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  40205e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402060:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402062:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402066:	e7e5      	b.n	402034 <_svfprintf_r+0xe80>
  402068:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40206a:	9816      	ldr	r0, [sp, #88]	; 0x58
  40206c:	9917      	ldr	r1, [sp, #92]	; 0x5c
  40206e:	f8c9 1000 	str.w	r1, [r9]
  402072:	3201      	adds	r2, #1
  402074:	4404      	add	r4, r0
  402076:	2a07      	cmp	r2, #7
  402078:	9425      	str	r4, [sp, #148]	; 0x94
  40207a:	f8c9 0004 	str.w	r0, [r9, #4]
  40207e:	9224      	str	r2, [sp, #144]	; 0x90
  402080:	f300 82a9 	bgt.w	4025d6 <_svfprintf_r+0x1422>
  402084:	f109 0908 	add.w	r9, r9, #8
  402088:	e7a9      	b.n	401fde <_svfprintf_r+0xe2a>
  40208a:	9b07      	ldr	r3, [sp, #28]
  40208c:	07d8      	lsls	r0, r3, #31
  40208e:	f53f adf4 	bmi.w	401c7a <_svfprintf_r+0xac6>
  402092:	3501      	adds	r5, #1
  402094:	3401      	adds	r4, #1
  402096:	2301      	movs	r3, #1
  402098:	2d07      	cmp	r5, #7
  40209a:	9425      	str	r4, [sp, #148]	; 0x94
  40209c:	9524      	str	r5, [sp, #144]	; 0x90
  40209e:	f8c9 6000 	str.w	r6, [r9]
  4020a2:	f8c9 3004 	str.w	r3, [r9, #4]
  4020a6:	f77f ae1c 	ble.w	401ce2 <_svfprintf_r+0xb2e>
  4020aa:	e70f      	b.n	401ecc <_svfprintf_r+0xd18>
  4020ac:	aa23      	add	r2, sp, #140	; 0x8c
  4020ae:	9909      	ldr	r1, [sp, #36]	; 0x24
  4020b0:	980a      	ldr	r0, [sp, #40]	; 0x28
  4020b2:	f002 faf3 	bl	40469c <__ssprint_r>
  4020b6:	2800      	cmp	r0, #0
  4020b8:	f47f a975 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4020bc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4020be:	9d24      	ldr	r5, [sp, #144]	; 0x90
  4020c0:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4020c4:	e5e7      	b.n	401c96 <_svfprintf_r+0xae2>
  4020c6:	bf00      	nop
  4020c8:	00405c7c 	.word	0x00405c7c
  4020cc:	aa23      	add	r2, sp, #140	; 0x8c
  4020ce:	9909      	ldr	r1, [sp, #36]	; 0x24
  4020d0:	980a      	ldr	r0, [sp, #40]	; 0x28
  4020d2:	f002 fae3 	bl	40469c <__ssprint_r>
  4020d6:	2800      	cmp	r0, #0
  4020d8:	f47f a965 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4020dc:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4020de:	9d24      	ldr	r5, [sp, #144]	; 0x90
  4020e0:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4020e4:	e5e6      	b.n	401cb4 <_svfprintf_r+0xb00>
  4020e6:	aa23      	add	r2, sp, #140	; 0x8c
  4020e8:	9909      	ldr	r1, [sp, #36]	; 0x24
  4020ea:	980a      	ldr	r0, [sp, #40]	; 0x28
  4020ec:	f002 fad6 	bl	40469c <__ssprint_r>
  4020f0:	2800      	cmp	r0, #0
  4020f2:	f47f a958 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4020f6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4020f8:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4020fc:	f7ff ba98 	b.w	401630 <_svfprintf_r+0x47c>
  402100:	9907      	ldr	r1, [sp, #28]
  402102:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  402106:	f43f af19 	beq.w	401f3c <_svfprintf_r+0xd88>
  40210a:	980e      	ldr	r0, [sp, #56]	; 0x38
  40210c:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  402110:	f1bb 0f00 	cmp.w	fp, #0
  402114:	8804      	ldrh	r4, [r0, #0]
  402116:	f100 0704 	add.w	r7, r0, #4
  40211a:	f04f 0500 	mov.w	r5, #0
  40211e:	f2c0 81b9 	blt.w	402494 <_svfprintf_r+0x12e0>
  402122:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  402126:	9307      	str	r3, [sp, #28]
  402128:	ea54 0305 	orrs.w	r3, r4, r5
  40212c:	970e      	str	r7, [sp, #56]	; 0x38
  40212e:	4617      	mov	r7, r2
  402130:	f47f a9e2 	bne.w	4014f8 <_svfprintf_r+0x344>
  402134:	f7ff bbbb 	b.w	4018ae <_svfprintf_r+0x6fa>
  402138:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40213a:	4622      	mov	r2, r4
  40213c:	4620      	mov	r0, r4
  40213e:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402140:	4623      	mov	r3, r4
  402142:	4621      	mov	r1, r4
  402144:	f003 fb88 	bl	405858 <__aeabi_dcmpun>
  402148:	2800      	cmp	r0, #0
  40214a:	f040 8317 	bne.w	40277c <_svfprintf_r+0x15c8>
  40214e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402150:	f1bb 3fff 	cmp.w	fp, #4294967295
  402154:	f023 0320 	bic.w	r3, r3, #32
  402158:	930d      	str	r3, [sp, #52]	; 0x34
  40215a:	f000 8270 	beq.w	40263e <_svfprintf_r+0x148a>
  40215e:	2b47      	cmp	r3, #71	; 0x47
  402160:	f000 8192 	beq.w	402488 <_svfprintf_r+0x12d4>
  402164:	9b07      	ldr	r3, [sp, #28]
  402166:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  40216a:	9310      	str	r3, [sp, #64]	; 0x40
  40216c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40216e:	1e1f      	subs	r7, r3, #0
  402170:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402172:	9308      	str	r3, [sp, #32]
  402174:	bfbb      	ittet	lt
  402176:	463b      	movlt	r3, r7
  402178:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40217c:	2300      	movge	r3, #0
  40217e:	232d      	movlt	r3, #45	; 0x2d
  402180:	930f      	str	r3, [sp, #60]	; 0x3c
  402182:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402184:	2b66      	cmp	r3, #102	; 0x66
  402186:	f000 825d 	beq.w	402644 <_svfprintf_r+0x1490>
  40218a:	2b46      	cmp	r3, #70	; 0x46
  40218c:	f000 8151 	beq.w	402432 <_svfprintf_r+0x127e>
  402190:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402192:	9a08      	ldr	r2, [sp, #32]
  402194:	2b45      	cmp	r3, #69	; 0x45
  402196:	a821      	add	r0, sp, #132	; 0x84
  402198:	a91e      	add	r1, sp, #120	; 0x78
  40219a:	bf0c      	ite	eq
  40219c:	f10b 0501 	addeq.w	r5, fp, #1
  4021a0:	465d      	movne	r5, fp
  4021a2:	9004      	str	r0, [sp, #16]
  4021a4:	9103      	str	r1, [sp, #12]
  4021a6:	a81d      	add	r0, sp, #116	; 0x74
  4021a8:	2102      	movs	r1, #2
  4021aa:	463b      	mov	r3, r7
  4021ac:	9002      	str	r0, [sp, #8]
  4021ae:	9501      	str	r5, [sp, #4]
  4021b0:	9100      	str	r1, [sp, #0]
  4021b2:	980a      	ldr	r0, [sp, #40]	; 0x28
  4021b4:	f000 fbf0 	bl	402998 <_dtoa_r>
  4021b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4021ba:	2b67      	cmp	r3, #103	; 0x67
  4021bc:	4606      	mov	r6, r0
  4021be:	f040 8290 	bne.w	4026e2 <_svfprintf_r+0x152e>
  4021c2:	9b07      	ldr	r3, [sp, #28]
  4021c4:	07da      	lsls	r2, r3, #31
  4021c6:	f140 82af 	bpl.w	402728 <_svfprintf_r+0x1574>
  4021ca:	1974      	adds	r4, r6, r5
  4021cc:	9808      	ldr	r0, [sp, #32]
  4021ce:	4639      	mov	r1, r7
  4021d0:	2200      	movs	r2, #0
  4021d2:	2300      	movs	r3, #0
  4021d4:	f003 fb0e 	bl	4057f4 <__aeabi_dcmpeq>
  4021d8:	2800      	cmp	r0, #0
  4021da:	f040 8190 	bne.w	4024fe <_svfprintf_r+0x134a>
  4021de:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4021e0:	429c      	cmp	r4, r3
  4021e2:	d906      	bls.n	4021f2 <_svfprintf_r+0x103e>
  4021e4:	2130      	movs	r1, #48	; 0x30
  4021e6:	1c5a      	adds	r2, r3, #1
  4021e8:	9221      	str	r2, [sp, #132]	; 0x84
  4021ea:	7019      	strb	r1, [r3, #0]
  4021ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4021ee:	429c      	cmp	r4, r3
  4021f0:	d8f9      	bhi.n	4021e6 <_svfprintf_r+0x1032>
  4021f2:	1b9b      	subs	r3, r3, r6
  4021f4:	9312      	str	r3, [sp, #72]	; 0x48
  4021f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4021f8:	2b47      	cmp	r3, #71	; 0x47
  4021fa:	f000 8179 	beq.w	4024f0 <_svfprintf_r+0x133c>
  4021fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402200:	2b65      	cmp	r3, #101	; 0x65
  402202:	f340 827d 	ble.w	402700 <_svfprintf_r+0x154c>
  402206:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402208:	2b66      	cmp	r3, #102	; 0x66
  40220a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40220c:	9313      	str	r3, [sp, #76]	; 0x4c
  40220e:	f000 825b 	beq.w	4026c8 <_svfprintf_r+0x1514>
  402212:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402214:	9912      	ldr	r1, [sp, #72]	; 0x48
  402216:	428a      	cmp	r2, r1
  402218:	f2c0 8230 	blt.w	40267c <_svfprintf_r+0x14c8>
  40221c:	9b07      	ldr	r3, [sp, #28]
  40221e:	07d9      	lsls	r1, r3, #31
  402220:	f100 8284 	bmi.w	40272c <_svfprintf_r+0x1578>
  402224:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402228:	920d      	str	r2, [sp, #52]	; 0x34
  40222a:	2267      	movs	r2, #103	; 0x67
  40222c:	9211      	str	r2, [sp, #68]	; 0x44
  40222e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402230:	2a00      	cmp	r2, #0
  402232:	f040 8153 	bne.w	4024dc <_svfprintf_r+0x1328>
  402236:	9308      	str	r3, [sp, #32]
  402238:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40223a:	9307      	str	r3, [sp, #28]
  40223c:	4693      	mov	fp, r2
  40223e:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402242:	f7ff b97d 	b.w	401540 <_svfprintf_r+0x38c>
  402246:	9907      	ldr	r1, [sp, #28]
  402248:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  40224c:	d015      	beq.n	40227a <_svfprintf_r+0x10c6>
  40224e:	980e      	ldr	r0, [sp, #56]	; 0x38
  402250:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  402254:	f1bb 0f00 	cmp.w	fp, #0
  402258:	8804      	ldrh	r4, [r0, #0]
  40225a:	f100 0704 	add.w	r7, r0, #4
  40225e:	f04f 0500 	mov.w	r5, #0
  402262:	db16      	blt.n	402292 <_svfprintf_r+0x10de>
  402264:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  402268:	9307      	str	r3, [sp, #28]
  40226a:	ea54 0305 	orrs.w	r3, r4, r5
  40226e:	970e      	str	r7, [sp, #56]	; 0x38
  402270:	f43f ac3a 	beq.w	401ae8 <_svfprintf_r+0x934>
  402274:	4617      	mov	r7, r2
  402276:	f7ff b8c2 	b.w	4013fe <_svfprintf_r+0x24a>
  40227a:	990e      	ldr	r1, [sp, #56]	; 0x38
  40227c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402280:	f1bb 0f00 	cmp.w	fp, #0
  402284:	680c      	ldr	r4, [r1, #0]
  402286:	f101 0704 	add.w	r7, r1, #4
  40228a:	f04f 0500 	mov.w	r5, #0
  40228e:	f280 80a5 	bge.w	4023dc <_svfprintf_r+0x1228>
  402292:	970e      	str	r7, [sp, #56]	; 0x38
  402294:	2700      	movs	r7, #0
  402296:	f7ff b8b2 	b.w	4013fe <_svfprintf_r+0x24a>
  40229a:	9b07      	ldr	r3, [sp, #28]
  40229c:	06df      	lsls	r7, r3, #27
  40229e:	d40b      	bmi.n	4022b8 <_svfprintf_r+0x1104>
  4022a0:	9b07      	ldr	r3, [sp, #28]
  4022a2:	065e      	lsls	r6, r3, #25
  4022a4:	d508      	bpl.n	4022b8 <_svfprintf_r+0x1104>
  4022a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022a8:	6813      	ldr	r3, [r2, #0]
  4022aa:	3204      	adds	r2, #4
  4022ac:	920e      	str	r2, [sp, #56]	; 0x38
  4022ae:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  4022b2:	801a      	strh	r2, [r3, #0]
  4022b4:	f7fe bfa4 	b.w	401200 <_svfprintf_r+0x4c>
  4022b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022ba:	6813      	ldr	r3, [r2, #0]
  4022bc:	3204      	adds	r2, #4
  4022be:	920e      	str	r2, [sp, #56]	; 0x38
  4022c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4022c2:	601a      	str	r2, [r3, #0]
  4022c4:	f7fe bf9c 	b.w	401200 <_svfprintf_r+0x4c>
  4022c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022ca:	9b07      	ldr	r3, [sp, #28]
  4022cc:	f013 0f40 	tst.w	r3, #64	; 0x40
  4022d0:	4613      	mov	r3, r2
  4022d2:	f103 0304 	add.w	r3, r3, #4
  4022d6:	bf0c      	ite	eq
  4022d8:	6814      	ldreq	r4, [r2, #0]
  4022da:	8814      	ldrhne	r4, [r2, #0]
  4022dc:	930e      	str	r3, [sp, #56]	; 0x38
  4022de:	2500      	movs	r5, #0
  4022e0:	f7ff bb02 	b.w	4018e8 <_svfprintf_r+0x734>
  4022e4:	2700      	movs	r7, #0
  4022e6:	45bb      	cmp	fp, r7
  4022e8:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  4022ec:	f6ff ac0e 	blt.w	401b0c <_svfprintf_r+0x958>
  4022f0:	9b07      	ldr	r3, [sp, #28]
  4022f2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4022f6:	9307      	str	r3, [sp, #28]
  4022f8:	f7ff bbd6 	b.w	401aa8 <_svfprintf_r+0x8f4>
  4022fc:	4614      	mov	r4, r2
  4022fe:	3301      	adds	r3, #1
  402300:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402302:	9324      	str	r3, [sp, #144]	; 0x90
  402304:	442c      	add	r4, r5
  402306:	2b07      	cmp	r3, #7
  402308:	9425      	str	r4, [sp, #148]	; 0x94
  40230a:	e889 0024 	stmia.w	r9, {r2, r5}
  40230e:	f73f ae51 	bgt.w	401fb4 <_svfprintf_r+0xe00>
  402312:	f109 0908 	add.w	r9, r9, #8
  402316:	e658      	b.n	401fca <_svfprintf_r+0xe16>
  402318:	aa23      	add	r2, sp, #140	; 0x8c
  40231a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40231c:	980a      	ldr	r0, [sp, #40]	; 0x28
  40231e:	f002 f9bd 	bl	40469c <__ssprint_r>
  402322:	2800      	cmp	r0, #0
  402324:	f47f a83f 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  402328:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40232a:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40232e:	e40f      	b.n	401b50 <_svfprintf_r+0x99c>
  402330:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  402332:	f7ff bbe4 	b.w	401afe <_svfprintf_r+0x94a>
  402336:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402338:	4ab5      	ldr	r2, [pc, #724]	; (402610 <_svfprintf_r+0x145c>)
  40233a:	f8c9 2000 	str.w	r2, [r9]
  40233e:	3301      	adds	r3, #1
  402340:	3401      	adds	r4, #1
  402342:	2201      	movs	r2, #1
  402344:	2b07      	cmp	r3, #7
  402346:	9425      	str	r4, [sp, #148]	; 0x94
  402348:	9324      	str	r3, [sp, #144]	; 0x90
  40234a:	f8c9 2004 	str.w	r2, [r9, #4]
  40234e:	f300 808e 	bgt.w	40246e <_svfprintf_r+0x12ba>
  402352:	f109 0908 	add.w	r9, r9, #8
  402356:	b92d      	cbnz	r5, 402364 <_svfprintf_r+0x11b0>
  402358:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40235a:	b91b      	cbnz	r3, 402364 <_svfprintf_r+0x11b0>
  40235c:	9b07      	ldr	r3, [sp, #28]
  40235e:	07df      	lsls	r7, r3, #31
  402360:	f57f a9b8 	bpl.w	4016d4 <_svfprintf_r+0x520>
  402364:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402366:	9916      	ldr	r1, [sp, #88]	; 0x58
  402368:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  40236a:	f8c9 2000 	str.w	r2, [r9]
  40236e:	3301      	adds	r3, #1
  402370:	440c      	add	r4, r1
  402372:	2b07      	cmp	r3, #7
  402374:	9425      	str	r4, [sp, #148]	; 0x94
  402376:	f8c9 1004 	str.w	r1, [r9, #4]
  40237a:	9324      	str	r3, [sp, #144]	; 0x90
  40237c:	f300 81c2 	bgt.w	402704 <_svfprintf_r+0x1550>
  402380:	f109 0908 	add.w	r9, r9, #8
  402384:	426d      	negs	r5, r5
  402386:	2d00      	cmp	r5, #0
  402388:	f340 809b 	ble.w	4024c2 <_svfprintf_r+0x130e>
  40238c:	4aa1      	ldr	r2, [pc, #644]	; (402614 <_svfprintf_r+0x1460>)
  40238e:	920f      	str	r2, [sp, #60]	; 0x3c
  402390:	2d10      	cmp	r5, #16
  402392:	f340 80c3 	ble.w	40251c <_svfprintf_r+0x1368>
  402396:	4622      	mov	r2, r4
  402398:	2710      	movs	r7, #16
  40239a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40239e:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4023a0:	e005      	b.n	4023ae <_svfprintf_r+0x11fa>
  4023a2:	f109 0908 	add.w	r9, r9, #8
  4023a6:	3d10      	subs	r5, #16
  4023a8:	2d10      	cmp	r5, #16
  4023aa:	f340 80b6 	ble.w	40251a <_svfprintf_r+0x1366>
  4023ae:	3301      	adds	r3, #1
  4023b0:	3210      	adds	r2, #16
  4023b2:	2b07      	cmp	r3, #7
  4023b4:	9225      	str	r2, [sp, #148]	; 0x94
  4023b6:	9324      	str	r3, [sp, #144]	; 0x90
  4023b8:	f8c9 a000 	str.w	sl, [r9]
  4023bc:	f8c9 7004 	str.w	r7, [r9, #4]
  4023c0:	ddef      	ble.n	4023a2 <_svfprintf_r+0x11ee>
  4023c2:	aa23      	add	r2, sp, #140	; 0x8c
  4023c4:	4621      	mov	r1, r4
  4023c6:	4658      	mov	r0, fp
  4023c8:	f002 f968 	bl	40469c <__ssprint_r>
  4023cc:	2800      	cmp	r0, #0
  4023ce:	f47e afea 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4023d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4023d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4023d6:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4023da:	e7e4      	b.n	4023a6 <_svfprintf_r+0x11f2>
  4023dc:	9a07      	ldr	r2, [sp, #28]
  4023de:	f7ff ba38 	b.w	401852 <_svfprintf_r+0x69e>
  4023e2:	9a07      	ldr	r2, [sp, #28]
  4023e4:	e590      	b.n	401f08 <_svfprintf_r+0xd54>
  4023e6:	9b07      	ldr	r3, [sp, #28]
  4023e8:	f043 0320 	orr.w	r3, r3, #32
  4023ec:	9307      	str	r3, [sp, #28]
  4023ee:	f108 0801 	add.w	r8, r8, #1
  4023f2:	f898 3000 	ldrb.w	r3, [r8]
  4023f6:	f7fe bf36 	b.w	401266 <_svfprintf_r+0xb2>
  4023fa:	aa23      	add	r2, sp, #140	; 0x8c
  4023fc:	9909      	ldr	r1, [sp, #36]	; 0x24
  4023fe:	980a      	ldr	r0, [sp, #40]	; 0x28
  402400:	f002 f94c 	bl	40469c <__ssprint_r>
  402404:	2800      	cmp	r0, #0
  402406:	f47e afce 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  40240a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40240c:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402410:	f7ff bbb6 	b.w	401b80 <_svfprintf_r+0x9cc>
  402414:	2140      	movs	r1, #64	; 0x40
  402416:	980a      	ldr	r0, [sp, #40]	; 0x28
  402418:	f001 fa02 	bl	403820 <_malloc_r>
  40241c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40241e:	6010      	str	r0, [r2, #0]
  402420:	6110      	str	r0, [r2, #16]
  402422:	2800      	cmp	r0, #0
  402424:	f000 81e5 	beq.w	4027f2 <_svfprintf_r+0x163e>
  402428:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40242a:	2340      	movs	r3, #64	; 0x40
  40242c:	6153      	str	r3, [r2, #20]
  40242e:	f7fe bed8 	b.w	4011e2 <_svfprintf_r+0x2e>
  402432:	a821      	add	r0, sp, #132	; 0x84
  402434:	a91e      	add	r1, sp, #120	; 0x78
  402436:	9004      	str	r0, [sp, #16]
  402438:	9103      	str	r1, [sp, #12]
  40243a:	a81d      	add	r0, sp, #116	; 0x74
  40243c:	2103      	movs	r1, #3
  40243e:	9002      	str	r0, [sp, #8]
  402440:	9a08      	ldr	r2, [sp, #32]
  402442:	f8cd b004 	str.w	fp, [sp, #4]
  402446:	463b      	mov	r3, r7
  402448:	9100      	str	r1, [sp, #0]
  40244a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40244c:	f000 faa4 	bl	402998 <_dtoa_r>
  402450:	465d      	mov	r5, fp
  402452:	4606      	mov	r6, r0
  402454:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402456:	2b46      	cmp	r3, #70	; 0x46
  402458:	eb06 0405 	add.w	r4, r6, r5
  40245c:	f47f aeb6 	bne.w	4021cc <_svfprintf_r+0x1018>
  402460:	7833      	ldrb	r3, [r6, #0]
  402462:	2b30      	cmp	r3, #48	; 0x30
  402464:	f000 817c 	beq.w	402760 <_svfprintf_r+0x15ac>
  402468:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  40246a:	442c      	add	r4, r5
  40246c:	e6ae      	b.n	4021cc <_svfprintf_r+0x1018>
  40246e:	aa23      	add	r2, sp, #140	; 0x8c
  402470:	9909      	ldr	r1, [sp, #36]	; 0x24
  402472:	980a      	ldr	r0, [sp, #40]	; 0x28
  402474:	f002 f912 	bl	40469c <__ssprint_r>
  402478:	2800      	cmp	r0, #0
  40247a:	f47e af94 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  40247e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402480:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402482:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402486:	e766      	b.n	402356 <_svfprintf_r+0x11a2>
  402488:	f1bb 0f00 	cmp.w	fp, #0
  40248c:	bf08      	it	eq
  40248e:	f04f 0b01 	moveq.w	fp, #1
  402492:	e667      	b.n	402164 <_svfprintf_r+0xfb0>
  402494:	970e      	str	r7, [sp, #56]	; 0x38
  402496:	4617      	mov	r7, r2
  402498:	e55e      	b.n	401f58 <_svfprintf_r+0xda4>
  40249a:	4630      	mov	r0, r6
  40249c:	f002 f890 	bl	4045c0 <strlen>
  4024a0:	46a3      	mov	fp, r4
  4024a2:	4603      	mov	r3, r0
  4024a4:	900d      	str	r0, [sp, #52]	; 0x34
  4024a6:	f7ff baf4 	b.w	401a92 <_svfprintf_r+0x8de>
  4024aa:	aa23      	add	r2, sp, #140	; 0x8c
  4024ac:	9909      	ldr	r1, [sp, #36]	; 0x24
  4024ae:	980a      	ldr	r0, [sp, #40]	; 0x28
  4024b0:	f002 f8f4 	bl	40469c <__ssprint_r>
  4024b4:	2800      	cmp	r0, #0
  4024b6:	f47e af76 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4024ba:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4024bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4024be:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4024c2:	9912      	ldr	r1, [sp, #72]	; 0x48
  4024c4:	f8c9 6000 	str.w	r6, [r9]
  4024c8:	3301      	adds	r3, #1
  4024ca:	440c      	add	r4, r1
  4024cc:	2b07      	cmp	r3, #7
  4024ce:	9425      	str	r4, [sp, #148]	; 0x94
  4024d0:	9324      	str	r3, [sp, #144]	; 0x90
  4024d2:	f8c9 1004 	str.w	r1, [r9, #4]
  4024d6:	f77f a8fb 	ble.w	4016d0 <_svfprintf_r+0x51c>
  4024da:	e411      	b.n	401d00 <_svfprintf_r+0xb4c>
  4024dc:	272d      	movs	r7, #45	; 0x2d
  4024de:	9308      	str	r3, [sp, #32]
  4024e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4024e2:	9307      	str	r3, [sp, #28]
  4024e4:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  4024e8:	f04f 0b00 	mov.w	fp, #0
  4024ec:	f7ff b829 	b.w	401542 <_svfprintf_r+0x38e>
  4024f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4024f2:	1cdd      	adds	r5, r3, #3
  4024f4:	db1e      	blt.n	402534 <_svfprintf_r+0x1380>
  4024f6:	459b      	cmp	fp, r3
  4024f8:	db1c      	blt.n	402534 <_svfprintf_r+0x1380>
  4024fa:	9313      	str	r3, [sp, #76]	; 0x4c
  4024fc:	e689      	b.n	402212 <_svfprintf_r+0x105e>
  4024fe:	4623      	mov	r3, r4
  402500:	e677      	b.n	4021f2 <_svfprintf_r+0x103e>
  402502:	aa23      	add	r2, sp, #140	; 0x8c
  402504:	9909      	ldr	r1, [sp, #36]	; 0x24
  402506:	980a      	ldr	r0, [sp, #40]	; 0x28
  402508:	f002 f8c8 	bl	40469c <__ssprint_r>
  40250c:	2800      	cmp	r0, #0
  40250e:	f47e af4a 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  402512:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402514:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402518:	e459      	b.n	401dce <_svfprintf_r+0xc1a>
  40251a:	4614      	mov	r4, r2
  40251c:	3301      	adds	r3, #1
  40251e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402520:	9324      	str	r3, [sp, #144]	; 0x90
  402522:	442c      	add	r4, r5
  402524:	2b07      	cmp	r3, #7
  402526:	9425      	str	r4, [sp, #148]	; 0x94
  402528:	e889 0024 	stmia.w	r9, {r2, r5}
  40252c:	dcbd      	bgt.n	4024aa <_svfprintf_r+0x12f6>
  40252e:	f109 0908 	add.w	r9, r9, #8
  402532:	e7c6      	b.n	4024c2 <_svfprintf_r+0x130e>
  402534:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402536:	3a02      	subs	r2, #2
  402538:	9211      	str	r2, [sp, #68]	; 0x44
  40253a:	3b01      	subs	r3, #1
  40253c:	2b00      	cmp	r3, #0
  40253e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402542:	931d      	str	r3, [sp, #116]	; 0x74
  402544:	bfb8      	it	lt
  402546:	425b      	neglt	r3, r3
  402548:	f88d 207c 	strb.w	r2, [sp, #124]	; 0x7c
  40254c:	bfb4      	ite	lt
  40254e:	222d      	movlt	r2, #45	; 0x2d
  402550:	222b      	movge	r2, #43	; 0x2b
  402552:	2b09      	cmp	r3, #9
  402554:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  402558:	f340 80f1 	ble.w	40273e <_svfprintf_r+0x158a>
  40255c:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
  402560:	4604      	mov	r4, r0
  402562:	4a2d      	ldr	r2, [pc, #180]	; (402618 <_svfprintf_r+0x1464>)
  402564:	fb82 2103 	smull	r2, r1, r2, r3
  402568:	17da      	asrs	r2, r3, #31
  40256a:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
  40256e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  402572:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
  402576:	f103 0130 	add.w	r1, r3, #48	; 0x30
  40257a:	2a09      	cmp	r2, #9
  40257c:	4613      	mov	r3, r2
  40257e:	f804 1d01 	strb.w	r1, [r4, #-1]!
  402582:	dcee      	bgt.n	402562 <_svfprintf_r+0x13ae>
  402584:	4621      	mov	r1, r4
  402586:	3330      	adds	r3, #48	; 0x30
  402588:	b2da      	uxtb	r2, r3
  40258a:	f801 2d01 	strb.w	r2, [r1, #-1]!
  40258e:	4288      	cmp	r0, r1
  402590:	f240 813a 	bls.w	402808 <_svfprintf_r+0x1654>
  402594:	f10d 017e 	add.w	r1, sp, #126	; 0x7e
  402598:	4623      	mov	r3, r4
  40259a:	e001      	b.n	4025a0 <_svfprintf_r+0x13ec>
  40259c:	f813 2b01 	ldrb.w	r2, [r3], #1
  4025a0:	f801 2b01 	strb.w	r2, [r1], #1
  4025a4:	4298      	cmp	r0, r3
  4025a6:	d1f9      	bne.n	40259c <_svfprintf_r+0x13e8>
  4025a8:	1c43      	adds	r3, r0, #1
  4025aa:	1b1b      	subs	r3, r3, r4
  4025ac:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  4025b0:	4413      	add	r3, r2
  4025b2:	aa1f      	add	r2, sp, #124	; 0x7c
  4025b4:	1a9b      	subs	r3, r3, r2
  4025b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4025b8:	9319      	str	r3, [sp, #100]	; 0x64
  4025ba:	2a01      	cmp	r2, #1
  4025bc:	4413      	add	r3, r2
  4025be:	930d      	str	r3, [sp, #52]	; 0x34
  4025c0:	f340 80ea 	ble.w	402798 <_svfprintf_r+0x15e4>
  4025c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4025c6:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4025c8:	4413      	add	r3, r2
  4025ca:	2200      	movs	r2, #0
  4025cc:	930d      	str	r3, [sp, #52]	; 0x34
  4025ce:	9213      	str	r2, [sp, #76]	; 0x4c
  4025d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4025d4:	e62b      	b.n	40222e <_svfprintf_r+0x107a>
  4025d6:	aa23      	add	r2, sp, #140	; 0x8c
  4025d8:	9909      	ldr	r1, [sp, #36]	; 0x24
  4025da:	980a      	ldr	r0, [sp, #40]	; 0x28
  4025dc:	f002 f85e 	bl	40469c <__ssprint_r>
  4025e0:	2800      	cmp	r0, #0
  4025e2:	f47e aee0 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  4025e6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4025e8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4025ea:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4025ee:	e4f6      	b.n	401fde <_svfprintf_r+0xe2a>
  4025f0:	2d06      	cmp	r5, #6
  4025f2:	462b      	mov	r3, r5
  4025f4:	bf28      	it	cs
  4025f6:	2306      	movcs	r3, #6
  4025f8:	930d      	str	r3, [sp, #52]	; 0x34
  4025fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4025fe:	46b3      	mov	fp, r6
  402600:	970e      	str	r7, [sp, #56]	; 0x38
  402602:	9613      	str	r6, [sp, #76]	; 0x4c
  402604:	4637      	mov	r7, r6
  402606:	9308      	str	r3, [sp, #32]
  402608:	4e04      	ldr	r6, [pc, #16]	; (40261c <_svfprintf_r+0x1468>)
  40260a:	f7fe bf99 	b.w	401540 <_svfprintf_r+0x38c>
  40260e:	bf00      	nop
  402610:	00405ccc 	.word	0x00405ccc
  402614:	00405c7c 	.word	0x00405c7c
  402618:	66666667 	.word	0x66666667
  40261c:	00405cc4 	.word	0x00405cc4
  402620:	aa23      	add	r2, sp, #140	; 0x8c
  402622:	9909      	ldr	r1, [sp, #36]	; 0x24
  402624:	980a      	ldr	r0, [sp, #40]	; 0x28
  402626:	f002 f839 	bl	40469c <__ssprint_r>
  40262a:	2800      	cmp	r0, #0
  40262c:	f47e aebb 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  402630:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402632:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402634:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402636:	1ad3      	subs	r3, r2, r3
  402638:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40263c:	e4e7      	b.n	40200e <_svfprintf_r+0xe5a>
  40263e:	f04f 0b06 	mov.w	fp, #6
  402642:	e58f      	b.n	402164 <_svfprintf_r+0xfb0>
  402644:	a821      	add	r0, sp, #132	; 0x84
  402646:	a91e      	add	r1, sp, #120	; 0x78
  402648:	9004      	str	r0, [sp, #16]
  40264a:	9103      	str	r1, [sp, #12]
  40264c:	a81d      	add	r0, sp, #116	; 0x74
  40264e:	2103      	movs	r1, #3
  402650:	9002      	str	r0, [sp, #8]
  402652:	9a08      	ldr	r2, [sp, #32]
  402654:	f8cd b004 	str.w	fp, [sp, #4]
  402658:	463b      	mov	r3, r7
  40265a:	9100      	str	r1, [sp, #0]
  40265c:	980a      	ldr	r0, [sp, #40]	; 0x28
  40265e:	f000 f99b 	bl	402998 <_dtoa_r>
  402662:	465d      	mov	r5, fp
  402664:	4606      	mov	r6, r0
  402666:	eb00 040b 	add.w	r4, r0, fp
  40266a:	e6f9      	b.n	402460 <_svfprintf_r+0x12ac>
  40266c:	9307      	str	r3, [sp, #28]
  40266e:	f7ff b959 	b.w	401924 <_svfprintf_r+0x770>
  402672:	272d      	movs	r7, #45	; 0x2d
  402674:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402678:	f7ff b8b2 	b.w	4017e0 <_svfprintf_r+0x62c>
  40267c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40267e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402680:	4413      	add	r3, r2
  402682:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402684:	930d      	str	r3, [sp, #52]	; 0x34
  402686:	2a00      	cmp	r2, #0
  402688:	dd7e      	ble.n	402788 <_svfprintf_r+0x15d4>
  40268a:	2267      	movs	r2, #103	; 0x67
  40268c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402690:	9211      	str	r2, [sp, #68]	; 0x44
  402692:	e5cc      	b.n	40222e <_svfprintf_r+0x107a>
  402694:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
  402698:	970e      	str	r7, [sp, #56]	; 0x38
  40269a:	9308      	str	r3, [sp, #32]
  40269c:	950d      	str	r5, [sp, #52]	; 0x34
  40269e:	4683      	mov	fp, r0
  4026a0:	9013      	str	r0, [sp, #76]	; 0x4c
  4026a2:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4026a6:	f7fe bf4b 	b.w	401540 <_svfprintf_r+0x38c>
  4026aa:	9b07      	ldr	r3, [sp, #28]
  4026ac:	07db      	lsls	r3, r3, #31
  4026ae:	465f      	mov	r7, fp
  4026b0:	d505      	bpl.n	4026be <_svfprintf_r+0x150a>
  4026b2:	ae40      	add	r6, sp, #256	; 0x100
  4026b4:	2330      	movs	r3, #48	; 0x30
  4026b6:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4026ba:	f7fe bf37 	b.w	40152c <_svfprintf_r+0x378>
  4026be:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  4026c2:	ae30      	add	r6, sp, #192	; 0xc0
  4026c4:	f7fe bf35 	b.w	401532 <_svfprintf_r+0x37e>
  4026c8:	2b00      	cmp	r3, #0
  4026ca:	dd7d      	ble.n	4027c8 <_svfprintf_r+0x1614>
  4026cc:	f1bb 0f00 	cmp.w	fp, #0
  4026d0:	d13d      	bne.n	40274e <_svfprintf_r+0x159a>
  4026d2:	9a07      	ldr	r2, [sp, #28]
  4026d4:	07d4      	lsls	r4, r2, #31
  4026d6:	d43a      	bmi.n	40274e <_svfprintf_r+0x159a>
  4026d8:	461a      	mov	r2, r3
  4026da:	920d      	str	r2, [sp, #52]	; 0x34
  4026dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4026e0:	e5a5      	b.n	40222e <_svfprintf_r+0x107a>
  4026e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4026e4:	2b47      	cmp	r3, #71	; 0x47
  4026e6:	f47f ad70 	bne.w	4021ca <_svfprintf_r+0x1016>
  4026ea:	9b07      	ldr	r3, [sp, #28]
  4026ec:	07db      	lsls	r3, r3, #31
  4026ee:	f53f aeb1 	bmi.w	402454 <_svfprintf_r+0x12a0>
  4026f2:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4026f4:	1b9b      	subs	r3, r3, r6
  4026f6:	9312      	str	r3, [sp, #72]	; 0x48
  4026f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4026fa:	2b47      	cmp	r3, #71	; 0x47
  4026fc:	f43f aef8 	beq.w	4024f0 <_svfprintf_r+0x133c>
  402700:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402702:	e71a      	b.n	40253a <_svfprintf_r+0x1386>
  402704:	aa23      	add	r2, sp, #140	; 0x8c
  402706:	9909      	ldr	r1, [sp, #36]	; 0x24
  402708:	980a      	ldr	r0, [sp, #40]	; 0x28
  40270a:	f001 ffc7 	bl	40469c <__ssprint_r>
  40270e:	2800      	cmp	r0, #0
  402710:	f47e ae49 	bne.w	4013a6 <_svfprintf_r+0x1f2>
  402714:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402716:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402718:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40271a:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40271e:	e631      	b.n	402384 <_svfprintf_r+0x11d0>
  402720:	46a0      	mov	r8, r4
  402722:	2500      	movs	r5, #0
  402724:	f7fe bda1 	b.w	40126a <_svfprintf_r+0xb6>
  402728:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40272a:	e562      	b.n	4021f2 <_svfprintf_r+0x103e>
  40272c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40272e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402730:	4413      	add	r3, r2
  402732:	2267      	movs	r2, #103	; 0x67
  402734:	930d      	str	r3, [sp, #52]	; 0x34
  402736:	9211      	str	r2, [sp, #68]	; 0x44
  402738:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40273c:	e577      	b.n	40222e <_svfprintf_r+0x107a>
  40273e:	3330      	adds	r3, #48	; 0x30
  402740:	2230      	movs	r2, #48	; 0x30
  402742:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  402746:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  40274a:	ab20      	add	r3, sp, #128	; 0x80
  40274c:	e731      	b.n	4025b2 <_svfprintf_r+0x13fe>
  40274e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402750:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402752:	189d      	adds	r5, r3, r2
  402754:	eb05 030b 	add.w	r3, r5, fp
  402758:	930d      	str	r3, [sp, #52]	; 0x34
  40275a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40275e:	e566      	b.n	40222e <_svfprintf_r+0x107a>
  402760:	9808      	ldr	r0, [sp, #32]
  402762:	4639      	mov	r1, r7
  402764:	2200      	movs	r2, #0
  402766:	2300      	movs	r3, #0
  402768:	f003 f844 	bl	4057f4 <__aeabi_dcmpeq>
  40276c:	2800      	cmp	r0, #0
  40276e:	f47f ae7b 	bne.w	402468 <_svfprintf_r+0x12b4>
  402772:	f1c5 0501 	rsb	r5, r5, #1
  402776:	951d      	str	r5, [sp, #116]	; 0x74
  402778:	442c      	add	r4, r5
  40277a:	e527      	b.n	4021cc <_svfprintf_r+0x1018>
  40277c:	4e32      	ldr	r6, [pc, #200]	; (402848 <_svfprintf_r+0x1694>)
  40277e:	4b33      	ldr	r3, [pc, #204]	; (40284c <_svfprintf_r+0x1698>)
  402780:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402784:	f7ff b82e 	b.w	4017e4 <_svfprintf_r+0x630>
  402788:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40278a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40278c:	f1c3 0301 	rsb	r3, r3, #1
  402790:	441a      	add	r2, r3
  402792:	4613      	mov	r3, r2
  402794:	920d      	str	r2, [sp, #52]	; 0x34
  402796:	e778      	b.n	40268a <_svfprintf_r+0x14d6>
  402798:	9b07      	ldr	r3, [sp, #28]
  40279a:	f013 0301 	ands.w	r3, r3, #1
  40279e:	f47f af11 	bne.w	4025c4 <_svfprintf_r+0x1410>
  4027a2:	9313      	str	r3, [sp, #76]	; 0x4c
  4027a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4027aa:	e540      	b.n	40222e <_svfprintf_r+0x107a>
  4027ac:	980e      	ldr	r0, [sp, #56]	; 0x38
  4027ae:	f898 3001 	ldrb.w	r3, [r8, #1]
  4027b2:	6805      	ldr	r5, [r0, #0]
  4027b4:	3004      	adds	r0, #4
  4027b6:	2d00      	cmp	r5, #0
  4027b8:	900e      	str	r0, [sp, #56]	; 0x38
  4027ba:	46a0      	mov	r8, r4
  4027bc:	f6be ad53 	bge.w	401266 <_svfprintf_r+0xb2>
  4027c0:	f04f 35ff 	mov.w	r5, #4294967295
  4027c4:	f7fe bd4f 	b.w	401266 <_svfprintf_r+0xb2>
  4027c8:	f1bb 0f00 	cmp.w	fp, #0
  4027cc:	d102      	bne.n	4027d4 <_svfprintf_r+0x1620>
  4027ce:	9b07      	ldr	r3, [sp, #28]
  4027d0:	07d8      	lsls	r0, r3, #31
  4027d2:	d507      	bpl.n	4027e4 <_svfprintf_r+0x1630>
  4027d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
  4027d6:	1c5d      	adds	r5, r3, #1
  4027d8:	eb05 030b 	add.w	r3, r5, fp
  4027dc:	930d      	str	r3, [sp, #52]	; 0x34
  4027de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4027e2:	e524      	b.n	40222e <_svfprintf_r+0x107a>
  4027e4:	2301      	movs	r3, #1
  4027e6:	930d      	str	r3, [sp, #52]	; 0x34
  4027e8:	e521      	b.n	40222e <_svfprintf_r+0x107a>
  4027ea:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4027ee:	f7ff b921 	b.w	401a34 <_svfprintf_r+0x880>
  4027f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4027f4:	230c      	movs	r3, #12
  4027f6:	6013      	str	r3, [r2, #0]
  4027f8:	f04f 30ff 	mov.w	r0, #4294967295
  4027fc:	f7fe bddc 	b.w	4013b8 <_svfprintf_r+0x204>
  402800:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402804:	f7ff b8f9 	b.w	4019fa <_svfprintf_r+0x846>
  402808:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  40280c:	e6d1      	b.n	4025b2 <_svfprintf_r+0x13fe>
  40280e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402812:	f7fe bdd9 	b.w	4013c8 <_svfprintf_r+0x214>
  402816:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40281a:	f7ff b857 	b.w	4018cc <_svfprintf_r+0x718>
  40281e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402822:	f7ff b825 	b.w	401870 <_svfprintf_r+0x6bc>
  402826:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40282a:	f7ff b94c 	b.w	401ac6 <_svfprintf_r+0x912>
  40282e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402832:	f7fe bff3 	b.w	40181c <_svfprintf_r+0x668>
  402836:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40283a:	f7fe bfa3 	b.w	401784 <_svfprintf_r+0x5d0>
  40283e:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402842:	f7fe be33 	b.w	4014ac <_svfprintf_r+0x2f8>
  402846:	bf00      	nop
  402848:	00405c98 	.word	0x00405c98
  40284c:	00405c94 	.word	0x00405c94

00402850 <register_fini>:
  402850:	4b02      	ldr	r3, [pc, #8]	; (40285c <register_fini+0xc>)
  402852:	b113      	cbz	r3, 40285a <register_fini+0xa>
  402854:	4802      	ldr	r0, [pc, #8]	; (402860 <register_fini+0x10>)
  402856:	f000 b805 	b.w	402864 <atexit>
  40285a:	4770      	bx	lr
  40285c:	00000000 	.word	0x00000000
  402860:	004037f1 	.word	0x004037f1

00402864 <atexit>:
  402864:	2300      	movs	r3, #0
  402866:	4601      	mov	r1, r0
  402868:	461a      	mov	r2, r3
  40286a:	4618      	mov	r0, r3
  40286c:	f001 bf96 	b.w	40479c <__register_exitproc>

00402870 <quorem>:
  402870:	6902      	ldr	r2, [r0, #16]
  402872:	690b      	ldr	r3, [r1, #16]
  402874:	4293      	cmp	r3, r2
  402876:	f300 808d 	bgt.w	402994 <quorem+0x124>
  40287a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40287e:	f103 38ff 	add.w	r8, r3, #4294967295
  402882:	f101 0714 	add.w	r7, r1, #20
  402886:	f100 0b14 	add.w	fp, r0, #20
  40288a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40288e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402892:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402896:	b083      	sub	sp, #12
  402898:	3201      	adds	r2, #1
  40289a:	fbb3 f9f2 	udiv	r9, r3, r2
  40289e:	eb0b 0304 	add.w	r3, fp, r4
  4028a2:	9400      	str	r4, [sp, #0]
  4028a4:	eb07 0a04 	add.w	sl, r7, r4
  4028a8:	9301      	str	r3, [sp, #4]
  4028aa:	f1b9 0f00 	cmp.w	r9, #0
  4028ae:	d039      	beq.n	402924 <quorem+0xb4>
  4028b0:	2500      	movs	r5, #0
  4028b2:	46bc      	mov	ip, r7
  4028b4:	46de      	mov	lr, fp
  4028b6:	462b      	mov	r3, r5
  4028b8:	f85c 6b04 	ldr.w	r6, [ip], #4
  4028bc:	f8de 2000 	ldr.w	r2, [lr]
  4028c0:	b2b4      	uxth	r4, r6
  4028c2:	fb09 5504 	mla	r5, r9, r4, r5
  4028c6:	0c36      	lsrs	r6, r6, #16
  4028c8:	0c2c      	lsrs	r4, r5, #16
  4028ca:	fb09 4406 	mla	r4, r9, r6, r4
  4028ce:	b2ad      	uxth	r5, r5
  4028d0:	1b5b      	subs	r3, r3, r5
  4028d2:	b2a6      	uxth	r6, r4
  4028d4:	fa13 f382 	uxtah	r3, r3, r2
  4028d8:	ebc6 4612 	rsb	r6, r6, r2, lsr #16
  4028dc:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4028e0:	b29b      	uxth	r3, r3
  4028e2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4028e6:	45e2      	cmp	sl, ip
  4028e8:	f84e 3b04 	str.w	r3, [lr], #4
  4028ec:	ea4f 4514 	mov.w	r5, r4, lsr #16
  4028f0:	ea4f 4326 	mov.w	r3, r6, asr #16
  4028f4:	d2e0      	bcs.n	4028b8 <quorem+0x48>
  4028f6:	9b00      	ldr	r3, [sp, #0]
  4028f8:	f85b 3003 	ldr.w	r3, [fp, r3]
  4028fc:	b993      	cbnz	r3, 402924 <quorem+0xb4>
  4028fe:	9c01      	ldr	r4, [sp, #4]
  402900:	1f23      	subs	r3, r4, #4
  402902:	459b      	cmp	fp, r3
  402904:	d20c      	bcs.n	402920 <quorem+0xb0>
  402906:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40290a:	b94b      	cbnz	r3, 402920 <quorem+0xb0>
  40290c:	f1a4 0308 	sub.w	r3, r4, #8
  402910:	e002      	b.n	402918 <quorem+0xa8>
  402912:	681a      	ldr	r2, [r3, #0]
  402914:	3b04      	subs	r3, #4
  402916:	b91a      	cbnz	r2, 402920 <quorem+0xb0>
  402918:	459b      	cmp	fp, r3
  40291a:	f108 38ff 	add.w	r8, r8, #4294967295
  40291e:	d3f8      	bcc.n	402912 <quorem+0xa2>
  402920:	f8c0 8010 	str.w	r8, [r0, #16]
  402924:	4604      	mov	r4, r0
  402926:	f001 fd29 	bl	40437c <__mcmp>
  40292a:	2800      	cmp	r0, #0
  40292c:	db2e      	blt.n	40298c <quorem+0x11c>
  40292e:	f109 0901 	add.w	r9, r9, #1
  402932:	465d      	mov	r5, fp
  402934:	2300      	movs	r3, #0
  402936:	f857 1b04 	ldr.w	r1, [r7], #4
  40293a:	6828      	ldr	r0, [r5, #0]
  40293c:	b28a      	uxth	r2, r1
  40293e:	1a9a      	subs	r2, r3, r2
  402940:	0c09      	lsrs	r1, r1, #16
  402942:	fa12 f280 	uxtah	r2, r2, r0
  402946:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
  40294a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40294e:	b291      	uxth	r1, r2
  402950:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  402954:	45ba      	cmp	sl, r7
  402956:	f845 1b04 	str.w	r1, [r5], #4
  40295a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40295e:	d2ea      	bcs.n	402936 <quorem+0xc6>
  402960:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  402964:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  402968:	b982      	cbnz	r2, 40298c <quorem+0x11c>
  40296a:	1f1a      	subs	r2, r3, #4
  40296c:	4593      	cmp	fp, r2
  40296e:	d20b      	bcs.n	402988 <quorem+0x118>
  402970:	f853 2c04 	ldr.w	r2, [r3, #-4]
  402974:	b942      	cbnz	r2, 402988 <quorem+0x118>
  402976:	3b08      	subs	r3, #8
  402978:	e002      	b.n	402980 <quorem+0x110>
  40297a:	681a      	ldr	r2, [r3, #0]
  40297c:	3b04      	subs	r3, #4
  40297e:	b91a      	cbnz	r2, 402988 <quorem+0x118>
  402980:	459b      	cmp	fp, r3
  402982:	f108 38ff 	add.w	r8, r8, #4294967295
  402986:	d3f8      	bcc.n	40297a <quorem+0x10a>
  402988:	f8c4 8010 	str.w	r8, [r4, #16]
  40298c:	4648      	mov	r0, r9
  40298e:	b003      	add	sp, #12
  402990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402994:	2000      	movs	r0, #0
  402996:	4770      	bx	lr

00402998 <_dtoa_r>:
  402998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40299c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40299e:	b097      	sub	sp, #92	; 0x5c
  4029a0:	4681      	mov	r9, r0
  4029a2:	9c23      	ldr	r4, [sp, #140]	; 0x8c
  4029a4:	4692      	mov	sl, r2
  4029a6:	469b      	mov	fp, r3
  4029a8:	b149      	cbz	r1, 4029be <_dtoa_r+0x26>
  4029aa:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4029ac:	604a      	str	r2, [r1, #4]
  4029ae:	2301      	movs	r3, #1
  4029b0:	4093      	lsls	r3, r2
  4029b2:	608b      	str	r3, [r1, #8]
  4029b4:	f001 fb00 	bl	403fb8 <_Bfree>
  4029b8:	2300      	movs	r3, #0
  4029ba:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
  4029be:	f1bb 0f00 	cmp.w	fp, #0
  4029c2:	46d8      	mov	r8, fp
  4029c4:	db33      	blt.n	402a2e <_dtoa_r+0x96>
  4029c6:	2300      	movs	r3, #0
  4029c8:	6023      	str	r3, [r4, #0]
  4029ca:	4ba5      	ldr	r3, [pc, #660]	; (402c60 <_dtoa_r+0x2c8>)
  4029cc:	461a      	mov	r2, r3
  4029ce:	ea08 0303 	and.w	r3, r8, r3
  4029d2:	4293      	cmp	r3, r2
  4029d4:	d014      	beq.n	402a00 <_dtoa_r+0x68>
  4029d6:	4650      	mov	r0, sl
  4029d8:	4659      	mov	r1, fp
  4029da:	2200      	movs	r2, #0
  4029dc:	2300      	movs	r3, #0
  4029de:	f002 ff09 	bl	4057f4 <__aeabi_dcmpeq>
  4029e2:	4605      	mov	r5, r0
  4029e4:	b348      	cbz	r0, 402a3a <_dtoa_r+0xa2>
  4029e6:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4029e8:	2301      	movs	r3, #1
  4029ea:	6013      	str	r3, [r2, #0]
  4029ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4029ee:	2b00      	cmp	r3, #0
  4029f0:	f000 80c5 	beq.w	402b7e <_dtoa_r+0x1e6>
  4029f4:	489b      	ldr	r0, [pc, #620]	; (402c64 <_dtoa_r+0x2cc>)
  4029f6:	6018      	str	r0, [r3, #0]
  4029f8:	3801      	subs	r0, #1
  4029fa:	b017      	add	sp, #92	; 0x5c
  4029fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a00:	9a22      	ldr	r2, [sp, #136]	; 0x88
  402a02:	f242 730f 	movw	r3, #9999	; 0x270f
  402a06:	6013      	str	r3, [r2, #0]
  402a08:	f1ba 0f00 	cmp.w	sl, #0
  402a0c:	f000 80a2 	beq.w	402b54 <_dtoa_r+0x1bc>
  402a10:	4895      	ldr	r0, [pc, #596]	; (402c68 <_dtoa_r+0x2d0>)
  402a12:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402a14:	2b00      	cmp	r3, #0
  402a16:	d0f0      	beq.n	4029fa <_dtoa_r+0x62>
  402a18:	78c3      	ldrb	r3, [r0, #3]
  402a1a:	2b00      	cmp	r3, #0
  402a1c:	f000 80b1 	beq.w	402b82 <_dtoa_r+0x1ea>
  402a20:	f100 0308 	add.w	r3, r0, #8
  402a24:	9a24      	ldr	r2, [sp, #144]	; 0x90
  402a26:	6013      	str	r3, [r2, #0]
  402a28:	b017      	add	sp, #92	; 0x5c
  402a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a2e:	2301      	movs	r3, #1
  402a30:	f02b 4800 	bic.w	r8, fp, #2147483648	; 0x80000000
  402a34:	6023      	str	r3, [r4, #0]
  402a36:	46c3      	mov	fp, r8
  402a38:	e7c7      	b.n	4029ca <_dtoa_r+0x32>
  402a3a:	aa14      	add	r2, sp, #80	; 0x50
  402a3c:	ab15      	add	r3, sp, #84	; 0x54
  402a3e:	9201      	str	r2, [sp, #4]
  402a40:	9300      	str	r3, [sp, #0]
  402a42:	4652      	mov	r2, sl
  402a44:	465b      	mov	r3, fp
  402a46:	4648      	mov	r0, r9
  402a48:	f001 fd42 	bl	4044d0 <__d2b>
  402a4c:	ea5f 5418 	movs.w	r4, r8, lsr #20
  402a50:	9008      	str	r0, [sp, #32]
  402a52:	f040 8088 	bne.w	402b66 <_dtoa_r+0x1ce>
  402a56:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402a58:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402a5a:	442c      	add	r4, r5
  402a5c:	f204 4332 	addw	r3, r4, #1074	; 0x432
  402a60:	2b20      	cmp	r3, #32
  402a62:	f340 8291 	ble.w	402f88 <_dtoa_r+0x5f0>
  402a66:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  402a6a:	f204 4012 	addw	r0, r4, #1042	; 0x412
  402a6e:	fa08 f803 	lsl.w	r8, r8, r3
  402a72:	fa2a f000 	lsr.w	r0, sl, r0
  402a76:	ea40 0008 	orr.w	r0, r0, r8
  402a7a:	f002 fbdd 	bl	405238 <__aeabi_ui2d>
  402a7e:	2301      	movs	r3, #1
  402a80:	3c01      	subs	r4, #1
  402a82:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  402a86:	9310      	str	r3, [sp, #64]	; 0x40
  402a88:	2200      	movs	r2, #0
  402a8a:	4b78      	ldr	r3, [pc, #480]	; (402c6c <_dtoa_r+0x2d4>)
  402a8c:	f002 fa96 	bl	404fbc <__aeabi_dsub>
  402a90:	a36d      	add	r3, pc, #436	; (adr r3, 402c48 <_dtoa_r+0x2b0>)
  402a92:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a96:	f002 fc45 	bl	405324 <__aeabi_dmul>
  402a9a:	a36d      	add	r3, pc, #436	; (adr r3, 402c50 <_dtoa_r+0x2b8>)
  402a9c:	e9d3 2300 	ldrd	r2, r3, [r3]
  402aa0:	f002 fa8e 	bl	404fc0 <__adddf3>
  402aa4:	4606      	mov	r6, r0
  402aa6:	4620      	mov	r0, r4
  402aa8:	460f      	mov	r7, r1
  402aaa:	f002 fbd5 	bl	405258 <__aeabi_i2d>
  402aae:	a36a      	add	r3, pc, #424	; (adr r3, 402c58 <_dtoa_r+0x2c0>)
  402ab0:	e9d3 2300 	ldrd	r2, r3, [r3]
  402ab4:	f002 fc36 	bl	405324 <__aeabi_dmul>
  402ab8:	4602      	mov	r2, r0
  402aba:	460b      	mov	r3, r1
  402abc:	4630      	mov	r0, r6
  402abe:	4639      	mov	r1, r7
  402ac0:	f002 fa7e 	bl	404fc0 <__adddf3>
  402ac4:	4606      	mov	r6, r0
  402ac6:	460f      	mov	r7, r1
  402ac8:	f002 fedc 	bl	405884 <__aeabi_d2iz>
  402acc:	2200      	movs	r2, #0
  402ace:	9004      	str	r0, [sp, #16]
  402ad0:	2300      	movs	r3, #0
  402ad2:	4630      	mov	r0, r6
  402ad4:	4639      	mov	r1, r7
  402ad6:	f002 fe97 	bl	405808 <__aeabi_dcmplt>
  402ada:	2800      	cmp	r0, #0
  402adc:	f040 8230 	bne.w	402f40 <_dtoa_r+0x5a8>
  402ae0:	9e04      	ldr	r6, [sp, #16]
  402ae2:	2e16      	cmp	r6, #22
  402ae4:	f200 8229 	bhi.w	402f3a <_dtoa_r+0x5a2>
  402ae8:	4b61      	ldr	r3, [pc, #388]	; (402c70 <_dtoa_r+0x2d8>)
  402aea:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  402aee:	e9d3 0100 	ldrd	r0, r1, [r3]
  402af2:	4652      	mov	r2, sl
  402af4:	465b      	mov	r3, fp
  402af6:	f002 fea5 	bl	405844 <__aeabi_dcmpgt>
  402afa:	2800      	cmp	r0, #0
  402afc:	f000 8249 	beq.w	402f92 <_dtoa_r+0x5fa>
  402b00:	1e73      	subs	r3, r6, #1
  402b02:	9304      	str	r3, [sp, #16]
  402b04:	2300      	movs	r3, #0
  402b06:	930c      	str	r3, [sp, #48]	; 0x30
  402b08:	1b2c      	subs	r4, r5, r4
  402b0a:	1e63      	subs	r3, r4, #1
  402b0c:	9302      	str	r3, [sp, #8]
  402b0e:	f100 8232 	bmi.w	402f76 <_dtoa_r+0x5de>
  402b12:	2300      	movs	r3, #0
  402b14:	9305      	str	r3, [sp, #20]
  402b16:	9b04      	ldr	r3, [sp, #16]
  402b18:	2b00      	cmp	r3, #0
  402b1a:	f2c0 8223 	blt.w	402f64 <_dtoa_r+0x5cc>
  402b1e:	9a02      	ldr	r2, [sp, #8]
  402b20:	930b      	str	r3, [sp, #44]	; 0x2c
  402b22:	4611      	mov	r1, r2
  402b24:	4419      	add	r1, r3
  402b26:	2300      	movs	r3, #0
  402b28:	9102      	str	r1, [sp, #8]
  402b2a:	930a      	str	r3, [sp, #40]	; 0x28
  402b2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
  402b2e:	2b09      	cmp	r3, #9
  402b30:	d829      	bhi.n	402b86 <_dtoa_r+0x1ee>
  402b32:	2b05      	cmp	r3, #5
  402b34:	f340 8658 	ble.w	4037e8 <_dtoa_r+0xe50>
  402b38:	3b04      	subs	r3, #4
  402b3a:	9320      	str	r3, [sp, #128]	; 0x80
  402b3c:	2500      	movs	r5, #0
  402b3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
  402b40:	3b02      	subs	r3, #2
  402b42:	2b03      	cmp	r3, #3
  402b44:	f200 8635 	bhi.w	4037b2 <_dtoa_r+0xe1a>
  402b48:	e8df f013 	tbh	[pc, r3, lsl #1]
  402b4c:	0228032c 	.word	0x0228032c
  402b50:	04590337 	.word	0x04590337
  402b54:	4b44      	ldr	r3, [pc, #272]	; (402c68 <_dtoa_r+0x2d0>)
  402b56:	4a47      	ldr	r2, [pc, #284]	; (402c74 <_dtoa_r+0x2dc>)
  402b58:	f3c8 0013 	ubfx	r0, r8, #0, #20
  402b5c:	2800      	cmp	r0, #0
  402b5e:	bf14      	ite	ne
  402b60:	4618      	movne	r0, r3
  402b62:	4610      	moveq	r0, r2
  402b64:	e755      	b.n	402a12 <_dtoa_r+0x7a>
  402b66:	f3cb 0313 	ubfx	r3, fp, #0, #20
  402b6a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  402b6e:	9510      	str	r5, [sp, #64]	; 0x40
  402b70:	4650      	mov	r0, sl
  402b72:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
  402b76:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  402b7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402b7c:	e784      	b.n	402a88 <_dtoa_r+0xf0>
  402b7e:	483e      	ldr	r0, [pc, #248]	; (402c78 <_dtoa_r+0x2e0>)
  402b80:	e73b      	b.n	4029fa <_dtoa_r+0x62>
  402b82:	1cc3      	adds	r3, r0, #3
  402b84:	e74e      	b.n	402a24 <_dtoa_r+0x8c>
  402b86:	2100      	movs	r1, #0
  402b88:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  402b8c:	4648      	mov	r0, r9
  402b8e:	9120      	str	r1, [sp, #128]	; 0x80
  402b90:	f001 f9ec 	bl	403f6c <_Balloc>
  402b94:	f04f 33ff 	mov.w	r3, #4294967295
  402b98:	9306      	str	r3, [sp, #24]
  402b9a:	9a20      	ldr	r2, [sp, #128]	; 0x80
  402b9c:	930d      	str	r3, [sp, #52]	; 0x34
  402b9e:	2301      	movs	r3, #1
  402ba0:	9007      	str	r0, [sp, #28]
  402ba2:	9221      	str	r2, [sp, #132]	; 0x84
  402ba4:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  402ba8:	9309      	str	r3, [sp, #36]	; 0x24
  402baa:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402bac:	2b00      	cmp	r3, #0
  402bae:	f2c0 80d1 	blt.w	402d54 <_dtoa_r+0x3bc>
  402bb2:	9a04      	ldr	r2, [sp, #16]
  402bb4:	2a0e      	cmp	r2, #14
  402bb6:	f300 80cd 	bgt.w	402d54 <_dtoa_r+0x3bc>
  402bba:	4b2d      	ldr	r3, [pc, #180]	; (402c70 <_dtoa_r+0x2d8>)
  402bbc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  402bc0:	e9d3 3400 	ldrd	r3, r4, [r3]
  402bc4:	e9cd 3402 	strd	r3, r4, [sp, #8]
  402bc8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  402bca:	2b00      	cmp	r3, #0
  402bcc:	f2c0 8300 	blt.w	4031d0 <_dtoa_r+0x838>
  402bd0:	4656      	mov	r6, sl
  402bd2:	465f      	mov	r7, fp
  402bd4:	4650      	mov	r0, sl
  402bd6:	4659      	mov	r1, fp
  402bd8:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  402bdc:	4652      	mov	r2, sl
  402bde:	465b      	mov	r3, fp
  402be0:	f002 fcca 	bl	405578 <__aeabi_ddiv>
  402be4:	f002 fe4e 	bl	405884 <__aeabi_d2iz>
  402be8:	4604      	mov	r4, r0
  402bea:	f002 fb35 	bl	405258 <__aeabi_i2d>
  402bee:	4652      	mov	r2, sl
  402bf0:	465b      	mov	r3, fp
  402bf2:	f002 fb97 	bl	405324 <__aeabi_dmul>
  402bf6:	460b      	mov	r3, r1
  402bf8:	4602      	mov	r2, r0
  402bfa:	4639      	mov	r1, r7
  402bfc:	4630      	mov	r0, r6
  402bfe:	f002 f9dd 	bl	404fbc <__aeabi_dsub>
  402c02:	9d07      	ldr	r5, [sp, #28]
  402c04:	f104 0330 	add.w	r3, r4, #48	; 0x30
  402c08:	702b      	strb	r3, [r5, #0]
  402c0a:	9b06      	ldr	r3, [sp, #24]
  402c0c:	2b01      	cmp	r3, #1
  402c0e:	4606      	mov	r6, r0
  402c10:	460f      	mov	r7, r1
  402c12:	f105 0501 	add.w	r5, r5, #1
  402c16:	d062      	beq.n	402cde <_dtoa_r+0x346>
  402c18:	2200      	movs	r2, #0
  402c1a:	4b18      	ldr	r3, [pc, #96]	; (402c7c <_dtoa_r+0x2e4>)
  402c1c:	f002 fb82 	bl	405324 <__aeabi_dmul>
  402c20:	2200      	movs	r2, #0
  402c22:	2300      	movs	r3, #0
  402c24:	4606      	mov	r6, r0
  402c26:	460f      	mov	r7, r1
  402c28:	f002 fde4 	bl	4057f4 <__aeabi_dcmpeq>
  402c2c:	2800      	cmp	r0, #0
  402c2e:	d17e      	bne.n	402d2e <_dtoa_r+0x396>
  402c30:	f8cd 9014 	str.w	r9, [sp, #20]
  402c34:	f8dd a018 	ldr.w	sl, [sp, #24]
  402c38:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402c3c:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  402c40:	e029      	b.n	402c96 <_dtoa_r+0x2fe>
  402c42:	bf00      	nop
  402c44:	f3af 8000 	nop.w
  402c48:	636f4361 	.word	0x636f4361
  402c4c:	3fd287a7 	.word	0x3fd287a7
  402c50:	8b60c8b3 	.word	0x8b60c8b3
  402c54:	3fc68a28 	.word	0x3fc68a28
  402c58:	509f79fb 	.word	0x509f79fb
  402c5c:	3fd34413 	.word	0x3fd34413
  402c60:	7ff00000 	.word	0x7ff00000
  402c64:	00405ccd 	.word	0x00405ccd
  402c68:	00405cec 	.word	0x00405cec
  402c6c:	3ff80000 	.word	0x3ff80000
  402c70:	00405cf8 	.word	0x00405cf8
  402c74:	00405ce0 	.word	0x00405ce0
  402c78:	00405ccc 	.word	0x00405ccc
  402c7c:	40240000 	.word	0x40240000
  402c80:	f002 fb50 	bl	405324 <__aeabi_dmul>
  402c84:	2200      	movs	r2, #0
  402c86:	2300      	movs	r3, #0
  402c88:	4606      	mov	r6, r0
  402c8a:	460f      	mov	r7, r1
  402c8c:	f002 fdb2 	bl	4057f4 <__aeabi_dcmpeq>
  402c90:	2800      	cmp	r0, #0
  402c92:	f040 83b7 	bne.w	403404 <_dtoa_r+0xa6c>
  402c96:	4642      	mov	r2, r8
  402c98:	464b      	mov	r3, r9
  402c9a:	4630      	mov	r0, r6
  402c9c:	4639      	mov	r1, r7
  402c9e:	f002 fc6b 	bl	405578 <__aeabi_ddiv>
  402ca2:	f002 fdef 	bl	405884 <__aeabi_d2iz>
  402ca6:	4604      	mov	r4, r0
  402ca8:	f002 fad6 	bl	405258 <__aeabi_i2d>
  402cac:	4642      	mov	r2, r8
  402cae:	464b      	mov	r3, r9
  402cb0:	f002 fb38 	bl	405324 <__aeabi_dmul>
  402cb4:	4602      	mov	r2, r0
  402cb6:	460b      	mov	r3, r1
  402cb8:	4630      	mov	r0, r6
  402cba:	4639      	mov	r1, r7
  402cbc:	f002 f97e 	bl	404fbc <__aeabi_dsub>
  402cc0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  402cc4:	f805 eb01 	strb.w	lr, [r5], #1
  402cc8:	ebcb 0e05 	rsb	lr, fp, r5
  402ccc:	45d6      	cmp	lr, sl
  402cce:	4606      	mov	r6, r0
  402cd0:	460f      	mov	r7, r1
  402cd2:	f04f 0200 	mov.w	r2, #0
  402cd6:	4bb0      	ldr	r3, [pc, #704]	; (402f98 <_dtoa_r+0x600>)
  402cd8:	d1d2      	bne.n	402c80 <_dtoa_r+0x2e8>
  402cda:	f8dd 9014 	ldr.w	r9, [sp, #20]
  402cde:	4632      	mov	r2, r6
  402ce0:	463b      	mov	r3, r7
  402ce2:	4630      	mov	r0, r6
  402ce4:	4639      	mov	r1, r7
  402ce6:	f002 f96b 	bl	404fc0 <__adddf3>
  402cea:	4606      	mov	r6, r0
  402cec:	460f      	mov	r7, r1
  402cee:	4602      	mov	r2, r0
  402cf0:	460b      	mov	r3, r1
  402cf2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  402cf6:	f002 fd87 	bl	405808 <__aeabi_dcmplt>
  402cfa:	b940      	cbnz	r0, 402d0e <_dtoa_r+0x376>
  402cfc:	4632      	mov	r2, r6
  402cfe:	463b      	mov	r3, r7
  402d00:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  402d04:	f002 fd76 	bl	4057f4 <__aeabi_dcmpeq>
  402d08:	b188      	cbz	r0, 402d2e <_dtoa_r+0x396>
  402d0a:	07e3      	lsls	r3, r4, #31
  402d0c:	d50f      	bpl.n	402d2e <_dtoa_r+0x396>
  402d0e:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  402d12:	9a07      	ldr	r2, [sp, #28]
  402d14:	1e6b      	subs	r3, r5, #1
  402d16:	e004      	b.n	402d22 <_dtoa_r+0x38a>
  402d18:	429a      	cmp	r2, r3
  402d1a:	f000 842c 	beq.w	403576 <_dtoa_r+0xbde>
  402d1e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  402d22:	2c39      	cmp	r4, #57	; 0x39
  402d24:	f103 0501 	add.w	r5, r3, #1
  402d28:	d0f6      	beq.n	402d18 <_dtoa_r+0x380>
  402d2a:	3401      	adds	r4, #1
  402d2c:	701c      	strb	r4, [r3, #0]
  402d2e:	9908      	ldr	r1, [sp, #32]
  402d30:	4648      	mov	r0, r9
  402d32:	f001 f941 	bl	403fb8 <_Bfree>
  402d36:	2200      	movs	r2, #0
  402d38:	9b04      	ldr	r3, [sp, #16]
  402d3a:	702a      	strb	r2, [r5, #0]
  402d3c:	9a22      	ldr	r2, [sp, #136]	; 0x88
  402d3e:	3301      	adds	r3, #1
  402d40:	6013      	str	r3, [r2, #0]
  402d42:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402d44:	2b00      	cmp	r3, #0
  402d46:	f000 83a7 	beq.w	403498 <_dtoa_r+0xb00>
  402d4a:	9807      	ldr	r0, [sp, #28]
  402d4c:	601d      	str	r5, [r3, #0]
  402d4e:	b017      	add	sp, #92	; 0x5c
  402d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d54:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402d56:	2a00      	cmp	r2, #0
  402d58:	f000 8112 	beq.w	402f80 <_dtoa_r+0x5e8>
  402d5c:	9a20      	ldr	r2, [sp, #128]	; 0x80
  402d5e:	2a01      	cmp	r2, #1
  402d60:	f340 8258 	ble.w	403214 <_dtoa_r+0x87c>
  402d64:	9b06      	ldr	r3, [sp, #24]
  402d66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402d68:	1e5f      	subs	r7, r3, #1
  402d6a:	42ba      	cmp	r2, r7
  402d6c:	f2c0 8397 	blt.w	40349e <_dtoa_r+0xb06>
  402d70:	1bd7      	subs	r7, r2, r7
  402d72:	9b06      	ldr	r3, [sp, #24]
  402d74:	2b00      	cmp	r3, #0
  402d76:	f2c0 848a 	blt.w	40368e <_dtoa_r+0xcf6>
  402d7a:	9d05      	ldr	r5, [sp, #20]
  402d7c:	9b06      	ldr	r3, [sp, #24]
  402d7e:	9a05      	ldr	r2, [sp, #20]
  402d80:	441a      	add	r2, r3
  402d82:	9205      	str	r2, [sp, #20]
  402d84:	9a02      	ldr	r2, [sp, #8]
  402d86:	2101      	movs	r1, #1
  402d88:	441a      	add	r2, r3
  402d8a:	4648      	mov	r0, r9
  402d8c:	9202      	str	r2, [sp, #8]
  402d8e:	f001 f9ab 	bl	4040e8 <__i2b>
  402d92:	4606      	mov	r6, r0
  402d94:	b165      	cbz	r5, 402db0 <_dtoa_r+0x418>
  402d96:	9902      	ldr	r1, [sp, #8]
  402d98:	2900      	cmp	r1, #0
  402d9a:	460b      	mov	r3, r1
  402d9c:	dd08      	ble.n	402db0 <_dtoa_r+0x418>
  402d9e:	42a9      	cmp	r1, r5
  402da0:	9a05      	ldr	r2, [sp, #20]
  402da2:	bfa8      	it	ge
  402da4:	462b      	movge	r3, r5
  402da6:	1ad2      	subs	r2, r2, r3
  402da8:	1aed      	subs	r5, r5, r3
  402daa:	1acb      	subs	r3, r1, r3
  402dac:	9205      	str	r2, [sp, #20]
  402dae:	9302      	str	r3, [sp, #8]
  402db0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402db2:	2b00      	cmp	r3, #0
  402db4:	f340 82fc 	ble.w	4033b0 <_dtoa_r+0xa18>
  402db8:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402dba:	2a00      	cmp	r2, #0
  402dbc:	f000 8201 	beq.w	4031c2 <_dtoa_r+0x82a>
  402dc0:	2f00      	cmp	r7, #0
  402dc2:	f000 81fe 	beq.w	4031c2 <_dtoa_r+0x82a>
  402dc6:	4631      	mov	r1, r6
  402dc8:	463a      	mov	r2, r7
  402dca:	4648      	mov	r0, r9
  402dcc:	f001 fa2e 	bl	40422c <__pow5mult>
  402dd0:	f8dd 8020 	ldr.w	r8, [sp, #32]
  402dd4:	4601      	mov	r1, r0
  402dd6:	4642      	mov	r2, r8
  402dd8:	4606      	mov	r6, r0
  402dda:	4648      	mov	r0, r9
  402ddc:	f001 f98e 	bl	4040fc <__multiply>
  402de0:	4641      	mov	r1, r8
  402de2:	4604      	mov	r4, r0
  402de4:	4648      	mov	r0, r9
  402de6:	f001 f8e7 	bl	403fb8 <_Bfree>
  402dea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402dec:	1bdb      	subs	r3, r3, r7
  402dee:	930a      	str	r3, [sp, #40]	; 0x28
  402df0:	f040 81e6 	bne.w	4031c0 <_dtoa_r+0x828>
  402df4:	2101      	movs	r1, #1
  402df6:	4648      	mov	r0, r9
  402df8:	f001 f976 	bl	4040e8 <__i2b>
  402dfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402dfe:	4680      	mov	r8, r0
  402e00:	2b00      	cmp	r3, #0
  402e02:	f000 8219 	beq.w	403238 <_dtoa_r+0x8a0>
  402e06:	4601      	mov	r1, r0
  402e08:	461a      	mov	r2, r3
  402e0a:	4648      	mov	r0, r9
  402e0c:	f001 fa0e 	bl	40422c <__pow5mult>
  402e10:	9b20      	ldr	r3, [sp, #128]	; 0x80
  402e12:	2b01      	cmp	r3, #1
  402e14:	4680      	mov	r8, r0
  402e16:	f340 82f8 	ble.w	40340a <_dtoa_r+0xa72>
  402e1a:	2700      	movs	r7, #0
  402e1c:	f8d8 3010 	ldr.w	r3, [r8, #16]
  402e20:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  402e24:	6918      	ldr	r0, [r3, #16]
  402e26:	f001 f911 	bl	40404c <__hi0bits>
  402e2a:	f1c0 0020 	rsb	r0, r0, #32
  402e2e:	9a02      	ldr	r2, [sp, #8]
  402e30:	4410      	add	r0, r2
  402e32:	f010 001f 	ands.w	r0, r0, #31
  402e36:	f000 81f6 	beq.w	403226 <_dtoa_r+0x88e>
  402e3a:	f1c0 0320 	rsb	r3, r0, #32
  402e3e:	2b04      	cmp	r3, #4
  402e40:	f340 84ca 	ble.w	4037d8 <_dtoa_r+0xe40>
  402e44:	9b05      	ldr	r3, [sp, #20]
  402e46:	f1c0 001c 	rsb	r0, r0, #28
  402e4a:	4403      	add	r3, r0
  402e4c:	9305      	str	r3, [sp, #20]
  402e4e:	4613      	mov	r3, r2
  402e50:	4403      	add	r3, r0
  402e52:	4405      	add	r5, r0
  402e54:	9302      	str	r3, [sp, #8]
  402e56:	9b05      	ldr	r3, [sp, #20]
  402e58:	2b00      	cmp	r3, #0
  402e5a:	dd05      	ble.n	402e68 <_dtoa_r+0x4d0>
  402e5c:	4621      	mov	r1, r4
  402e5e:	461a      	mov	r2, r3
  402e60:	4648      	mov	r0, r9
  402e62:	f001 fa33 	bl	4042cc <__lshift>
  402e66:	4604      	mov	r4, r0
  402e68:	9b02      	ldr	r3, [sp, #8]
  402e6a:	2b00      	cmp	r3, #0
  402e6c:	dd05      	ble.n	402e7a <_dtoa_r+0x4e2>
  402e6e:	4641      	mov	r1, r8
  402e70:	461a      	mov	r2, r3
  402e72:	4648      	mov	r0, r9
  402e74:	f001 fa2a 	bl	4042cc <__lshift>
  402e78:	4680      	mov	r8, r0
  402e7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  402e7c:	2b00      	cmp	r3, #0
  402e7e:	f040 827c 	bne.w	40337a <_dtoa_r+0x9e2>
  402e82:	9b06      	ldr	r3, [sp, #24]
  402e84:	2b00      	cmp	r3, #0
  402e86:	f340 8295 	ble.w	4033b4 <_dtoa_r+0xa1c>
  402e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402e8c:	2b00      	cmp	r3, #0
  402e8e:	f040 81f5 	bne.w	40327c <_dtoa_r+0x8e4>
  402e92:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e96:	9f06      	ldr	r7, [sp, #24]
  402e98:	465d      	mov	r5, fp
  402e9a:	e002      	b.n	402ea2 <_dtoa_r+0x50a>
  402e9c:	f001 f896 	bl	403fcc <__multadd>
  402ea0:	4604      	mov	r4, r0
  402ea2:	4641      	mov	r1, r8
  402ea4:	4620      	mov	r0, r4
  402ea6:	f7ff fce3 	bl	402870 <quorem>
  402eaa:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  402eae:	f805 ab01 	strb.w	sl, [r5], #1
  402eb2:	ebcb 0305 	rsb	r3, fp, r5
  402eb6:	42bb      	cmp	r3, r7
  402eb8:	f04f 020a 	mov.w	r2, #10
  402ebc:	f04f 0300 	mov.w	r3, #0
  402ec0:	4621      	mov	r1, r4
  402ec2:	4648      	mov	r0, r9
  402ec4:	dbea      	blt.n	402e9c <_dtoa_r+0x504>
  402ec6:	9b07      	ldr	r3, [sp, #28]
  402ec8:	9a06      	ldr	r2, [sp, #24]
  402eca:	2a01      	cmp	r2, #1
  402ecc:	bfac      	ite	ge
  402ece:	189b      	addge	r3, r3, r2
  402ed0:	3301      	addlt	r3, #1
  402ed2:	461d      	mov	r5, r3
  402ed4:	f04f 0b00 	mov.w	fp, #0
  402ed8:	4621      	mov	r1, r4
  402eda:	2201      	movs	r2, #1
  402edc:	4648      	mov	r0, r9
  402ede:	f001 f9f5 	bl	4042cc <__lshift>
  402ee2:	4641      	mov	r1, r8
  402ee4:	9008      	str	r0, [sp, #32]
  402ee6:	f001 fa49 	bl	40437c <__mcmp>
  402eea:	2800      	cmp	r0, #0
  402eec:	f340 830d 	ble.w	40350a <_dtoa_r+0xb72>
  402ef0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  402ef4:	9907      	ldr	r1, [sp, #28]
  402ef6:	1e6b      	subs	r3, r5, #1
  402ef8:	e004      	b.n	402f04 <_dtoa_r+0x56c>
  402efa:	428b      	cmp	r3, r1
  402efc:	f000 8278 	beq.w	4033f0 <_dtoa_r+0xa58>
  402f00:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  402f04:	2a39      	cmp	r2, #57	; 0x39
  402f06:	f103 0501 	add.w	r5, r3, #1
  402f0a:	d0f6      	beq.n	402efa <_dtoa_r+0x562>
  402f0c:	3201      	adds	r2, #1
  402f0e:	701a      	strb	r2, [r3, #0]
  402f10:	4641      	mov	r1, r8
  402f12:	4648      	mov	r0, r9
  402f14:	f001 f850 	bl	403fb8 <_Bfree>
  402f18:	2e00      	cmp	r6, #0
  402f1a:	f43f af08 	beq.w	402d2e <_dtoa_r+0x396>
  402f1e:	f1bb 0f00 	cmp.w	fp, #0
  402f22:	d005      	beq.n	402f30 <_dtoa_r+0x598>
  402f24:	45b3      	cmp	fp, r6
  402f26:	d003      	beq.n	402f30 <_dtoa_r+0x598>
  402f28:	4659      	mov	r1, fp
  402f2a:	4648      	mov	r0, r9
  402f2c:	f001 f844 	bl	403fb8 <_Bfree>
  402f30:	4631      	mov	r1, r6
  402f32:	4648      	mov	r0, r9
  402f34:	f001 f840 	bl	403fb8 <_Bfree>
  402f38:	e6f9      	b.n	402d2e <_dtoa_r+0x396>
  402f3a:	2301      	movs	r3, #1
  402f3c:	930c      	str	r3, [sp, #48]	; 0x30
  402f3e:	e5e3      	b.n	402b08 <_dtoa_r+0x170>
  402f40:	f8dd 8010 	ldr.w	r8, [sp, #16]
  402f44:	4640      	mov	r0, r8
  402f46:	f002 f987 	bl	405258 <__aeabi_i2d>
  402f4a:	4602      	mov	r2, r0
  402f4c:	460b      	mov	r3, r1
  402f4e:	4630      	mov	r0, r6
  402f50:	4639      	mov	r1, r7
  402f52:	f002 fc4f 	bl	4057f4 <__aeabi_dcmpeq>
  402f56:	2800      	cmp	r0, #0
  402f58:	f47f adc2 	bne.w	402ae0 <_dtoa_r+0x148>
  402f5c:	f108 33ff 	add.w	r3, r8, #4294967295
  402f60:	9304      	str	r3, [sp, #16]
  402f62:	e5bd      	b.n	402ae0 <_dtoa_r+0x148>
  402f64:	9a05      	ldr	r2, [sp, #20]
  402f66:	9b04      	ldr	r3, [sp, #16]
  402f68:	1ad2      	subs	r2, r2, r3
  402f6a:	425b      	negs	r3, r3
  402f6c:	930a      	str	r3, [sp, #40]	; 0x28
  402f6e:	2300      	movs	r3, #0
  402f70:	9205      	str	r2, [sp, #20]
  402f72:	930b      	str	r3, [sp, #44]	; 0x2c
  402f74:	e5da      	b.n	402b2c <_dtoa_r+0x194>
  402f76:	425b      	negs	r3, r3
  402f78:	9305      	str	r3, [sp, #20]
  402f7a:	2300      	movs	r3, #0
  402f7c:	9302      	str	r3, [sp, #8]
  402f7e:	e5ca      	b.n	402b16 <_dtoa_r+0x17e>
  402f80:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  402f82:	9d05      	ldr	r5, [sp, #20]
  402f84:	9e09      	ldr	r6, [sp, #36]	; 0x24
  402f86:	e705      	b.n	402d94 <_dtoa_r+0x3fc>
  402f88:	f1c3 0820 	rsb	r8, r3, #32
  402f8c:	fa0a f008 	lsl.w	r0, sl, r8
  402f90:	e573      	b.n	402a7a <_dtoa_r+0xe2>
  402f92:	900c      	str	r0, [sp, #48]	; 0x30
  402f94:	e5b8      	b.n	402b08 <_dtoa_r+0x170>
  402f96:	bf00      	nop
  402f98:	40240000 	.word	0x40240000
  402f9c:	2300      	movs	r3, #0
  402f9e:	9309      	str	r3, [sp, #36]	; 0x24
  402fa0:	9b04      	ldr	r3, [sp, #16]
  402fa2:	9a21      	ldr	r2, [sp, #132]	; 0x84
  402fa4:	4413      	add	r3, r2
  402fa6:	930d      	str	r3, [sp, #52]	; 0x34
  402fa8:	3301      	adds	r3, #1
  402faa:	2b00      	cmp	r3, #0
  402fac:	9306      	str	r3, [sp, #24]
  402fae:	f340 8283 	ble.w	4034b8 <_dtoa_r+0xb20>
  402fb2:	9c06      	ldr	r4, [sp, #24]
  402fb4:	4626      	mov	r6, r4
  402fb6:	2100      	movs	r1, #0
  402fb8:	2e17      	cmp	r6, #23
  402fba:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  402fbe:	d90b      	bls.n	402fd8 <_dtoa_r+0x640>
  402fc0:	2201      	movs	r2, #1
  402fc2:	2304      	movs	r3, #4
  402fc4:	005b      	lsls	r3, r3, #1
  402fc6:	f103 0014 	add.w	r0, r3, #20
  402fca:	42b0      	cmp	r0, r6
  402fcc:	4611      	mov	r1, r2
  402fce:	f102 0201 	add.w	r2, r2, #1
  402fd2:	d9f7      	bls.n	402fc4 <_dtoa_r+0x62c>
  402fd4:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  402fd8:	4648      	mov	r0, r9
  402fda:	f000 ffc7 	bl	403f6c <_Balloc>
  402fde:	2c0e      	cmp	r4, #14
  402fe0:	9007      	str	r0, [sp, #28]
  402fe2:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  402fe6:	f63f ade0 	bhi.w	402baa <_dtoa_r+0x212>
  402fea:	2d00      	cmp	r5, #0
  402fec:	f43f addd 	beq.w	402baa <_dtoa_r+0x212>
  402ff0:	9904      	ldr	r1, [sp, #16]
  402ff2:	4657      	mov	r7, sl
  402ff4:	46d8      	mov	r8, fp
  402ff6:	2900      	cmp	r1, #0
  402ff8:	e9cd 780e 	strd	r7, r8, [sp, #56]	; 0x38
  402ffc:	f340 8292 	ble.w	403524 <_dtoa_r+0xb8c>
  403000:	4b91      	ldr	r3, [pc, #580]	; (403248 <_dtoa_r+0x8b0>)
  403002:	f001 020f 	and.w	r2, r1, #15
  403006:	110e      	asrs	r6, r1, #4
  403008:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40300c:	06f0      	lsls	r0, r6, #27
  40300e:	e9d3 4500 	ldrd	r4, r5, [r3]
  403012:	f140 824c 	bpl.w	4034ae <_dtoa_r+0xb16>
  403016:	4b8d      	ldr	r3, [pc, #564]	; (40324c <_dtoa_r+0x8b4>)
  403018:	4650      	mov	r0, sl
  40301a:	4659      	mov	r1, fp
  40301c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403020:	f002 faaa 	bl	405578 <__aeabi_ddiv>
  403024:	f006 060f 	and.w	r6, r6, #15
  403028:	4682      	mov	sl, r0
  40302a:	468b      	mov	fp, r1
  40302c:	f04f 0803 	mov.w	r8, #3
  403030:	b186      	cbz	r6, 403054 <_dtoa_r+0x6bc>
  403032:	4f86      	ldr	r7, [pc, #536]	; (40324c <_dtoa_r+0x8b4>)
  403034:	07f1      	lsls	r1, r6, #31
  403036:	d509      	bpl.n	40304c <_dtoa_r+0x6b4>
  403038:	4620      	mov	r0, r4
  40303a:	4629      	mov	r1, r5
  40303c:	e9d7 2300 	ldrd	r2, r3, [r7]
  403040:	f002 f970 	bl	405324 <__aeabi_dmul>
  403044:	f108 0801 	add.w	r8, r8, #1
  403048:	4604      	mov	r4, r0
  40304a:	460d      	mov	r5, r1
  40304c:	1076      	asrs	r6, r6, #1
  40304e:	f107 0708 	add.w	r7, r7, #8
  403052:	d1ef      	bne.n	403034 <_dtoa_r+0x69c>
  403054:	4622      	mov	r2, r4
  403056:	462b      	mov	r3, r5
  403058:	4650      	mov	r0, sl
  40305a:	4659      	mov	r1, fp
  40305c:	f002 fa8c 	bl	405578 <__aeabi_ddiv>
  403060:	4606      	mov	r6, r0
  403062:	460f      	mov	r7, r1
  403064:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403066:	b143      	cbz	r3, 40307a <_dtoa_r+0x6e2>
  403068:	2200      	movs	r2, #0
  40306a:	4b79      	ldr	r3, [pc, #484]	; (403250 <_dtoa_r+0x8b8>)
  40306c:	4630      	mov	r0, r6
  40306e:	4639      	mov	r1, r7
  403070:	f002 fbca 	bl	405808 <__aeabi_dcmplt>
  403074:	2800      	cmp	r0, #0
  403076:	f040 8320 	bne.w	4036ba <_dtoa_r+0xd22>
  40307a:	4640      	mov	r0, r8
  40307c:	f002 f8ec 	bl	405258 <__aeabi_i2d>
  403080:	4632      	mov	r2, r6
  403082:	463b      	mov	r3, r7
  403084:	f002 f94e 	bl	405324 <__aeabi_dmul>
  403088:	4b72      	ldr	r3, [pc, #456]	; (403254 <_dtoa_r+0x8bc>)
  40308a:	2200      	movs	r2, #0
  40308c:	f001 ff98 	bl	404fc0 <__adddf3>
  403090:	9b06      	ldr	r3, [sp, #24]
  403092:	4604      	mov	r4, r0
  403094:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  403098:	2b00      	cmp	r3, #0
  40309a:	f000 81df 	beq.w	40345c <_dtoa_r+0xac4>
  40309e:	9b04      	ldr	r3, [sp, #16]
  4030a0:	f8dd 8018 	ldr.w	r8, [sp, #24]
  4030a4:	9311      	str	r3, [sp, #68]	; 0x44
  4030a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4030a8:	2b00      	cmp	r3, #0
  4030aa:	f000 8297 	beq.w	4035dc <_dtoa_r+0xc44>
  4030ae:	4b66      	ldr	r3, [pc, #408]	; (403248 <_dtoa_r+0x8b0>)
  4030b0:	4969      	ldr	r1, [pc, #420]	; (403258 <_dtoa_r+0x8c0>)
  4030b2:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
  4030b6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4030ba:	2000      	movs	r0, #0
  4030bc:	f002 fa5c 	bl	405578 <__aeabi_ddiv>
  4030c0:	4622      	mov	r2, r4
  4030c2:	462b      	mov	r3, r5
  4030c4:	f001 ff7a 	bl	404fbc <__aeabi_dsub>
  4030c8:	4682      	mov	sl, r0
  4030ca:	468b      	mov	fp, r1
  4030cc:	4630      	mov	r0, r6
  4030ce:	4639      	mov	r1, r7
  4030d0:	f002 fbd8 	bl	405884 <__aeabi_d2iz>
  4030d4:	4604      	mov	r4, r0
  4030d6:	f002 f8bf 	bl	405258 <__aeabi_i2d>
  4030da:	4602      	mov	r2, r0
  4030dc:	460b      	mov	r3, r1
  4030de:	4630      	mov	r0, r6
  4030e0:	4639      	mov	r1, r7
  4030e2:	f001 ff6b 	bl	404fbc <__aeabi_dsub>
  4030e6:	3430      	adds	r4, #48	; 0x30
  4030e8:	9d07      	ldr	r5, [sp, #28]
  4030ea:	b2e4      	uxtb	r4, r4
  4030ec:	4606      	mov	r6, r0
  4030ee:	460f      	mov	r7, r1
  4030f0:	702c      	strb	r4, [r5, #0]
  4030f2:	4602      	mov	r2, r0
  4030f4:	460b      	mov	r3, r1
  4030f6:	4650      	mov	r0, sl
  4030f8:	4659      	mov	r1, fp
  4030fa:	3501      	adds	r5, #1
  4030fc:	f002 fba2 	bl	405844 <__aeabi_dcmpgt>
  403100:	2800      	cmp	r0, #0
  403102:	d14c      	bne.n	40319e <_dtoa_r+0x806>
  403104:	4632      	mov	r2, r6
  403106:	463b      	mov	r3, r7
  403108:	2000      	movs	r0, #0
  40310a:	4951      	ldr	r1, [pc, #324]	; (403250 <_dtoa_r+0x8b8>)
  40310c:	f001 ff56 	bl	404fbc <__aeabi_dsub>
  403110:	4602      	mov	r2, r0
  403112:	460b      	mov	r3, r1
  403114:	4650      	mov	r0, sl
  403116:	4659      	mov	r1, fp
  403118:	f002 fb94 	bl	405844 <__aeabi_dcmpgt>
  40311c:	2800      	cmp	r0, #0
  40311e:	f040 830d 	bne.w	40373c <_dtoa_r+0xda4>
  403122:	f1b8 0f01 	cmp.w	r8, #1
  403126:	f340 81b3 	ble.w	403490 <_dtoa_r+0xaf8>
  40312a:	9b07      	ldr	r3, [sp, #28]
  40312c:	4498      	add	r8, r3
  40312e:	e00d      	b.n	40314c <_dtoa_r+0x7b4>
  403130:	2000      	movs	r0, #0
  403132:	4947      	ldr	r1, [pc, #284]	; (403250 <_dtoa_r+0x8b8>)
  403134:	f001 ff42 	bl	404fbc <__aeabi_dsub>
  403138:	4652      	mov	r2, sl
  40313a:	465b      	mov	r3, fp
  40313c:	f002 fb64 	bl	405808 <__aeabi_dcmplt>
  403140:	2800      	cmp	r0, #0
  403142:	f040 82fb 	bne.w	40373c <_dtoa_r+0xda4>
  403146:	4545      	cmp	r5, r8
  403148:	f000 81a2 	beq.w	403490 <_dtoa_r+0xaf8>
  40314c:	4650      	mov	r0, sl
  40314e:	4659      	mov	r1, fp
  403150:	2200      	movs	r2, #0
  403152:	4b42      	ldr	r3, [pc, #264]	; (40325c <_dtoa_r+0x8c4>)
  403154:	f002 f8e6 	bl	405324 <__aeabi_dmul>
  403158:	2200      	movs	r2, #0
  40315a:	4b40      	ldr	r3, [pc, #256]	; (40325c <_dtoa_r+0x8c4>)
  40315c:	4682      	mov	sl, r0
  40315e:	468b      	mov	fp, r1
  403160:	4630      	mov	r0, r6
  403162:	4639      	mov	r1, r7
  403164:	f002 f8de 	bl	405324 <__aeabi_dmul>
  403168:	460f      	mov	r7, r1
  40316a:	4606      	mov	r6, r0
  40316c:	f002 fb8a 	bl	405884 <__aeabi_d2iz>
  403170:	4604      	mov	r4, r0
  403172:	f002 f871 	bl	405258 <__aeabi_i2d>
  403176:	4602      	mov	r2, r0
  403178:	460b      	mov	r3, r1
  40317a:	4630      	mov	r0, r6
  40317c:	4639      	mov	r1, r7
  40317e:	f001 ff1d 	bl	404fbc <__aeabi_dsub>
  403182:	3430      	adds	r4, #48	; 0x30
  403184:	b2e4      	uxtb	r4, r4
  403186:	4652      	mov	r2, sl
  403188:	465b      	mov	r3, fp
  40318a:	f805 4b01 	strb.w	r4, [r5], #1
  40318e:	4606      	mov	r6, r0
  403190:	460f      	mov	r7, r1
  403192:	f002 fb39 	bl	405808 <__aeabi_dcmplt>
  403196:	4632      	mov	r2, r6
  403198:	463b      	mov	r3, r7
  40319a:	2800      	cmp	r0, #0
  40319c:	d0c8      	beq.n	403130 <_dtoa_r+0x798>
  40319e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031a0:	9304      	str	r3, [sp, #16]
  4031a2:	e5c4      	b.n	402d2e <_dtoa_r+0x396>
  4031a4:	2300      	movs	r3, #0
  4031a6:	9309      	str	r3, [sp, #36]	; 0x24
  4031a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4031aa:	2b00      	cmp	r3, #0
  4031ac:	f340 8189 	ble.w	4034c2 <_dtoa_r+0xb2a>
  4031b0:	461e      	mov	r6, r3
  4031b2:	461c      	mov	r4, r3
  4031b4:	930d      	str	r3, [sp, #52]	; 0x34
  4031b6:	9306      	str	r3, [sp, #24]
  4031b8:	e6fd      	b.n	402fb6 <_dtoa_r+0x61e>
  4031ba:	2301      	movs	r3, #1
  4031bc:	9309      	str	r3, [sp, #36]	; 0x24
  4031be:	e7f3      	b.n	4031a8 <_dtoa_r+0x810>
  4031c0:	9408      	str	r4, [sp, #32]
  4031c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4031c4:	9908      	ldr	r1, [sp, #32]
  4031c6:	4648      	mov	r0, r9
  4031c8:	f001 f830 	bl	40422c <__pow5mult>
  4031cc:	4604      	mov	r4, r0
  4031ce:	e611      	b.n	402df4 <_dtoa_r+0x45c>
  4031d0:	9b06      	ldr	r3, [sp, #24]
  4031d2:	2b00      	cmp	r3, #0
  4031d4:	f73f acfc 	bgt.w	402bd0 <_dtoa_r+0x238>
  4031d8:	f040 82da 	bne.w	403790 <_dtoa_r+0xdf8>
  4031dc:	2200      	movs	r2, #0
  4031de:	4b20      	ldr	r3, [pc, #128]	; (403260 <_dtoa_r+0x8c8>)
  4031e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4031e4:	f002 f89e 	bl	405324 <__aeabi_dmul>
  4031e8:	4652      	mov	r2, sl
  4031ea:	465b      	mov	r3, fp
  4031ec:	f002 fb20 	bl	405830 <__aeabi_dcmpge>
  4031f0:	f8dd 8018 	ldr.w	r8, [sp, #24]
  4031f4:	4646      	mov	r6, r8
  4031f6:	2800      	cmp	r0, #0
  4031f8:	f000 80f2 	beq.w	4033e0 <_dtoa_r+0xa48>
  4031fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4031fe:	9d07      	ldr	r5, [sp, #28]
  403200:	43db      	mvns	r3, r3
  403202:	9304      	str	r3, [sp, #16]
  403204:	4641      	mov	r1, r8
  403206:	4648      	mov	r0, r9
  403208:	f000 fed6 	bl	403fb8 <_Bfree>
  40320c:	2e00      	cmp	r6, #0
  40320e:	f43f ad8e 	beq.w	402d2e <_dtoa_r+0x396>
  403212:	e68d      	b.n	402f30 <_dtoa_r+0x598>
  403214:	9a10      	ldr	r2, [sp, #64]	; 0x40
  403216:	2a00      	cmp	r2, #0
  403218:	f000 8241 	beq.w	40369e <_dtoa_r+0xd06>
  40321c:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403220:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403222:	9d05      	ldr	r5, [sp, #20]
  403224:	e5ab      	b.n	402d7e <_dtoa_r+0x3e6>
  403226:	201c      	movs	r0, #28
  403228:	9b05      	ldr	r3, [sp, #20]
  40322a:	4403      	add	r3, r0
  40322c:	9305      	str	r3, [sp, #20]
  40322e:	9b02      	ldr	r3, [sp, #8]
  403230:	4403      	add	r3, r0
  403232:	4405      	add	r5, r0
  403234:	9302      	str	r3, [sp, #8]
  403236:	e60e      	b.n	402e56 <_dtoa_r+0x4be>
  403238:	9b20      	ldr	r3, [sp, #128]	; 0x80
  40323a:	2b01      	cmp	r3, #1
  40323c:	f340 8282 	ble.w	403744 <_dtoa_r+0xdac>
  403240:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  403242:	2001      	movs	r0, #1
  403244:	e5f3      	b.n	402e2e <_dtoa_r+0x496>
  403246:	bf00      	nop
  403248:	00405cf8 	.word	0x00405cf8
  40324c:	00405dc0 	.word	0x00405dc0
  403250:	3ff00000 	.word	0x3ff00000
  403254:	401c0000 	.word	0x401c0000
  403258:	3fe00000 	.word	0x3fe00000
  40325c:	40240000 	.word	0x40240000
  403260:	40140000 	.word	0x40140000
  403264:	4631      	mov	r1, r6
  403266:	2300      	movs	r3, #0
  403268:	220a      	movs	r2, #10
  40326a:	4648      	mov	r0, r9
  40326c:	f000 feae 	bl	403fcc <__multadd>
  403270:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403272:	2b00      	cmp	r3, #0
  403274:	4606      	mov	r6, r0
  403276:	f340 8297 	ble.w	4037a8 <_dtoa_r+0xe10>
  40327a:	9306      	str	r3, [sp, #24]
  40327c:	2d00      	cmp	r5, #0
  40327e:	dd05      	ble.n	40328c <_dtoa_r+0x8f4>
  403280:	4631      	mov	r1, r6
  403282:	462a      	mov	r2, r5
  403284:	4648      	mov	r0, r9
  403286:	f001 f821 	bl	4042cc <__lshift>
  40328a:	4606      	mov	r6, r0
  40328c:	2f00      	cmp	r7, #0
  40328e:	f040 817c 	bne.w	40358a <_dtoa_r+0xbf2>
  403292:	9605      	str	r6, [sp, #20]
  403294:	9b06      	ldr	r3, [sp, #24]
  403296:	9a07      	ldr	r2, [sp, #28]
  403298:	f8dd b014 	ldr.w	fp, [sp, #20]
  40329c:	3b01      	subs	r3, #1
  40329e:	18d3      	adds	r3, r2, r3
  4032a0:	9308      	str	r3, [sp, #32]
  4032a2:	f00a 0301 	and.w	r3, sl, #1
  4032a6:	9309      	str	r3, [sp, #36]	; 0x24
  4032a8:	4617      	mov	r7, r2
  4032aa:	46c2      	mov	sl, r8
  4032ac:	4651      	mov	r1, sl
  4032ae:	4620      	mov	r0, r4
  4032b0:	f7ff fade 	bl	402870 <quorem>
  4032b4:	4631      	mov	r1, r6
  4032b6:	4605      	mov	r5, r0
  4032b8:	4620      	mov	r0, r4
  4032ba:	f001 f85f 	bl	40437c <__mcmp>
  4032be:	465a      	mov	r2, fp
  4032c0:	9002      	str	r0, [sp, #8]
  4032c2:	4651      	mov	r1, sl
  4032c4:	4648      	mov	r0, r9
  4032c6:	f001 f879 	bl	4043bc <__mdiff>
  4032ca:	68c2      	ldr	r2, [r0, #12]
  4032cc:	4680      	mov	r8, r0
  4032ce:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4032d2:	2a00      	cmp	r2, #0
  4032d4:	d149      	bne.n	40336a <_dtoa_r+0x9d2>
  4032d6:	4601      	mov	r1, r0
  4032d8:	4620      	mov	r0, r4
  4032da:	9306      	str	r3, [sp, #24]
  4032dc:	f001 f84e 	bl	40437c <__mcmp>
  4032e0:	4641      	mov	r1, r8
  4032e2:	9005      	str	r0, [sp, #20]
  4032e4:	4648      	mov	r0, r9
  4032e6:	f000 fe67 	bl	403fb8 <_Bfree>
  4032ea:	9a05      	ldr	r2, [sp, #20]
  4032ec:	9b06      	ldr	r3, [sp, #24]
  4032ee:	b92a      	cbnz	r2, 4032fc <_dtoa_r+0x964>
  4032f0:	9920      	ldr	r1, [sp, #128]	; 0x80
  4032f2:	b919      	cbnz	r1, 4032fc <_dtoa_r+0x964>
  4032f4:	9909      	ldr	r1, [sp, #36]	; 0x24
  4032f6:	2900      	cmp	r1, #0
  4032f8:	f000 8236 	beq.w	403768 <_dtoa_r+0xdd0>
  4032fc:	9902      	ldr	r1, [sp, #8]
  4032fe:	2900      	cmp	r1, #0
  403300:	f2c0 80e4 	blt.w	4034cc <_dtoa_r+0xb34>
  403304:	d105      	bne.n	403312 <_dtoa_r+0x97a>
  403306:	9920      	ldr	r1, [sp, #128]	; 0x80
  403308:	b919      	cbnz	r1, 403312 <_dtoa_r+0x97a>
  40330a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40330c:	2900      	cmp	r1, #0
  40330e:	f000 80dd 	beq.w	4034cc <_dtoa_r+0xb34>
  403312:	2a00      	cmp	r2, #0
  403314:	f300 814d 	bgt.w	4035b2 <_dtoa_r+0xc1a>
  403318:	9a08      	ldr	r2, [sp, #32]
  40331a:	703b      	strb	r3, [r7, #0]
  40331c:	f107 0801 	add.w	r8, r7, #1
  403320:	4297      	cmp	r7, r2
  403322:	4645      	mov	r5, r8
  403324:	f000 8154 	beq.w	4035d0 <_dtoa_r+0xc38>
  403328:	4621      	mov	r1, r4
  40332a:	2300      	movs	r3, #0
  40332c:	220a      	movs	r2, #10
  40332e:	4648      	mov	r0, r9
  403330:	f000 fe4c 	bl	403fcc <__multadd>
  403334:	455e      	cmp	r6, fp
  403336:	4604      	mov	r4, r0
  403338:	4631      	mov	r1, r6
  40333a:	f04f 0300 	mov.w	r3, #0
  40333e:	f04f 020a 	mov.w	r2, #10
  403342:	4648      	mov	r0, r9
  403344:	d00b      	beq.n	40335e <_dtoa_r+0x9c6>
  403346:	f000 fe41 	bl	403fcc <__multadd>
  40334a:	4659      	mov	r1, fp
  40334c:	4606      	mov	r6, r0
  40334e:	2300      	movs	r3, #0
  403350:	220a      	movs	r2, #10
  403352:	4648      	mov	r0, r9
  403354:	f000 fe3a 	bl	403fcc <__multadd>
  403358:	4647      	mov	r7, r8
  40335a:	4683      	mov	fp, r0
  40335c:	e7a6      	b.n	4032ac <_dtoa_r+0x914>
  40335e:	f000 fe35 	bl	403fcc <__multadd>
  403362:	4647      	mov	r7, r8
  403364:	4606      	mov	r6, r0
  403366:	4683      	mov	fp, r0
  403368:	e7a0      	b.n	4032ac <_dtoa_r+0x914>
  40336a:	4601      	mov	r1, r0
  40336c:	4648      	mov	r0, r9
  40336e:	9305      	str	r3, [sp, #20]
  403370:	f000 fe22 	bl	403fb8 <_Bfree>
  403374:	2201      	movs	r2, #1
  403376:	9b05      	ldr	r3, [sp, #20]
  403378:	e7c0      	b.n	4032fc <_dtoa_r+0x964>
  40337a:	4641      	mov	r1, r8
  40337c:	4620      	mov	r0, r4
  40337e:	f000 fffd 	bl	40437c <__mcmp>
  403382:	2800      	cmp	r0, #0
  403384:	f6bf ad7d 	bge.w	402e82 <_dtoa_r+0x4ea>
  403388:	4621      	mov	r1, r4
  40338a:	9c04      	ldr	r4, [sp, #16]
  40338c:	2300      	movs	r3, #0
  40338e:	3c01      	subs	r4, #1
  403390:	220a      	movs	r2, #10
  403392:	4648      	mov	r0, r9
  403394:	9404      	str	r4, [sp, #16]
  403396:	f000 fe19 	bl	403fcc <__multadd>
  40339a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40339c:	4604      	mov	r4, r0
  40339e:	2b00      	cmp	r3, #0
  4033a0:	f47f af60 	bne.w	403264 <_dtoa_r+0x8cc>
  4033a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4033a6:	2b00      	cmp	r3, #0
  4033a8:	f340 81f6 	ble.w	403798 <_dtoa_r+0xe00>
  4033ac:	9306      	str	r3, [sp, #24]
  4033ae:	e570      	b.n	402e92 <_dtoa_r+0x4fa>
  4033b0:	9c08      	ldr	r4, [sp, #32]
  4033b2:	e51f      	b.n	402df4 <_dtoa_r+0x45c>
  4033b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4033b6:	2b02      	cmp	r3, #2
  4033b8:	f77f ad67 	ble.w	402e8a <_dtoa_r+0x4f2>
  4033bc:	9b06      	ldr	r3, [sp, #24]
  4033be:	2b00      	cmp	r3, #0
  4033c0:	f040 8179 	bne.w	4036b6 <_dtoa_r+0xd1e>
  4033c4:	4641      	mov	r1, r8
  4033c6:	2205      	movs	r2, #5
  4033c8:	4648      	mov	r0, r9
  4033ca:	f000 fdff 	bl	403fcc <__multadd>
  4033ce:	4601      	mov	r1, r0
  4033d0:	4680      	mov	r8, r0
  4033d2:	4620      	mov	r0, r4
  4033d4:	f000 ffd2 	bl	40437c <__mcmp>
  4033d8:	2800      	cmp	r0, #0
  4033da:	9408      	str	r4, [sp, #32]
  4033dc:	f77f af0e 	ble.w	4031fc <_dtoa_r+0x864>
  4033e0:	9a04      	ldr	r2, [sp, #16]
  4033e2:	9907      	ldr	r1, [sp, #28]
  4033e4:	2331      	movs	r3, #49	; 0x31
  4033e6:	3201      	adds	r2, #1
  4033e8:	9204      	str	r2, [sp, #16]
  4033ea:	700b      	strb	r3, [r1, #0]
  4033ec:	1c4d      	adds	r5, r1, #1
  4033ee:	e709      	b.n	403204 <_dtoa_r+0x86c>
  4033f0:	9a04      	ldr	r2, [sp, #16]
  4033f2:	3201      	adds	r2, #1
  4033f4:	9204      	str	r2, [sp, #16]
  4033f6:	9a07      	ldr	r2, [sp, #28]
  4033f8:	2331      	movs	r3, #49	; 0x31
  4033fa:	7013      	strb	r3, [r2, #0]
  4033fc:	e588      	b.n	402f10 <_dtoa_r+0x578>
  4033fe:	2301      	movs	r3, #1
  403400:	9309      	str	r3, [sp, #36]	; 0x24
  403402:	e5cd      	b.n	402fa0 <_dtoa_r+0x608>
  403404:	f8dd 9014 	ldr.w	r9, [sp, #20]
  403408:	e491      	b.n	402d2e <_dtoa_r+0x396>
  40340a:	f1ba 0f00 	cmp.w	sl, #0
  40340e:	f47f ad04 	bne.w	402e1a <_dtoa_r+0x482>
  403412:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403416:	2b00      	cmp	r3, #0
  403418:	f040 813f 	bne.w	40369a <_dtoa_r+0xd02>
  40341c:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403420:	0d3f      	lsrs	r7, r7, #20
  403422:	053f      	lsls	r7, r7, #20
  403424:	b137      	cbz	r7, 403434 <_dtoa_r+0xa9c>
  403426:	9b05      	ldr	r3, [sp, #20]
  403428:	3301      	adds	r3, #1
  40342a:	9305      	str	r3, [sp, #20]
  40342c:	9b02      	ldr	r3, [sp, #8]
  40342e:	3301      	adds	r3, #1
  403430:	9302      	str	r3, [sp, #8]
  403432:	2701      	movs	r7, #1
  403434:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403436:	2001      	movs	r0, #1
  403438:	2b00      	cmp	r3, #0
  40343a:	f43f acf8 	beq.w	402e2e <_dtoa_r+0x496>
  40343e:	e4ed      	b.n	402e1c <_dtoa_r+0x484>
  403440:	4640      	mov	r0, r8
  403442:	f001 ff09 	bl	405258 <__aeabi_i2d>
  403446:	4632      	mov	r2, r6
  403448:	463b      	mov	r3, r7
  40344a:	f001 ff6b 	bl	405324 <__aeabi_dmul>
  40344e:	2200      	movs	r2, #0
  403450:	4bbf      	ldr	r3, [pc, #764]	; (403750 <_dtoa_r+0xdb8>)
  403452:	f001 fdb5 	bl	404fc0 <__adddf3>
  403456:	4604      	mov	r4, r0
  403458:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  40345c:	4630      	mov	r0, r6
  40345e:	4639      	mov	r1, r7
  403460:	2200      	movs	r2, #0
  403462:	4bbc      	ldr	r3, [pc, #752]	; (403754 <_dtoa_r+0xdbc>)
  403464:	f001 fdaa 	bl	404fbc <__aeabi_dsub>
  403468:	4622      	mov	r2, r4
  40346a:	462b      	mov	r3, r5
  40346c:	4606      	mov	r6, r0
  40346e:	460f      	mov	r7, r1
  403470:	f002 f9e8 	bl	405844 <__aeabi_dcmpgt>
  403474:	4680      	mov	r8, r0
  403476:	2800      	cmp	r0, #0
  403478:	f040 8105 	bne.w	403686 <_dtoa_r+0xcee>
  40347c:	4622      	mov	r2, r4
  40347e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  403482:	4630      	mov	r0, r6
  403484:	4639      	mov	r1, r7
  403486:	f002 f9bf 	bl	405808 <__aeabi_dcmplt>
  40348a:	b108      	cbz	r0, 403490 <_dtoa_r+0xaf8>
  40348c:	4646      	mov	r6, r8
  40348e:	e6b5      	b.n	4031fc <_dtoa_r+0x864>
  403490:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  403494:	f7ff bb89 	b.w	402baa <_dtoa_r+0x212>
  403498:	9807      	ldr	r0, [sp, #28]
  40349a:	f7ff baae 	b.w	4029fa <_dtoa_r+0x62>
  40349e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4034a2:	970a      	str	r7, [sp, #40]	; 0x28
  4034a4:	1afb      	subs	r3, r7, r3
  4034a6:	441a      	add	r2, r3
  4034a8:	920b      	str	r2, [sp, #44]	; 0x2c
  4034aa:	2700      	movs	r7, #0
  4034ac:	e461      	b.n	402d72 <_dtoa_r+0x3da>
  4034ae:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  4034b2:	f04f 0802 	mov.w	r8, #2
  4034b6:	e5bb      	b.n	403030 <_dtoa_r+0x698>
  4034b8:	461c      	mov	r4, r3
  4034ba:	2100      	movs	r1, #0
  4034bc:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  4034c0:	e58a      	b.n	402fd8 <_dtoa_r+0x640>
  4034c2:	2401      	movs	r4, #1
  4034c4:	9421      	str	r4, [sp, #132]	; 0x84
  4034c6:	940d      	str	r4, [sp, #52]	; 0x34
  4034c8:	9406      	str	r4, [sp, #24]
  4034ca:	e7f6      	b.n	4034ba <_dtoa_r+0xb22>
  4034cc:	2a00      	cmp	r2, #0
  4034ce:	46d0      	mov	r8, sl
  4034d0:	f8cd b014 	str.w	fp, [sp, #20]
  4034d4:	469a      	mov	sl, r3
  4034d6:	dd11      	ble.n	4034fc <_dtoa_r+0xb64>
  4034d8:	4621      	mov	r1, r4
  4034da:	2201      	movs	r2, #1
  4034dc:	4648      	mov	r0, r9
  4034de:	f000 fef5 	bl	4042cc <__lshift>
  4034e2:	4641      	mov	r1, r8
  4034e4:	4604      	mov	r4, r0
  4034e6:	f000 ff49 	bl	40437c <__mcmp>
  4034ea:	2800      	cmp	r0, #0
  4034ec:	f340 8149 	ble.w	403782 <_dtoa_r+0xdea>
  4034f0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4034f4:	f000 8106 	beq.w	403704 <_dtoa_r+0xd6c>
  4034f8:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4034fc:	46b3      	mov	fp, r6
  4034fe:	f887 a000 	strb.w	sl, [r7]
  403502:	1c7d      	adds	r5, r7, #1
  403504:	9e05      	ldr	r6, [sp, #20]
  403506:	9408      	str	r4, [sp, #32]
  403508:	e502      	b.n	402f10 <_dtoa_r+0x578>
  40350a:	d104      	bne.n	403516 <_dtoa_r+0xb7e>
  40350c:	f01a 0f01 	tst.w	sl, #1
  403510:	d001      	beq.n	403516 <_dtoa_r+0xb7e>
  403512:	e4ed      	b.n	402ef0 <_dtoa_r+0x558>
  403514:	4615      	mov	r5, r2
  403516:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40351a:	2b30      	cmp	r3, #48	; 0x30
  40351c:	f105 32ff 	add.w	r2, r5, #4294967295
  403520:	d0f8      	beq.n	403514 <_dtoa_r+0xb7c>
  403522:	e4f5      	b.n	402f10 <_dtoa_r+0x578>
  403524:	9b04      	ldr	r3, [sp, #16]
  403526:	425c      	negs	r4, r3
  403528:	2c00      	cmp	r4, #0
  40352a:	f000 80bf 	beq.w	4036ac <_dtoa_r+0xd14>
  40352e:	4b8a      	ldr	r3, [pc, #552]	; (403758 <_dtoa_r+0xdc0>)
  403530:	f004 020f 	and.w	r2, r4, #15
  403534:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403538:	e9d3 2300 	ldrd	r2, r3, [r3]
  40353c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  403540:	f001 fef0 	bl	405324 <__aeabi_dmul>
  403544:	1124      	asrs	r4, r4, #4
  403546:	4606      	mov	r6, r0
  403548:	460f      	mov	r7, r1
  40354a:	f000 812a 	beq.w	4037a2 <_dtoa_r+0xe0a>
  40354e:	4d83      	ldr	r5, [pc, #524]	; (40375c <_dtoa_r+0xdc4>)
  403550:	f04f 0802 	mov.w	r8, #2
  403554:	07e2      	lsls	r2, r4, #31
  403556:	d509      	bpl.n	40356c <_dtoa_r+0xbd4>
  403558:	4630      	mov	r0, r6
  40355a:	4639      	mov	r1, r7
  40355c:	e9d5 2300 	ldrd	r2, r3, [r5]
  403560:	f001 fee0 	bl	405324 <__aeabi_dmul>
  403564:	f108 0801 	add.w	r8, r8, #1
  403568:	4606      	mov	r6, r0
  40356a:	460f      	mov	r7, r1
  40356c:	1064      	asrs	r4, r4, #1
  40356e:	f105 0508 	add.w	r5, r5, #8
  403572:	d1ef      	bne.n	403554 <_dtoa_r+0xbbc>
  403574:	e576      	b.n	403064 <_dtoa_r+0x6cc>
  403576:	9907      	ldr	r1, [sp, #28]
  403578:	2230      	movs	r2, #48	; 0x30
  40357a:	700a      	strb	r2, [r1, #0]
  40357c:	9a04      	ldr	r2, [sp, #16]
  40357e:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  403582:	3201      	adds	r2, #1
  403584:	9204      	str	r2, [sp, #16]
  403586:	f7ff bbd0 	b.w	402d2a <_dtoa_r+0x392>
  40358a:	6871      	ldr	r1, [r6, #4]
  40358c:	4648      	mov	r0, r9
  40358e:	f000 fced 	bl	403f6c <_Balloc>
  403592:	6933      	ldr	r3, [r6, #16]
  403594:	1c9a      	adds	r2, r3, #2
  403596:	4605      	mov	r5, r0
  403598:	0092      	lsls	r2, r2, #2
  40359a:	f106 010c 	add.w	r1, r6, #12
  40359e:	300c      	adds	r0, #12
  4035a0:	f000 fc46 	bl	403e30 <memcpy>
  4035a4:	4629      	mov	r1, r5
  4035a6:	2201      	movs	r2, #1
  4035a8:	4648      	mov	r0, r9
  4035aa:	f000 fe8f 	bl	4042cc <__lshift>
  4035ae:	9005      	str	r0, [sp, #20]
  4035b0:	e670      	b.n	403294 <_dtoa_r+0x8fc>
  4035b2:	2b39      	cmp	r3, #57	; 0x39
  4035b4:	f8cd b014 	str.w	fp, [sp, #20]
  4035b8:	46d0      	mov	r8, sl
  4035ba:	f000 80a3 	beq.w	403704 <_dtoa_r+0xd6c>
  4035be:	f103 0a01 	add.w	sl, r3, #1
  4035c2:	46b3      	mov	fp, r6
  4035c4:	f887 a000 	strb.w	sl, [r7]
  4035c8:	1c7d      	adds	r5, r7, #1
  4035ca:	9e05      	ldr	r6, [sp, #20]
  4035cc:	9408      	str	r4, [sp, #32]
  4035ce:	e49f      	b.n	402f10 <_dtoa_r+0x578>
  4035d0:	465a      	mov	r2, fp
  4035d2:	46d0      	mov	r8, sl
  4035d4:	46b3      	mov	fp, r6
  4035d6:	469a      	mov	sl, r3
  4035d8:	4616      	mov	r6, r2
  4035da:	e47d      	b.n	402ed8 <_dtoa_r+0x540>
  4035dc:	495e      	ldr	r1, [pc, #376]	; (403758 <_dtoa_r+0xdc0>)
  4035de:	f108 3aff 	add.w	sl, r8, #4294967295
  4035e2:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
  4035e6:	4622      	mov	r2, r4
  4035e8:	462b      	mov	r3, r5
  4035ea:	e9d1 0100 	ldrd	r0, r1, [r1]
  4035ee:	f001 fe99 	bl	405324 <__aeabi_dmul>
  4035f2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4035f6:	4639      	mov	r1, r7
  4035f8:	4630      	mov	r0, r6
  4035fa:	f002 f943 	bl	405884 <__aeabi_d2iz>
  4035fe:	4604      	mov	r4, r0
  403600:	f001 fe2a 	bl	405258 <__aeabi_i2d>
  403604:	4602      	mov	r2, r0
  403606:	460b      	mov	r3, r1
  403608:	4630      	mov	r0, r6
  40360a:	4639      	mov	r1, r7
  40360c:	f001 fcd6 	bl	404fbc <__aeabi_dsub>
  403610:	9a07      	ldr	r2, [sp, #28]
  403612:	3430      	adds	r4, #48	; 0x30
  403614:	f1b8 0f01 	cmp.w	r8, #1
  403618:	4606      	mov	r6, r0
  40361a:	460f      	mov	r7, r1
  40361c:	7014      	strb	r4, [r2, #0]
  40361e:	f102 0501 	add.w	r5, r2, #1
  403622:	d01e      	beq.n	403662 <_dtoa_r+0xcca>
  403624:	9b07      	ldr	r3, [sp, #28]
  403626:	eb03 0b08 	add.w	fp, r3, r8
  40362a:	46a8      	mov	r8, r5
  40362c:	2200      	movs	r2, #0
  40362e:	4b4c      	ldr	r3, [pc, #304]	; (403760 <_dtoa_r+0xdc8>)
  403630:	4630      	mov	r0, r6
  403632:	4639      	mov	r1, r7
  403634:	f001 fe76 	bl	405324 <__aeabi_dmul>
  403638:	460f      	mov	r7, r1
  40363a:	4606      	mov	r6, r0
  40363c:	f002 f922 	bl	405884 <__aeabi_d2iz>
  403640:	4604      	mov	r4, r0
  403642:	f001 fe09 	bl	405258 <__aeabi_i2d>
  403646:	3430      	adds	r4, #48	; 0x30
  403648:	4602      	mov	r2, r0
  40364a:	460b      	mov	r3, r1
  40364c:	4630      	mov	r0, r6
  40364e:	4639      	mov	r1, r7
  403650:	f001 fcb4 	bl	404fbc <__aeabi_dsub>
  403654:	f808 4b01 	strb.w	r4, [r8], #1
  403658:	45c3      	cmp	fp, r8
  40365a:	4606      	mov	r6, r0
  40365c:	460f      	mov	r7, r1
  40365e:	d1e5      	bne.n	40362c <_dtoa_r+0xc94>
  403660:	4455      	add	r5, sl
  403662:	2200      	movs	r2, #0
  403664:	4b3f      	ldr	r3, [pc, #252]	; (403764 <_dtoa_r+0xdcc>)
  403666:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40366a:	f001 fca9 	bl	404fc0 <__adddf3>
  40366e:	4632      	mov	r2, r6
  403670:	463b      	mov	r3, r7
  403672:	f002 f8c9 	bl	405808 <__aeabi_dcmplt>
  403676:	2800      	cmp	r0, #0
  403678:	d04c      	beq.n	403714 <_dtoa_r+0xd7c>
  40367a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40367c:	9304      	str	r3, [sp, #16]
  40367e:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  403682:	f7ff bb46 	b.w	402d12 <_dtoa_r+0x37a>
  403686:	f04f 0800 	mov.w	r8, #0
  40368a:	4646      	mov	r6, r8
  40368c:	e6a8      	b.n	4033e0 <_dtoa_r+0xa48>
  40368e:	9b05      	ldr	r3, [sp, #20]
  403690:	9a06      	ldr	r2, [sp, #24]
  403692:	1a9d      	subs	r5, r3, r2
  403694:	2300      	movs	r3, #0
  403696:	f7ff bb72 	b.w	402d7e <_dtoa_r+0x3e6>
  40369a:	2700      	movs	r7, #0
  40369c:	e6ca      	b.n	403434 <_dtoa_r+0xa9c>
  40369e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4036a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4036a2:	9d05      	ldr	r5, [sp, #20]
  4036a4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4036a8:	f7ff bb69 	b.w	402d7e <_dtoa_r+0x3e6>
  4036ac:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
  4036b0:	f04f 0802 	mov.w	r8, #2
  4036b4:	e4d6      	b.n	403064 <_dtoa_r+0x6cc>
  4036b6:	9408      	str	r4, [sp, #32]
  4036b8:	e5a0      	b.n	4031fc <_dtoa_r+0x864>
  4036ba:	9b06      	ldr	r3, [sp, #24]
  4036bc:	2b00      	cmp	r3, #0
  4036be:	f43f aebf 	beq.w	403440 <_dtoa_r+0xaa8>
  4036c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4036c4:	2b00      	cmp	r3, #0
  4036c6:	f77f aee3 	ble.w	403490 <_dtoa_r+0xaf8>
  4036ca:	2200      	movs	r2, #0
  4036cc:	4b24      	ldr	r3, [pc, #144]	; (403760 <_dtoa_r+0xdc8>)
  4036ce:	4630      	mov	r0, r6
  4036d0:	4639      	mov	r1, r7
  4036d2:	f001 fe27 	bl	405324 <__aeabi_dmul>
  4036d6:	4606      	mov	r6, r0
  4036d8:	460f      	mov	r7, r1
  4036da:	f108 0001 	add.w	r0, r8, #1
  4036de:	f001 fdbb 	bl	405258 <__aeabi_i2d>
  4036e2:	4632      	mov	r2, r6
  4036e4:	463b      	mov	r3, r7
  4036e6:	f001 fe1d 	bl	405324 <__aeabi_dmul>
  4036ea:	2200      	movs	r2, #0
  4036ec:	4b18      	ldr	r3, [pc, #96]	; (403750 <_dtoa_r+0xdb8>)
  4036ee:	f001 fc67 	bl	404fc0 <__adddf3>
  4036f2:	9a04      	ldr	r2, [sp, #16]
  4036f4:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  4036f8:	3a01      	subs	r2, #1
  4036fa:	4604      	mov	r4, r0
  4036fc:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  403700:	9211      	str	r2, [sp, #68]	; 0x44
  403702:	e4d0      	b.n	4030a6 <_dtoa_r+0x70e>
  403704:	2239      	movs	r2, #57	; 0x39
  403706:	46b3      	mov	fp, r6
  403708:	9408      	str	r4, [sp, #32]
  40370a:	9e05      	ldr	r6, [sp, #20]
  40370c:	703a      	strb	r2, [r7, #0]
  40370e:	1c7d      	adds	r5, r7, #1
  403710:	f7ff bbf0 	b.w	402ef4 <_dtoa_r+0x55c>
  403714:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
  403718:	2000      	movs	r0, #0
  40371a:	4912      	ldr	r1, [pc, #72]	; (403764 <_dtoa_r+0xdcc>)
  40371c:	f001 fc4e 	bl	404fbc <__aeabi_dsub>
  403720:	4632      	mov	r2, r6
  403722:	463b      	mov	r3, r7
  403724:	f002 f88e 	bl	405844 <__aeabi_dcmpgt>
  403728:	b908      	cbnz	r0, 40372e <_dtoa_r+0xd96>
  40372a:	e6b1      	b.n	403490 <_dtoa_r+0xaf8>
  40372c:	4615      	mov	r5, r2
  40372e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403732:	2b30      	cmp	r3, #48	; 0x30
  403734:	f105 32ff 	add.w	r2, r5, #4294967295
  403738:	d0f8      	beq.n	40372c <_dtoa_r+0xd94>
  40373a:	e530      	b.n	40319e <_dtoa_r+0x806>
  40373c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40373e:	9304      	str	r3, [sp, #16]
  403740:	f7ff bae7 	b.w	402d12 <_dtoa_r+0x37a>
  403744:	f1ba 0f00 	cmp.w	sl, #0
  403748:	f47f ad7a 	bne.w	403240 <_dtoa_r+0x8a8>
  40374c:	e661      	b.n	403412 <_dtoa_r+0xa7a>
  40374e:	bf00      	nop
  403750:	401c0000 	.word	0x401c0000
  403754:	40140000 	.word	0x40140000
  403758:	00405cf8 	.word	0x00405cf8
  40375c:	00405dc0 	.word	0x00405dc0
  403760:	40240000 	.word	0x40240000
  403764:	3fe00000 	.word	0x3fe00000
  403768:	2b39      	cmp	r3, #57	; 0x39
  40376a:	f8cd b014 	str.w	fp, [sp, #20]
  40376e:	46d0      	mov	r8, sl
  403770:	f8dd b008 	ldr.w	fp, [sp, #8]
  403774:	469a      	mov	sl, r3
  403776:	d0c5      	beq.n	403704 <_dtoa_r+0xd6c>
  403778:	f1bb 0f00 	cmp.w	fp, #0
  40377c:	f73f aebc 	bgt.w	4034f8 <_dtoa_r+0xb60>
  403780:	e6bc      	b.n	4034fc <_dtoa_r+0xb64>
  403782:	f47f aebb 	bne.w	4034fc <_dtoa_r+0xb64>
  403786:	f01a 0f01 	tst.w	sl, #1
  40378a:	f43f aeb7 	beq.w	4034fc <_dtoa_r+0xb64>
  40378e:	e6af      	b.n	4034f0 <_dtoa_r+0xb58>
  403790:	f04f 0800 	mov.w	r8, #0
  403794:	4646      	mov	r6, r8
  403796:	e531      	b.n	4031fc <_dtoa_r+0x864>
  403798:	9b20      	ldr	r3, [sp, #128]	; 0x80
  40379a:	2b02      	cmp	r3, #2
  40379c:	dc21      	bgt.n	4037e2 <_dtoa_r+0xe4a>
  40379e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037a0:	e604      	b.n	4033ac <_dtoa_r+0xa14>
  4037a2:	f04f 0802 	mov.w	r8, #2
  4037a6:	e45d      	b.n	403064 <_dtoa_r+0x6cc>
  4037a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4037aa:	2b02      	cmp	r3, #2
  4037ac:	dc19      	bgt.n	4037e2 <_dtoa_r+0xe4a>
  4037ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037b0:	e563      	b.n	40327a <_dtoa_r+0x8e2>
  4037b2:	2400      	movs	r4, #0
  4037b4:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
  4037b8:	4621      	mov	r1, r4
  4037ba:	4648      	mov	r0, r9
  4037bc:	f000 fbd6 	bl	403f6c <_Balloc>
  4037c0:	f04f 33ff 	mov.w	r3, #4294967295
  4037c4:	9306      	str	r3, [sp, #24]
  4037c6:	930d      	str	r3, [sp, #52]	; 0x34
  4037c8:	2301      	movs	r3, #1
  4037ca:	9007      	str	r0, [sp, #28]
  4037cc:	9421      	str	r4, [sp, #132]	; 0x84
  4037ce:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  4037d2:	9309      	str	r3, [sp, #36]	; 0x24
  4037d4:	f7ff b9e9 	b.w	402baa <_dtoa_r+0x212>
  4037d8:	f43f ab3d 	beq.w	402e56 <_dtoa_r+0x4be>
  4037dc:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4037e0:	e522      	b.n	403228 <_dtoa_r+0x890>
  4037e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4037e4:	9306      	str	r3, [sp, #24]
  4037e6:	e5e9      	b.n	4033bc <_dtoa_r+0xa24>
  4037e8:	2501      	movs	r5, #1
  4037ea:	f7ff b9a8 	b.w	402b3e <_dtoa_r+0x1a6>
  4037ee:	bf00      	nop

004037f0 <__libc_fini_array>:
  4037f0:	b538      	push	{r3, r4, r5, lr}
  4037f2:	4d07      	ldr	r5, [pc, #28]	; (403810 <__libc_fini_array+0x20>)
  4037f4:	4c07      	ldr	r4, [pc, #28]	; (403814 <__libc_fini_array+0x24>)
  4037f6:	1b2c      	subs	r4, r5, r4
  4037f8:	10a4      	asrs	r4, r4, #2
  4037fa:	d005      	beq.n	403808 <__libc_fini_array+0x18>
  4037fc:	3c01      	subs	r4, #1
  4037fe:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  403802:	4798      	blx	r3
  403804:	2c00      	cmp	r4, #0
  403806:	d1f9      	bne.n	4037fc <__libc_fini_array+0xc>
  403808:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40380c:	f002 bafc 	b.w	405e08 <_fini>
  403810:	00405e18 	.word	0x00405e18
  403814:	00405e14 	.word	0x00405e14

00403818 <_localeconv_r>:
  403818:	4800      	ldr	r0, [pc, #0]	; (40381c <_localeconv_r+0x4>)
  40381a:	4770      	bx	lr
  40381c:	2000083c 	.word	0x2000083c

00403820 <_malloc_r>:
  403820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403824:	f101 050b 	add.w	r5, r1, #11
  403828:	2d16      	cmp	r5, #22
  40382a:	b083      	sub	sp, #12
  40382c:	4606      	mov	r6, r0
  40382e:	f240 809f 	bls.w	403970 <_malloc_r+0x150>
  403832:	f035 0507 	bics.w	r5, r5, #7
  403836:	f100 80bf 	bmi.w	4039b8 <_malloc_r+0x198>
  40383a:	42a9      	cmp	r1, r5
  40383c:	f200 80bc 	bhi.w	4039b8 <_malloc_r+0x198>
  403840:	f000 fb90 	bl	403f64 <__malloc_lock>
  403844:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  403848:	f0c0 829c 	bcc.w	403d84 <_malloc_r+0x564>
  40384c:	0a6b      	lsrs	r3, r5, #9
  40384e:	f000 80ba 	beq.w	4039c6 <_malloc_r+0x1a6>
  403852:	2b04      	cmp	r3, #4
  403854:	f200 8183 	bhi.w	403b5e <_malloc_r+0x33e>
  403858:	09a8      	lsrs	r0, r5, #6
  40385a:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  40385e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403862:	3038      	adds	r0, #56	; 0x38
  403864:	4fc4      	ldr	r7, [pc, #784]	; (403b78 <_malloc_r+0x358>)
  403866:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  40386a:	f1a3 0108 	sub.w	r1, r3, #8
  40386e:	685c      	ldr	r4, [r3, #4]
  403870:	42a1      	cmp	r1, r4
  403872:	d107      	bne.n	403884 <_malloc_r+0x64>
  403874:	e0ac      	b.n	4039d0 <_malloc_r+0x1b0>
  403876:	2a00      	cmp	r2, #0
  403878:	f280 80ac 	bge.w	4039d4 <_malloc_r+0x1b4>
  40387c:	68e4      	ldr	r4, [r4, #12]
  40387e:	42a1      	cmp	r1, r4
  403880:	f000 80a6 	beq.w	4039d0 <_malloc_r+0x1b0>
  403884:	6863      	ldr	r3, [r4, #4]
  403886:	f023 0303 	bic.w	r3, r3, #3
  40388a:	1b5a      	subs	r2, r3, r5
  40388c:	2a0f      	cmp	r2, #15
  40388e:	ddf2      	ble.n	403876 <_malloc_r+0x56>
  403890:	49b9      	ldr	r1, [pc, #740]	; (403b78 <_malloc_r+0x358>)
  403892:	693c      	ldr	r4, [r7, #16]
  403894:	f101 0e08 	add.w	lr, r1, #8
  403898:	4574      	cmp	r4, lr
  40389a:	f000 81b3 	beq.w	403c04 <_malloc_r+0x3e4>
  40389e:	6863      	ldr	r3, [r4, #4]
  4038a0:	f023 0303 	bic.w	r3, r3, #3
  4038a4:	1b5a      	subs	r2, r3, r5
  4038a6:	2a0f      	cmp	r2, #15
  4038a8:	f300 8199 	bgt.w	403bde <_malloc_r+0x3be>
  4038ac:	2a00      	cmp	r2, #0
  4038ae:	f8c1 e014 	str.w	lr, [r1, #20]
  4038b2:	f8c1 e010 	str.w	lr, [r1, #16]
  4038b6:	f280 809e 	bge.w	4039f6 <_malloc_r+0x1d6>
  4038ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4038be:	f080 8167 	bcs.w	403b90 <_malloc_r+0x370>
  4038c2:	08db      	lsrs	r3, r3, #3
  4038c4:	f103 0c01 	add.w	ip, r3, #1
  4038c8:	2201      	movs	r2, #1
  4038ca:	109b      	asrs	r3, r3, #2
  4038cc:	fa02 f303 	lsl.w	r3, r2, r3
  4038d0:	684a      	ldr	r2, [r1, #4]
  4038d2:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  4038d6:	f8c4 8008 	str.w	r8, [r4, #8]
  4038da:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  4038de:	431a      	orrs	r2, r3
  4038e0:	f1a9 0308 	sub.w	r3, r9, #8
  4038e4:	60e3      	str	r3, [r4, #12]
  4038e6:	604a      	str	r2, [r1, #4]
  4038e8:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  4038ec:	f8c8 400c 	str.w	r4, [r8, #12]
  4038f0:	1083      	asrs	r3, r0, #2
  4038f2:	2401      	movs	r4, #1
  4038f4:	409c      	lsls	r4, r3
  4038f6:	4294      	cmp	r4, r2
  4038f8:	f200 808a 	bhi.w	403a10 <_malloc_r+0x1f0>
  4038fc:	4214      	tst	r4, r2
  4038fe:	d106      	bne.n	40390e <_malloc_r+0xee>
  403900:	f020 0003 	bic.w	r0, r0, #3
  403904:	0064      	lsls	r4, r4, #1
  403906:	4214      	tst	r4, r2
  403908:	f100 0004 	add.w	r0, r0, #4
  40390c:	d0fa      	beq.n	403904 <_malloc_r+0xe4>
  40390e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403912:	46cc      	mov	ip, r9
  403914:	4680      	mov	r8, r0
  403916:	f8dc 100c 	ldr.w	r1, [ip, #12]
  40391a:	458c      	cmp	ip, r1
  40391c:	d107      	bne.n	40392e <_malloc_r+0x10e>
  40391e:	e173      	b.n	403c08 <_malloc_r+0x3e8>
  403920:	2a00      	cmp	r2, #0
  403922:	f280 8181 	bge.w	403c28 <_malloc_r+0x408>
  403926:	68c9      	ldr	r1, [r1, #12]
  403928:	458c      	cmp	ip, r1
  40392a:	f000 816d 	beq.w	403c08 <_malloc_r+0x3e8>
  40392e:	684b      	ldr	r3, [r1, #4]
  403930:	f023 0303 	bic.w	r3, r3, #3
  403934:	1b5a      	subs	r2, r3, r5
  403936:	2a0f      	cmp	r2, #15
  403938:	ddf2      	ble.n	403920 <_malloc_r+0x100>
  40393a:	460c      	mov	r4, r1
  40393c:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403940:	f854 8f08 	ldr.w	r8, [r4, #8]!
  403944:	194b      	adds	r3, r1, r5
  403946:	f045 0501 	orr.w	r5, r5, #1
  40394a:	604d      	str	r5, [r1, #4]
  40394c:	f042 0101 	orr.w	r1, r2, #1
  403950:	f8c8 c00c 	str.w	ip, [r8, #12]
  403954:	4630      	mov	r0, r6
  403956:	f8cc 8008 	str.w	r8, [ip, #8]
  40395a:	617b      	str	r3, [r7, #20]
  40395c:	613b      	str	r3, [r7, #16]
  40395e:	f8c3 e00c 	str.w	lr, [r3, #12]
  403962:	f8c3 e008 	str.w	lr, [r3, #8]
  403966:	6059      	str	r1, [r3, #4]
  403968:	509a      	str	r2, [r3, r2]
  40396a:	f000 fafd 	bl	403f68 <__malloc_unlock>
  40396e:	e01f      	b.n	4039b0 <_malloc_r+0x190>
  403970:	2910      	cmp	r1, #16
  403972:	d821      	bhi.n	4039b8 <_malloc_r+0x198>
  403974:	f000 faf6 	bl	403f64 <__malloc_lock>
  403978:	2510      	movs	r5, #16
  40397a:	2306      	movs	r3, #6
  40397c:	2002      	movs	r0, #2
  40397e:	4f7e      	ldr	r7, [pc, #504]	; (403b78 <_malloc_r+0x358>)
  403980:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  403984:	f1a3 0208 	sub.w	r2, r3, #8
  403988:	685c      	ldr	r4, [r3, #4]
  40398a:	4294      	cmp	r4, r2
  40398c:	f000 8145 	beq.w	403c1a <_malloc_r+0x3fa>
  403990:	6863      	ldr	r3, [r4, #4]
  403992:	68e1      	ldr	r1, [r4, #12]
  403994:	68a5      	ldr	r5, [r4, #8]
  403996:	f023 0303 	bic.w	r3, r3, #3
  40399a:	4423      	add	r3, r4
  40399c:	4630      	mov	r0, r6
  40399e:	685a      	ldr	r2, [r3, #4]
  4039a0:	60e9      	str	r1, [r5, #12]
  4039a2:	f042 0201 	orr.w	r2, r2, #1
  4039a6:	608d      	str	r5, [r1, #8]
  4039a8:	605a      	str	r2, [r3, #4]
  4039aa:	f000 fadd 	bl	403f68 <__malloc_unlock>
  4039ae:	3408      	adds	r4, #8
  4039b0:	4620      	mov	r0, r4
  4039b2:	b003      	add	sp, #12
  4039b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039b8:	2400      	movs	r4, #0
  4039ba:	230c      	movs	r3, #12
  4039bc:	4620      	mov	r0, r4
  4039be:	6033      	str	r3, [r6, #0]
  4039c0:	b003      	add	sp, #12
  4039c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039c6:	2380      	movs	r3, #128	; 0x80
  4039c8:	f04f 0e40 	mov.w	lr, #64	; 0x40
  4039cc:	203f      	movs	r0, #63	; 0x3f
  4039ce:	e749      	b.n	403864 <_malloc_r+0x44>
  4039d0:	4670      	mov	r0, lr
  4039d2:	e75d      	b.n	403890 <_malloc_r+0x70>
  4039d4:	4423      	add	r3, r4
  4039d6:	68e1      	ldr	r1, [r4, #12]
  4039d8:	685a      	ldr	r2, [r3, #4]
  4039da:	68a5      	ldr	r5, [r4, #8]
  4039dc:	f042 0201 	orr.w	r2, r2, #1
  4039e0:	60e9      	str	r1, [r5, #12]
  4039e2:	4630      	mov	r0, r6
  4039e4:	608d      	str	r5, [r1, #8]
  4039e6:	605a      	str	r2, [r3, #4]
  4039e8:	f000 fabe 	bl	403f68 <__malloc_unlock>
  4039ec:	3408      	adds	r4, #8
  4039ee:	4620      	mov	r0, r4
  4039f0:	b003      	add	sp, #12
  4039f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039f6:	4423      	add	r3, r4
  4039f8:	4630      	mov	r0, r6
  4039fa:	685a      	ldr	r2, [r3, #4]
  4039fc:	f042 0201 	orr.w	r2, r2, #1
  403a00:	605a      	str	r2, [r3, #4]
  403a02:	f000 fab1 	bl	403f68 <__malloc_unlock>
  403a06:	3408      	adds	r4, #8
  403a08:	4620      	mov	r0, r4
  403a0a:	b003      	add	sp, #12
  403a0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a10:	68bc      	ldr	r4, [r7, #8]
  403a12:	6863      	ldr	r3, [r4, #4]
  403a14:	f023 0803 	bic.w	r8, r3, #3
  403a18:	45a8      	cmp	r8, r5
  403a1a:	d304      	bcc.n	403a26 <_malloc_r+0x206>
  403a1c:	ebc5 0308 	rsb	r3, r5, r8
  403a20:	2b0f      	cmp	r3, #15
  403a22:	f300 808c 	bgt.w	403b3e <_malloc_r+0x31e>
  403a26:	4b55      	ldr	r3, [pc, #340]	; (403b7c <_malloc_r+0x35c>)
  403a28:	f8df 9160 	ldr.w	r9, [pc, #352]	; 403b8c <_malloc_r+0x36c>
  403a2c:	681a      	ldr	r2, [r3, #0]
  403a2e:	f8d9 3000 	ldr.w	r3, [r9]
  403a32:	3301      	adds	r3, #1
  403a34:	442a      	add	r2, r5
  403a36:	eb04 0a08 	add.w	sl, r4, r8
  403a3a:	f000 8160 	beq.w	403cfe <_malloc_r+0x4de>
  403a3e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  403a42:	320f      	adds	r2, #15
  403a44:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  403a48:	f022 020f 	bic.w	r2, r2, #15
  403a4c:	4611      	mov	r1, r2
  403a4e:	4630      	mov	r0, r6
  403a50:	9201      	str	r2, [sp, #4]
  403a52:	f000 fd99 	bl	404588 <_sbrk_r>
  403a56:	f1b0 3fff 	cmp.w	r0, #4294967295
  403a5a:	4683      	mov	fp, r0
  403a5c:	9a01      	ldr	r2, [sp, #4]
  403a5e:	f000 8158 	beq.w	403d12 <_malloc_r+0x4f2>
  403a62:	4582      	cmp	sl, r0
  403a64:	f200 80fc 	bhi.w	403c60 <_malloc_r+0x440>
  403a68:	4b45      	ldr	r3, [pc, #276]	; (403b80 <_malloc_r+0x360>)
  403a6a:	6819      	ldr	r1, [r3, #0]
  403a6c:	45da      	cmp	sl, fp
  403a6e:	4411      	add	r1, r2
  403a70:	6019      	str	r1, [r3, #0]
  403a72:	f000 8153 	beq.w	403d1c <_malloc_r+0x4fc>
  403a76:	f8d9 0000 	ldr.w	r0, [r9]
  403a7a:	f8df e110 	ldr.w	lr, [pc, #272]	; 403b8c <_malloc_r+0x36c>
  403a7e:	3001      	adds	r0, #1
  403a80:	bf1b      	ittet	ne
  403a82:	ebca 0a0b 	rsbne	sl, sl, fp
  403a86:	4451      	addne	r1, sl
  403a88:	f8ce b000 	streq.w	fp, [lr]
  403a8c:	6019      	strne	r1, [r3, #0]
  403a8e:	f01b 0107 	ands.w	r1, fp, #7
  403a92:	f000 8117 	beq.w	403cc4 <_malloc_r+0x4a4>
  403a96:	f1c1 0008 	rsb	r0, r1, #8
  403a9a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403a9e:	4483      	add	fp, r0
  403aa0:	3108      	adds	r1, #8
  403aa2:	445a      	add	r2, fp
  403aa4:	f3c2 020b 	ubfx	r2, r2, #0, #12
  403aa8:	ebc2 0901 	rsb	r9, r2, r1
  403aac:	4649      	mov	r1, r9
  403aae:	4630      	mov	r0, r6
  403ab0:	9301      	str	r3, [sp, #4]
  403ab2:	f000 fd69 	bl	404588 <_sbrk_r>
  403ab6:	1c43      	adds	r3, r0, #1
  403ab8:	9b01      	ldr	r3, [sp, #4]
  403aba:	f000 813f 	beq.w	403d3c <_malloc_r+0x51c>
  403abe:	ebcb 0200 	rsb	r2, fp, r0
  403ac2:	444a      	add	r2, r9
  403ac4:	f042 0201 	orr.w	r2, r2, #1
  403ac8:	6819      	ldr	r1, [r3, #0]
  403aca:	f8c7 b008 	str.w	fp, [r7, #8]
  403ace:	4449      	add	r1, r9
  403ad0:	42bc      	cmp	r4, r7
  403ad2:	f8cb 2004 	str.w	r2, [fp, #4]
  403ad6:	6019      	str	r1, [r3, #0]
  403ad8:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 403b80 <_malloc_r+0x360>
  403adc:	d016      	beq.n	403b0c <_malloc_r+0x2ec>
  403ade:	f1b8 0f0f 	cmp.w	r8, #15
  403ae2:	f240 80fd 	bls.w	403ce0 <_malloc_r+0x4c0>
  403ae6:	6862      	ldr	r2, [r4, #4]
  403ae8:	f1a8 030c 	sub.w	r3, r8, #12
  403aec:	f023 0307 	bic.w	r3, r3, #7
  403af0:	18e0      	adds	r0, r4, r3
  403af2:	f002 0201 	and.w	r2, r2, #1
  403af6:	f04f 0e05 	mov.w	lr, #5
  403afa:	431a      	orrs	r2, r3
  403afc:	2b0f      	cmp	r3, #15
  403afe:	6062      	str	r2, [r4, #4]
  403b00:	f8c0 e004 	str.w	lr, [r0, #4]
  403b04:	f8c0 e008 	str.w	lr, [r0, #8]
  403b08:	f200 811c 	bhi.w	403d44 <_malloc_r+0x524>
  403b0c:	4b1d      	ldr	r3, [pc, #116]	; (403b84 <_malloc_r+0x364>)
  403b0e:	68bc      	ldr	r4, [r7, #8]
  403b10:	681a      	ldr	r2, [r3, #0]
  403b12:	4291      	cmp	r1, r2
  403b14:	bf88      	it	hi
  403b16:	6019      	strhi	r1, [r3, #0]
  403b18:	4b1b      	ldr	r3, [pc, #108]	; (403b88 <_malloc_r+0x368>)
  403b1a:	681a      	ldr	r2, [r3, #0]
  403b1c:	4291      	cmp	r1, r2
  403b1e:	6862      	ldr	r2, [r4, #4]
  403b20:	bf88      	it	hi
  403b22:	6019      	strhi	r1, [r3, #0]
  403b24:	f022 0203 	bic.w	r2, r2, #3
  403b28:	4295      	cmp	r5, r2
  403b2a:	eba2 0305 	sub.w	r3, r2, r5
  403b2e:	d801      	bhi.n	403b34 <_malloc_r+0x314>
  403b30:	2b0f      	cmp	r3, #15
  403b32:	dc04      	bgt.n	403b3e <_malloc_r+0x31e>
  403b34:	4630      	mov	r0, r6
  403b36:	f000 fa17 	bl	403f68 <__malloc_unlock>
  403b3a:	2400      	movs	r4, #0
  403b3c:	e738      	b.n	4039b0 <_malloc_r+0x190>
  403b3e:	1962      	adds	r2, r4, r5
  403b40:	f043 0301 	orr.w	r3, r3, #1
  403b44:	f045 0501 	orr.w	r5, r5, #1
  403b48:	6065      	str	r5, [r4, #4]
  403b4a:	4630      	mov	r0, r6
  403b4c:	60ba      	str	r2, [r7, #8]
  403b4e:	6053      	str	r3, [r2, #4]
  403b50:	f000 fa0a 	bl	403f68 <__malloc_unlock>
  403b54:	3408      	adds	r4, #8
  403b56:	4620      	mov	r0, r4
  403b58:	b003      	add	sp, #12
  403b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b5e:	2b14      	cmp	r3, #20
  403b60:	d971      	bls.n	403c46 <_malloc_r+0x426>
  403b62:	2b54      	cmp	r3, #84	; 0x54
  403b64:	f200 80a4 	bhi.w	403cb0 <_malloc_r+0x490>
  403b68:	0b28      	lsrs	r0, r5, #12
  403b6a:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  403b6e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403b72:	306e      	adds	r0, #110	; 0x6e
  403b74:	e676      	b.n	403864 <_malloc_r+0x44>
  403b76:	bf00      	nop
  403b78:	20000874 	.word	0x20000874
  403b7c:	20000d20 	.word	0x20000d20
  403b80:	20000d24 	.word	0x20000d24
  403b84:	20000d1c 	.word	0x20000d1c
  403b88:	20000d18 	.word	0x20000d18
  403b8c:	20000c80 	.word	0x20000c80
  403b90:	0a5a      	lsrs	r2, r3, #9
  403b92:	2a04      	cmp	r2, #4
  403b94:	d95e      	bls.n	403c54 <_malloc_r+0x434>
  403b96:	2a14      	cmp	r2, #20
  403b98:	f200 80b3 	bhi.w	403d02 <_malloc_r+0x4e2>
  403b9c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403ba0:	0049      	lsls	r1, r1, #1
  403ba2:	325b      	adds	r2, #91	; 0x5b
  403ba4:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  403ba8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  403bac:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 403d8c <_malloc_r+0x56c>
  403bb0:	f1ac 0c08 	sub.w	ip, ip, #8
  403bb4:	458c      	cmp	ip, r1
  403bb6:	f000 8088 	beq.w	403cca <_malloc_r+0x4aa>
  403bba:	684a      	ldr	r2, [r1, #4]
  403bbc:	f022 0203 	bic.w	r2, r2, #3
  403bc0:	4293      	cmp	r3, r2
  403bc2:	d202      	bcs.n	403bca <_malloc_r+0x3aa>
  403bc4:	6889      	ldr	r1, [r1, #8]
  403bc6:	458c      	cmp	ip, r1
  403bc8:	d1f7      	bne.n	403bba <_malloc_r+0x39a>
  403bca:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403bce:	687a      	ldr	r2, [r7, #4]
  403bd0:	f8c4 c00c 	str.w	ip, [r4, #12]
  403bd4:	60a1      	str	r1, [r4, #8]
  403bd6:	f8cc 4008 	str.w	r4, [ip, #8]
  403bda:	60cc      	str	r4, [r1, #12]
  403bdc:	e688      	b.n	4038f0 <_malloc_r+0xd0>
  403bde:	1963      	adds	r3, r4, r5
  403be0:	f042 0701 	orr.w	r7, r2, #1
  403be4:	f045 0501 	orr.w	r5, r5, #1
  403be8:	6065      	str	r5, [r4, #4]
  403bea:	4630      	mov	r0, r6
  403bec:	614b      	str	r3, [r1, #20]
  403bee:	610b      	str	r3, [r1, #16]
  403bf0:	f8c3 e00c 	str.w	lr, [r3, #12]
  403bf4:	f8c3 e008 	str.w	lr, [r3, #8]
  403bf8:	605f      	str	r7, [r3, #4]
  403bfa:	509a      	str	r2, [r3, r2]
  403bfc:	3408      	adds	r4, #8
  403bfe:	f000 f9b3 	bl	403f68 <__malloc_unlock>
  403c02:	e6d5      	b.n	4039b0 <_malloc_r+0x190>
  403c04:	684a      	ldr	r2, [r1, #4]
  403c06:	e673      	b.n	4038f0 <_malloc_r+0xd0>
  403c08:	f108 0801 	add.w	r8, r8, #1
  403c0c:	f018 0f03 	tst.w	r8, #3
  403c10:	f10c 0c08 	add.w	ip, ip, #8
  403c14:	f47f ae7f 	bne.w	403916 <_malloc_r+0xf6>
  403c18:	e030      	b.n	403c7c <_malloc_r+0x45c>
  403c1a:	68dc      	ldr	r4, [r3, #12]
  403c1c:	42a3      	cmp	r3, r4
  403c1e:	bf08      	it	eq
  403c20:	3002      	addeq	r0, #2
  403c22:	f43f ae35 	beq.w	403890 <_malloc_r+0x70>
  403c26:	e6b3      	b.n	403990 <_malloc_r+0x170>
  403c28:	440b      	add	r3, r1
  403c2a:	460c      	mov	r4, r1
  403c2c:	685a      	ldr	r2, [r3, #4]
  403c2e:	68c9      	ldr	r1, [r1, #12]
  403c30:	f854 5f08 	ldr.w	r5, [r4, #8]!
  403c34:	f042 0201 	orr.w	r2, r2, #1
  403c38:	605a      	str	r2, [r3, #4]
  403c3a:	4630      	mov	r0, r6
  403c3c:	60e9      	str	r1, [r5, #12]
  403c3e:	608d      	str	r5, [r1, #8]
  403c40:	f000 f992 	bl	403f68 <__malloc_unlock>
  403c44:	e6b4      	b.n	4039b0 <_malloc_r+0x190>
  403c46:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  403c4a:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  403c4e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403c52:	e607      	b.n	403864 <_malloc_r+0x44>
  403c54:	099a      	lsrs	r2, r3, #6
  403c56:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403c5a:	0049      	lsls	r1, r1, #1
  403c5c:	3238      	adds	r2, #56	; 0x38
  403c5e:	e7a1      	b.n	403ba4 <_malloc_r+0x384>
  403c60:	42bc      	cmp	r4, r7
  403c62:	4b4a      	ldr	r3, [pc, #296]	; (403d8c <_malloc_r+0x56c>)
  403c64:	f43f af00 	beq.w	403a68 <_malloc_r+0x248>
  403c68:	689c      	ldr	r4, [r3, #8]
  403c6a:	6862      	ldr	r2, [r4, #4]
  403c6c:	f022 0203 	bic.w	r2, r2, #3
  403c70:	e75a      	b.n	403b28 <_malloc_r+0x308>
  403c72:	f859 3908 	ldr.w	r3, [r9], #-8
  403c76:	4599      	cmp	r9, r3
  403c78:	f040 8082 	bne.w	403d80 <_malloc_r+0x560>
  403c7c:	f010 0f03 	tst.w	r0, #3
  403c80:	f100 30ff 	add.w	r0, r0, #4294967295
  403c84:	d1f5      	bne.n	403c72 <_malloc_r+0x452>
  403c86:	687b      	ldr	r3, [r7, #4]
  403c88:	ea23 0304 	bic.w	r3, r3, r4
  403c8c:	607b      	str	r3, [r7, #4]
  403c8e:	0064      	lsls	r4, r4, #1
  403c90:	429c      	cmp	r4, r3
  403c92:	f63f aebd 	bhi.w	403a10 <_malloc_r+0x1f0>
  403c96:	2c00      	cmp	r4, #0
  403c98:	f43f aeba 	beq.w	403a10 <_malloc_r+0x1f0>
  403c9c:	421c      	tst	r4, r3
  403c9e:	4640      	mov	r0, r8
  403ca0:	f47f ae35 	bne.w	40390e <_malloc_r+0xee>
  403ca4:	0064      	lsls	r4, r4, #1
  403ca6:	421c      	tst	r4, r3
  403ca8:	f100 0004 	add.w	r0, r0, #4
  403cac:	d0fa      	beq.n	403ca4 <_malloc_r+0x484>
  403cae:	e62e      	b.n	40390e <_malloc_r+0xee>
  403cb0:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  403cb4:	d818      	bhi.n	403ce8 <_malloc_r+0x4c8>
  403cb6:	0be8      	lsrs	r0, r5, #15
  403cb8:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  403cbc:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403cc0:	3077      	adds	r0, #119	; 0x77
  403cc2:	e5cf      	b.n	403864 <_malloc_r+0x44>
  403cc4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403cc8:	e6eb      	b.n	403aa2 <_malloc_r+0x282>
  403cca:	2101      	movs	r1, #1
  403ccc:	f8d8 3004 	ldr.w	r3, [r8, #4]
  403cd0:	1092      	asrs	r2, r2, #2
  403cd2:	fa01 f202 	lsl.w	r2, r1, r2
  403cd6:	431a      	orrs	r2, r3
  403cd8:	f8c8 2004 	str.w	r2, [r8, #4]
  403cdc:	4661      	mov	r1, ip
  403cde:	e777      	b.n	403bd0 <_malloc_r+0x3b0>
  403ce0:	2301      	movs	r3, #1
  403ce2:	f8cb 3004 	str.w	r3, [fp, #4]
  403ce6:	e725      	b.n	403b34 <_malloc_r+0x314>
  403ce8:	f240 5254 	movw	r2, #1364	; 0x554
  403cec:	4293      	cmp	r3, r2
  403cee:	d820      	bhi.n	403d32 <_malloc_r+0x512>
  403cf0:	0ca8      	lsrs	r0, r5, #18
  403cf2:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  403cf6:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403cfa:	307c      	adds	r0, #124	; 0x7c
  403cfc:	e5b2      	b.n	403864 <_malloc_r+0x44>
  403cfe:	3210      	adds	r2, #16
  403d00:	e6a4      	b.n	403a4c <_malloc_r+0x22c>
  403d02:	2a54      	cmp	r2, #84	; 0x54
  403d04:	d826      	bhi.n	403d54 <_malloc_r+0x534>
  403d06:	0b1a      	lsrs	r2, r3, #12
  403d08:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403d0c:	0049      	lsls	r1, r1, #1
  403d0e:	326e      	adds	r2, #110	; 0x6e
  403d10:	e748      	b.n	403ba4 <_malloc_r+0x384>
  403d12:	68bc      	ldr	r4, [r7, #8]
  403d14:	6862      	ldr	r2, [r4, #4]
  403d16:	f022 0203 	bic.w	r2, r2, #3
  403d1a:	e705      	b.n	403b28 <_malloc_r+0x308>
  403d1c:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403d20:	2800      	cmp	r0, #0
  403d22:	f47f aea8 	bne.w	403a76 <_malloc_r+0x256>
  403d26:	4442      	add	r2, r8
  403d28:	68bb      	ldr	r3, [r7, #8]
  403d2a:	f042 0201 	orr.w	r2, r2, #1
  403d2e:	605a      	str	r2, [r3, #4]
  403d30:	e6ec      	b.n	403b0c <_malloc_r+0x2ec>
  403d32:	23fe      	movs	r3, #254	; 0xfe
  403d34:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  403d38:	207e      	movs	r0, #126	; 0x7e
  403d3a:	e593      	b.n	403864 <_malloc_r+0x44>
  403d3c:	2201      	movs	r2, #1
  403d3e:	f04f 0900 	mov.w	r9, #0
  403d42:	e6c1      	b.n	403ac8 <_malloc_r+0x2a8>
  403d44:	f104 0108 	add.w	r1, r4, #8
  403d48:	4630      	mov	r0, r6
  403d4a:	f000 fdf7 	bl	40493c <_free_r>
  403d4e:	f8d9 1000 	ldr.w	r1, [r9]
  403d52:	e6db      	b.n	403b0c <_malloc_r+0x2ec>
  403d54:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403d58:	d805      	bhi.n	403d66 <_malloc_r+0x546>
  403d5a:	0bda      	lsrs	r2, r3, #15
  403d5c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403d60:	0049      	lsls	r1, r1, #1
  403d62:	3277      	adds	r2, #119	; 0x77
  403d64:	e71e      	b.n	403ba4 <_malloc_r+0x384>
  403d66:	f240 5154 	movw	r1, #1364	; 0x554
  403d6a:	428a      	cmp	r2, r1
  403d6c:	d805      	bhi.n	403d7a <_malloc_r+0x55a>
  403d6e:	0c9a      	lsrs	r2, r3, #18
  403d70:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403d74:	0049      	lsls	r1, r1, #1
  403d76:	327c      	adds	r2, #124	; 0x7c
  403d78:	e714      	b.n	403ba4 <_malloc_r+0x384>
  403d7a:	21fe      	movs	r1, #254	; 0xfe
  403d7c:	227e      	movs	r2, #126	; 0x7e
  403d7e:	e711      	b.n	403ba4 <_malloc_r+0x384>
  403d80:	687b      	ldr	r3, [r7, #4]
  403d82:	e784      	b.n	403c8e <_malloc_r+0x46e>
  403d84:	08e8      	lsrs	r0, r5, #3
  403d86:	1c43      	adds	r3, r0, #1
  403d88:	005b      	lsls	r3, r3, #1
  403d8a:	e5f8      	b.n	40397e <_malloc_r+0x15e>
  403d8c:	20000874 	.word	0x20000874

00403d90 <memchr>:
  403d90:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403d94:	2a10      	cmp	r2, #16
  403d96:	db2b      	blt.n	403df0 <memchr+0x60>
  403d98:	f010 0f07 	tst.w	r0, #7
  403d9c:	d008      	beq.n	403db0 <memchr+0x20>
  403d9e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403da2:	3a01      	subs	r2, #1
  403da4:	428b      	cmp	r3, r1
  403da6:	d02d      	beq.n	403e04 <memchr+0x74>
  403da8:	f010 0f07 	tst.w	r0, #7
  403dac:	b342      	cbz	r2, 403e00 <memchr+0x70>
  403dae:	d1f6      	bne.n	403d9e <memchr+0xe>
  403db0:	b4f0      	push	{r4, r5, r6, r7}
  403db2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403db6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  403dba:	f022 0407 	bic.w	r4, r2, #7
  403dbe:	f07f 0700 	mvns.w	r7, #0
  403dc2:	2300      	movs	r3, #0
  403dc4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403dc8:	3c08      	subs	r4, #8
  403dca:	ea85 0501 	eor.w	r5, r5, r1
  403dce:	ea86 0601 	eor.w	r6, r6, r1
  403dd2:	fa85 f547 	uadd8	r5, r5, r7
  403dd6:	faa3 f587 	sel	r5, r3, r7
  403dda:	fa86 f647 	uadd8	r6, r6, r7
  403dde:	faa5 f687 	sel	r6, r5, r7
  403de2:	b98e      	cbnz	r6, 403e08 <memchr+0x78>
  403de4:	d1ee      	bne.n	403dc4 <memchr+0x34>
  403de6:	bcf0      	pop	{r4, r5, r6, r7}
  403de8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403dec:	f002 0207 	and.w	r2, r2, #7
  403df0:	b132      	cbz	r2, 403e00 <memchr+0x70>
  403df2:	f810 3b01 	ldrb.w	r3, [r0], #1
  403df6:	3a01      	subs	r2, #1
  403df8:	ea83 0301 	eor.w	r3, r3, r1
  403dfc:	b113      	cbz	r3, 403e04 <memchr+0x74>
  403dfe:	d1f8      	bne.n	403df2 <memchr+0x62>
  403e00:	2000      	movs	r0, #0
  403e02:	4770      	bx	lr
  403e04:	3801      	subs	r0, #1
  403e06:	4770      	bx	lr
  403e08:	2d00      	cmp	r5, #0
  403e0a:	bf06      	itte	eq
  403e0c:	4635      	moveq	r5, r6
  403e0e:	3803      	subeq	r0, #3
  403e10:	3807      	subne	r0, #7
  403e12:	f015 0f01 	tst.w	r5, #1
  403e16:	d107      	bne.n	403e28 <memchr+0x98>
  403e18:	3001      	adds	r0, #1
  403e1a:	f415 7f80 	tst.w	r5, #256	; 0x100
  403e1e:	bf02      	ittt	eq
  403e20:	3001      	addeq	r0, #1
  403e22:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  403e26:	3001      	addeq	r0, #1
  403e28:	bcf0      	pop	{r4, r5, r6, r7}
  403e2a:	3801      	subs	r0, #1
  403e2c:	4770      	bx	lr
  403e2e:	bf00      	nop

00403e30 <memcpy>:
  403e30:	4684      	mov	ip, r0
  403e32:	ea41 0300 	orr.w	r3, r1, r0
  403e36:	f013 0303 	ands.w	r3, r3, #3
  403e3a:	d16d      	bne.n	403f18 <memcpy+0xe8>
  403e3c:	3a40      	subs	r2, #64	; 0x40
  403e3e:	d341      	bcc.n	403ec4 <memcpy+0x94>
  403e40:	f851 3b04 	ldr.w	r3, [r1], #4
  403e44:	f840 3b04 	str.w	r3, [r0], #4
  403e48:	f851 3b04 	ldr.w	r3, [r1], #4
  403e4c:	f840 3b04 	str.w	r3, [r0], #4
  403e50:	f851 3b04 	ldr.w	r3, [r1], #4
  403e54:	f840 3b04 	str.w	r3, [r0], #4
  403e58:	f851 3b04 	ldr.w	r3, [r1], #4
  403e5c:	f840 3b04 	str.w	r3, [r0], #4
  403e60:	f851 3b04 	ldr.w	r3, [r1], #4
  403e64:	f840 3b04 	str.w	r3, [r0], #4
  403e68:	f851 3b04 	ldr.w	r3, [r1], #4
  403e6c:	f840 3b04 	str.w	r3, [r0], #4
  403e70:	f851 3b04 	ldr.w	r3, [r1], #4
  403e74:	f840 3b04 	str.w	r3, [r0], #4
  403e78:	f851 3b04 	ldr.w	r3, [r1], #4
  403e7c:	f840 3b04 	str.w	r3, [r0], #4
  403e80:	f851 3b04 	ldr.w	r3, [r1], #4
  403e84:	f840 3b04 	str.w	r3, [r0], #4
  403e88:	f851 3b04 	ldr.w	r3, [r1], #4
  403e8c:	f840 3b04 	str.w	r3, [r0], #4
  403e90:	f851 3b04 	ldr.w	r3, [r1], #4
  403e94:	f840 3b04 	str.w	r3, [r0], #4
  403e98:	f851 3b04 	ldr.w	r3, [r1], #4
  403e9c:	f840 3b04 	str.w	r3, [r0], #4
  403ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ea4:	f840 3b04 	str.w	r3, [r0], #4
  403ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  403eac:	f840 3b04 	str.w	r3, [r0], #4
  403eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  403eb4:	f840 3b04 	str.w	r3, [r0], #4
  403eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ebc:	f840 3b04 	str.w	r3, [r0], #4
  403ec0:	3a40      	subs	r2, #64	; 0x40
  403ec2:	d2bd      	bcs.n	403e40 <memcpy+0x10>
  403ec4:	3230      	adds	r2, #48	; 0x30
  403ec6:	d311      	bcc.n	403eec <memcpy+0xbc>
  403ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ecc:	f840 3b04 	str.w	r3, [r0], #4
  403ed0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ed4:	f840 3b04 	str.w	r3, [r0], #4
  403ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  403edc:	f840 3b04 	str.w	r3, [r0], #4
  403ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ee4:	f840 3b04 	str.w	r3, [r0], #4
  403ee8:	3a10      	subs	r2, #16
  403eea:	d2ed      	bcs.n	403ec8 <memcpy+0x98>
  403eec:	320c      	adds	r2, #12
  403eee:	d305      	bcc.n	403efc <memcpy+0xcc>
  403ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ef4:	f840 3b04 	str.w	r3, [r0], #4
  403ef8:	3a04      	subs	r2, #4
  403efa:	d2f9      	bcs.n	403ef0 <memcpy+0xc0>
  403efc:	3204      	adds	r2, #4
  403efe:	d008      	beq.n	403f12 <memcpy+0xe2>
  403f00:	07d2      	lsls	r2, r2, #31
  403f02:	bf1c      	itt	ne
  403f04:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403f08:	f800 3b01 	strbne.w	r3, [r0], #1
  403f0c:	d301      	bcc.n	403f12 <memcpy+0xe2>
  403f0e:	880b      	ldrh	r3, [r1, #0]
  403f10:	8003      	strh	r3, [r0, #0]
  403f12:	4660      	mov	r0, ip
  403f14:	4770      	bx	lr
  403f16:	bf00      	nop
  403f18:	2a08      	cmp	r2, #8
  403f1a:	d313      	bcc.n	403f44 <memcpy+0x114>
  403f1c:	078b      	lsls	r3, r1, #30
  403f1e:	d08d      	beq.n	403e3c <memcpy+0xc>
  403f20:	f010 0303 	ands.w	r3, r0, #3
  403f24:	d08a      	beq.n	403e3c <memcpy+0xc>
  403f26:	f1c3 0304 	rsb	r3, r3, #4
  403f2a:	1ad2      	subs	r2, r2, r3
  403f2c:	07db      	lsls	r3, r3, #31
  403f2e:	bf1c      	itt	ne
  403f30:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403f34:	f800 3b01 	strbne.w	r3, [r0], #1
  403f38:	d380      	bcc.n	403e3c <memcpy+0xc>
  403f3a:	f831 3b02 	ldrh.w	r3, [r1], #2
  403f3e:	f820 3b02 	strh.w	r3, [r0], #2
  403f42:	e77b      	b.n	403e3c <memcpy+0xc>
  403f44:	3a04      	subs	r2, #4
  403f46:	d3d9      	bcc.n	403efc <memcpy+0xcc>
  403f48:	3a01      	subs	r2, #1
  403f4a:	f811 3b01 	ldrb.w	r3, [r1], #1
  403f4e:	f800 3b01 	strb.w	r3, [r0], #1
  403f52:	d2f9      	bcs.n	403f48 <memcpy+0x118>
  403f54:	780b      	ldrb	r3, [r1, #0]
  403f56:	7003      	strb	r3, [r0, #0]
  403f58:	784b      	ldrb	r3, [r1, #1]
  403f5a:	7043      	strb	r3, [r0, #1]
  403f5c:	788b      	ldrb	r3, [r1, #2]
  403f5e:	7083      	strb	r3, [r0, #2]
  403f60:	4660      	mov	r0, ip
  403f62:	4770      	bx	lr

00403f64 <__malloc_lock>:
  403f64:	4770      	bx	lr
  403f66:	bf00      	nop

00403f68 <__malloc_unlock>:
  403f68:	4770      	bx	lr
  403f6a:	bf00      	nop

00403f6c <_Balloc>:
  403f6c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  403f6e:	b570      	push	{r4, r5, r6, lr}
  403f70:	4605      	mov	r5, r0
  403f72:	460c      	mov	r4, r1
  403f74:	b14b      	cbz	r3, 403f8a <_Balloc+0x1e>
  403f76:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  403f7a:	b180      	cbz	r0, 403f9e <_Balloc+0x32>
  403f7c:	6802      	ldr	r2, [r0, #0]
  403f7e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  403f82:	2300      	movs	r3, #0
  403f84:	6103      	str	r3, [r0, #16]
  403f86:	60c3      	str	r3, [r0, #12]
  403f88:	bd70      	pop	{r4, r5, r6, pc}
  403f8a:	2221      	movs	r2, #33	; 0x21
  403f8c:	2104      	movs	r1, #4
  403f8e:	f000 fc57 	bl	404840 <_calloc_r>
  403f92:	64e8      	str	r0, [r5, #76]	; 0x4c
  403f94:	4603      	mov	r3, r0
  403f96:	2800      	cmp	r0, #0
  403f98:	d1ed      	bne.n	403f76 <_Balloc+0xa>
  403f9a:	2000      	movs	r0, #0
  403f9c:	bd70      	pop	{r4, r5, r6, pc}
  403f9e:	2101      	movs	r1, #1
  403fa0:	fa01 f604 	lsl.w	r6, r1, r4
  403fa4:	1d72      	adds	r2, r6, #5
  403fa6:	4628      	mov	r0, r5
  403fa8:	0092      	lsls	r2, r2, #2
  403faa:	f000 fc49 	bl	404840 <_calloc_r>
  403fae:	2800      	cmp	r0, #0
  403fb0:	d0f3      	beq.n	403f9a <_Balloc+0x2e>
  403fb2:	6044      	str	r4, [r0, #4]
  403fb4:	6086      	str	r6, [r0, #8]
  403fb6:	e7e4      	b.n	403f82 <_Balloc+0x16>

00403fb8 <_Bfree>:
  403fb8:	b131      	cbz	r1, 403fc8 <_Bfree+0x10>
  403fba:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  403fbc:	684a      	ldr	r2, [r1, #4]
  403fbe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  403fc2:	6008      	str	r0, [r1, #0]
  403fc4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  403fc8:	4770      	bx	lr
  403fca:	bf00      	nop

00403fcc <__multadd>:
  403fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
  403fce:	690c      	ldr	r4, [r1, #16]
  403fd0:	b083      	sub	sp, #12
  403fd2:	460d      	mov	r5, r1
  403fd4:	4606      	mov	r6, r0
  403fd6:	f101 0e14 	add.w	lr, r1, #20
  403fda:	2700      	movs	r7, #0
  403fdc:	f8de 0000 	ldr.w	r0, [lr]
  403fe0:	b281      	uxth	r1, r0
  403fe2:	fb02 3101 	mla	r1, r2, r1, r3
  403fe6:	0c0b      	lsrs	r3, r1, #16
  403fe8:	0c00      	lsrs	r0, r0, #16
  403fea:	fb02 3300 	mla	r3, r2, r0, r3
  403fee:	b289      	uxth	r1, r1
  403ff0:	3701      	adds	r7, #1
  403ff2:	eb01 4103 	add.w	r1, r1, r3, lsl #16
  403ff6:	42bc      	cmp	r4, r7
  403ff8:	f84e 1b04 	str.w	r1, [lr], #4
  403ffc:	ea4f 4313 	mov.w	r3, r3, lsr #16
  404000:	dcec      	bgt.n	403fdc <__multadd+0x10>
  404002:	b13b      	cbz	r3, 404014 <__multadd+0x48>
  404004:	68aa      	ldr	r2, [r5, #8]
  404006:	4294      	cmp	r4, r2
  404008:	da07      	bge.n	40401a <__multadd+0x4e>
  40400a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40400e:	3401      	adds	r4, #1
  404010:	6153      	str	r3, [r2, #20]
  404012:	612c      	str	r4, [r5, #16]
  404014:	4628      	mov	r0, r5
  404016:	b003      	add	sp, #12
  404018:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40401a:	6869      	ldr	r1, [r5, #4]
  40401c:	9301      	str	r3, [sp, #4]
  40401e:	3101      	adds	r1, #1
  404020:	4630      	mov	r0, r6
  404022:	f7ff ffa3 	bl	403f6c <_Balloc>
  404026:	692a      	ldr	r2, [r5, #16]
  404028:	3202      	adds	r2, #2
  40402a:	f105 010c 	add.w	r1, r5, #12
  40402e:	4607      	mov	r7, r0
  404030:	0092      	lsls	r2, r2, #2
  404032:	300c      	adds	r0, #12
  404034:	f7ff fefc 	bl	403e30 <memcpy>
  404038:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40403a:	6869      	ldr	r1, [r5, #4]
  40403c:	9b01      	ldr	r3, [sp, #4]
  40403e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404042:	6028      	str	r0, [r5, #0]
  404044:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404048:	463d      	mov	r5, r7
  40404a:	e7de      	b.n	40400a <__multadd+0x3e>

0040404c <__hi0bits>:
  40404c:	0c03      	lsrs	r3, r0, #16
  40404e:	041b      	lsls	r3, r3, #16
  404050:	b9b3      	cbnz	r3, 404080 <__hi0bits+0x34>
  404052:	0400      	lsls	r0, r0, #16
  404054:	2310      	movs	r3, #16
  404056:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  40405a:	bf04      	itt	eq
  40405c:	0200      	lsleq	r0, r0, #8
  40405e:	3308      	addeq	r3, #8
  404060:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  404064:	bf04      	itt	eq
  404066:	0100      	lsleq	r0, r0, #4
  404068:	3304      	addeq	r3, #4
  40406a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  40406e:	bf04      	itt	eq
  404070:	0080      	lsleq	r0, r0, #2
  404072:	3302      	addeq	r3, #2
  404074:	2800      	cmp	r0, #0
  404076:	db07      	blt.n	404088 <__hi0bits+0x3c>
  404078:	0042      	lsls	r2, r0, #1
  40407a:	d403      	bmi.n	404084 <__hi0bits+0x38>
  40407c:	2020      	movs	r0, #32
  40407e:	4770      	bx	lr
  404080:	2300      	movs	r3, #0
  404082:	e7e8      	b.n	404056 <__hi0bits+0xa>
  404084:	1c58      	adds	r0, r3, #1
  404086:	4770      	bx	lr
  404088:	4618      	mov	r0, r3
  40408a:	4770      	bx	lr

0040408c <__lo0bits>:
  40408c:	6803      	ldr	r3, [r0, #0]
  40408e:	f013 0207 	ands.w	r2, r3, #7
  404092:	d007      	beq.n	4040a4 <__lo0bits+0x18>
  404094:	07d9      	lsls	r1, r3, #31
  404096:	d420      	bmi.n	4040da <__lo0bits+0x4e>
  404098:	079a      	lsls	r2, r3, #30
  40409a:	d420      	bmi.n	4040de <__lo0bits+0x52>
  40409c:	089b      	lsrs	r3, r3, #2
  40409e:	6003      	str	r3, [r0, #0]
  4040a0:	2002      	movs	r0, #2
  4040a2:	4770      	bx	lr
  4040a4:	b299      	uxth	r1, r3
  4040a6:	b909      	cbnz	r1, 4040ac <__lo0bits+0x20>
  4040a8:	0c1b      	lsrs	r3, r3, #16
  4040aa:	2210      	movs	r2, #16
  4040ac:	f013 0fff 	tst.w	r3, #255	; 0xff
  4040b0:	bf04      	itt	eq
  4040b2:	0a1b      	lsreq	r3, r3, #8
  4040b4:	3208      	addeq	r2, #8
  4040b6:	0719      	lsls	r1, r3, #28
  4040b8:	bf04      	itt	eq
  4040ba:	091b      	lsreq	r3, r3, #4
  4040bc:	3204      	addeq	r2, #4
  4040be:	0799      	lsls	r1, r3, #30
  4040c0:	bf04      	itt	eq
  4040c2:	089b      	lsreq	r3, r3, #2
  4040c4:	3202      	addeq	r2, #2
  4040c6:	07d9      	lsls	r1, r3, #31
  4040c8:	d404      	bmi.n	4040d4 <__lo0bits+0x48>
  4040ca:	085b      	lsrs	r3, r3, #1
  4040cc:	d101      	bne.n	4040d2 <__lo0bits+0x46>
  4040ce:	2020      	movs	r0, #32
  4040d0:	4770      	bx	lr
  4040d2:	3201      	adds	r2, #1
  4040d4:	6003      	str	r3, [r0, #0]
  4040d6:	4610      	mov	r0, r2
  4040d8:	4770      	bx	lr
  4040da:	2000      	movs	r0, #0
  4040dc:	4770      	bx	lr
  4040de:	085b      	lsrs	r3, r3, #1
  4040e0:	6003      	str	r3, [r0, #0]
  4040e2:	2001      	movs	r0, #1
  4040e4:	4770      	bx	lr
  4040e6:	bf00      	nop

004040e8 <__i2b>:
  4040e8:	b510      	push	{r4, lr}
  4040ea:	460c      	mov	r4, r1
  4040ec:	2101      	movs	r1, #1
  4040ee:	f7ff ff3d 	bl	403f6c <_Balloc>
  4040f2:	2201      	movs	r2, #1
  4040f4:	6144      	str	r4, [r0, #20]
  4040f6:	6102      	str	r2, [r0, #16]
  4040f8:	bd10      	pop	{r4, pc}
  4040fa:	bf00      	nop

004040fc <__multiply>:
  4040fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404100:	690d      	ldr	r5, [r1, #16]
  404102:	6917      	ldr	r7, [r2, #16]
  404104:	42bd      	cmp	r5, r7
  404106:	b083      	sub	sp, #12
  404108:	460c      	mov	r4, r1
  40410a:	4616      	mov	r6, r2
  40410c:	da04      	bge.n	404118 <__multiply+0x1c>
  40410e:	462a      	mov	r2, r5
  404110:	4634      	mov	r4, r6
  404112:	463d      	mov	r5, r7
  404114:	460e      	mov	r6, r1
  404116:	4617      	mov	r7, r2
  404118:	68a3      	ldr	r3, [r4, #8]
  40411a:	6861      	ldr	r1, [r4, #4]
  40411c:	eb05 0807 	add.w	r8, r5, r7
  404120:	4598      	cmp	r8, r3
  404122:	bfc8      	it	gt
  404124:	3101      	addgt	r1, #1
  404126:	f7ff ff21 	bl	403f6c <_Balloc>
  40412a:	f100 0c14 	add.w	ip, r0, #20
  40412e:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
  404132:	45cc      	cmp	ip, r9
  404134:	9000      	str	r0, [sp, #0]
  404136:	d205      	bcs.n	404144 <__multiply+0x48>
  404138:	4663      	mov	r3, ip
  40413a:	2100      	movs	r1, #0
  40413c:	f843 1b04 	str.w	r1, [r3], #4
  404140:	4599      	cmp	r9, r3
  404142:	d8fb      	bhi.n	40413c <__multiply+0x40>
  404144:	f106 0214 	add.w	r2, r6, #20
  404148:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
  40414c:	f104 0314 	add.w	r3, r4, #20
  404150:	4552      	cmp	r2, sl
  404152:	eb03 0e85 	add.w	lr, r3, r5, lsl #2
  404156:	d254      	bcs.n	404202 <__multiply+0x106>
  404158:	f8cd 9004 	str.w	r9, [sp, #4]
  40415c:	4699      	mov	r9, r3
  40415e:	f852 3b04 	ldr.w	r3, [r2], #4
  404162:	fa1f fb83 	uxth.w	fp, r3
  404166:	f1bb 0f00 	cmp.w	fp, #0
  40416a:	d020      	beq.n	4041ae <__multiply+0xb2>
  40416c:	2000      	movs	r0, #0
  40416e:	464f      	mov	r7, r9
  404170:	4666      	mov	r6, ip
  404172:	4605      	mov	r5, r0
  404174:	e000      	b.n	404178 <__multiply+0x7c>
  404176:	461e      	mov	r6, r3
  404178:	f857 4b04 	ldr.w	r4, [r7], #4
  40417c:	6830      	ldr	r0, [r6, #0]
  40417e:	b2a1      	uxth	r1, r4
  404180:	b283      	uxth	r3, r0
  404182:	fb0b 3101 	mla	r1, fp, r1, r3
  404186:	0c24      	lsrs	r4, r4, #16
  404188:	0c00      	lsrs	r0, r0, #16
  40418a:	194b      	adds	r3, r1, r5
  40418c:	fb0b 0004 	mla	r0, fp, r4, r0
  404190:	eb00 4013 	add.w	r0, r0, r3, lsr #16
  404194:	b299      	uxth	r1, r3
  404196:	4633      	mov	r3, r6
  404198:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
  40419c:	45be      	cmp	lr, r7
  40419e:	ea4f 4510 	mov.w	r5, r0, lsr #16
  4041a2:	f843 1b04 	str.w	r1, [r3], #4
  4041a6:	d8e6      	bhi.n	404176 <__multiply+0x7a>
  4041a8:	6075      	str	r5, [r6, #4]
  4041aa:	f852 3c04 	ldr.w	r3, [r2, #-4]
  4041ae:	ea5f 4b13 	movs.w	fp, r3, lsr #16
  4041b2:	d020      	beq.n	4041f6 <__multiply+0xfa>
  4041b4:	f8dc 3000 	ldr.w	r3, [ip]
  4041b8:	4667      	mov	r7, ip
  4041ba:	4618      	mov	r0, r3
  4041bc:	464d      	mov	r5, r9
  4041be:	2100      	movs	r1, #0
  4041c0:	e000      	b.n	4041c4 <__multiply+0xc8>
  4041c2:	4637      	mov	r7, r6
  4041c4:	882c      	ldrh	r4, [r5, #0]
  4041c6:	0c00      	lsrs	r0, r0, #16
  4041c8:	fb0b 0004 	mla	r0, fp, r4, r0
  4041cc:	4401      	add	r1, r0
  4041ce:	b29c      	uxth	r4, r3
  4041d0:	463e      	mov	r6, r7
  4041d2:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
  4041d6:	f846 3b04 	str.w	r3, [r6], #4
  4041da:	6878      	ldr	r0, [r7, #4]
  4041dc:	f855 4b04 	ldr.w	r4, [r5], #4
  4041e0:	b283      	uxth	r3, r0
  4041e2:	0c24      	lsrs	r4, r4, #16
  4041e4:	fb0b 3404 	mla	r4, fp, r4, r3
  4041e8:	eb04 4311 	add.w	r3, r4, r1, lsr #16
  4041ec:	45ae      	cmp	lr, r5
  4041ee:	ea4f 4113 	mov.w	r1, r3, lsr #16
  4041f2:	d8e6      	bhi.n	4041c2 <__multiply+0xc6>
  4041f4:	607b      	str	r3, [r7, #4]
  4041f6:	4592      	cmp	sl, r2
  4041f8:	f10c 0c04 	add.w	ip, ip, #4
  4041fc:	d8af      	bhi.n	40415e <__multiply+0x62>
  4041fe:	f8dd 9004 	ldr.w	r9, [sp, #4]
  404202:	f1b8 0f00 	cmp.w	r8, #0
  404206:	dd0b      	ble.n	404220 <__multiply+0x124>
  404208:	f859 3c04 	ldr.w	r3, [r9, #-4]
  40420c:	f1a9 0904 	sub.w	r9, r9, #4
  404210:	b11b      	cbz	r3, 40421a <__multiply+0x11e>
  404212:	e005      	b.n	404220 <__multiply+0x124>
  404214:	f859 3d04 	ldr.w	r3, [r9, #-4]!
  404218:	b913      	cbnz	r3, 404220 <__multiply+0x124>
  40421a:	f1b8 0801 	subs.w	r8, r8, #1
  40421e:	d1f9      	bne.n	404214 <__multiply+0x118>
  404220:	9800      	ldr	r0, [sp, #0]
  404222:	f8c0 8010 	str.w	r8, [r0, #16]
  404226:	b003      	add	sp, #12
  404228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040422c <__pow5mult>:
  40422c:	f012 0303 	ands.w	r3, r2, #3
  404230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404234:	4614      	mov	r4, r2
  404236:	4607      	mov	r7, r0
  404238:	d12e      	bne.n	404298 <__pow5mult+0x6c>
  40423a:	460e      	mov	r6, r1
  40423c:	10a4      	asrs	r4, r4, #2
  40423e:	d01c      	beq.n	40427a <__pow5mult+0x4e>
  404240:	6cbd      	ldr	r5, [r7, #72]	; 0x48
  404242:	b395      	cbz	r5, 4042aa <__pow5mult+0x7e>
  404244:	07e3      	lsls	r3, r4, #31
  404246:	f04f 0800 	mov.w	r8, #0
  40424a:	d406      	bmi.n	40425a <__pow5mult+0x2e>
  40424c:	1064      	asrs	r4, r4, #1
  40424e:	d014      	beq.n	40427a <__pow5mult+0x4e>
  404250:	6828      	ldr	r0, [r5, #0]
  404252:	b1a8      	cbz	r0, 404280 <__pow5mult+0x54>
  404254:	4605      	mov	r5, r0
  404256:	07e3      	lsls	r3, r4, #31
  404258:	d5f8      	bpl.n	40424c <__pow5mult+0x20>
  40425a:	462a      	mov	r2, r5
  40425c:	4631      	mov	r1, r6
  40425e:	4638      	mov	r0, r7
  404260:	f7ff ff4c 	bl	4040fc <__multiply>
  404264:	b1b6      	cbz	r6, 404294 <__pow5mult+0x68>
  404266:	6872      	ldr	r2, [r6, #4]
  404268:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40426a:	1064      	asrs	r4, r4, #1
  40426c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404270:	6031      	str	r1, [r6, #0]
  404272:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404276:	4606      	mov	r6, r0
  404278:	d1ea      	bne.n	404250 <__pow5mult+0x24>
  40427a:	4630      	mov	r0, r6
  40427c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404280:	462a      	mov	r2, r5
  404282:	4629      	mov	r1, r5
  404284:	4638      	mov	r0, r7
  404286:	f7ff ff39 	bl	4040fc <__multiply>
  40428a:	6028      	str	r0, [r5, #0]
  40428c:	f8c0 8000 	str.w	r8, [r0]
  404290:	4605      	mov	r5, r0
  404292:	e7e0      	b.n	404256 <__pow5mult+0x2a>
  404294:	4606      	mov	r6, r0
  404296:	e7d9      	b.n	40424c <__pow5mult+0x20>
  404298:	1e5a      	subs	r2, r3, #1
  40429a:	4d0b      	ldr	r5, [pc, #44]	; (4042c8 <__pow5mult+0x9c>)
  40429c:	2300      	movs	r3, #0
  40429e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4042a2:	f7ff fe93 	bl	403fcc <__multadd>
  4042a6:	4606      	mov	r6, r0
  4042a8:	e7c8      	b.n	40423c <__pow5mult+0x10>
  4042aa:	2101      	movs	r1, #1
  4042ac:	4638      	mov	r0, r7
  4042ae:	f7ff fe5d 	bl	403f6c <_Balloc>
  4042b2:	f240 2171 	movw	r1, #625	; 0x271
  4042b6:	2201      	movs	r2, #1
  4042b8:	2300      	movs	r3, #0
  4042ba:	6141      	str	r1, [r0, #20]
  4042bc:	6102      	str	r2, [r0, #16]
  4042be:	4605      	mov	r5, r0
  4042c0:	64b8      	str	r0, [r7, #72]	; 0x48
  4042c2:	6003      	str	r3, [r0, #0]
  4042c4:	e7be      	b.n	404244 <__pow5mult+0x18>
  4042c6:	bf00      	nop
  4042c8:	00405de8 	.word	0x00405de8

004042cc <__lshift>:
  4042cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4042d0:	4691      	mov	r9, r2
  4042d2:	690a      	ldr	r2, [r1, #16]
  4042d4:	688b      	ldr	r3, [r1, #8]
  4042d6:	ea4f 1469 	mov.w	r4, r9, asr #5
  4042da:	eb04 0802 	add.w	r8, r4, r2
  4042de:	f108 0501 	add.w	r5, r8, #1
  4042e2:	429d      	cmp	r5, r3
  4042e4:	460e      	mov	r6, r1
  4042e6:	4682      	mov	sl, r0
  4042e8:	6849      	ldr	r1, [r1, #4]
  4042ea:	dd04      	ble.n	4042f6 <__lshift+0x2a>
  4042ec:	005b      	lsls	r3, r3, #1
  4042ee:	429d      	cmp	r5, r3
  4042f0:	f101 0101 	add.w	r1, r1, #1
  4042f4:	dcfa      	bgt.n	4042ec <__lshift+0x20>
  4042f6:	4650      	mov	r0, sl
  4042f8:	f7ff fe38 	bl	403f6c <_Balloc>
  4042fc:	2c00      	cmp	r4, #0
  4042fe:	f100 0214 	add.w	r2, r0, #20
  404302:	dd38      	ble.n	404376 <__lshift+0xaa>
  404304:	eb02 0384 	add.w	r3, r2, r4, lsl #2
  404308:	2100      	movs	r1, #0
  40430a:	f842 1b04 	str.w	r1, [r2], #4
  40430e:	4293      	cmp	r3, r2
  404310:	d1fb      	bne.n	40430a <__lshift+0x3e>
  404312:	6934      	ldr	r4, [r6, #16]
  404314:	f106 0114 	add.w	r1, r6, #20
  404318:	f019 091f 	ands.w	r9, r9, #31
  40431c:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404320:	d021      	beq.n	404366 <__lshift+0x9a>
  404322:	f1c9 0220 	rsb	r2, r9, #32
  404326:	2400      	movs	r4, #0
  404328:	680f      	ldr	r7, [r1, #0]
  40432a:	fa07 fc09 	lsl.w	ip, r7, r9
  40432e:	ea4c 0404 	orr.w	r4, ip, r4
  404332:	469c      	mov	ip, r3
  404334:	f843 4b04 	str.w	r4, [r3], #4
  404338:	f851 4b04 	ldr.w	r4, [r1], #4
  40433c:	458e      	cmp	lr, r1
  40433e:	fa24 f402 	lsr.w	r4, r4, r2
  404342:	d8f1      	bhi.n	404328 <__lshift+0x5c>
  404344:	f8cc 4004 	str.w	r4, [ip, #4]
  404348:	b10c      	cbz	r4, 40434e <__lshift+0x82>
  40434a:	f108 0502 	add.w	r5, r8, #2
  40434e:	f8da 304c 	ldr.w	r3, [sl, #76]	; 0x4c
  404352:	6872      	ldr	r2, [r6, #4]
  404354:	3d01      	subs	r5, #1
  404356:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40435a:	6105      	str	r5, [r0, #16]
  40435c:	6031      	str	r1, [r6, #0]
  40435e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404366:	3b04      	subs	r3, #4
  404368:	f851 2b04 	ldr.w	r2, [r1], #4
  40436c:	f843 2f04 	str.w	r2, [r3, #4]!
  404370:	458e      	cmp	lr, r1
  404372:	d8f9      	bhi.n	404368 <__lshift+0x9c>
  404374:	e7eb      	b.n	40434e <__lshift+0x82>
  404376:	4613      	mov	r3, r2
  404378:	e7cb      	b.n	404312 <__lshift+0x46>
  40437a:	bf00      	nop

0040437c <__mcmp>:
  40437c:	6902      	ldr	r2, [r0, #16]
  40437e:	690b      	ldr	r3, [r1, #16]
  404380:	1ad2      	subs	r2, r2, r3
  404382:	d112      	bne.n	4043aa <__mcmp+0x2e>
  404384:	009b      	lsls	r3, r3, #2
  404386:	3014      	adds	r0, #20
  404388:	3114      	adds	r1, #20
  40438a:	4419      	add	r1, r3
  40438c:	b410      	push	{r4}
  40438e:	4403      	add	r3, r0
  404390:	e001      	b.n	404396 <__mcmp+0x1a>
  404392:	4298      	cmp	r0, r3
  404394:	d20b      	bcs.n	4043ae <__mcmp+0x32>
  404396:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  40439a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40439e:	4294      	cmp	r4, r2
  4043a0:	d0f7      	beq.n	404392 <__mcmp+0x16>
  4043a2:	d307      	bcc.n	4043b4 <__mcmp+0x38>
  4043a4:	2001      	movs	r0, #1
  4043a6:	bc10      	pop	{r4}
  4043a8:	4770      	bx	lr
  4043aa:	4610      	mov	r0, r2
  4043ac:	4770      	bx	lr
  4043ae:	2000      	movs	r0, #0
  4043b0:	bc10      	pop	{r4}
  4043b2:	4770      	bx	lr
  4043b4:	f04f 30ff 	mov.w	r0, #4294967295
  4043b8:	e7f5      	b.n	4043a6 <__mcmp+0x2a>
  4043ba:	bf00      	nop

004043bc <__mdiff>:
  4043bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4043c0:	690b      	ldr	r3, [r1, #16]
  4043c2:	460f      	mov	r7, r1
  4043c4:	6911      	ldr	r1, [r2, #16]
  4043c6:	1a5b      	subs	r3, r3, r1
  4043c8:	2b00      	cmp	r3, #0
  4043ca:	4690      	mov	r8, r2
  4043cc:	d117      	bne.n	4043fe <__mdiff+0x42>
  4043ce:	0089      	lsls	r1, r1, #2
  4043d0:	f107 0214 	add.w	r2, r7, #20
  4043d4:	f108 0514 	add.w	r5, r8, #20
  4043d8:	1853      	adds	r3, r2, r1
  4043da:	4429      	add	r1, r5
  4043dc:	e001      	b.n	4043e2 <__mdiff+0x26>
  4043de:	429a      	cmp	r2, r3
  4043e0:	d25e      	bcs.n	4044a0 <__mdiff+0xe4>
  4043e2:	f853 6d04 	ldr.w	r6, [r3, #-4]!
  4043e6:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4043ea:	42a6      	cmp	r6, r4
  4043ec:	d0f7      	beq.n	4043de <__mdiff+0x22>
  4043ee:	d260      	bcs.n	4044b2 <__mdiff+0xf6>
  4043f0:	463b      	mov	r3, r7
  4043f2:	4614      	mov	r4, r2
  4043f4:	4647      	mov	r7, r8
  4043f6:	f04f 0901 	mov.w	r9, #1
  4043fa:	4698      	mov	r8, r3
  4043fc:	e006      	b.n	40440c <__mdiff+0x50>
  4043fe:	db5d      	blt.n	4044bc <__mdiff+0x100>
  404400:	f107 0514 	add.w	r5, r7, #20
  404404:	f102 0414 	add.w	r4, r2, #20
  404408:	f04f 0900 	mov.w	r9, #0
  40440c:	6879      	ldr	r1, [r7, #4]
  40440e:	f7ff fdad 	bl	403f6c <_Balloc>
  404412:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404416:	693e      	ldr	r6, [r7, #16]
  404418:	f8c0 900c 	str.w	r9, [r0, #12]
  40441c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404420:	46a6      	mov	lr, r4
  404422:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404426:	f100 0414 	add.w	r4, r0, #20
  40442a:	2300      	movs	r3, #0
  40442c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404430:	f855 8b04 	ldr.w	r8, [r5], #4
  404434:	b28a      	uxth	r2, r1
  404436:	fa13 f388 	uxtah	r3, r3, r8
  40443a:	0c09      	lsrs	r1, r1, #16
  40443c:	1a9a      	subs	r2, r3, r2
  40443e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404442:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404446:	b292      	uxth	r2, r2
  404448:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40444c:	45f4      	cmp	ip, lr
  40444e:	f844 2b04 	str.w	r2, [r4], #4
  404452:	ea4f 4323 	mov.w	r3, r3, asr #16
  404456:	d8e9      	bhi.n	40442c <__mdiff+0x70>
  404458:	42af      	cmp	r7, r5
  40445a:	d917      	bls.n	40448c <__mdiff+0xd0>
  40445c:	46a4      	mov	ip, r4
  40445e:	4629      	mov	r1, r5
  404460:	f851 eb04 	ldr.w	lr, [r1], #4
  404464:	fa13 f28e 	uxtah	r2, r3, lr
  404468:	1413      	asrs	r3, r2, #16
  40446a:	eb03 431e 	add.w	r3, r3, lr, lsr #16
  40446e:	b292      	uxth	r2, r2
  404470:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404474:	428f      	cmp	r7, r1
  404476:	f84c 2b04 	str.w	r2, [ip], #4
  40447a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40447e:	d8ef      	bhi.n	404460 <__mdiff+0xa4>
  404480:	43ed      	mvns	r5, r5
  404482:	443d      	add	r5, r7
  404484:	f025 0503 	bic.w	r5, r5, #3
  404488:	3504      	adds	r5, #4
  40448a:	442c      	add	r4, r5
  40448c:	3c04      	subs	r4, #4
  40448e:	b922      	cbnz	r2, 40449a <__mdiff+0xde>
  404490:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404494:	3e01      	subs	r6, #1
  404496:	2b00      	cmp	r3, #0
  404498:	d0fa      	beq.n	404490 <__mdiff+0xd4>
  40449a:	6106      	str	r6, [r0, #16]
  40449c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4044a0:	2100      	movs	r1, #0
  4044a2:	f7ff fd63 	bl	403f6c <_Balloc>
  4044a6:	2201      	movs	r2, #1
  4044a8:	2300      	movs	r3, #0
  4044aa:	6102      	str	r2, [r0, #16]
  4044ac:	6143      	str	r3, [r0, #20]
  4044ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4044b2:	462c      	mov	r4, r5
  4044b4:	f04f 0900 	mov.w	r9, #0
  4044b8:	4615      	mov	r5, r2
  4044ba:	e7a7      	b.n	40440c <__mdiff+0x50>
  4044bc:	463b      	mov	r3, r7
  4044be:	f107 0414 	add.w	r4, r7, #20
  4044c2:	f108 0514 	add.w	r5, r8, #20
  4044c6:	4647      	mov	r7, r8
  4044c8:	f04f 0901 	mov.w	r9, #1
  4044cc:	4698      	mov	r8, r3
  4044ce:	e79d      	b.n	40440c <__mdiff+0x50>

004044d0 <__d2b>:
  4044d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4044d4:	b082      	sub	sp, #8
  4044d6:	2101      	movs	r1, #1
  4044d8:	461c      	mov	r4, r3
  4044da:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4044de:	4615      	mov	r5, r2
  4044e0:	9e08      	ldr	r6, [sp, #32]
  4044e2:	f7ff fd43 	bl	403f6c <_Balloc>
  4044e6:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4044ea:	4680      	mov	r8, r0
  4044ec:	b10f      	cbz	r7, 4044f2 <__d2b+0x22>
  4044ee:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4044f2:	9401      	str	r4, [sp, #4]
  4044f4:	b31d      	cbz	r5, 40453e <__d2b+0x6e>
  4044f6:	a802      	add	r0, sp, #8
  4044f8:	f840 5d08 	str.w	r5, [r0, #-8]!
  4044fc:	f7ff fdc6 	bl	40408c <__lo0bits>
  404500:	2800      	cmp	r0, #0
  404502:	d134      	bne.n	40456e <__d2b+0x9e>
  404504:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404508:	f8c8 2014 	str.w	r2, [r8, #20]
  40450c:	2b00      	cmp	r3, #0
  40450e:	bf0c      	ite	eq
  404510:	2101      	moveq	r1, #1
  404512:	2102      	movne	r1, #2
  404514:	f8c8 3018 	str.w	r3, [r8, #24]
  404518:	f8c8 1010 	str.w	r1, [r8, #16]
  40451c:	b9df      	cbnz	r7, 404556 <__d2b+0x86>
  40451e:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404522:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404526:	6030      	str	r0, [r6, #0]
  404528:	6918      	ldr	r0, [r3, #16]
  40452a:	f7ff fd8f 	bl	40404c <__hi0bits>
  40452e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404530:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404534:	6018      	str	r0, [r3, #0]
  404536:	4640      	mov	r0, r8
  404538:	b002      	add	sp, #8
  40453a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40453e:	a801      	add	r0, sp, #4
  404540:	f7ff fda4 	bl	40408c <__lo0bits>
  404544:	9b01      	ldr	r3, [sp, #4]
  404546:	f8c8 3014 	str.w	r3, [r8, #20]
  40454a:	2101      	movs	r1, #1
  40454c:	3020      	adds	r0, #32
  40454e:	f8c8 1010 	str.w	r1, [r8, #16]
  404552:	2f00      	cmp	r7, #0
  404554:	d0e3      	beq.n	40451e <__d2b+0x4e>
  404556:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404558:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  40455c:	4407      	add	r7, r0
  40455e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404562:	6037      	str	r7, [r6, #0]
  404564:	6018      	str	r0, [r3, #0]
  404566:	4640      	mov	r0, r8
  404568:	b002      	add	sp, #8
  40456a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40456e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404572:	f1c0 0120 	rsb	r1, r0, #32
  404576:	fa03 f101 	lsl.w	r1, r3, r1
  40457a:	430a      	orrs	r2, r1
  40457c:	40c3      	lsrs	r3, r0
  40457e:	9301      	str	r3, [sp, #4]
  404580:	f8c8 2014 	str.w	r2, [r8, #20]
  404584:	e7c2      	b.n	40450c <__d2b+0x3c>
  404586:	bf00      	nop

00404588 <_sbrk_r>:
  404588:	b538      	push	{r3, r4, r5, lr}
  40458a:	4c07      	ldr	r4, [pc, #28]	; (4045a8 <_sbrk_r+0x20>)
  40458c:	2300      	movs	r3, #0
  40458e:	4605      	mov	r5, r0
  404590:	4608      	mov	r0, r1
  404592:	6023      	str	r3, [r4, #0]
  404594:	f7fc fc38 	bl	400e08 <_sbrk>
  404598:	1c43      	adds	r3, r0, #1
  40459a:	d000      	beq.n	40459e <_sbrk_r+0x16>
  40459c:	bd38      	pop	{r3, r4, r5, pc}
  40459e:	6823      	ldr	r3, [r4, #0]
  4045a0:	2b00      	cmp	r3, #0
  4045a2:	d0fb      	beq.n	40459c <_sbrk_r+0x14>
  4045a4:	602b      	str	r3, [r5, #0]
  4045a6:	bd38      	pop	{r3, r4, r5, pc}
  4045a8:	20000d50 	.word	0x20000d50
	...

004045c0 <strlen>:
  4045c0:	f890 f000 	pld	[r0]
  4045c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4045c8:	f020 0107 	bic.w	r1, r0, #7
  4045cc:	f06f 0c00 	mvn.w	ip, #0
  4045d0:	f010 0407 	ands.w	r4, r0, #7
  4045d4:	f891 f020 	pld	[r1, #32]
  4045d8:	f040 8049 	bne.w	40466e <strlen+0xae>
  4045dc:	f04f 0400 	mov.w	r4, #0
  4045e0:	f06f 0007 	mvn.w	r0, #7
  4045e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4045e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4045ec:	f100 0008 	add.w	r0, r0, #8
  4045f0:	fa82 f24c 	uadd8	r2, r2, ip
  4045f4:	faa4 f28c 	sel	r2, r4, ip
  4045f8:	fa83 f34c 	uadd8	r3, r3, ip
  4045fc:	faa2 f38c 	sel	r3, r2, ip
  404600:	bb4b      	cbnz	r3, 404656 <strlen+0x96>
  404602:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404606:	fa82 f24c 	uadd8	r2, r2, ip
  40460a:	f100 0008 	add.w	r0, r0, #8
  40460e:	faa4 f28c 	sel	r2, r4, ip
  404612:	fa83 f34c 	uadd8	r3, r3, ip
  404616:	faa2 f38c 	sel	r3, r2, ip
  40461a:	b9e3      	cbnz	r3, 404656 <strlen+0x96>
  40461c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404620:	fa82 f24c 	uadd8	r2, r2, ip
  404624:	f100 0008 	add.w	r0, r0, #8
  404628:	faa4 f28c 	sel	r2, r4, ip
  40462c:	fa83 f34c 	uadd8	r3, r3, ip
  404630:	faa2 f38c 	sel	r3, r2, ip
  404634:	b97b      	cbnz	r3, 404656 <strlen+0x96>
  404636:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40463a:	f101 0120 	add.w	r1, r1, #32
  40463e:	fa82 f24c 	uadd8	r2, r2, ip
  404642:	f100 0008 	add.w	r0, r0, #8
  404646:	faa4 f28c 	sel	r2, r4, ip
  40464a:	fa83 f34c 	uadd8	r3, r3, ip
  40464e:	faa2 f38c 	sel	r3, r2, ip
  404652:	2b00      	cmp	r3, #0
  404654:	d0c6      	beq.n	4045e4 <strlen+0x24>
  404656:	2a00      	cmp	r2, #0
  404658:	bf04      	itt	eq
  40465a:	3004      	addeq	r0, #4
  40465c:	461a      	moveq	r2, r3
  40465e:	ba12      	rev	r2, r2
  404660:	fab2 f282 	clz	r2, r2
  404664:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404668:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40466c:	4770      	bx	lr
  40466e:	e9d1 2300 	ldrd	r2, r3, [r1]
  404672:	f004 0503 	and.w	r5, r4, #3
  404676:	f1c4 0000 	rsb	r0, r4, #0
  40467a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40467e:	f014 0f04 	tst.w	r4, #4
  404682:	f891 f040 	pld	[r1, #64]	; 0x40
  404686:	fa0c f505 	lsl.w	r5, ip, r5
  40468a:	ea62 0205 	orn	r2, r2, r5
  40468e:	bf1c      	itt	ne
  404690:	ea63 0305 	ornne	r3, r3, r5
  404694:	4662      	movne	r2, ip
  404696:	f04f 0400 	mov.w	r4, #0
  40469a:	e7a9      	b.n	4045f0 <strlen+0x30>

0040469c <__ssprint_r>:
  40469c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046a0:	6893      	ldr	r3, [r2, #8]
  4046a2:	b083      	sub	sp, #12
  4046a4:	4690      	mov	r8, r2
  4046a6:	2b00      	cmp	r3, #0
  4046a8:	d072      	beq.n	404790 <__ssprint_r+0xf4>
  4046aa:	4683      	mov	fp, r0
  4046ac:	f04f 0900 	mov.w	r9, #0
  4046b0:	6816      	ldr	r6, [r2, #0]
  4046b2:	6808      	ldr	r0, [r1, #0]
  4046b4:	688b      	ldr	r3, [r1, #8]
  4046b6:	460d      	mov	r5, r1
  4046b8:	464c      	mov	r4, r9
  4046ba:	2c00      	cmp	r4, #0
  4046bc:	d045      	beq.n	40474a <__ssprint_r+0xae>
  4046be:	429c      	cmp	r4, r3
  4046c0:	461f      	mov	r7, r3
  4046c2:	469a      	mov	sl, r3
  4046c4:	d346      	bcc.n	404754 <__ssprint_r+0xb8>
  4046c6:	89ab      	ldrh	r3, [r5, #12]
  4046c8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4046cc:	d02d      	beq.n	40472a <__ssprint_r+0x8e>
  4046ce:	696f      	ldr	r7, [r5, #20]
  4046d0:	6929      	ldr	r1, [r5, #16]
  4046d2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  4046d6:	ebc1 0a00 	rsb	sl, r1, r0
  4046da:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  4046de:	1c60      	adds	r0, r4, #1
  4046e0:	107f      	asrs	r7, r7, #1
  4046e2:	4450      	add	r0, sl
  4046e4:	42b8      	cmp	r0, r7
  4046e6:	463a      	mov	r2, r7
  4046e8:	bf84      	itt	hi
  4046ea:	4607      	movhi	r7, r0
  4046ec:	463a      	movhi	r2, r7
  4046ee:	055b      	lsls	r3, r3, #21
  4046f0:	d533      	bpl.n	40475a <__ssprint_r+0xbe>
  4046f2:	4611      	mov	r1, r2
  4046f4:	4658      	mov	r0, fp
  4046f6:	f7ff f893 	bl	403820 <_malloc_r>
  4046fa:	2800      	cmp	r0, #0
  4046fc:	d037      	beq.n	40476e <__ssprint_r+0xd2>
  4046fe:	4652      	mov	r2, sl
  404700:	6929      	ldr	r1, [r5, #16]
  404702:	9001      	str	r0, [sp, #4]
  404704:	f7ff fb94 	bl	403e30 <memcpy>
  404708:	89aa      	ldrh	r2, [r5, #12]
  40470a:	9b01      	ldr	r3, [sp, #4]
  40470c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404710:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404714:	81aa      	strh	r2, [r5, #12]
  404716:	ebca 0207 	rsb	r2, sl, r7
  40471a:	eb03 000a 	add.w	r0, r3, sl
  40471e:	616f      	str	r7, [r5, #20]
  404720:	612b      	str	r3, [r5, #16]
  404722:	6028      	str	r0, [r5, #0]
  404724:	60aa      	str	r2, [r5, #8]
  404726:	4627      	mov	r7, r4
  404728:	46a2      	mov	sl, r4
  40472a:	4652      	mov	r2, sl
  40472c:	4649      	mov	r1, r9
  40472e:	f000 f9ed 	bl	404b0c <memmove>
  404732:	f8d8 2008 	ldr.w	r2, [r8, #8]
  404736:	68ab      	ldr	r3, [r5, #8]
  404738:	6828      	ldr	r0, [r5, #0]
  40473a:	1bdb      	subs	r3, r3, r7
  40473c:	4450      	add	r0, sl
  40473e:	1b14      	subs	r4, r2, r4
  404740:	60ab      	str	r3, [r5, #8]
  404742:	6028      	str	r0, [r5, #0]
  404744:	f8c8 4008 	str.w	r4, [r8, #8]
  404748:	b314      	cbz	r4, 404790 <__ssprint_r+0xf4>
  40474a:	f8d6 9000 	ldr.w	r9, [r6]
  40474e:	6874      	ldr	r4, [r6, #4]
  404750:	3608      	adds	r6, #8
  404752:	e7b2      	b.n	4046ba <__ssprint_r+0x1e>
  404754:	4627      	mov	r7, r4
  404756:	46a2      	mov	sl, r4
  404758:	e7e7      	b.n	40472a <__ssprint_r+0x8e>
  40475a:	4658      	mov	r0, fp
  40475c:	f000 fa3a 	bl	404bd4 <_realloc_r>
  404760:	4603      	mov	r3, r0
  404762:	2800      	cmp	r0, #0
  404764:	d1d7      	bne.n	404716 <__ssprint_r+0x7a>
  404766:	6929      	ldr	r1, [r5, #16]
  404768:	4658      	mov	r0, fp
  40476a:	f000 f8e7 	bl	40493c <_free_r>
  40476e:	230c      	movs	r3, #12
  404770:	f8cb 3000 	str.w	r3, [fp]
  404774:	89ab      	ldrh	r3, [r5, #12]
  404776:	2200      	movs	r2, #0
  404778:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40477c:	f04f 30ff 	mov.w	r0, #4294967295
  404780:	81ab      	strh	r3, [r5, #12]
  404782:	f8c8 2008 	str.w	r2, [r8, #8]
  404786:	f8c8 2004 	str.w	r2, [r8, #4]
  40478a:	b003      	add	sp, #12
  40478c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404790:	2000      	movs	r0, #0
  404792:	f8c8 0004 	str.w	r0, [r8, #4]
  404796:	b003      	add	sp, #12
  404798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040479c <__register_exitproc>:
  40479c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4047a0:	4c25      	ldr	r4, [pc, #148]	; (404838 <__register_exitproc+0x9c>)
  4047a2:	6825      	ldr	r5, [r4, #0]
  4047a4:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  4047a8:	4606      	mov	r6, r0
  4047aa:	4688      	mov	r8, r1
  4047ac:	4692      	mov	sl, r2
  4047ae:	4699      	mov	r9, r3
  4047b0:	b3c4      	cbz	r4, 404824 <__register_exitproc+0x88>
  4047b2:	6860      	ldr	r0, [r4, #4]
  4047b4:	281f      	cmp	r0, #31
  4047b6:	dc17      	bgt.n	4047e8 <__register_exitproc+0x4c>
  4047b8:	1c43      	adds	r3, r0, #1
  4047ba:	b176      	cbz	r6, 4047da <__register_exitproc+0x3e>
  4047bc:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  4047c0:	2201      	movs	r2, #1
  4047c2:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  4047c6:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  4047ca:	4082      	lsls	r2, r0
  4047cc:	4311      	orrs	r1, r2
  4047ce:	2e02      	cmp	r6, #2
  4047d0:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  4047d4:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  4047d8:	d01e      	beq.n	404818 <__register_exitproc+0x7c>
  4047da:	3002      	adds	r0, #2
  4047dc:	6063      	str	r3, [r4, #4]
  4047de:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  4047e2:	2000      	movs	r0, #0
  4047e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4047e8:	4b14      	ldr	r3, [pc, #80]	; (40483c <__register_exitproc+0xa0>)
  4047ea:	b303      	cbz	r3, 40482e <__register_exitproc+0x92>
  4047ec:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4047f0:	f3af 8000 	nop.w
  4047f4:	4604      	mov	r4, r0
  4047f6:	b1d0      	cbz	r0, 40482e <__register_exitproc+0x92>
  4047f8:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  4047fc:	2700      	movs	r7, #0
  4047fe:	e880 0088 	stmia.w	r0, {r3, r7}
  404802:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404806:	4638      	mov	r0, r7
  404808:	2301      	movs	r3, #1
  40480a:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40480e:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  404812:	2e00      	cmp	r6, #0
  404814:	d0e1      	beq.n	4047da <__register_exitproc+0x3e>
  404816:	e7d1      	b.n	4047bc <__register_exitproc+0x20>
  404818:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  40481c:	430a      	orrs	r2, r1
  40481e:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  404822:	e7da      	b.n	4047da <__register_exitproc+0x3e>
  404824:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  404828:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  40482c:	e7c1      	b.n	4047b2 <__register_exitproc+0x16>
  40482e:	f04f 30ff 	mov.w	r0, #4294967295
  404832:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404836:	bf00      	nop
  404838:	00405c78 	.word	0x00405c78
  40483c:	00000000 	.word	0x00000000

00404840 <_calloc_r>:
  404840:	b510      	push	{r4, lr}
  404842:	fb02 f101 	mul.w	r1, r2, r1
  404846:	f7fe ffeb 	bl	403820 <_malloc_r>
  40484a:	4604      	mov	r4, r0
  40484c:	b1d8      	cbz	r0, 404886 <_calloc_r+0x46>
  40484e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404852:	f022 0203 	bic.w	r2, r2, #3
  404856:	3a04      	subs	r2, #4
  404858:	2a24      	cmp	r2, #36	; 0x24
  40485a:	d818      	bhi.n	40488e <_calloc_r+0x4e>
  40485c:	2a13      	cmp	r2, #19
  40485e:	d914      	bls.n	40488a <_calloc_r+0x4a>
  404860:	2300      	movs	r3, #0
  404862:	2a1b      	cmp	r2, #27
  404864:	6003      	str	r3, [r0, #0]
  404866:	6043      	str	r3, [r0, #4]
  404868:	d916      	bls.n	404898 <_calloc_r+0x58>
  40486a:	2a24      	cmp	r2, #36	; 0x24
  40486c:	6083      	str	r3, [r0, #8]
  40486e:	60c3      	str	r3, [r0, #12]
  404870:	bf11      	iteee	ne
  404872:	f100 0210 	addne.w	r2, r0, #16
  404876:	6103      	streq	r3, [r0, #16]
  404878:	6143      	streq	r3, [r0, #20]
  40487a:	f100 0218 	addeq.w	r2, r0, #24
  40487e:	2300      	movs	r3, #0
  404880:	6013      	str	r3, [r2, #0]
  404882:	6053      	str	r3, [r2, #4]
  404884:	6093      	str	r3, [r2, #8]
  404886:	4620      	mov	r0, r4
  404888:	bd10      	pop	{r4, pc}
  40488a:	4602      	mov	r2, r0
  40488c:	e7f7      	b.n	40487e <_calloc_r+0x3e>
  40488e:	2100      	movs	r1, #0
  404890:	f7fc fc1c 	bl	4010cc <memset>
  404894:	4620      	mov	r0, r4
  404896:	bd10      	pop	{r4, pc}
  404898:	f100 0208 	add.w	r2, r0, #8
  40489c:	e7ef      	b.n	40487e <_calloc_r+0x3e>
  40489e:	bf00      	nop

004048a0 <_malloc_trim_r>:
  4048a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4048a2:	4f23      	ldr	r7, [pc, #140]	; (404930 <_malloc_trim_r+0x90>)
  4048a4:	460c      	mov	r4, r1
  4048a6:	4606      	mov	r6, r0
  4048a8:	f7ff fb5c 	bl	403f64 <__malloc_lock>
  4048ac:	68bb      	ldr	r3, [r7, #8]
  4048ae:	685d      	ldr	r5, [r3, #4]
  4048b0:	f025 0503 	bic.w	r5, r5, #3
  4048b4:	1b29      	subs	r1, r5, r4
  4048b6:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  4048ba:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4048be:	f021 010f 	bic.w	r1, r1, #15
  4048c2:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4048c6:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4048ca:	db07      	blt.n	4048dc <_malloc_trim_r+0x3c>
  4048cc:	2100      	movs	r1, #0
  4048ce:	4630      	mov	r0, r6
  4048d0:	f7ff fe5a 	bl	404588 <_sbrk_r>
  4048d4:	68bb      	ldr	r3, [r7, #8]
  4048d6:	442b      	add	r3, r5
  4048d8:	4298      	cmp	r0, r3
  4048da:	d004      	beq.n	4048e6 <_malloc_trim_r+0x46>
  4048dc:	4630      	mov	r0, r6
  4048de:	f7ff fb43 	bl	403f68 <__malloc_unlock>
  4048e2:	2000      	movs	r0, #0
  4048e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4048e6:	4261      	negs	r1, r4
  4048e8:	4630      	mov	r0, r6
  4048ea:	f7ff fe4d 	bl	404588 <_sbrk_r>
  4048ee:	3001      	adds	r0, #1
  4048f0:	d00d      	beq.n	40490e <_malloc_trim_r+0x6e>
  4048f2:	4b10      	ldr	r3, [pc, #64]	; (404934 <_malloc_trim_r+0x94>)
  4048f4:	68ba      	ldr	r2, [r7, #8]
  4048f6:	6819      	ldr	r1, [r3, #0]
  4048f8:	1b2d      	subs	r5, r5, r4
  4048fa:	f045 0501 	orr.w	r5, r5, #1
  4048fe:	4630      	mov	r0, r6
  404900:	1b09      	subs	r1, r1, r4
  404902:	6055      	str	r5, [r2, #4]
  404904:	6019      	str	r1, [r3, #0]
  404906:	f7ff fb2f 	bl	403f68 <__malloc_unlock>
  40490a:	2001      	movs	r0, #1
  40490c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40490e:	2100      	movs	r1, #0
  404910:	4630      	mov	r0, r6
  404912:	f7ff fe39 	bl	404588 <_sbrk_r>
  404916:	68ba      	ldr	r2, [r7, #8]
  404918:	1a83      	subs	r3, r0, r2
  40491a:	2b0f      	cmp	r3, #15
  40491c:	ddde      	ble.n	4048dc <_malloc_trim_r+0x3c>
  40491e:	4c06      	ldr	r4, [pc, #24]	; (404938 <_malloc_trim_r+0x98>)
  404920:	4904      	ldr	r1, [pc, #16]	; (404934 <_malloc_trim_r+0x94>)
  404922:	6824      	ldr	r4, [r4, #0]
  404924:	f043 0301 	orr.w	r3, r3, #1
  404928:	1b00      	subs	r0, r0, r4
  40492a:	6053      	str	r3, [r2, #4]
  40492c:	6008      	str	r0, [r1, #0]
  40492e:	e7d5      	b.n	4048dc <_malloc_trim_r+0x3c>
  404930:	20000874 	.word	0x20000874
  404934:	20000d24 	.word	0x20000d24
  404938:	20000c80 	.word	0x20000c80

0040493c <_free_r>:
  40493c:	2900      	cmp	r1, #0
  40493e:	d045      	beq.n	4049cc <_free_r+0x90>
  404940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404944:	460d      	mov	r5, r1
  404946:	4680      	mov	r8, r0
  404948:	f7ff fb0c 	bl	403f64 <__malloc_lock>
  40494c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404950:	496a      	ldr	r1, [pc, #424]	; (404afc <_free_r+0x1c0>)
  404952:	f027 0301 	bic.w	r3, r7, #1
  404956:	f1a5 0408 	sub.w	r4, r5, #8
  40495a:	18e2      	adds	r2, r4, r3
  40495c:	688e      	ldr	r6, [r1, #8]
  40495e:	6850      	ldr	r0, [r2, #4]
  404960:	42b2      	cmp	r2, r6
  404962:	f020 0003 	bic.w	r0, r0, #3
  404966:	d062      	beq.n	404a2e <_free_r+0xf2>
  404968:	07fe      	lsls	r6, r7, #31
  40496a:	6050      	str	r0, [r2, #4]
  40496c:	d40b      	bmi.n	404986 <_free_r+0x4a>
  40496e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404972:	1be4      	subs	r4, r4, r7
  404974:	f101 0e08 	add.w	lr, r1, #8
  404978:	68a5      	ldr	r5, [r4, #8]
  40497a:	4575      	cmp	r5, lr
  40497c:	443b      	add	r3, r7
  40497e:	d06f      	beq.n	404a60 <_free_r+0x124>
  404980:	68e7      	ldr	r7, [r4, #12]
  404982:	60ef      	str	r7, [r5, #12]
  404984:	60bd      	str	r5, [r7, #8]
  404986:	1815      	adds	r5, r2, r0
  404988:	686d      	ldr	r5, [r5, #4]
  40498a:	07ed      	lsls	r5, r5, #31
  40498c:	d542      	bpl.n	404a14 <_free_r+0xd8>
  40498e:	f043 0201 	orr.w	r2, r3, #1
  404992:	6062      	str	r2, [r4, #4]
  404994:	50e3      	str	r3, [r4, r3]
  404996:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40499a:	d218      	bcs.n	4049ce <_free_r+0x92>
  40499c:	08db      	lsrs	r3, r3, #3
  40499e:	1c5a      	adds	r2, r3, #1
  4049a0:	684d      	ldr	r5, [r1, #4]
  4049a2:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  4049a6:	60a7      	str	r7, [r4, #8]
  4049a8:	2001      	movs	r0, #1
  4049aa:	109b      	asrs	r3, r3, #2
  4049ac:	fa00 f303 	lsl.w	r3, r0, r3
  4049b0:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  4049b4:	431d      	orrs	r5, r3
  4049b6:	3808      	subs	r0, #8
  4049b8:	60e0      	str	r0, [r4, #12]
  4049ba:	604d      	str	r5, [r1, #4]
  4049bc:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  4049c0:	60fc      	str	r4, [r7, #12]
  4049c2:	4640      	mov	r0, r8
  4049c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4049c8:	f7ff bace 	b.w	403f68 <__malloc_unlock>
  4049cc:	4770      	bx	lr
  4049ce:	0a5a      	lsrs	r2, r3, #9
  4049d0:	2a04      	cmp	r2, #4
  4049d2:	d853      	bhi.n	404a7c <_free_r+0x140>
  4049d4:	099a      	lsrs	r2, r3, #6
  4049d6:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4049da:	007f      	lsls	r7, r7, #1
  4049dc:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4049e0:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  4049e4:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  4049e8:	4944      	ldr	r1, [pc, #272]	; (404afc <_free_r+0x1c0>)
  4049ea:	3808      	subs	r0, #8
  4049ec:	4290      	cmp	r0, r2
  4049ee:	d04d      	beq.n	404a8c <_free_r+0x150>
  4049f0:	6851      	ldr	r1, [r2, #4]
  4049f2:	f021 0103 	bic.w	r1, r1, #3
  4049f6:	428b      	cmp	r3, r1
  4049f8:	d202      	bcs.n	404a00 <_free_r+0xc4>
  4049fa:	6892      	ldr	r2, [r2, #8]
  4049fc:	4290      	cmp	r0, r2
  4049fe:	d1f7      	bne.n	4049f0 <_free_r+0xb4>
  404a00:	68d0      	ldr	r0, [r2, #12]
  404a02:	60e0      	str	r0, [r4, #12]
  404a04:	60a2      	str	r2, [r4, #8]
  404a06:	6084      	str	r4, [r0, #8]
  404a08:	60d4      	str	r4, [r2, #12]
  404a0a:	4640      	mov	r0, r8
  404a0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404a10:	f7ff baaa 	b.w	403f68 <__malloc_unlock>
  404a14:	6895      	ldr	r5, [r2, #8]
  404a16:	4f3a      	ldr	r7, [pc, #232]	; (404b00 <_free_r+0x1c4>)
  404a18:	42bd      	cmp	r5, r7
  404a1a:	4403      	add	r3, r0
  404a1c:	d03f      	beq.n	404a9e <_free_r+0x162>
  404a1e:	68d0      	ldr	r0, [r2, #12]
  404a20:	60e8      	str	r0, [r5, #12]
  404a22:	f043 0201 	orr.w	r2, r3, #1
  404a26:	6085      	str	r5, [r0, #8]
  404a28:	6062      	str	r2, [r4, #4]
  404a2a:	50e3      	str	r3, [r4, r3]
  404a2c:	e7b3      	b.n	404996 <_free_r+0x5a>
  404a2e:	07ff      	lsls	r7, r7, #31
  404a30:	4403      	add	r3, r0
  404a32:	d407      	bmi.n	404a44 <_free_r+0x108>
  404a34:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404a38:	1aa4      	subs	r4, r4, r2
  404a3a:	4413      	add	r3, r2
  404a3c:	68a0      	ldr	r0, [r4, #8]
  404a3e:	68e2      	ldr	r2, [r4, #12]
  404a40:	60c2      	str	r2, [r0, #12]
  404a42:	6090      	str	r0, [r2, #8]
  404a44:	4a2f      	ldr	r2, [pc, #188]	; (404b04 <_free_r+0x1c8>)
  404a46:	6812      	ldr	r2, [r2, #0]
  404a48:	f043 0001 	orr.w	r0, r3, #1
  404a4c:	4293      	cmp	r3, r2
  404a4e:	6060      	str	r0, [r4, #4]
  404a50:	608c      	str	r4, [r1, #8]
  404a52:	d3b6      	bcc.n	4049c2 <_free_r+0x86>
  404a54:	4b2c      	ldr	r3, [pc, #176]	; (404b08 <_free_r+0x1cc>)
  404a56:	4640      	mov	r0, r8
  404a58:	6819      	ldr	r1, [r3, #0]
  404a5a:	f7ff ff21 	bl	4048a0 <_malloc_trim_r>
  404a5e:	e7b0      	b.n	4049c2 <_free_r+0x86>
  404a60:	1811      	adds	r1, r2, r0
  404a62:	6849      	ldr	r1, [r1, #4]
  404a64:	07c9      	lsls	r1, r1, #31
  404a66:	d444      	bmi.n	404af2 <_free_r+0x1b6>
  404a68:	6891      	ldr	r1, [r2, #8]
  404a6a:	68d2      	ldr	r2, [r2, #12]
  404a6c:	60ca      	str	r2, [r1, #12]
  404a6e:	4403      	add	r3, r0
  404a70:	f043 0001 	orr.w	r0, r3, #1
  404a74:	6091      	str	r1, [r2, #8]
  404a76:	6060      	str	r0, [r4, #4]
  404a78:	50e3      	str	r3, [r4, r3]
  404a7a:	e7a2      	b.n	4049c2 <_free_r+0x86>
  404a7c:	2a14      	cmp	r2, #20
  404a7e:	d817      	bhi.n	404ab0 <_free_r+0x174>
  404a80:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404a84:	007f      	lsls	r7, r7, #1
  404a86:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404a8a:	e7a9      	b.n	4049e0 <_free_r+0xa4>
  404a8c:	10aa      	asrs	r2, r5, #2
  404a8e:	684b      	ldr	r3, [r1, #4]
  404a90:	2501      	movs	r5, #1
  404a92:	fa05 f202 	lsl.w	r2, r5, r2
  404a96:	4313      	orrs	r3, r2
  404a98:	604b      	str	r3, [r1, #4]
  404a9a:	4602      	mov	r2, r0
  404a9c:	e7b1      	b.n	404a02 <_free_r+0xc6>
  404a9e:	f043 0201 	orr.w	r2, r3, #1
  404aa2:	614c      	str	r4, [r1, #20]
  404aa4:	610c      	str	r4, [r1, #16]
  404aa6:	60e5      	str	r5, [r4, #12]
  404aa8:	60a5      	str	r5, [r4, #8]
  404aaa:	6062      	str	r2, [r4, #4]
  404aac:	50e3      	str	r3, [r4, r3]
  404aae:	e788      	b.n	4049c2 <_free_r+0x86>
  404ab0:	2a54      	cmp	r2, #84	; 0x54
  404ab2:	d806      	bhi.n	404ac2 <_free_r+0x186>
  404ab4:	0b1a      	lsrs	r2, r3, #12
  404ab6:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404aba:	007f      	lsls	r7, r7, #1
  404abc:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404ac0:	e78e      	b.n	4049e0 <_free_r+0xa4>
  404ac2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404ac6:	d806      	bhi.n	404ad6 <_free_r+0x19a>
  404ac8:	0bda      	lsrs	r2, r3, #15
  404aca:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404ace:	007f      	lsls	r7, r7, #1
  404ad0:	f102 0577 	add.w	r5, r2, #119	; 0x77
  404ad4:	e784      	b.n	4049e0 <_free_r+0xa4>
  404ad6:	f240 5054 	movw	r0, #1364	; 0x554
  404ada:	4282      	cmp	r2, r0
  404adc:	d806      	bhi.n	404aec <_free_r+0x1b0>
  404ade:	0c9a      	lsrs	r2, r3, #18
  404ae0:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  404ae4:	007f      	lsls	r7, r7, #1
  404ae6:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404aea:	e779      	b.n	4049e0 <_free_r+0xa4>
  404aec:	27fe      	movs	r7, #254	; 0xfe
  404aee:	257e      	movs	r5, #126	; 0x7e
  404af0:	e776      	b.n	4049e0 <_free_r+0xa4>
  404af2:	f043 0201 	orr.w	r2, r3, #1
  404af6:	6062      	str	r2, [r4, #4]
  404af8:	50e3      	str	r3, [r4, r3]
  404afa:	e762      	b.n	4049c2 <_free_r+0x86>
  404afc:	20000874 	.word	0x20000874
  404b00:	2000087c 	.word	0x2000087c
  404b04:	20000c7c 	.word	0x20000c7c
  404b08:	20000d20 	.word	0x20000d20

00404b0c <memmove>:
  404b0c:	4288      	cmp	r0, r1
  404b0e:	b5f0      	push	{r4, r5, r6, r7, lr}
  404b10:	d90d      	bls.n	404b2e <memmove+0x22>
  404b12:	188b      	adds	r3, r1, r2
  404b14:	4298      	cmp	r0, r3
  404b16:	d20a      	bcs.n	404b2e <memmove+0x22>
  404b18:	1881      	adds	r1, r0, r2
  404b1a:	2a00      	cmp	r2, #0
  404b1c:	d051      	beq.n	404bc2 <memmove+0xb6>
  404b1e:	1a9a      	subs	r2, r3, r2
  404b20:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  404b24:	f801 4d01 	strb.w	r4, [r1, #-1]!
  404b28:	4293      	cmp	r3, r2
  404b2a:	d1f9      	bne.n	404b20 <memmove+0x14>
  404b2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404b2e:	2a0f      	cmp	r2, #15
  404b30:	d948      	bls.n	404bc4 <memmove+0xb8>
  404b32:	ea41 0300 	orr.w	r3, r1, r0
  404b36:	079b      	lsls	r3, r3, #30
  404b38:	d146      	bne.n	404bc8 <memmove+0xbc>
  404b3a:	f100 0410 	add.w	r4, r0, #16
  404b3e:	f101 0310 	add.w	r3, r1, #16
  404b42:	4615      	mov	r5, r2
  404b44:	f853 6c10 	ldr.w	r6, [r3, #-16]
  404b48:	f844 6c10 	str.w	r6, [r4, #-16]
  404b4c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  404b50:	f844 6c0c 	str.w	r6, [r4, #-12]
  404b54:	f853 6c08 	ldr.w	r6, [r3, #-8]
  404b58:	f844 6c08 	str.w	r6, [r4, #-8]
  404b5c:	3d10      	subs	r5, #16
  404b5e:	f853 6c04 	ldr.w	r6, [r3, #-4]
  404b62:	f844 6c04 	str.w	r6, [r4, #-4]
  404b66:	2d0f      	cmp	r5, #15
  404b68:	f103 0310 	add.w	r3, r3, #16
  404b6c:	f104 0410 	add.w	r4, r4, #16
  404b70:	d8e8      	bhi.n	404b44 <memmove+0x38>
  404b72:	f1a2 0310 	sub.w	r3, r2, #16
  404b76:	f023 030f 	bic.w	r3, r3, #15
  404b7a:	f002 0e0f 	and.w	lr, r2, #15
  404b7e:	3310      	adds	r3, #16
  404b80:	f1be 0f03 	cmp.w	lr, #3
  404b84:	4419      	add	r1, r3
  404b86:	4403      	add	r3, r0
  404b88:	d921      	bls.n	404bce <memmove+0xc2>
  404b8a:	1f1e      	subs	r6, r3, #4
  404b8c:	460d      	mov	r5, r1
  404b8e:	4674      	mov	r4, lr
  404b90:	3c04      	subs	r4, #4
  404b92:	f855 7b04 	ldr.w	r7, [r5], #4
  404b96:	f846 7f04 	str.w	r7, [r6, #4]!
  404b9a:	2c03      	cmp	r4, #3
  404b9c:	d8f8      	bhi.n	404b90 <memmove+0x84>
  404b9e:	f1ae 0404 	sub.w	r4, lr, #4
  404ba2:	f024 0403 	bic.w	r4, r4, #3
  404ba6:	3404      	adds	r4, #4
  404ba8:	4423      	add	r3, r4
  404baa:	4421      	add	r1, r4
  404bac:	f002 0203 	and.w	r2, r2, #3
  404bb0:	b162      	cbz	r2, 404bcc <memmove+0xc0>
  404bb2:	3b01      	subs	r3, #1
  404bb4:	440a      	add	r2, r1
  404bb6:	f811 4b01 	ldrb.w	r4, [r1], #1
  404bba:	f803 4f01 	strb.w	r4, [r3, #1]!
  404bbe:	428a      	cmp	r2, r1
  404bc0:	d1f9      	bne.n	404bb6 <memmove+0xaa>
  404bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404bc4:	4603      	mov	r3, r0
  404bc6:	e7f3      	b.n	404bb0 <memmove+0xa4>
  404bc8:	4603      	mov	r3, r0
  404bca:	e7f2      	b.n	404bb2 <memmove+0xa6>
  404bcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404bce:	4672      	mov	r2, lr
  404bd0:	e7ee      	b.n	404bb0 <memmove+0xa4>
  404bd2:	bf00      	nop

00404bd4 <_realloc_r>:
  404bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404bd8:	4617      	mov	r7, r2
  404bda:	b083      	sub	sp, #12
  404bdc:	2900      	cmp	r1, #0
  404bde:	f000 80c1 	beq.w	404d64 <_realloc_r+0x190>
  404be2:	460e      	mov	r6, r1
  404be4:	4681      	mov	r9, r0
  404be6:	f107 050b 	add.w	r5, r7, #11
  404bea:	f7ff f9bb 	bl	403f64 <__malloc_lock>
  404bee:	f856 ec04 	ldr.w	lr, [r6, #-4]
  404bf2:	2d16      	cmp	r5, #22
  404bf4:	f02e 0403 	bic.w	r4, lr, #3
  404bf8:	f1a6 0808 	sub.w	r8, r6, #8
  404bfc:	d840      	bhi.n	404c80 <_realloc_r+0xac>
  404bfe:	2210      	movs	r2, #16
  404c00:	4615      	mov	r5, r2
  404c02:	42af      	cmp	r7, r5
  404c04:	d841      	bhi.n	404c8a <_realloc_r+0xb6>
  404c06:	4294      	cmp	r4, r2
  404c08:	da75      	bge.n	404cf6 <_realloc_r+0x122>
  404c0a:	4bc9      	ldr	r3, [pc, #804]	; (404f30 <_realloc_r+0x35c>)
  404c0c:	6899      	ldr	r1, [r3, #8]
  404c0e:	eb08 0004 	add.w	r0, r8, r4
  404c12:	4288      	cmp	r0, r1
  404c14:	6841      	ldr	r1, [r0, #4]
  404c16:	f000 80d9 	beq.w	404dcc <_realloc_r+0x1f8>
  404c1a:	f021 0301 	bic.w	r3, r1, #1
  404c1e:	4403      	add	r3, r0
  404c20:	685b      	ldr	r3, [r3, #4]
  404c22:	07db      	lsls	r3, r3, #31
  404c24:	d57d      	bpl.n	404d22 <_realloc_r+0x14e>
  404c26:	f01e 0f01 	tst.w	lr, #1
  404c2a:	d035      	beq.n	404c98 <_realloc_r+0xc4>
  404c2c:	4639      	mov	r1, r7
  404c2e:	4648      	mov	r0, r9
  404c30:	f7fe fdf6 	bl	403820 <_malloc_r>
  404c34:	4607      	mov	r7, r0
  404c36:	b1e0      	cbz	r0, 404c72 <_realloc_r+0x9e>
  404c38:	f856 3c04 	ldr.w	r3, [r6, #-4]
  404c3c:	f023 0301 	bic.w	r3, r3, #1
  404c40:	4443      	add	r3, r8
  404c42:	f1a0 0208 	sub.w	r2, r0, #8
  404c46:	429a      	cmp	r2, r3
  404c48:	f000 8144 	beq.w	404ed4 <_realloc_r+0x300>
  404c4c:	1f22      	subs	r2, r4, #4
  404c4e:	2a24      	cmp	r2, #36	; 0x24
  404c50:	f200 8131 	bhi.w	404eb6 <_realloc_r+0x2e2>
  404c54:	2a13      	cmp	r2, #19
  404c56:	f200 8104 	bhi.w	404e62 <_realloc_r+0x28e>
  404c5a:	4603      	mov	r3, r0
  404c5c:	4632      	mov	r2, r6
  404c5e:	6811      	ldr	r1, [r2, #0]
  404c60:	6019      	str	r1, [r3, #0]
  404c62:	6851      	ldr	r1, [r2, #4]
  404c64:	6059      	str	r1, [r3, #4]
  404c66:	6892      	ldr	r2, [r2, #8]
  404c68:	609a      	str	r2, [r3, #8]
  404c6a:	4631      	mov	r1, r6
  404c6c:	4648      	mov	r0, r9
  404c6e:	f7ff fe65 	bl	40493c <_free_r>
  404c72:	4648      	mov	r0, r9
  404c74:	f7ff f978 	bl	403f68 <__malloc_unlock>
  404c78:	4638      	mov	r0, r7
  404c7a:	b003      	add	sp, #12
  404c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c80:	f025 0507 	bic.w	r5, r5, #7
  404c84:	2d00      	cmp	r5, #0
  404c86:	462a      	mov	r2, r5
  404c88:	dabb      	bge.n	404c02 <_realloc_r+0x2e>
  404c8a:	230c      	movs	r3, #12
  404c8c:	2000      	movs	r0, #0
  404c8e:	f8c9 3000 	str.w	r3, [r9]
  404c92:	b003      	add	sp, #12
  404c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c98:	f856 3c08 	ldr.w	r3, [r6, #-8]
  404c9c:	ebc3 0a08 	rsb	sl, r3, r8
  404ca0:	f8da 3004 	ldr.w	r3, [sl, #4]
  404ca4:	f023 0c03 	bic.w	ip, r3, #3
  404ca8:	eb04 030c 	add.w	r3, r4, ip
  404cac:	4293      	cmp	r3, r2
  404cae:	dbbd      	blt.n	404c2c <_realloc_r+0x58>
  404cb0:	4657      	mov	r7, sl
  404cb2:	f8da 100c 	ldr.w	r1, [sl, #12]
  404cb6:	f857 0f08 	ldr.w	r0, [r7, #8]!
  404cba:	1f22      	subs	r2, r4, #4
  404cbc:	2a24      	cmp	r2, #36	; 0x24
  404cbe:	60c1      	str	r1, [r0, #12]
  404cc0:	6088      	str	r0, [r1, #8]
  404cc2:	f200 8117 	bhi.w	404ef4 <_realloc_r+0x320>
  404cc6:	2a13      	cmp	r2, #19
  404cc8:	f240 8112 	bls.w	404ef0 <_realloc_r+0x31c>
  404ccc:	6831      	ldr	r1, [r6, #0]
  404cce:	f8ca 1008 	str.w	r1, [sl, #8]
  404cd2:	6871      	ldr	r1, [r6, #4]
  404cd4:	f8ca 100c 	str.w	r1, [sl, #12]
  404cd8:	2a1b      	cmp	r2, #27
  404cda:	f200 812b 	bhi.w	404f34 <_realloc_r+0x360>
  404cde:	3608      	adds	r6, #8
  404ce0:	f10a 0210 	add.w	r2, sl, #16
  404ce4:	6831      	ldr	r1, [r6, #0]
  404ce6:	6011      	str	r1, [r2, #0]
  404ce8:	6871      	ldr	r1, [r6, #4]
  404cea:	6051      	str	r1, [r2, #4]
  404cec:	68b1      	ldr	r1, [r6, #8]
  404cee:	6091      	str	r1, [r2, #8]
  404cf0:	463e      	mov	r6, r7
  404cf2:	461c      	mov	r4, r3
  404cf4:	46d0      	mov	r8, sl
  404cf6:	1b63      	subs	r3, r4, r5
  404cf8:	2b0f      	cmp	r3, #15
  404cfa:	d81d      	bhi.n	404d38 <_realloc_r+0x164>
  404cfc:	f8d8 3004 	ldr.w	r3, [r8, #4]
  404d00:	f003 0301 	and.w	r3, r3, #1
  404d04:	4323      	orrs	r3, r4
  404d06:	4444      	add	r4, r8
  404d08:	f8c8 3004 	str.w	r3, [r8, #4]
  404d0c:	6863      	ldr	r3, [r4, #4]
  404d0e:	f043 0301 	orr.w	r3, r3, #1
  404d12:	6063      	str	r3, [r4, #4]
  404d14:	4648      	mov	r0, r9
  404d16:	f7ff f927 	bl	403f68 <__malloc_unlock>
  404d1a:	4630      	mov	r0, r6
  404d1c:	b003      	add	sp, #12
  404d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d22:	f021 0103 	bic.w	r1, r1, #3
  404d26:	4421      	add	r1, r4
  404d28:	4291      	cmp	r1, r2
  404d2a:	db21      	blt.n	404d70 <_realloc_r+0x19c>
  404d2c:	68c3      	ldr	r3, [r0, #12]
  404d2e:	6882      	ldr	r2, [r0, #8]
  404d30:	460c      	mov	r4, r1
  404d32:	60d3      	str	r3, [r2, #12]
  404d34:	609a      	str	r2, [r3, #8]
  404d36:	e7de      	b.n	404cf6 <_realloc_r+0x122>
  404d38:	f8d8 2004 	ldr.w	r2, [r8, #4]
  404d3c:	eb08 0105 	add.w	r1, r8, r5
  404d40:	f002 0201 	and.w	r2, r2, #1
  404d44:	4315      	orrs	r5, r2
  404d46:	f043 0201 	orr.w	r2, r3, #1
  404d4a:	440b      	add	r3, r1
  404d4c:	f8c8 5004 	str.w	r5, [r8, #4]
  404d50:	604a      	str	r2, [r1, #4]
  404d52:	685a      	ldr	r2, [r3, #4]
  404d54:	f042 0201 	orr.w	r2, r2, #1
  404d58:	3108      	adds	r1, #8
  404d5a:	605a      	str	r2, [r3, #4]
  404d5c:	4648      	mov	r0, r9
  404d5e:	f7ff fded 	bl	40493c <_free_r>
  404d62:	e7d7      	b.n	404d14 <_realloc_r+0x140>
  404d64:	4611      	mov	r1, r2
  404d66:	b003      	add	sp, #12
  404d68:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d6c:	f7fe bd58 	b.w	403820 <_malloc_r>
  404d70:	f01e 0f01 	tst.w	lr, #1
  404d74:	f47f af5a 	bne.w	404c2c <_realloc_r+0x58>
  404d78:	f856 3c08 	ldr.w	r3, [r6, #-8]
  404d7c:	ebc3 0a08 	rsb	sl, r3, r8
  404d80:	f8da 3004 	ldr.w	r3, [sl, #4]
  404d84:	f023 0c03 	bic.w	ip, r3, #3
  404d88:	eb01 0e0c 	add.w	lr, r1, ip
  404d8c:	4596      	cmp	lr, r2
  404d8e:	db8b      	blt.n	404ca8 <_realloc_r+0xd4>
  404d90:	68c3      	ldr	r3, [r0, #12]
  404d92:	6882      	ldr	r2, [r0, #8]
  404d94:	4657      	mov	r7, sl
  404d96:	60d3      	str	r3, [r2, #12]
  404d98:	609a      	str	r2, [r3, #8]
  404d9a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  404d9e:	f8da 300c 	ldr.w	r3, [sl, #12]
  404da2:	60cb      	str	r3, [r1, #12]
  404da4:	1f22      	subs	r2, r4, #4
  404da6:	2a24      	cmp	r2, #36	; 0x24
  404da8:	6099      	str	r1, [r3, #8]
  404daa:	f200 8099 	bhi.w	404ee0 <_realloc_r+0x30c>
  404dae:	2a13      	cmp	r2, #19
  404db0:	d962      	bls.n	404e78 <_realloc_r+0x2a4>
  404db2:	6833      	ldr	r3, [r6, #0]
  404db4:	f8ca 3008 	str.w	r3, [sl, #8]
  404db8:	6873      	ldr	r3, [r6, #4]
  404dba:	f8ca 300c 	str.w	r3, [sl, #12]
  404dbe:	2a1b      	cmp	r2, #27
  404dc0:	f200 80a0 	bhi.w	404f04 <_realloc_r+0x330>
  404dc4:	3608      	adds	r6, #8
  404dc6:	f10a 0310 	add.w	r3, sl, #16
  404dca:	e056      	b.n	404e7a <_realloc_r+0x2a6>
  404dcc:	f021 0b03 	bic.w	fp, r1, #3
  404dd0:	44a3      	add	fp, r4
  404dd2:	f105 0010 	add.w	r0, r5, #16
  404dd6:	4583      	cmp	fp, r0
  404dd8:	da59      	bge.n	404e8e <_realloc_r+0x2ba>
  404dda:	f01e 0f01 	tst.w	lr, #1
  404dde:	f47f af25 	bne.w	404c2c <_realloc_r+0x58>
  404de2:	f856 1c08 	ldr.w	r1, [r6, #-8]
  404de6:	ebc1 0a08 	rsb	sl, r1, r8
  404dea:	f8da 1004 	ldr.w	r1, [sl, #4]
  404dee:	f021 0c03 	bic.w	ip, r1, #3
  404df2:	44e3      	add	fp, ip
  404df4:	4558      	cmp	r0, fp
  404df6:	f73f af57 	bgt.w	404ca8 <_realloc_r+0xd4>
  404dfa:	4657      	mov	r7, sl
  404dfc:	f8da 100c 	ldr.w	r1, [sl, #12]
  404e00:	f857 0f08 	ldr.w	r0, [r7, #8]!
  404e04:	1f22      	subs	r2, r4, #4
  404e06:	2a24      	cmp	r2, #36	; 0x24
  404e08:	60c1      	str	r1, [r0, #12]
  404e0a:	6088      	str	r0, [r1, #8]
  404e0c:	f200 80b4 	bhi.w	404f78 <_realloc_r+0x3a4>
  404e10:	2a13      	cmp	r2, #19
  404e12:	f240 80a5 	bls.w	404f60 <_realloc_r+0x38c>
  404e16:	6831      	ldr	r1, [r6, #0]
  404e18:	f8ca 1008 	str.w	r1, [sl, #8]
  404e1c:	6871      	ldr	r1, [r6, #4]
  404e1e:	f8ca 100c 	str.w	r1, [sl, #12]
  404e22:	2a1b      	cmp	r2, #27
  404e24:	f200 80af 	bhi.w	404f86 <_realloc_r+0x3b2>
  404e28:	3608      	adds	r6, #8
  404e2a:	f10a 0210 	add.w	r2, sl, #16
  404e2e:	6831      	ldr	r1, [r6, #0]
  404e30:	6011      	str	r1, [r2, #0]
  404e32:	6871      	ldr	r1, [r6, #4]
  404e34:	6051      	str	r1, [r2, #4]
  404e36:	68b1      	ldr	r1, [r6, #8]
  404e38:	6091      	str	r1, [r2, #8]
  404e3a:	eb0a 0105 	add.w	r1, sl, r5
  404e3e:	ebc5 020b 	rsb	r2, r5, fp
  404e42:	f042 0201 	orr.w	r2, r2, #1
  404e46:	6099      	str	r1, [r3, #8]
  404e48:	604a      	str	r2, [r1, #4]
  404e4a:	f8da 3004 	ldr.w	r3, [sl, #4]
  404e4e:	f003 0301 	and.w	r3, r3, #1
  404e52:	431d      	orrs	r5, r3
  404e54:	4648      	mov	r0, r9
  404e56:	f8ca 5004 	str.w	r5, [sl, #4]
  404e5a:	f7ff f885 	bl	403f68 <__malloc_unlock>
  404e5e:	4638      	mov	r0, r7
  404e60:	e75c      	b.n	404d1c <_realloc_r+0x148>
  404e62:	6833      	ldr	r3, [r6, #0]
  404e64:	6003      	str	r3, [r0, #0]
  404e66:	6873      	ldr	r3, [r6, #4]
  404e68:	6043      	str	r3, [r0, #4]
  404e6a:	2a1b      	cmp	r2, #27
  404e6c:	d827      	bhi.n	404ebe <_realloc_r+0x2ea>
  404e6e:	f100 0308 	add.w	r3, r0, #8
  404e72:	f106 0208 	add.w	r2, r6, #8
  404e76:	e6f2      	b.n	404c5e <_realloc_r+0x8a>
  404e78:	463b      	mov	r3, r7
  404e7a:	6832      	ldr	r2, [r6, #0]
  404e7c:	601a      	str	r2, [r3, #0]
  404e7e:	6872      	ldr	r2, [r6, #4]
  404e80:	605a      	str	r2, [r3, #4]
  404e82:	68b2      	ldr	r2, [r6, #8]
  404e84:	609a      	str	r2, [r3, #8]
  404e86:	463e      	mov	r6, r7
  404e88:	4674      	mov	r4, lr
  404e8a:	46d0      	mov	r8, sl
  404e8c:	e733      	b.n	404cf6 <_realloc_r+0x122>
  404e8e:	eb08 0105 	add.w	r1, r8, r5
  404e92:	ebc5 0b0b 	rsb	fp, r5, fp
  404e96:	f04b 0201 	orr.w	r2, fp, #1
  404e9a:	6099      	str	r1, [r3, #8]
  404e9c:	604a      	str	r2, [r1, #4]
  404e9e:	f856 3c04 	ldr.w	r3, [r6, #-4]
  404ea2:	f003 0301 	and.w	r3, r3, #1
  404ea6:	431d      	orrs	r5, r3
  404ea8:	4648      	mov	r0, r9
  404eaa:	f846 5c04 	str.w	r5, [r6, #-4]
  404eae:	f7ff f85b 	bl	403f68 <__malloc_unlock>
  404eb2:	4630      	mov	r0, r6
  404eb4:	e732      	b.n	404d1c <_realloc_r+0x148>
  404eb6:	4631      	mov	r1, r6
  404eb8:	f7ff fe28 	bl	404b0c <memmove>
  404ebc:	e6d5      	b.n	404c6a <_realloc_r+0x96>
  404ebe:	68b3      	ldr	r3, [r6, #8]
  404ec0:	6083      	str	r3, [r0, #8]
  404ec2:	68f3      	ldr	r3, [r6, #12]
  404ec4:	60c3      	str	r3, [r0, #12]
  404ec6:	2a24      	cmp	r2, #36	; 0x24
  404ec8:	d028      	beq.n	404f1c <_realloc_r+0x348>
  404eca:	f100 0310 	add.w	r3, r0, #16
  404ece:	f106 0210 	add.w	r2, r6, #16
  404ed2:	e6c4      	b.n	404c5e <_realloc_r+0x8a>
  404ed4:	f850 3c04 	ldr.w	r3, [r0, #-4]
  404ed8:	f023 0303 	bic.w	r3, r3, #3
  404edc:	441c      	add	r4, r3
  404ede:	e70a      	b.n	404cf6 <_realloc_r+0x122>
  404ee0:	4631      	mov	r1, r6
  404ee2:	4638      	mov	r0, r7
  404ee4:	4674      	mov	r4, lr
  404ee6:	46d0      	mov	r8, sl
  404ee8:	f7ff fe10 	bl	404b0c <memmove>
  404eec:	463e      	mov	r6, r7
  404eee:	e702      	b.n	404cf6 <_realloc_r+0x122>
  404ef0:	463a      	mov	r2, r7
  404ef2:	e6f7      	b.n	404ce4 <_realloc_r+0x110>
  404ef4:	4631      	mov	r1, r6
  404ef6:	4638      	mov	r0, r7
  404ef8:	461c      	mov	r4, r3
  404efa:	46d0      	mov	r8, sl
  404efc:	f7ff fe06 	bl	404b0c <memmove>
  404f00:	463e      	mov	r6, r7
  404f02:	e6f8      	b.n	404cf6 <_realloc_r+0x122>
  404f04:	68b3      	ldr	r3, [r6, #8]
  404f06:	f8ca 3010 	str.w	r3, [sl, #16]
  404f0a:	68f3      	ldr	r3, [r6, #12]
  404f0c:	f8ca 3014 	str.w	r3, [sl, #20]
  404f10:	2a24      	cmp	r2, #36	; 0x24
  404f12:	d01b      	beq.n	404f4c <_realloc_r+0x378>
  404f14:	3610      	adds	r6, #16
  404f16:	f10a 0318 	add.w	r3, sl, #24
  404f1a:	e7ae      	b.n	404e7a <_realloc_r+0x2a6>
  404f1c:	6933      	ldr	r3, [r6, #16]
  404f1e:	6103      	str	r3, [r0, #16]
  404f20:	6973      	ldr	r3, [r6, #20]
  404f22:	6143      	str	r3, [r0, #20]
  404f24:	f106 0218 	add.w	r2, r6, #24
  404f28:	f100 0318 	add.w	r3, r0, #24
  404f2c:	e697      	b.n	404c5e <_realloc_r+0x8a>
  404f2e:	bf00      	nop
  404f30:	20000874 	.word	0x20000874
  404f34:	68b1      	ldr	r1, [r6, #8]
  404f36:	f8ca 1010 	str.w	r1, [sl, #16]
  404f3a:	68f1      	ldr	r1, [r6, #12]
  404f3c:	f8ca 1014 	str.w	r1, [sl, #20]
  404f40:	2a24      	cmp	r2, #36	; 0x24
  404f42:	d00f      	beq.n	404f64 <_realloc_r+0x390>
  404f44:	3610      	adds	r6, #16
  404f46:	f10a 0218 	add.w	r2, sl, #24
  404f4a:	e6cb      	b.n	404ce4 <_realloc_r+0x110>
  404f4c:	6933      	ldr	r3, [r6, #16]
  404f4e:	f8ca 3018 	str.w	r3, [sl, #24]
  404f52:	6973      	ldr	r3, [r6, #20]
  404f54:	f8ca 301c 	str.w	r3, [sl, #28]
  404f58:	3618      	adds	r6, #24
  404f5a:	f10a 0320 	add.w	r3, sl, #32
  404f5e:	e78c      	b.n	404e7a <_realloc_r+0x2a6>
  404f60:	463a      	mov	r2, r7
  404f62:	e764      	b.n	404e2e <_realloc_r+0x25a>
  404f64:	6932      	ldr	r2, [r6, #16]
  404f66:	f8ca 2018 	str.w	r2, [sl, #24]
  404f6a:	6972      	ldr	r2, [r6, #20]
  404f6c:	f8ca 201c 	str.w	r2, [sl, #28]
  404f70:	3618      	adds	r6, #24
  404f72:	f10a 0220 	add.w	r2, sl, #32
  404f76:	e6b5      	b.n	404ce4 <_realloc_r+0x110>
  404f78:	4631      	mov	r1, r6
  404f7a:	4638      	mov	r0, r7
  404f7c:	9301      	str	r3, [sp, #4]
  404f7e:	f7ff fdc5 	bl	404b0c <memmove>
  404f82:	9b01      	ldr	r3, [sp, #4]
  404f84:	e759      	b.n	404e3a <_realloc_r+0x266>
  404f86:	68b1      	ldr	r1, [r6, #8]
  404f88:	f8ca 1010 	str.w	r1, [sl, #16]
  404f8c:	68f1      	ldr	r1, [r6, #12]
  404f8e:	f8ca 1014 	str.w	r1, [sl, #20]
  404f92:	2a24      	cmp	r2, #36	; 0x24
  404f94:	d003      	beq.n	404f9e <_realloc_r+0x3ca>
  404f96:	3610      	adds	r6, #16
  404f98:	f10a 0218 	add.w	r2, sl, #24
  404f9c:	e747      	b.n	404e2e <_realloc_r+0x25a>
  404f9e:	6932      	ldr	r2, [r6, #16]
  404fa0:	f8ca 2018 	str.w	r2, [sl, #24]
  404fa4:	6972      	ldr	r2, [r6, #20]
  404fa6:	f8ca 201c 	str.w	r2, [sl, #28]
  404faa:	3618      	adds	r6, #24
  404fac:	f10a 0220 	add.w	r2, sl, #32
  404fb0:	e73d      	b.n	404e2e <_realloc_r+0x25a>
  404fb2:	bf00      	nop

00404fb4 <__aeabi_drsub>:
  404fb4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  404fb8:	e002      	b.n	404fc0 <__adddf3>
  404fba:	bf00      	nop

00404fbc <__aeabi_dsub>:
  404fbc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00404fc0 <__adddf3>:
  404fc0:	b530      	push	{r4, r5, lr}
  404fc2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  404fc6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  404fca:	ea94 0f05 	teq	r4, r5
  404fce:	bf08      	it	eq
  404fd0:	ea90 0f02 	teqeq	r0, r2
  404fd4:	bf1f      	itttt	ne
  404fd6:	ea54 0c00 	orrsne.w	ip, r4, r0
  404fda:	ea55 0c02 	orrsne.w	ip, r5, r2
  404fde:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  404fe2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  404fe6:	f000 80e2 	beq.w	4051ae <__adddf3+0x1ee>
  404fea:	ea4f 5454 	mov.w	r4, r4, lsr #21
  404fee:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  404ff2:	bfb8      	it	lt
  404ff4:	426d      	neglt	r5, r5
  404ff6:	dd0c      	ble.n	405012 <__adddf3+0x52>
  404ff8:	442c      	add	r4, r5
  404ffa:	ea80 0202 	eor.w	r2, r0, r2
  404ffe:	ea81 0303 	eor.w	r3, r1, r3
  405002:	ea82 0000 	eor.w	r0, r2, r0
  405006:	ea83 0101 	eor.w	r1, r3, r1
  40500a:	ea80 0202 	eor.w	r2, r0, r2
  40500e:	ea81 0303 	eor.w	r3, r1, r3
  405012:	2d36      	cmp	r5, #54	; 0x36
  405014:	bf88      	it	hi
  405016:	bd30      	pophi	{r4, r5, pc}
  405018:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40501c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405020:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405024:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405028:	d002      	beq.n	405030 <__adddf3+0x70>
  40502a:	4240      	negs	r0, r0
  40502c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405030:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405034:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405038:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40503c:	d002      	beq.n	405044 <__adddf3+0x84>
  40503e:	4252      	negs	r2, r2
  405040:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405044:	ea94 0f05 	teq	r4, r5
  405048:	f000 80a7 	beq.w	40519a <__adddf3+0x1da>
  40504c:	f1a4 0401 	sub.w	r4, r4, #1
  405050:	f1d5 0e20 	rsbs	lr, r5, #32
  405054:	db0d      	blt.n	405072 <__adddf3+0xb2>
  405056:	fa02 fc0e 	lsl.w	ip, r2, lr
  40505a:	fa22 f205 	lsr.w	r2, r2, r5
  40505e:	1880      	adds	r0, r0, r2
  405060:	f141 0100 	adc.w	r1, r1, #0
  405064:	fa03 f20e 	lsl.w	r2, r3, lr
  405068:	1880      	adds	r0, r0, r2
  40506a:	fa43 f305 	asr.w	r3, r3, r5
  40506e:	4159      	adcs	r1, r3
  405070:	e00e      	b.n	405090 <__adddf3+0xd0>
  405072:	f1a5 0520 	sub.w	r5, r5, #32
  405076:	f10e 0e20 	add.w	lr, lr, #32
  40507a:	2a01      	cmp	r2, #1
  40507c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405080:	bf28      	it	cs
  405082:	f04c 0c02 	orrcs.w	ip, ip, #2
  405086:	fa43 f305 	asr.w	r3, r3, r5
  40508a:	18c0      	adds	r0, r0, r3
  40508c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405090:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405094:	d507      	bpl.n	4050a6 <__adddf3+0xe6>
  405096:	f04f 0e00 	mov.w	lr, #0
  40509a:	f1dc 0c00 	rsbs	ip, ip, #0
  40509e:	eb7e 0000 	sbcs.w	r0, lr, r0
  4050a2:	eb6e 0101 	sbc.w	r1, lr, r1
  4050a6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4050aa:	d31b      	bcc.n	4050e4 <__adddf3+0x124>
  4050ac:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4050b0:	d30c      	bcc.n	4050cc <__adddf3+0x10c>
  4050b2:	0849      	lsrs	r1, r1, #1
  4050b4:	ea5f 0030 	movs.w	r0, r0, rrx
  4050b8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4050bc:	f104 0401 	add.w	r4, r4, #1
  4050c0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4050c4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4050c8:	f080 809a 	bcs.w	405200 <__adddf3+0x240>
  4050cc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4050d0:	bf08      	it	eq
  4050d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4050d6:	f150 0000 	adcs.w	r0, r0, #0
  4050da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4050de:	ea41 0105 	orr.w	r1, r1, r5
  4050e2:	bd30      	pop	{r4, r5, pc}
  4050e4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4050e8:	4140      	adcs	r0, r0
  4050ea:	eb41 0101 	adc.w	r1, r1, r1
  4050ee:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4050f2:	f1a4 0401 	sub.w	r4, r4, #1
  4050f6:	d1e9      	bne.n	4050cc <__adddf3+0x10c>
  4050f8:	f091 0f00 	teq	r1, #0
  4050fc:	bf04      	itt	eq
  4050fe:	4601      	moveq	r1, r0
  405100:	2000      	moveq	r0, #0
  405102:	fab1 f381 	clz	r3, r1
  405106:	bf08      	it	eq
  405108:	3320      	addeq	r3, #32
  40510a:	f1a3 030b 	sub.w	r3, r3, #11
  40510e:	f1b3 0220 	subs.w	r2, r3, #32
  405112:	da0c      	bge.n	40512e <__adddf3+0x16e>
  405114:	320c      	adds	r2, #12
  405116:	dd08      	ble.n	40512a <__adddf3+0x16a>
  405118:	f102 0c14 	add.w	ip, r2, #20
  40511c:	f1c2 020c 	rsb	r2, r2, #12
  405120:	fa01 f00c 	lsl.w	r0, r1, ip
  405124:	fa21 f102 	lsr.w	r1, r1, r2
  405128:	e00c      	b.n	405144 <__adddf3+0x184>
  40512a:	f102 0214 	add.w	r2, r2, #20
  40512e:	bfd8      	it	le
  405130:	f1c2 0c20 	rsble	ip, r2, #32
  405134:	fa01 f102 	lsl.w	r1, r1, r2
  405138:	fa20 fc0c 	lsr.w	ip, r0, ip
  40513c:	bfdc      	itt	le
  40513e:	ea41 010c 	orrle.w	r1, r1, ip
  405142:	4090      	lslle	r0, r2
  405144:	1ae4      	subs	r4, r4, r3
  405146:	bfa2      	ittt	ge
  405148:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40514c:	4329      	orrge	r1, r5
  40514e:	bd30      	popge	{r4, r5, pc}
  405150:	ea6f 0404 	mvn.w	r4, r4
  405154:	3c1f      	subs	r4, #31
  405156:	da1c      	bge.n	405192 <__adddf3+0x1d2>
  405158:	340c      	adds	r4, #12
  40515a:	dc0e      	bgt.n	40517a <__adddf3+0x1ba>
  40515c:	f104 0414 	add.w	r4, r4, #20
  405160:	f1c4 0220 	rsb	r2, r4, #32
  405164:	fa20 f004 	lsr.w	r0, r0, r4
  405168:	fa01 f302 	lsl.w	r3, r1, r2
  40516c:	ea40 0003 	orr.w	r0, r0, r3
  405170:	fa21 f304 	lsr.w	r3, r1, r4
  405174:	ea45 0103 	orr.w	r1, r5, r3
  405178:	bd30      	pop	{r4, r5, pc}
  40517a:	f1c4 040c 	rsb	r4, r4, #12
  40517e:	f1c4 0220 	rsb	r2, r4, #32
  405182:	fa20 f002 	lsr.w	r0, r0, r2
  405186:	fa01 f304 	lsl.w	r3, r1, r4
  40518a:	ea40 0003 	orr.w	r0, r0, r3
  40518e:	4629      	mov	r1, r5
  405190:	bd30      	pop	{r4, r5, pc}
  405192:	fa21 f004 	lsr.w	r0, r1, r4
  405196:	4629      	mov	r1, r5
  405198:	bd30      	pop	{r4, r5, pc}
  40519a:	f094 0f00 	teq	r4, #0
  40519e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4051a2:	bf06      	itte	eq
  4051a4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4051a8:	3401      	addeq	r4, #1
  4051aa:	3d01      	subne	r5, #1
  4051ac:	e74e      	b.n	40504c <__adddf3+0x8c>
  4051ae:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4051b2:	bf18      	it	ne
  4051b4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4051b8:	d029      	beq.n	40520e <__adddf3+0x24e>
  4051ba:	ea94 0f05 	teq	r4, r5
  4051be:	bf08      	it	eq
  4051c0:	ea90 0f02 	teqeq	r0, r2
  4051c4:	d005      	beq.n	4051d2 <__adddf3+0x212>
  4051c6:	ea54 0c00 	orrs.w	ip, r4, r0
  4051ca:	bf04      	itt	eq
  4051cc:	4619      	moveq	r1, r3
  4051ce:	4610      	moveq	r0, r2
  4051d0:	bd30      	pop	{r4, r5, pc}
  4051d2:	ea91 0f03 	teq	r1, r3
  4051d6:	bf1e      	ittt	ne
  4051d8:	2100      	movne	r1, #0
  4051da:	2000      	movne	r0, #0
  4051dc:	bd30      	popne	{r4, r5, pc}
  4051de:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4051e2:	d105      	bne.n	4051f0 <__adddf3+0x230>
  4051e4:	0040      	lsls	r0, r0, #1
  4051e6:	4149      	adcs	r1, r1
  4051e8:	bf28      	it	cs
  4051ea:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4051ee:	bd30      	pop	{r4, r5, pc}
  4051f0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4051f4:	bf3c      	itt	cc
  4051f6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4051fa:	bd30      	popcc	{r4, r5, pc}
  4051fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405200:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405204:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405208:	f04f 0000 	mov.w	r0, #0
  40520c:	bd30      	pop	{r4, r5, pc}
  40520e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405212:	bf1a      	itte	ne
  405214:	4619      	movne	r1, r3
  405216:	4610      	movne	r0, r2
  405218:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40521c:	bf1c      	itt	ne
  40521e:	460b      	movne	r3, r1
  405220:	4602      	movne	r2, r0
  405222:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405226:	bf06      	itte	eq
  405228:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40522c:	ea91 0f03 	teqeq	r1, r3
  405230:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405234:	bd30      	pop	{r4, r5, pc}
  405236:	bf00      	nop

00405238 <__aeabi_ui2d>:
  405238:	f090 0f00 	teq	r0, #0
  40523c:	bf04      	itt	eq
  40523e:	2100      	moveq	r1, #0
  405240:	4770      	bxeq	lr
  405242:	b530      	push	{r4, r5, lr}
  405244:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405248:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40524c:	f04f 0500 	mov.w	r5, #0
  405250:	f04f 0100 	mov.w	r1, #0
  405254:	e750      	b.n	4050f8 <__adddf3+0x138>
  405256:	bf00      	nop

00405258 <__aeabi_i2d>:
  405258:	f090 0f00 	teq	r0, #0
  40525c:	bf04      	itt	eq
  40525e:	2100      	moveq	r1, #0
  405260:	4770      	bxeq	lr
  405262:	b530      	push	{r4, r5, lr}
  405264:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405268:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40526c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405270:	bf48      	it	mi
  405272:	4240      	negmi	r0, r0
  405274:	f04f 0100 	mov.w	r1, #0
  405278:	e73e      	b.n	4050f8 <__adddf3+0x138>
  40527a:	bf00      	nop

0040527c <__aeabi_f2d>:
  40527c:	0042      	lsls	r2, r0, #1
  40527e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405282:	ea4f 0131 	mov.w	r1, r1, rrx
  405286:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40528a:	bf1f      	itttt	ne
  40528c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405290:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405294:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405298:	4770      	bxne	lr
  40529a:	f092 0f00 	teq	r2, #0
  40529e:	bf14      	ite	ne
  4052a0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4052a4:	4770      	bxeq	lr
  4052a6:	b530      	push	{r4, r5, lr}
  4052a8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4052ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4052b0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4052b4:	e720      	b.n	4050f8 <__adddf3+0x138>
  4052b6:	bf00      	nop

004052b8 <__aeabi_ul2d>:
  4052b8:	ea50 0201 	orrs.w	r2, r0, r1
  4052bc:	bf08      	it	eq
  4052be:	4770      	bxeq	lr
  4052c0:	b530      	push	{r4, r5, lr}
  4052c2:	f04f 0500 	mov.w	r5, #0
  4052c6:	e00a      	b.n	4052de <__aeabi_l2d+0x16>

004052c8 <__aeabi_l2d>:
  4052c8:	ea50 0201 	orrs.w	r2, r0, r1
  4052cc:	bf08      	it	eq
  4052ce:	4770      	bxeq	lr
  4052d0:	b530      	push	{r4, r5, lr}
  4052d2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4052d6:	d502      	bpl.n	4052de <__aeabi_l2d+0x16>
  4052d8:	4240      	negs	r0, r0
  4052da:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4052de:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4052e2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4052e6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4052ea:	f43f aedc 	beq.w	4050a6 <__adddf3+0xe6>
  4052ee:	f04f 0203 	mov.w	r2, #3
  4052f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4052f6:	bf18      	it	ne
  4052f8:	3203      	addne	r2, #3
  4052fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4052fe:	bf18      	it	ne
  405300:	3203      	addne	r2, #3
  405302:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405306:	f1c2 0320 	rsb	r3, r2, #32
  40530a:	fa00 fc03 	lsl.w	ip, r0, r3
  40530e:	fa20 f002 	lsr.w	r0, r0, r2
  405312:	fa01 fe03 	lsl.w	lr, r1, r3
  405316:	ea40 000e 	orr.w	r0, r0, lr
  40531a:	fa21 f102 	lsr.w	r1, r1, r2
  40531e:	4414      	add	r4, r2
  405320:	e6c1      	b.n	4050a6 <__adddf3+0xe6>
  405322:	bf00      	nop

00405324 <__aeabi_dmul>:
  405324:	b570      	push	{r4, r5, r6, lr}
  405326:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40532a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40532e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405332:	bf1d      	ittte	ne
  405334:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405338:	ea94 0f0c 	teqne	r4, ip
  40533c:	ea95 0f0c 	teqne	r5, ip
  405340:	f000 f8de 	bleq	405500 <__aeabi_dmul+0x1dc>
  405344:	442c      	add	r4, r5
  405346:	ea81 0603 	eor.w	r6, r1, r3
  40534a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40534e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405352:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405356:	bf18      	it	ne
  405358:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40535c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405360:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405364:	d038      	beq.n	4053d8 <__aeabi_dmul+0xb4>
  405366:	fba0 ce02 	umull	ip, lr, r0, r2
  40536a:	f04f 0500 	mov.w	r5, #0
  40536e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405372:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405376:	fbe0 e503 	umlal	lr, r5, r0, r3
  40537a:	f04f 0600 	mov.w	r6, #0
  40537e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405382:	f09c 0f00 	teq	ip, #0
  405386:	bf18      	it	ne
  405388:	f04e 0e01 	orrne.w	lr, lr, #1
  40538c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405390:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405394:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405398:	d204      	bcs.n	4053a4 <__aeabi_dmul+0x80>
  40539a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40539e:	416d      	adcs	r5, r5
  4053a0:	eb46 0606 	adc.w	r6, r6, r6
  4053a4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4053a8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4053ac:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4053b0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4053b4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4053b8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4053bc:	bf88      	it	hi
  4053be:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4053c2:	d81e      	bhi.n	405402 <__aeabi_dmul+0xde>
  4053c4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4053c8:	bf08      	it	eq
  4053ca:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4053ce:	f150 0000 	adcs.w	r0, r0, #0
  4053d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4053d6:	bd70      	pop	{r4, r5, r6, pc}
  4053d8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4053dc:	ea46 0101 	orr.w	r1, r6, r1
  4053e0:	ea40 0002 	orr.w	r0, r0, r2
  4053e4:	ea81 0103 	eor.w	r1, r1, r3
  4053e8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4053ec:	bfc2      	ittt	gt
  4053ee:	ebd4 050c 	rsbsgt	r5, r4, ip
  4053f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4053f6:	bd70      	popgt	{r4, r5, r6, pc}
  4053f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4053fc:	f04f 0e00 	mov.w	lr, #0
  405400:	3c01      	subs	r4, #1
  405402:	f300 80ab 	bgt.w	40555c <__aeabi_dmul+0x238>
  405406:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40540a:	bfde      	ittt	le
  40540c:	2000      	movle	r0, #0
  40540e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405412:	bd70      	pople	{r4, r5, r6, pc}
  405414:	f1c4 0400 	rsb	r4, r4, #0
  405418:	3c20      	subs	r4, #32
  40541a:	da35      	bge.n	405488 <__aeabi_dmul+0x164>
  40541c:	340c      	adds	r4, #12
  40541e:	dc1b      	bgt.n	405458 <__aeabi_dmul+0x134>
  405420:	f104 0414 	add.w	r4, r4, #20
  405424:	f1c4 0520 	rsb	r5, r4, #32
  405428:	fa00 f305 	lsl.w	r3, r0, r5
  40542c:	fa20 f004 	lsr.w	r0, r0, r4
  405430:	fa01 f205 	lsl.w	r2, r1, r5
  405434:	ea40 0002 	orr.w	r0, r0, r2
  405438:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40543c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405440:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405444:	fa21 f604 	lsr.w	r6, r1, r4
  405448:	eb42 0106 	adc.w	r1, r2, r6
  40544c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405450:	bf08      	it	eq
  405452:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405456:	bd70      	pop	{r4, r5, r6, pc}
  405458:	f1c4 040c 	rsb	r4, r4, #12
  40545c:	f1c4 0520 	rsb	r5, r4, #32
  405460:	fa00 f304 	lsl.w	r3, r0, r4
  405464:	fa20 f005 	lsr.w	r0, r0, r5
  405468:	fa01 f204 	lsl.w	r2, r1, r4
  40546c:	ea40 0002 	orr.w	r0, r0, r2
  405470:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405474:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405478:	f141 0100 	adc.w	r1, r1, #0
  40547c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405480:	bf08      	it	eq
  405482:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405486:	bd70      	pop	{r4, r5, r6, pc}
  405488:	f1c4 0520 	rsb	r5, r4, #32
  40548c:	fa00 f205 	lsl.w	r2, r0, r5
  405490:	ea4e 0e02 	orr.w	lr, lr, r2
  405494:	fa20 f304 	lsr.w	r3, r0, r4
  405498:	fa01 f205 	lsl.w	r2, r1, r5
  40549c:	ea43 0302 	orr.w	r3, r3, r2
  4054a0:	fa21 f004 	lsr.w	r0, r1, r4
  4054a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4054a8:	fa21 f204 	lsr.w	r2, r1, r4
  4054ac:	ea20 0002 	bic.w	r0, r0, r2
  4054b0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4054b4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4054b8:	bf08      	it	eq
  4054ba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4054be:	bd70      	pop	{r4, r5, r6, pc}
  4054c0:	f094 0f00 	teq	r4, #0
  4054c4:	d10f      	bne.n	4054e6 <__aeabi_dmul+0x1c2>
  4054c6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4054ca:	0040      	lsls	r0, r0, #1
  4054cc:	eb41 0101 	adc.w	r1, r1, r1
  4054d0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4054d4:	bf08      	it	eq
  4054d6:	3c01      	subeq	r4, #1
  4054d8:	d0f7      	beq.n	4054ca <__aeabi_dmul+0x1a6>
  4054da:	ea41 0106 	orr.w	r1, r1, r6
  4054de:	f095 0f00 	teq	r5, #0
  4054e2:	bf18      	it	ne
  4054e4:	4770      	bxne	lr
  4054e6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4054ea:	0052      	lsls	r2, r2, #1
  4054ec:	eb43 0303 	adc.w	r3, r3, r3
  4054f0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4054f4:	bf08      	it	eq
  4054f6:	3d01      	subeq	r5, #1
  4054f8:	d0f7      	beq.n	4054ea <__aeabi_dmul+0x1c6>
  4054fa:	ea43 0306 	orr.w	r3, r3, r6
  4054fe:	4770      	bx	lr
  405500:	ea94 0f0c 	teq	r4, ip
  405504:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405508:	bf18      	it	ne
  40550a:	ea95 0f0c 	teqne	r5, ip
  40550e:	d00c      	beq.n	40552a <__aeabi_dmul+0x206>
  405510:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405514:	bf18      	it	ne
  405516:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40551a:	d1d1      	bne.n	4054c0 <__aeabi_dmul+0x19c>
  40551c:	ea81 0103 	eor.w	r1, r1, r3
  405520:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405524:	f04f 0000 	mov.w	r0, #0
  405528:	bd70      	pop	{r4, r5, r6, pc}
  40552a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40552e:	bf06      	itte	eq
  405530:	4610      	moveq	r0, r2
  405532:	4619      	moveq	r1, r3
  405534:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405538:	d019      	beq.n	40556e <__aeabi_dmul+0x24a>
  40553a:	ea94 0f0c 	teq	r4, ip
  40553e:	d102      	bne.n	405546 <__aeabi_dmul+0x222>
  405540:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405544:	d113      	bne.n	40556e <__aeabi_dmul+0x24a>
  405546:	ea95 0f0c 	teq	r5, ip
  40554a:	d105      	bne.n	405558 <__aeabi_dmul+0x234>
  40554c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405550:	bf1c      	itt	ne
  405552:	4610      	movne	r0, r2
  405554:	4619      	movne	r1, r3
  405556:	d10a      	bne.n	40556e <__aeabi_dmul+0x24a>
  405558:	ea81 0103 	eor.w	r1, r1, r3
  40555c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405560:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405564:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405568:	f04f 0000 	mov.w	r0, #0
  40556c:	bd70      	pop	{r4, r5, r6, pc}
  40556e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405572:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405576:	bd70      	pop	{r4, r5, r6, pc}

00405578 <__aeabi_ddiv>:
  405578:	b570      	push	{r4, r5, r6, lr}
  40557a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40557e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405582:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405586:	bf1d      	ittte	ne
  405588:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40558c:	ea94 0f0c 	teqne	r4, ip
  405590:	ea95 0f0c 	teqne	r5, ip
  405594:	f000 f8a7 	bleq	4056e6 <__aeabi_ddiv+0x16e>
  405598:	eba4 0405 	sub.w	r4, r4, r5
  40559c:	ea81 0e03 	eor.w	lr, r1, r3
  4055a0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4055a4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4055a8:	f000 8088 	beq.w	4056bc <__aeabi_ddiv+0x144>
  4055ac:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4055b0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4055b4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4055b8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4055bc:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4055c0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4055c4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4055c8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4055cc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4055d0:	429d      	cmp	r5, r3
  4055d2:	bf08      	it	eq
  4055d4:	4296      	cmpeq	r6, r2
  4055d6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4055da:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4055de:	d202      	bcs.n	4055e6 <__aeabi_ddiv+0x6e>
  4055e0:	085b      	lsrs	r3, r3, #1
  4055e2:	ea4f 0232 	mov.w	r2, r2, rrx
  4055e6:	1ab6      	subs	r6, r6, r2
  4055e8:	eb65 0503 	sbc.w	r5, r5, r3
  4055ec:	085b      	lsrs	r3, r3, #1
  4055ee:	ea4f 0232 	mov.w	r2, r2, rrx
  4055f2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4055f6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4055fa:	ebb6 0e02 	subs.w	lr, r6, r2
  4055fe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405602:	bf22      	ittt	cs
  405604:	1ab6      	subcs	r6, r6, r2
  405606:	4675      	movcs	r5, lr
  405608:	ea40 000c 	orrcs.w	r0, r0, ip
  40560c:	085b      	lsrs	r3, r3, #1
  40560e:	ea4f 0232 	mov.w	r2, r2, rrx
  405612:	ebb6 0e02 	subs.w	lr, r6, r2
  405616:	eb75 0e03 	sbcs.w	lr, r5, r3
  40561a:	bf22      	ittt	cs
  40561c:	1ab6      	subcs	r6, r6, r2
  40561e:	4675      	movcs	r5, lr
  405620:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405624:	085b      	lsrs	r3, r3, #1
  405626:	ea4f 0232 	mov.w	r2, r2, rrx
  40562a:	ebb6 0e02 	subs.w	lr, r6, r2
  40562e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405632:	bf22      	ittt	cs
  405634:	1ab6      	subcs	r6, r6, r2
  405636:	4675      	movcs	r5, lr
  405638:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40563c:	085b      	lsrs	r3, r3, #1
  40563e:	ea4f 0232 	mov.w	r2, r2, rrx
  405642:	ebb6 0e02 	subs.w	lr, r6, r2
  405646:	eb75 0e03 	sbcs.w	lr, r5, r3
  40564a:	bf22      	ittt	cs
  40564c:	1ab6      	subcs	r6, r6, r2
  40564e:	4675      	movcs	r5, lr
  405650:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405654:	ea55 0e06 	orrs.w	lr, r5, r6
  405658:	d018      	beq.n	40568c <__aeabi_ddiv+0x114>
  40565a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40565e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405662:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405666:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40566a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40566e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405672:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405676:	d1c0      	bne.n	4055fa <__aeabi_ddiv+0x82>
  405678:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40567c:	d10b      	bne.n	405696 <__aeabi_ddiv+0x11e>
  40567e:	ea41 0100 	orr.w	r1, r1, r0
  405682:	f04f 0000 	mov.w	r0, #0
  405686:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40568a:	e7b6      	b.n	4055fa <__aeabi_ddiv+0x82>
  40568c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405690:	bf04      	itt	eq
  405692:	4301      	orreq	r1, r0
  405694:	2000      	moveq	r0, #0
  405696:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40569a:	bf88      	it	hi
  40569c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4056a0:	f63f aeaf 	bhi.w	405402 <__aeabi_dmul+0xde>
  4056a4:	ebb5 0c03 	subs.w	ip, r5, r3
  4056a8:	bf04      	itt	eq
  4056aa:	ebb6 0c02 	subseq.w	ip, r6, r2
  4056ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4056b2:	f150 0000 	adcs.w	r0, r0, #0
  4056b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4056ba:	bd70      	pop	{r4, r5, r6, pc}
  4056bc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4056c0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4056c4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4056c8:	bfc2      	ittt	gt
  4056ca:	ebd4 050c 	rsbsgt	r5, r4, ip
  4056ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4056d2:	bd70      	popgt	{r4, r5, r6, pc}
  4056d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4056d8:	f04f 0e00 	mov.w	lr, #0
  4056dc:	3c01      	subs	r4, #1
  4056de:	e690      	b.n	405402 <__aeabi_dmul+0xde>
  4056e0:	ea45 0e06 	orr.w	lr, r5, r6
  4056e4:	e68d      	b.n	405402 <__aeabi_dmul+0xde>
  4056e6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4056ea:	ea94 0f0c 	teq	r4, ip
  4056ee:	bf08      	it	eq
  4056f0:	ea95 0f0c 	teqeq	r5, ip
  4056f4:	f43f af3b 	beq.w	40556e <__aeabi_dmul+0x24a>
  4056f8:	ea94 0f0c 	teq	r4, ip
  4056fc:	d10a      	bne.n	405714 <__aeabi_ddiv+0x19c>
  4056fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405702:	f47f af34 	bne.w	40556e <__aeabi_dmul+0x24a>
  405706:	ea95 0f0c 	teq	r5, ip
  40570a:	f47f af25 	bne.w	405558 <__aeabi_dmul+0x234>
  40570e:	4610      	mov	r0, r2
  405710:	4619      	mov	r1, r3
  405712:	e72c      	b.n	40556e <__aeabi_dmul+0x24a>
  405714:	ea95 0f0c 	teq	r5, ip
  405718:	d106      	bne.n	405728 <__aeabi_ddiv+0x1b0>
  40571a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40571e:	f43f aefd 	beq.w	40551c <__aeabi_dmul+0x1f8>
  405722:	4610      	mov	r0, r2
  405724:	4619      	mov	r1, r3
  405726:	e722      	b.n	40556e <__aeabi_dmul+0x24a>
  405728:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40572c:	bf18      	it	ne
  40572e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405732:	f47f aec5 	bne.w	4054c0 <__aeabi_dmul+0x19c>
  405736:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40573a:	f47f af0d 	bne.w	405558 <__aeabi_dmul+0x234>
  40573e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405742:	f47f aeeb 	bne.w	40551c <__aeabi_dmul+0x1f8>
  405746:	e712      	b.n	40556e <__aeabi_dmul+0x24a>

00405748 <__gedf2>:
  405748:	f04f 3cff 	mov.w	ip, #4294967295
  40574c:	e006      	b.n	40575c <__cmpdf2+0x4>
  40574e:	bf00      	nop

00405750 <__ledf2>:
  405750:	f04f 0c01 	mov.w	ip, #1
  405754:	e002      	b.n	40575c <__cmpdf2+0x4>
  405756:	bf00      	nop

00405758 <__cmpdf2>:
  405758:	f04f 0c01 	mov.w	ip, #1
  40575c:	f84d cd04 	str.w	ip, [sp, #-4]!
  405760:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405764:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405768:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40576c:	bf18      	it	ne
  40576e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405772:	d01b      	beq.n	4057ac <__cmpdf2+0x54>
  405774:	b001      	add	sp, #4
  405776:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40577a:	bf0c      	ite	eq
  40577c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405780:	ea91 0f03 	teqne	r1, r3
  405784:	bf02      	ittt	eq
  405786:	ea90 0f02 	teqeq	r0, r2
  40578a:	2000      	moveq	r0, #0
  40578c:	4770      	bxeq	lr
  40578e:	f110 0f00 	cmn.w	r0, #0
  405792:	ea91 0f03 	teq	r1, r3
  405796:	bf58      	it	pl
  405798:	4299      	cmppl	r1, r3
  40579a:	bf08      	it	eq
  40579c:	4290      	cmpeq	r0, r2
  40579e:	bf2c      	ite	cs
  4057a0:	17d8      	asrcs	r0, r3, #31
  4057a2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4057a6:	f040 0001 	orr.w	r0, r0, #1
  4057aa:	4770      	bx	lr
  4057ac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4057b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4057b4:	d102      	bne.n	4057bc <__cmpdf2+0x64>
  4057b6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4057ba:	d107      	bne.n	4057cc <__cmpdf2+0x74>
  4057bc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4057c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4057c4:	d1d6      	bne.n	405774 <__cmpdf2+0x1c>
  4057c6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4057ca:	d0d3      	beq.n	405774 <__cmpdf2+0x1c>
  4057cc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4057d0:	4770      	bx	lr
  4057d2:	bf00      	nop

004057d4 <__aeabi_cdrcmple>:
  4057d4:	4684      	mov	ip, r0
  4057d6:	4610      	mov	r0, r2
  4057d8:	4662      	mov	r2, ip
  4057da:	468c      	mov	ip, r1
  4057dc:	4619      	mov	r1, r3
  4057de:	4663      	mov	r3, ip
  4057e0:	e000      	b.n	4057e4 <__aeabi_cdcmpeq>
  4057e2:	bf00      	nop

004057e4 <__aeabi_cdcmpeq>:
  4057e4:	b501      	push	{r0, lr}
  4057e6:	f7ff ffb7 	bl	405758 <__cmpdf2>
  4057ea:	2800      	cmp	r0, #0
  4057ec:	bf48      	it	mi
  4057ee:	f110 0f00 	cmnmi.w	r0, #0
  4057f2:	bd01      	pop	{r0, pc}

004057f4 <__aeabi_dcmpeq>:
  4057f4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4057f8:	f7ff fff4 	bl	4057e4 <__aeabi_cdcmpeq>
  4057fc:	bf0c      	ite	eq
  4057fe:	2001      	moveq	r0, #1
  405800:	2000      	movne	r0, #0
  405802:	f85d fb08 	ldr.w	pc, [sp], #8
  405806:	bf00      	nop

00405808 <__aeabi_dcmplt>:
  405808:	f84d ed08 	str.w	lr, [sp, #-8]!
  40580c:	f7ff ffea 	bl	4057e4 <__aeabi_cdcmpeq>
  405810:	bf34      	ite	cc
  405812:	2001      	movcc	r0, #1
  405814:	2000      	movcs	r0, #0
  405816:	f85d fb08 	ldr.w	pc, [sp], #8
  40581a:	bf00      	nop

0040581c <__aeabi_dcmple>:
  40581c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405820:	f7ff ffe0 	bl	4057e4 <__aeabi_cdcmpeq>
  405824:	bf94      	ite	ls
  405826:	2001      	movls	r0, #1
  405828:	2000      	movhi	r0, #0
  40582a:	f85d fb08 	ldr.w	pc, [sp], #8
  40582e:	bf00      	nop

00405830 <__aeabi_dcmpge>:
  405830:	f84d ed08 	str.w	lr, [sp, #-8]!
  405834:	f7ff ffce 	bl	4057d4 <__aeabi_cdrcmple>
  405838:	bf94      	ite	ls
  40583a:	2001      	movls	r0, #1
  40583c:	2000      	movhi	r0, #0
  40583e:	f85d fb08 	ldr.w	pc, [sp], #8
  405842:	bf00      	nop

00405844 <__aeabi_dcmpgt>:
  405844:	f84d ed08 	str.w	lr, [sp, #-8]!
  405848:	f7ff ffc4 	bl	4057d4 <__aeabi_cdrcmple>
  40584c:	bf34      	ite	cc
  40584e:	2001      	movcc	r0, #1
  405850:	2000      	movcs	r0, #0
  405852:	f85d fb08 	ldr.w	pc, [sp], #8
  405856:	bf00      	nop

00405858 <__aeabi_dcmpun>:
  405858:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40585c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405860:	d102      	bne.n	405868 <__aeabi_dcmpun+0x10>
  405862:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405866:	d10a      	bne.n	40587e <__aeabi_dcmpun+0x26>
  405868:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40586c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405870:	d102      	bne.n	405878 <__aeabi_dcmpun+0x20>
  405872:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405876:	d102      	bne.n	40587e <__aeabi_dcmpun+0x26>
  405878:	f04f 0000 	mov.w	r0, #0
  40587c:	4770      	bx	lr
  40587e:	f04f 0001 	mov.w	r0, #1
  405882:	4770      	bx	lr

00405884 <__aeabi_d2iz>:
  405884:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405888:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40588c:	d215      	bcs.n	4058ba <__aeabi_d2iz+0x36>
  40588e:	d511      	bpl.n	4058b4 <__aeabi_d2iz+0x30>
  405890:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405894:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405898:	d912      	bls.n	4058c0 <__aeabi_d2iz+0x3c>
  40589a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40589e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4058a2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4058a6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4058aa:	fa23 f002 	lsr.w	r0, r3, r2
  4058ae:	bf18      	it	ne
  4058b0:	4240      	negne	r0, r0
  4058b2:	4770      	bx	lr
  4058b4:	f04f 0000 	mov.w	r0, #0
  4058b8:	4770      	bx	lr
  4058ba:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4058be:	d105      	bne.n	4058cc <__aeabi_d2iz+0x48>
  4058c0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4058c4:	bf08      	it	eq
  4058c6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4058ca:	4770      	bx	lr
  4058cc:	f04f 0000 	mov.w	r0, #0
  4058d0:	4770      	bx	lr
  4058d2:	bf00      	nop

004058d4 <__aeabi_uldivmod>:
  4058d4:	b953      	cbnz	r3, 4058ec <__aeabi_uldivmod+0x18>
  4058d6:	b94a      	cbnz	r2, 4058ec <__aeabi_uldivmod+0x18>
  4058d8:	2900      	cmp	r1, #0
  4058da:	bf08      	it	eq
  4058dc:	2800      	cmpeq	r0, #0
  4058de:	bf1c      	itt	ne
  4058e0:	f04f 31ff 	movne.w	r1, #4294967295
  4058e4:	f04f 30ff 	movne.w	r0, #4294967295
  4058e8:	f000 b97e 	b.w	405be8 <__aeabi_idiv0>
  4058ec:	f1ad 0c08 	sub.w	ip, sp, #8
  4058f0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4058f4:	f000 f806 	bl	405904 <__udivmoddi4>
  4058f8:	f8dd e004 	ldr.w	lr, [sp, #4]
  4058fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405900:	b004      	add	sp, #16
  405902:	4770      	bx	lr

00405904 <__udivmoddi4>:
  405904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405908:	468c      	mov	ip, r1
  40590a:	460e      	mov	r6, r1
  40590c:	4604      	mov	r4, r0
  40590e:	9d08      	ldr	r5, [sp, #32]
  405910:	2b00      	cmp	r3, #0
  405912:	d150      	bne.n	4059b6 <__udivmoddi4+0xb2>
  405914:	428a      	cmp	r2, r1
  405916:	4617      	mov	r7, r2
  405918:	d96c      	bls.n	4059f4 <__udivmoddi4+0xf0>
  40591a:	fab2 fe82 	clz	lr, r2
  40591e:	f1be 0f00 	cmp.w	lr, #0
  405922:	d00b      	beq.n	40593c <__udivmoddi4+0x38>
  405924:	f1ce 0420 	rsb	r4, lr, #32
  405928:	fa20 f404 	lsr.w	r4, r0, r4
  40592c:	fa01 f60e 	lsl.w	r6, r1, lr
  405930:	ea44 0c06 	orr.w	ip, r4, r6
  405934:	fa02 f70e 	lsl.w	r7, r2, lr
  405938:	fa00 f40e 	lsl.w	r4, r0, lr
  40593c:	ea4f 4917 	mov.w	r9, r7, lsr #16
  405940:	0c22      	lsrs	r2, r4, #16
  405942:	fbbc f0f9 	udiv	r0, ip, r9
  405946:	fa1f f887 	uxth.w	r8, r7
  40594a:	fb09 c610 	mls	r6, r9, r0, ip
  40594e:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  405952:	fb00 f308 	mul.w	r3, r0, r8
  405956:	42b3      	cmp	r3, r6
  405958:	d909      	bls.n	40596e <__udivmoddi4+0x6a>
  40595a:	19f6      	adds	r6, r6, r7
  40595c:	f100 32ff 	add.w	r2, r0, #4294967295
  405960:	f080 8122 	bcs.w	405ba8 <__udivmoddi4+0x2a4>
  405964:	42b3      	cmp	r3, r6
  405966:	f240 811f 	bls.w	405ba8 <__udivmoddi4+0x2a4>
  40596a:	3802      	subs	r0, #2
  40596c:	443e      	add	r6, r7
  40596e:	1af6      	subs	r6, r6, r3
  405970:	b2a2      	uxth	r2, r4
  405972:	fbb6 f3f9 	udiv	r3, r6, r9
  405976:	fb09 6613 	mls	r6, r9, r3, r6
  40597a:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  40597e:	fb03 f808 	mul.w	r8, r3, r8
  405982:	45a0      	cmp	r8, r4
  405984:	d909      	bls.n	40599a <__udivmoddi4+0x96>
  405986:	19e4      	adds	r4, r4, r7
  405988:	f103 32ff 	add.w	r2, r3, #4294967295
  40598c:	f080 810a 	bcs.w	405ba4 <__udivmoddi4+0x2a0>
  405990:	45a0      	cmp	r8, r4
  405992:	f240 8107 	bls.w	405ba4 <__udivmoddi4+0x2a0>
  405996:	3b02      	subs	r3, #2
  405998:	443c      	add	r4, r7
  40599a:	ebc8 0404 	rsb	r4, r8, r4
  40599e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  4059a2:	2100      	movs	r1, #0
  4059a4:	2d00      	cmp	r5, #0
  4059a6:	d062      	beq.n	405a6e <__udivmoddi4+0x16a>
  4059a8:	fa24 f40e 	lsr.w	r4, r4, lr
  4059ac:	2300      	movs	r3, #0
  4059ae:	602c      	str	r4, [r5, #0]
  4059b0:	606b      	str	r3, [r5, #4]
  4059b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4059b6:	428b      	cmp	r3, r1
  4059b8:	d907      	bls.n	4059ca <__udivmoddi4+0xc6>
  4059ba:	2d00      	cmp	r5, #0
  4059bc:	d055      	beq.n	405a6a <__udivmoddi4+0x166>
  4059be:	2100      	movs	r1, #0
  4059c0:	e885 0041 	stmia.w	r5, {r0, r6}
  4059c4:	4608      	mov	r0, r1
  4059c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4059ca:	fab3 f183 	clz	r1, r3
  4059ce:	2900      	cmp	r1, #0
  4059d0:	f040 8090 	bne.w	405af4 <__udivmoddi4+0x1f0>
  4059d4:	42b3      	cmp	r3, r6
  4059d6:	d302      	bcc.n	4059de <__udivmoddi4+0xda>
  4059d8:	4282      	cmp	r2, r0
  4059da:	f200 80f8 	bhi.w	405bce <__udivmoddi4+0x2ca>
  4059de:	1a84      	subs	r4, r0, r2
  4059e0:	eb66 0603 	sbc.w	r6, r6, r3
  4059e4:	2001      	movs	r0, #1
  4059e6:	46b4      	mov	ip, r6
  4059e8:	2d00      	cmp	r5, #0
  4059ea:	d040      	beq.n	405a6e <__udivmoddi4+0x16a>
  4059ec:	e885 1010 	stmia.w	r5, {r4, ip}
  4059f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4059f4:	b912      	cbnz	r2, 4059fc <__udivmoddi4+0xf8>
  4059f6:	2701      	movs	r7, #1
  4059f8:	fbb7 f7f2 	udiv	r7, r7, r2
  4059fc:	fab7 fe87 	clz	lr, r7
  405a00:	f1be 0f00 	cmp.w	lr, #0
  405a04:	d135      	bne.n	405a72 <__udivmoddi4+0x16e>
  405a06:	1bf3      	subs	r3, r6, r7
  405a08:	ea4f 4817 	mov.w	r8, r7, lsr #16
  405a0c:	fa1f fc87 	uxth.w	ip, r7
  405a10:	2101      	movs	r1, #1
  405a12:	fbb3 f0f8 	udiv	r0, r3, r8
  405a16:	0c22      	lsrs	r2, r4, #16
  405a18:	fb08 3610 	mls	r6, r8, r0, r3
  405a1c:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  405a20:	fb0c f300 	mul.w	r3, ip, r0
  405a24:	42b3      	cmp	r3, r6
  405a26:	d907      	bls.n	405a38 <__udivmoddi4+0x134>
  405a28:	19f6      	adds	r6, r6, r7
  405a2a:	f100 32ff 	add.w	r2, r0, #4294967295
  405a2e:	d202      	bcs.n	405a36 <__udivmoddi4+0x132>
  405a30:	42b3      	cmp	r3, r6
  405a32:	f200 80ce 	bhi.w	405bd2 <__udivmoddi4+0x2ce>
  405a36:	4610      	mov	r0, r2
  405a38:	1af6      	subs	r6, r6, r3
  405a3a:	b2a2      	uxth	r2, r4
  405a3c:	fbb6 f3f8 	udiv	r3, r6, r8
  405a40:	fb08 6613 	mls	r6, r8, r3, r6
  405a44:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  405a48:	fb0c fc03 	mul.w	ip, ip, r3
  405a4c:	45a4      	cmp	ip, r4
  405a4e:	d907      	bls.n	405a60 <__udivmoddi4+0x15c>
  405a50:	19e4      	adds	r4, r4, r7
  405a52:	f103 32ff 	add.w	r2, r3, #4294967295
  405a56:	d202      	bcs.n	405a5e <__udivmoddi4+0x15a>
  405a58:	45a4      	cmp	ip, r4
  405a5a:	f200 80b5 	bhi.w	405bc8 <__udivmoddi4+0x2c4>
  405a5e:	4613      	mov	r3, r2
  405a60:	ebcc 0404 	rsb	r4, ip, r4
  405a64:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  405a68:	e79c      	b.n	4059a4 <__udivmoddi4+0xa0>
  405a6a:	4629      	mov	r1, r5
  405a6c:	4628      	mov	r0, r5
  405a6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405a72:	f1ce 0120 	rsb	r1, lr, #32
  405a76:	fa06 f30e 	lsl.w	r3, r6, lr
  405a7a:	fa07 f70e 	lsl.w	r7, r7, lr
  405a7e:	fa20 f901 	lsr.w	r9, r0, r1
  405a82:	ea4f 4817 	mov.w	r8, r7, lsr #16
  405a86:	40ce      	lsrs	r6, r1
  405a88:	ea49 0903 	orr.w	r9, r9, r3
  405a8c:	fbb6 faf8 	udiv	sl, r6, r8
  405a90:	ea4f 4419 	mov.w	r4, r9, lsr #16
  405a94:	fb08 661a 	mls	r6, r8, sl, r6
  405a98:	fa1f fc87 	uxth.w	ip, r7
  405a9c:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  405aa0:	fb0a f20c 	mul.w	r2, sl, ip
  405aa4:	429a      	cmp	r2, r3
  405aa6:	fa00 f40e 	lsl.w	r4, r0, lr
  405aaa:	d90a      	bls.n	405ac2 <__udivmoddi4+0x1be>
  405aac:	19db      	adds	r3, r3, r7
  405aae:	f10a 31ff 	add.w	r1, sl, #4294967295
  405ab2:	f080 8087 	bcs.w	405bc4 <__udivmoddi4+0x2c0>
  405ab6:	429a      	cmp	r2, r3
  405ab8:	f240 8084 	bls.w	405bc4 <__udivmoddi4+0x2c0>
  405abc:	f1aa 0a02 	sub.w	sl, sl, #2
  405ac0:	443b      	add	r3, r7
  405ac2:	1a9b      	subs	r3, r3, r2
  405ac4:	fa1f f989 	uxth.w	r9, r9
  405ac8:	fbb3 f1f8 	udiv	r1, r3, r8
  405acc:	fb08 3311 	mls	r3, r8, r1, r3
  405ad0:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  405ad4:	fb01 f60c 	mul.w	r6, r1, ip
  405ad8:	429e      	cmp	r6, r3
  405ada:	d907      	bls.n	405aec <__udivmoddi4+0x1e8>
  405adc:	19db      	adds	r3, r3, r7
  405ade:	f101 32ff 	add.w	r2, r1, #4294967295
  405ae2:	d26b      	bcs.n	405bbc <__udivmoddi4+0x2b8>
  405ae4:	429e      	cmp	r6, r3
  405ae6:	d969      	bls.n	405bbc <__udivmoddi4+0x2b8>
  405ae8:	3902      	subs	r1, #2
  405aea:	443b      	add	r3, r7
  405aec:	1b9b      	subs	r3, r3, r6
  405aee:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  405af2:	e78e      	b.n	405a12 <__udivmoddi4+0x10e>
  405af4:	f1c1 0e20 	rsb	lr, r1, #32
  405af8:	fa22 f40e 	lsr.w	r4, r2, lr
  405afc:	408b      	lsls	r3, r1
  405afe:	4323      	orrs	r3, r4
  405b00:	fa20 f70e 	lsr.w	r7, r0, lr
  405b04:	fa06 f401 	lsl.w	r4, r6, r1
  405b08:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405b0c:	fa26 f60e 	lsr.w	r6, r6, lr
  405b10:	433c      	orrs	r4, r7
  405b12:	fbb6 f9fc 	udiv	r9, r6, ip
  405b16:	0c27      	lsrs	r7, r4, #16
  405b18:	fb0c 6619 	mls	r6, ip, r9, r6
  405b1c:	fa1f f883 	uxth.w	r8, r3
  405b20:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  405b24:	fb09 f708 	mul.w	r7, r9, r8
  405b28:	42b7      	cmp	r7, r6
  405b2a:	fa02 f201 	lsl.w	r2, r2, r1
  405b2e:	fa00 fa01 	lsl.w	sl, r0, r1
  405b32:	d908      	bls.n	405b46 <__udivmoddi4+0x242>
  405b34:	18f6      	adds	r6, r6, r3
  405b36:	f109 30ff 	add.w	r0, r9, #4294967295
  405b3a:	d241      	bcs.n	405bc0 <__udivmoddi4+0x2bc>
  405b3c:	42b7      	cmp	r7, r6
  405b3e:	d93f      	bls.n	405bc0 <__udivmoddi4+0x2bc>
  405b40:	f1a9 0902 	sub.w	r9, r9, #2
  405b44:	441e      	add	r6, r3
  405b46:	1bf6      	subs	r6, r6, r7
  405b48:	b2a0      	uxth	r0, r4
  405b4a:	fbb6 f4fc 	udiv	r4, r6, ip
  405b4e:	fb0c 6614 	mls	r6, ip, r4, r6
  405b52:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  405b56:	fb04 f808 	mul.w	r8, r4, r8
  405b5a:	45b8      	cmp	r8, r7
  405b5c:	d907      	bls.n	405b6e <__udivmoddi4+0x26a>
  405b5e:	18ff      	adds	r7, r7, r3
  405b60:	f104 30ff 	add.w	r0, r4, #4294967295
  405b64:	d228      	bcs.n	405bb8 <__udivmoddi4+0x2b4>
  405b66:	45b8      	cmp	r8, r7
  405b68:	d926      	bls.n	405bb8 <__udivmoddi4+0x2b4>
  405b6a:	3c02      	subs	r4, #2
  405b6c:	441f      	add	r7, r3
  405b6e:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  405b72:	ebc8 0707 	rsb	r7, r8, r7
  405b76:	fba0 8902 	umull	r8, r9, r0, r2
  405b7a:	454f      	cmp	r7, r9
  405b7c:	4644      	mov	r4, r8
  405b7e:	464e      	mov	r6, r9
  405b80:	d314      	bcc.n	405bac <__udivmoddi4+0x2a8>
  405b82:	d029      	beq.n	405bd8 <__udivmoddi4+0x2d4>
  405b84:	b365      	cbz	r5, 405be0 <__udivmoddi4+0x2dc>
  405b86:	ebba 0304 	subs.w	r3, sl, r4
  405b8a:	eb67 0706 	sbc.w	r7, r7, r6
  405b8e:	fa07 fe0e 	lsl.w	lr, r7, lr
  405b92:	40cb      	lsrs	r3, r1
  405b94:	40cf      	lsrs	r7, r1
  405b96:	ea4e 0303 	orr.w	r3, lr, r3
  405b9a:	e885 0088 	stmia.w	r5, {r3, r7}
  405b9e:	2100      	movs	r1, #0
  405ba0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405ba4:	4613      	mov	r3, r2
  405ba6:	e6f8      	b.n	40599a <__udivmoddi4+0x96>
  405ba8:	4610      	mov	r0, r2
  405baa:	e6e0      	b.n	40596e <__udivmoddi4+0x6a>
  405bac:	ebb8 0402 	subs.w	r4, r8, r2
  405bb0:	eb69 0603 	sbc.w	r6, r9, r3
  405bb4:	3801      	subs	r0, #1
  405bb6:	e7e5      	b.n	405b84 <__udivmoddi4+0x280>
  405bb8:	4604      	mov	r4, r0
  405bba:	e7d8      	b.n	405b6e <__udivmoddi4+0x26a>
  405bbc:	4611      	mov	r1, r2
  405bbe:	e795      	b.n	405aec <__udivmoddi4+0x1e8>
  405bc0:	4681      	mov	r9, r0
  405bc2:	e7c0      	b.n	405b46 <__udivmoddi4+0x242>
  405bc4:	468a      	mov	sl, r1
  405bc6:	e77c      	b.n	405ac2 <__udivmoddi4+0x1be>
  405bc8:	3b02      	subs	r3, #2
  405bca:	443c      	add	r4, r7
  405bcc:	e748      	b.n	405a60 <__udivmoddi4+0x15c>
  405bce:	4608      	mov	r0, r1
  405bd0:	e70a      	b.n	4059e8 <__udivmoddi4+0xe4>
  405bd2:	3802      	subs	r0, #2
  405bd4:	443e      	add	r6, r7
  405bd6:	e72f      	b.n	405a38 <__udivmoddi4+0x134>
  405bd8:	45c2      	cmp	sl, r8
  405bda:	d3e7      	bcc.n	405bac <__udivmoddi4+0x2a8>
  405bdc:	463e      	mov	r6, r7
  405bde:	e7d1      	b.n	405b84 <__udivmoddi4+0x280>
  405be0:	4629      	mov	r1, r5
  405be2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405be6:	bf00      	nop

00405be8 <__aeabi_idiv0>:
  405be8:	4770      	bx	lr
  405bea:	bf00      	nop
  405bec:	66666f43 	.word	0x66666f43
  405bf0:	63206565 	.word	0x63206565
  405bf4:	75736e6f 	.word	0x75736e6f
  405bf8:	6974706d 	.word	0x6974706d
  405bfc:	69206e6f 	.word	0x69206e6f
  405c00:	6f72706d 	.word	0x6f72706d
  405c04:	00736576 	.word	0x00736576
  405c08:	676f7270 	.word	0x676f7270
  405c0c:	6d6d6172 	.word	0x6d6d6172
  405c10:	20676e69 	.word	0x20676e69
  405c14:	66726570 	.word	0x66726570
  405c18:	616d726f 	.word	0x616d726f
  405c1c:	0065636e 	.word	0x0065636e
  405c20:	6e656877 	.word	0x6e656877
  405c24:	646f6320 	.word	0x646f6320
  405c28:	20676e69 	.word	0x20676e69
  405c2c:	43206e69 	.word	0x43206e69
  405c30:	0000002e 	.word	0x0000002e
  405c34:	6e656857 	.word	0x6e656857
  405c38:	646f6320 	.word	0x646f6320
  405c3c:	20676e69 	.word	0x20676e69
  405c40:	4a206e69 	.word	0x4a206e69
  405c44:	2c617661 	.word	0x2c617661
  405c48:	776f6820 	.word	0x776f6820
  405c4c:	72657665 	.word	0x72657665
  405c50:	6570202c 	.word	0x6570202c
  405c54:	726f6672 	.word	0x726f6672
  405c58:	636e616d 	.word	0x636e616d
  405c5c:	65642065 	.word	0x65642065
  405c60:	61657263 	.word	0x61657263
  405c64:	20736573 	.word	0x20736573
  405c68:	25206e69 	.word	0x25206e69
  405c6c:	25252066 	.word	0x25252066
  405c70:	00000000 	.word	0x00000000
  405c74:	00000043 	.word	0x00000043

00405c78 <_global_impure_ptr>:
  405c78:	20000410                                ... 

00405c7c <zeroes.7035>:
  405c7c:	30303030 30303030 30303030 30303030     0000000000000000
  405c8c:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
  405c9c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
  405cac:	00000000 33323130 37363534 62613938     ....0123456789ab
  405cbc:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
  405ccc:	00000030                                0...

00405cd0 <blanks.7034>:
  405cd0:	20202020 20202020 20202020 20202020                     
  405ce0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  405cf0:	49534f50 00000058                       POSIX...

00405cf8 <__mprec_tens>:
  405cf8:	00000000 3ff00000 00000000 40240000     .......?......$@
  405d08:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  405d18:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  405d28:	00000000 412e8480 00000000 416312d0     .......A......cA
  405d38:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  405d48:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  405d58:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  405d68:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  405d78:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  405d88:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  405d98:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  405da8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  405db8:	79d99db4 44ea7843                       ...yCx.D

00405dc0 <__mprec_bigtens>:
  405dc0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  405dd0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  405de0:	7f73bf3c 75154fdd                       <.s..O.u

00405de8 <p05.5373>:
  405de8:	00000005 00000019 0000007d              ........}...

00405df4 <_init>:
  405df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405df6:	bf00      	nop
  405df8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405dfa:	bc08      	pop	{r3}
  405dfc:	469e      	mov	lr, r3
  405dfe:	4770      	bx	lr

00405e00 <__init_array_start>:
  405e00:	00402851 	.word	0x00402851

00405e04 <__frame_dummy_init_array_entry>:
  405e04:	004000f1                                ..@.

00405e08 <_fini>:
  405e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405e0a:	bf00      	nop
  405e0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405e0e:	bc08      	pop	{r3}
  405e10:	469e      	mov	lr, r3
  405e12:	4770      	bx	lr

00405e14 <__fini_array_start>:
  405e14:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
2000000a:	bf00      	nop

2000000c <Font08px_58>:
2000000c:	4401 0000                                   .D..

20000010 <Font08px_59>:
20000010:	c401 0000                                   ....

20000014 <Font08px_UY>:
20000014:	0605 f008 0608 0000                         ........

2000001c <Font08px_91>:
2000001c:	fe03 8282                                   ....

20000020 <Font08px_92>:
20000020:	0603 c038                                   ..8.

20000024 <Font08px_93>:
20000024:	8203 fe82                                   ....

20000028 <Font08px_94>:
20000028:	0403 0402                                   ....

2000002c <Font08px_95>:
2000002c:	8003 8080                                   ....

20000030 <Font08px_96>:
20000030:	0202 0004                                   ....

20000034 <font_table>:
20000034:	0244 2000 0248 2000 024c 2000 0250 2000     D.. H.. L.. P.. 
20000044:	0258 2000 0260 2000 0268 2000 0270 2000     X.. `.. h.. p.. 
20000054:	0334 2000 0338 2000 033c 2000 0340 2000     4.. 8.. <.. @.. 
20000064:	0344 2000 0348 2000 034c 2000 0350 2000     D.. H.. L.. P.. 
20000074:	02e4 2000 02ec 2000 02f4 2000 02fc 2000     ... ... ... ... 
20000084:	01b0 2000 030c 2000 0234 2000 01b8 2000     ... ... 4.. ... 
20000094:	0324 2000 01c0 2000 000c 2000 0010 2000     $.. ... ... ... 
200000a4:	01c8 2000 01d0 2000 01d8 2000 01e0 2000     ... ... ... ... 
200000b4:	01e8 2000 0274 2000 027c 2000 0284 2000     ... t.. |.. ... 
200000c4:	01f4 2000 01fc 2000 0204 2000 020c 2000     ... ... ... ... 
200000d4:	02a0 2000 02a8 2000 02ac 2000 02b4 2000     ... ... ... ... 
200000e4:	02bc 2000 02c4 2000 02cc 2000 02d4 2000     ... ... ... ... 
200000f4:	02dc 2000 0214 2000 021c 2000 0224 2000     ... ... ... $.. 
20000104:	022c 2000 0304 2000 023c 2000 0314 2000     ,.. ... <.. ... 
20000114:	031c 2000 0014 2000 032c 2000 001c 2000     ... ... ,.. ... 
20000124:	0020 2000 0024 2000 0028 2000 002c 2000      .. $.. (.. ,.. 
20000134:	0030 2000 0354 2000 035c 2000 0364 2000     0.. T.. \.. d.. 
20000144:	036c 2000 0374 2000 037c 2000 0380 2000     l.. t.. |.. ... 
20000154:	0388 2000 0390 2000 0394 2000 0398 2000     ... ... ... ... 
20000164:	03a0 2000 03a4 2000 03ac 2000 03b4 2000     ... ... ... ... 
20000174:	03bc 2000 03c4 2000 03cc 2000 03d0 2000     ... ... ... ... 
20000184:	03d8 2000 03dc 2000 03e4 2000 03ec 2000     ... ... ... ... 
20000194:	03f4 2000 03fc 2000 0404 2000 028c 2000     ... ... ... ... 
200001a4:	0290 2000 0294 2000 0298 2000               ... ... ... 

200001b0 <Font08px_N4>:
200001b0:	3005 2428 20fe 0000                         .0($. ..

200001b8 <Font08px_N7>:
200001b8:	0205 f202 060a 0000                         ........

200001c0 <Font08px_N9>:
200001c0:	4c05 9292 7c92 0000                         .L...|..

200001c8 <Font08px_60>:
200001c8:	1004 4428 0082 0000                         ..(D....

200001d0 <Font08px_61>:
200001d0:	2804 2828 0028 0000                         .((((...

200001d8 <Font08px_62>:
200001d8:	8204 2844 0010 0000                         ..D(....

200001e0 <Font08px_63>:
200001e0:	0405 a202 0c12 0000                         ........

200001e8 <Font08px_64>:
200001e8:	3808 9244 aaaa 24ba 0018 0000               .8D....$....

200001f4 <Font08px_UD>:
200001f4:	fe04 8282 007c 0000                         ....|...

200001fc <Font08px_UE>:
200001fc:	fe04 9292 0082 0000                         ........

20000204 <Font08px_UF>:
20000204:	fe04 1212 0002 0000                         ........

2000020c <Font08px_UG>:
2000020c:	7c05 9282 f492 0000                         .|......

20000214 <Font08px_UQ>:
20000214:	7c05 a282 bc42 0000                         .|..B...

2000021c <Font08px_UR>:
2000021c:	fe04 3212 00cc 0000                         ...2....

20000224 <Font08px_US>:
20000224:	4c04 9292 0064 0000                         .L..d...

2000022c <Font08px_UT>:
2000022c:	0205 fe02 0202 0000                         ........

20000234 <Font08px_N6>:
20000234:	7c05 9292 6492 0000                         .|...d..

2000023c <Font08px_UV>:
2000023c:	0e05 c030 0e30 0000                         ..0.0...

20000244 <Font08px_32>:
20000244:	0002 0000                                   ....

20000248 <Font08px_33>:
20000248:	be01 0000                                   ....

2000024c <Font08px_34>:
2000024c:	0603 0600                                   ....

20000250 <Font08px_35>:
20000250:	2805 28fe 28fe 0000                         .(.(.(..

20000258 <Font08px_36>:
20000258:	4805 fe54 2454 0000                         .HT.T$..

20000260 <Font08px_37>:
20000260:	4605 1026 c4c8 0000                         .F&.....

20000268 <Font08px_38>:
20000268:	6c05 ac92 a040 0000                         .l..@...

20000270 <Font08px_39>:
20000270:	0601 0000                                   ....

20000274 <Font08px_UA>:
20000274:	f805 1214 f814 0000                         ........

2000027c <Font08px_UB>:
2000027c:	fe04 9292 006c 0000                         ....l...

20000284 <Font08px_UC>:
20000284:	7c04 8282 0044 0000                         .|..D...

2000028c <Font08px_123>:
2000028c:	1003 826c                                   ..l.

20000290 <Font08px_124>:
20000290:	fe01 0000                                   ....

20000294 <Font08px_125>:
20000294:	8203 106c                                   ..l.

20000298 <Font08px_126>:
20000298:	1005 1008 1020 0000                         .... ...

200002a0 <Font08px_UH>:
200002a0:	fe04 1010 00fe 0000                         ........

200002a8 <Font08px_UI>:
200002a8:	8203 82fe                                   ....

200002ac <Font08px_UJ>:
200002ac:	4004 8080 007e 0000                         .@..~...

200002b4 <Font08px_UK>:
200002b4:	fe05 2810 8244 0000                         ...(D...

200002bc <Font08px_UL>:
200002bc:	fe04 8080 0080 0000                         ........

200002c4 <Font08px_UM>:
200002c4:	fe05 0804 fe04 0000                         ........

200002cc <Font08px_UN>:
200002cc:	fe05 1804 fe60 0000                         ....`...

200002d4 <Font08px_UO>:
200002d4:	7c04 8282 007c 0000                         .|..|...

200002dc <Font08px_UP>:
200002dc:	fe04 1212 000c 0000                         ........

200002e4 <Font08px_N0>:
200002e4:	7c05 92a2 7c8a 0000                         .|...|..

200002ec <Font08px_N1>:
200002ec:	0005 fe84 0080 0000                         ........

200002f4 <Font08px_N2>:
200002f4:	8405 a2c2 8c92 0000                         ........

200002fc <Font08px_N3>:
200002fc:	4405 9282 6c92 0000                         .D...l..

20000304 <Font08px_UU>:
20000304:	7e04 8080 007e 0000                         .~..~...

2000030c <Font08px_N5>:
2000030c:	5e05 8a8a 728a 0000                         .^...r..

20000314 <Font08px_UW>:
20000314:	3e05 38c0 3ec0 0000                         .>.8.>..

2000031c <Font08px_UX>:
2000031c:	c605 1028 c628 0000                         ..(.(...

20000324 <Font08px_N8>:
20000324:	6c05 9292 6c92 0000                         .l...l..

2000032c <Font08px_UZ>:
2000032c:	c205 92a2 868a 0000                         ........

20000334 <Font08px_40>:
20000334:	3803 8244                                   .8D.

20000338 <Font08px_41>:
20000338:	8203 3844                                   ..D8

2000033c <Font08px_42>:
2000033c:	2803 2810                                   .(.(

20000340 <Font08px_43>:
20000340:	1003 1038                                   ..8.

20000344 <Font08px_44>:
20000344:	c001 0000                                   ....

20000348 <Font08px_45>:
20000348:	1003 1010                                   ....

2000034c <Font08px_46>:
2000034c:	8001 0000                                   ....

20000350 <Font08px_47>:
20000350:	c003 0638                                   ..8.

20000354 <Font08px_la>:
20000354:	7004 8888 00f8 0000                         .p......

2000035c <Font08px_lb>:
2000035c:	fe04 8888 0070 0000                         ....p...

20000364 <Font08px_lc>:
20000364:	7004 8888 0088 0000                         .p......

2000036c <Font08px_ld>:
2000036c:	7004 8888 00fe 0000                         .p......

20000374 <Font08px_le>:
20000374:	7004 a8a8 0030 0000                         .p..0...

2000037c <Font08px_lf>:
2000037c:	fc03 0212                                   ....

20000380 <Font08px_lg>:
20000380:	1004 a8a8 0078 0000                         ....x...

20000388 <Font08px_lh>:
20000388:	fe04 0810 00f0 0000                         ........

20000390 <Font08px_li>:
20000390:	fa01 0000                                   ....

20000394 <Font08px_lj>:
20000394:	8002 007a                                   ..z.

20000398 <Font08px_lk>:
20000398:	fe04 5020 0088 0000                         .. P....

200003a0 <Font08px_ll>:
200003a0:	fe01 0000                                   ....

200003a4 <Font08px_lm>:
200003a4:	f805 f008 f008 0000                         ........

200003ac <Font08px_ln>:
200003ac:	f804 0810 00f0 0000                         ........

200003b4 <Font08px_lo>:
200003b4:	7004 8888 0070 0000                         .p..p...

200003bc <Font08px_lp>:
200003bc:	f804 2828 0010 0000                         ..((....

200003c4 <Font08px_lq>:
200003c4:	1004 2828 00f8 0000                         ..((....

200003cc <Font08px_lr>:
200003cc:	f803 0810                                   ....

200003d0 <Font08px_ls>:
200003d0:	9004 a8a8 0048 0000                         ....H...

200003d8 <Font08px_lt>:
200003d8:	0803 887c                                   ..|.

200003dc <Font08px_lu>:
200003dc:	7804 8080 00f8 0000                         .x......

200003e4 <Font08px_lv>:
200003e4:	1805 8060 1860 0000                         ..`.`...

200003ec <Font08px_lw>:
200003ec:	3805 30c0 38c0 0000                         .8.0.8..

200003f4 <Font08px_lx>:
200003f4:	8805 2050 8850 0000                         ..P P...

200003fc <Font08px_ly>:
200003fc:	1804 a0a0 0078 0000                         ....x...

20000404 <Font08px_lz>:
20000404:	c803 98a8                                   ....

20000408 <SystemCoreClock>:
20000408:	0900 003d 0000 0000                         ..=.....

20000410 <impure_data>:
20000410:	0000 0000 06fc 2000 0764 2000 07cc 2000     ....... d.. ... 
	...
20000444:	5c74 0040 0000 0000 0000 0000 0000 0000     t\@.............
	...
200004b8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200004c8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000838 <_impure_ptr>:
20000838:	0410 2000                                   ... 

2000083c <lconv>:
2000083c:	5c30 0040 5c70 0040 5c70 0040 5c70 0040     0\@.p\@.p\@.p\@.
2000084c:	5c70 0040 5c70 0040 5c70 0040 5c70 0040     p\@.p\@.p\@.p\@.
2000085c:	5c70 0040 5c70 0040 ffff ffff ffff ffff     p\@.p\@.........
2000086c:	ffff ffff ffff 0000                         ........

20000874 <__malloc_av_>:
	...
2000087c:	0874 2000 0874 2000 087c 2000 087c 2000     t.. t.. |.. |.. 
2000088c:	0884 2000 0884 2000 088c 2000 088c 2000     ... ... ... ... 
2000089c:	0894 2000 0894 2000 089c 2000 089c 2000     ... ... ... ... 
200008ac:	08a4 2000 08a4 2000 08ac 2000 08ac 2000     ... ... ... ... 
200008bc:	08b4 2000 08b4 2000 08bc 2000 08bc 2000     ... ... ... ... 
200008cc:	08c4 2000 08c4 2000 08cc 2000 08cc 2000     ... ... ... ... 
200008dc:	08d4 2000 08d4 2000 08dc 2000 08dc 2000     ... ... ... ... 
200008ec:	08e4 2000 08e4 2000 08ec 2000 08ec 2000     ... ... ... ... 
200008fc:	08f4 2000 08f4 2000 08fc 2000 08fc 2000     ... ... ... ... 
2000090c:	0904 2000 0904 2000 090c 2000 090c 2000     ... ... ... ... 
2000091c:	0914 2000 0914 2000 091c 2000 091c 2000     ... ... ... ... 
2000092c:	0924 2000 0924 2000 092c 2000 092c 2000     $.. $.. ,.. ,.. 
2000093c:	0934 2000 0934 2000 093c 2000 093c 2000     4.. 4.. <.. <.. 
2000094c:	0944 2000 0944 2000 094c 2000 094c 2000     D.. D.. L.. L.. 
2000095c:	0954 2000 0954 2000 095c 2000 095c 2000     T.. T.. \.. \.. 
2000096c:	0964 2000 0964 2000 096c 2000 096c 2000     d.. d.. l.. l.. 
2000097c:	0974 2000 0974 2000 097c 2000 097c 2000     t.. t.. |.. |.. 
2000098c:	0984 2000 0984 2000 098c 2000 098c 2000     ... ... ... ... 
2000099c:	0994 2000 0994 2000 099c 2000 099c 2000     ... ... ... ... 
200009ac:	09a4 2000 09a4 2000 09ac 2000 09ac 2000     ... ... ... ... 
200009bc:	09b4 2000 09b4 2000 09bc 2000 09bc 2000     ... ... ... ... 
200009cc:	09c4 2000 09c4 2000 09cc 2000 09cc 2000     ... ... ... ... 
200009dc:	09d4 2000 09d4 2000 09dc 2000 09dc 2000     ... ... ... ... 
200009ec:	09e4 2000 09e4 2000 09ec 2000 09ec 2000     ... ... ... ... 
200009fc:	09f4 2000 09f4 2000 09fc 2000 09fc 2000     ... ... ... ... 
20000a0c:	0a04 2000 0a04 2000 0a0c 2000 0a0c 2000     ... ... ... ... 
20000a1c:	0a14 2000 0a14 2000 0a1c 2000 0a1c 2000     ... ... ... ... 
20000a2c:	0a24 2000 0a24 2000 0a2c 2000 0a2c 2000     $.. $.. ,.. ,.. 
20000a3c:	0a34 2000 0a34 2000 0a3c 2000 0a3c 2000     4.. 4.. <.. <.. 
20000a4c:	0a44 2000 0a44 2000 0a4c 2000 0a4c 2000     D.. D.. L.. L.. 
20000a5c:	0a54 2000 0a54 2000 0a5c 2000 0a5c 2000     T.. T.. \.. \.. 
20000a6c:	0a64 2000 0a64 2000 0a6c 2000 0a6c 2000     d.. d.. l.. l.. 
20000a7c:	0a74 2000 0a74 2000 0a7c 2000 0a7c 2000     t.. t.. |.. |.. 
20000a8c:	0a84 2000 0a84 2000 0a8c 2000 0a8c 2000     ... ... ... ... 
20000a9c:	0a94 2000 0a94 2000 0a9c 2000 0a9c 2000     ... ... ... ... 
20000aac:	0aa4 2000 0aa4 2000 0aac 2000 0aac 2000     ... ... ... ... 
20000abc:	0ab4 2000 0ab4 2000 0abc 2000 0abc 2000     ... ... ... ... 
20000acc:	0ac4 2000 0ac4 2000 0acc 2000 0acc 2000     ... ... ... ... 
20000adc:	0ad4 2000 0ad4 2000 0adc 2000 0adc 2000     ... ... ... ... 
20000aec:	0ae4 2000 0ae4 2000 0aec 2000 0aec 2000     ... ... ... ... 
20000afc:	0af4 2000 0af4 2000 0afc 2000 0afc 2000     ... ... ... ... 
20000b0c:	0b04 2000 0b04 2000 0b0c 2000 0b0c 2000     ... ... ... ... 
20000b1c:	0b14 2000 0b14 2000 0b1c 2000 0b1c 2000     ... ... ... ... 
20000b2c:	0b24 2000 0b24 2000 0b2c 2000 0b2c 2000     $.. $.. ,.. ,.. 
20000b3c:	0b34 2000 0b34 2000 0b3c 2000 0b3c 2000     4.. 4.. <.. <.. 
20000b4c:	0b44 2000 0b44 2000 0b4c 2000 0b4c 2000     D.. D.. L.. L.. 
20000b5c:	0b54 2000 0b54 2000 0b5c 2000 0b5c 2000     T.. T.. \.. \.. 
20000b6c:	0b64 2000 0b64 2000 0b6c 2000 0b6c 2000     d.. d.. l.. l.. 
20000b7c:	0b74 2000 0b74 2000 0b7c 2000 0b7c 2000     t.. t.. |.. |.. 
20000b8c:	0b84 2000 0b84 2000 0b8c 2000 0b8c 2000     ... ... ... ... 
20000b9c:	0b94 2000 0b94 2000 0b9c 2000 0b9c 2000     ... ... ... ... 
20000bac:	0ba4 2000 0ba4 2000 0bac 2000 0bac 2000     ... ... ... ... 
20000bbc:	0bb4 2000 0bb4 2000 0bbc 2000 0bbc 2000     ... ... ... ... 
20000bcc:	0bc4 2000 0bc4 2000 0bcc 2000 0bcc 2000     ... ... ... ... 
20000bdc:	0bd4 2000 0bd4 2000 0bdc 2000 0bdc 2000     ... ... ... ... 
20000bec:	0be4 2000 0be4 2000 0bec 2000 0bec 2000     ... ... ... ... 
20000bfc:	0bf4 2000 0bf4 2000 0bfc 2000 0bfc 2000     ... ... ... ... 
20000c0c:	0c04 2000 0c04 2000 0c0c 2000 0c0c 2000     ... ... ... ... 
20000c1c:	0c14 2000 0c14 2000 0c1c 2000 0c1c 2000     ... ... ... ... 
20000c2c:	0c24 2000 0c24 2000 0c2c 2000 0c2c 2000     $.. $.. ,.. ,.. 
20000c3c:	0c34 2000 0c34 2000 0c3c 2000 0c3c 2000     4.. 4.. <.. <.. 
20000c4c:	0c44 2000 0c44 2000 0c4c 2000 0c4c 2000     D.. D.. L.. L.. 
20000c5c:	0c54 2000 0c54 2000 0c5c 2000 0c5c 2000     T.. T.. \.. \.. 
20000c6c:	0c64 2000 0c64 2000 0c6c 2000 0c6c 2000     d.. d.. l.. l.. 

20000c7c <__malloc_trim_threshold>:
20000c7c:	0000 0002                                   ....

20000c80 <__malloc_sbrk_base>:
20000c80:	ffff ffff                                   ....
