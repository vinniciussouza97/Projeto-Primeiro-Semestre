
Projeto_Completo.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004ab4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00404ab4  00404ab4  00014ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00404abc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000108  200009c0  0040547c  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20000ac8  00405584  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   000109eb  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000025cd  00000000  00000000  0003142e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003e5d  00000000  00000000  000339fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000960  00000000  00000000  00037858  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008b0  00000000  00000000  000381b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00012cdc  00000000  00000000  00038a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000a648  00000000  00000000  0004b744  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005309b  00000000  00000000  00055d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000023fc  00000000  00000000  000a8e28  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	c8 3a 00 20 a1 09 40 00 9d 09 40 00 9d 09 40 00     .:. ..@...@...@.
  400010:	9d 09 40 00 9d 09 40 00 9d 09 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	9d 09 40 00 9d 09 40 00 00 00 00 00 9d 09 40 00     ..@...@.......@.
  40003c:	9d 09 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.
  40004c:	9d 09 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.
  40005c:	9d 09 40 00 9d 09 40 00 9d 09 40 00 00 00 00 00     ..@...@...@.....
  40006c:	25 08 40 00 39 08 40 00 4d 08 40 00 9d 09 40 00     %.@.9.@.M.@...@.
  40007c:	9d 09 40 00 00 00 00 00 00 00 00 00 9d 09 40 00     ..@...........@.
  40008c:	9d 09 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.
  40009c:	e1 0d 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.
  4000ac:	9d 09 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.
  4000bc:	9d 09 40 00 9d 09 40 00 9d 09 40 00 9d 09 40 00     ..@...@...@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00404abc 	.word	0x00404abc

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00404abc 	.word	0x00404abc
  40012c:	200009c4 	.word	0x200009c4
  400130:	00404abc 	.word	0x00404abc
  400134:	00000000 	.word	0x00000000

00400138 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40013c:	b980      	cbnz	r0, 400160 <_read+0x28>
  40013e:	460c      	mov	r4, r1
  400140:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400142:	2a00      	cmp	r2, #0
  400144:	dd0f      	ble.n	400166 <_read+0x2e>
  400146:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400148:	4e08      	ldr	r6, [pc, #32]	; (40016c <_read+0x34>)
  40014a:	4d09      	ldr	r5, [pc, #36]	; (400170 <_read+0x38>)
  40014c:	6830      	ldr	r0, [r6, #0]
  40014e:	4621      	mov	r1, r4
  400150:	682b      	ldr	r3, [r5, #0]
  400152:	4798      	blx	r3
		ptr++;
  400154:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400156:	42bc      	cmp	r4, r7
  400158:	d1f8      	bne.n	40014c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40015a:	4640      	mov	r0, r8
  40015c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400160:	f04f 38ff 	mov.w	r8, #4294967295
  400164:	e7f9      	b.n	40015a <_read+0x22>
	for (; len > 0; --len) {
  400166:	4680      	mov	r8, r0
  400168:	e7f7      	b.n	40015a <_read+0x22>
  40016a:	bf00      	nop
  40016c:	20000a90 	.word	0x20000a90
  400170:	20000a88 	.word	0x20000a88

00400174 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400174:	6943      	ldr	r3, [r0, #20]
  400176:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40017a:	bf1d      	ittte	ne
  40017c:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400180:	61c1      	strne	r1, [r0, #28]
	return 0;
  400182:	2000      	movne	r0, #0
		return 1;
  400184:	2001      	moveq	r0, #1
}
  400186:	4770      	bx	lr

00400188 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400188:	6943      	ldr	r3, [r0, #20]
  40018a:	f013 0f01 	tst.w	r3, #1
  40018e:	d005      	beq.n	40019c <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400190:	6983      	ldr	r3, [r0, #24]
  400192:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400196:	600b      	str	r3, [r1, #0]

	return 0;
  400198:	2000      	movs	r0, #0
  40019a:	4770      	bx	lr
		return 1;
  40019c:	2001      	movs	r0, #1
}
  40019e:	4770      	bx	lr

004001a0 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001a0:	3801      	subs	r0, #1
  4001a2:	2802      	cmp	r0, #2
  4001a4:	d815      	bhi.n	4001d2 <_write+0x32>
{
  4001a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001aa:	460e      	mov	r6, r1
  4001ac:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001ae:	b19a      	cbz	r2, 4001d8 <_write+0x38>
  4001b0:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001b2:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4001ec <_write+0x4c>
  4001b6:	4f0c      	ldr	r7, [pc, #48]	; (4001e8 <_write+0x48>)
  4001b8:	f8d8 0000 	ldr.w	r0, [r8]
  4001bc:	f815 1b01 	ldrb.w	r1, [r5], #1
  4001c0:	683b      	ldr	r3, [r7, #0]
  4001c2:	4798      	blx	r3
  4001c4:	2800      	cmp	r0, #0
  4001c6:	db0a      	blt.n	4001de <_write+0x3e>
  4001c8:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4001ca:	3c01      	subs	r4, #1
  4001cc:	d1f4      	bne.n	4001b8 <_write+0x18>
  4001ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001d2:	f04f 30ff 	mov.w	r0, #4294967295
  4001d6:	4770      	bx	lr
	for (; len != 0; --len) {
  4001d8:	4610      	mov	r0, r2
  4001da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4001de:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4001e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001e6:	bf00      	nop
  4001e8:	20000a8c 	.word	0x20000a8c
  4001ec:	20000a90 	.word	0x20000a90

004001f0 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4001f0:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4001f2:	0189      	lsls	r1, r1, #6
  4001f4:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4001f6:	2402      	movs	r4, #2
  4001f8:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4001fa:	f04f 31ff 	mov.w	r1, #4294967295
  4001fe:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400200:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400202:	605a      	str	r2, [r3, #4]
}
  400204:	bc10      	pop	{r4}
  400206:	4770      	bx	lr

00400208 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400208:	0189      	lsls	r1, r1, #6
  40020a:	2305      	movs	r3, #5
  40020c:	5043      	str	r3, [r0, r1]
  40020e:	4770      	bx	lr

00400210 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400210:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400214:	61ca      	str	r2, [r1, #28]
  400216:	4770      	bx	lr

00400218 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400218:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  40021c:	624a      	str	r2, [r1, #36]	; 0x24
  40021e:	4770      	bx	lr

00400220 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400220:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400224:	6a08      	ldr	r0, [r1, #32]
}
  400226:	4770      	bx	lr

00400228 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400228:	b4f0      	push	{r4, r5, r6, r7}
  40022a:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40022c:	2402      	movs	r4, #2
  40022e:	9401      	str	r4, [sp, #4]
  400230:	2408      	movs	r4, #8
  400232:	9402      	str	r4, [sp, #8]
  400234:	2420      	movs	r4, #32
  400236:	9403      	str	r4, [sp, #12]
  400238:	2480      	movs	r4, #128	; 0x80
  40023a:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40023c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40023e:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400240:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400242:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400246:	d814      	bhi.n	400272 <tc_find_mck_divisor+0x4a>
  400248:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40024a:	42a0      	cmp	r0, r4
  40024c:	d217      	bcs.n	40027e <tc_find_mck_divisor+0x56>
  40024e:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400250:	af01      	add	r7, sp, #4
  400252:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400256:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40025a:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  40025c:	4284      	cmp	r4, r0
  40025e:	d30a      	bcc.n	400276 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400260:	4286      	cmp	r6, r0
  400262:	d90d      	bls.n	400280 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400264:	3501      	adds	r5, #1
	for (ul_index = 0;
  400266:	2d05      	cmp	r5, #5
  400268:	d1f3      	bne.n	400252 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40026a:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  40026c:	b006      	add	sp, #24
  40026e:	bcf0      	pop	{r4, r5, r6, r7}
  400270:	4770      	bx	lr
			return 0;
  400272:	2000      	movs	r0, #0
  400274:	e7fa      	b.n	40026c <tc_find_mck_divisor+0x44>
  400276:	2000      	movs	r0, #0
  400278:	e7f8      	b.n	40026c <tc_find_mck_divisor+0x44>
	return 1;
  40027a:	2001      	movs	r0, #1
  40027c:	e7f6      	b.n	40026c <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  40027e:	2500      	movs	r5, #0
	if (p_uldiv) {
  400280:	b12a      	cbz	r2, 40028e <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400282:	a906      	add	r1, sp, #24
  400284:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400288:	f851 1c14 	ldr.w	r1, [r1, #-20]
  40028c:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  40028e:	2b00      	cmp	r3, #0
  400290:	d0f3      	beq.n	40027a <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400292:	601d      	str	r5, [r3, #0]
	return 1;
  400294:	2001      	movs	r0, #1
  400296:	e7e9      	b.n	40026c <tc_find_mck_divisor+0x44>

00400298 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  400298:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  40029a:	23ac      	movs	r3, #172	; 0xac
  40029c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  40029e:	680b      	ldr	r3, [r1, #0]
  4002a0:	684a      	ldr	r2, [r1, #4]
  4002a2:	fbb3 f3f2 	udiv	r3, r3, r2
  4002a6:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  4002a8:	1e5c      	subs	r4, r3, #1
  4002aa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  4002ae:	4294      	cmp	r4, r2
  4002b0:	d80b      	bhi.n	4002ca <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  4002b2:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  4002b4:	688b      	ldr	r3, [r1, #8]
  4002b6:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  4002b8:	f240 2302 	movw	r3, #514	; 0x202
  4002bc:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  4002c0:	2350      	movs	r3, #80	; 0x50
  4002c2:	6003      	str	r3, [r0, #0]

	return 0;
  4002c4:	2000      	movs	r0, #0
}
  4002c6:	bc10      	pop	{r4}
  4002c8:	4770      	bx	lr
		return 1;
  4002ca:	2001      	movs	r0, #1
  4002cc:	e7fb      	b.n	4002c6 <uart_init+0x2e>

004002ce <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4002ce:	6943      	ldr	r3, [r0, #20]
  4002d0:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4002d4:	bf1a      	itte	ne
  4002d6:	61c1      	strne	r1, [r0, #28]
	return 0;
  4002d8:	2000      	movne	r0, #0
		return 1;
  4002da:	2001      	moveq	r0, #1
}
  4002dc:	4770      	bx	lr

004002de <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4002de:	6943      	ldr	r3, [r0, #20]
  4002e0:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4002e4:	bf1d      	ittte	ne
  4002e6:	6983      	ldrne	r3, [r0, #24]
  4002e8:	700b      	strbne	r3, [r1, #0]
	return 0;
  4002ea:	2000      	movne	r0, #0
		return 1;
  4002ec:	2001      	moveq	r0, #1
}
  4002ee:	4770      	bx	lr

004002f0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4002f0:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4002f2:	480e      	ldr	r0, [pc, #56]	; (40032c <sysclk_init+0x3c>)
  4002f4:	4b0e      	ldr	r3, [pc, #56]	; (400330 <sysclk_init+0x40>)
  4002f6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4002f8:	213e      	movs	r1, #62	; 0x3e
  4002fa:	2000      	movs	r0, #0
  4002fc:	4b0d      	ldr	r3, [pc, #52]	; (400334 <sysclk_init+0x44>)
  4002fe:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400300:	4c0d      	ldr	r4, [pc, #52]	; (400338 <sysclk_init+0x48>)
  400302:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400304:	2800      	cmp	r0, #0
  400306:	d0fc      	beq.n	400302 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400308:	4b0c      	ldr	r3, [pc, #48]	; (40033c <sysclk_init+0x4c>)
  40030a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40030c:	4a0c      	ldr	r2, [pc, #48]	; (400340 <sysclk_init+0x50>)
  40030e:	4b0d      	ldr	r3, [pc, #52]	; (400344 <sysclk_init+0x54>)
  400310:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400312:	4c0d      	ldr	r4, [pc, #52]	; (400348 <sysclk_init+0x58>)
  400314:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400316:	2800      	cmp	r0, #0
  400318:	d0fc      	beq.n	400314 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40031a:	2010      	movs	r0, #16
  40031c:	4b0b      	ldr	r3, [pc, #44]	; (40034c <sysclk_init+0x5c>)
  40031e:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400320:	4b0b      	ldr	r3, [pc, #44]	; (400350 <sysclk_init+0x60>)
  400322:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400324:	4801      	ldr	r0, [pc, #4]	; (40032c <sysclk_init+0x3c>)
  400326:	4b02      	ldr	r3, [pc, #8]	; (400330 <sysclk_init+0x40>)
  400328:	4798      	blx	r3
  40032a:	bd10      	pop	{r4, pc}
  40032c:	07270e00 	.word	0x07270e00
  400330:	00400b5d 	.word	0x00400b5d
  400334:	004008c5 	.word	0x004008c5
  400338:	00400919 	.word	0x00400919
  40033c:	00400929 	.word	0x00400929
  400340:	20133f01 	.word	0x20133f01
  400344:	400e0400 	.word	0x400e0400
  400348:	00400939 	.word	0x00400939
  40034c:	00400861 	.word	0x00400861
  400350:	00400a4d 	.word	0x00400a4d

00400354 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400354:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400356:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40035a:	4b46      	ldr	r3, [pc, #280]	; (400474 <board_init+0x120>)
  40035c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40035e:	200b      	movs	r0, #11
  400360:	4c45      	ldr	r4, [pc, #276]	; (400478 <board_init+0x124>)
  400362:	47a0      	blx	r4
  400364:	200c      	movs	r0, #12
  400366:	47a0      	blx	r4
  400368:	200d      	movs	r0, #13
  40036a:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  40036c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400370:	2013      	movs	r0, #19
  400372:	4c42      	ldr	r4, [pc, #264]	; (40047c <board_init+0x128>)
  400374:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400376:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40037a:	2014      	movs	r0, #20
  40037c:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  40037e:	4940      	ldr	r1, [pc, #256]	; (400480 <board_init+0x12c>)
  400380:	2023      	movs	r0, #35	; 0x23
  400382:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400384:	493f      	ldr	r1, [pc, #252]	; (400484 <board_init+0x130>)
  400386:	204c      	movs	r0, #76	; 0x4c
  400388:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  40038a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  40038e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400392:	483d      	ldr	r0, [pc, #244]	; (400488 <board_init+0x134>)
  400394:	4b3d      	ldr	r3, [pc, #244]	; (40048c <board_init+0x138>)
  400396:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  400398:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40039c:	2000      	movs	r0, #0
  40039e:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  4003a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003a4:	2008      	movs	r0, #8
  4003a6:	47a0      	blx	r4

	/* PWMH0 configuration */
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
  4003a8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4003ac:	2052      	movs	r0, #82	; 0x52
  4003ae:	47a0      	blx	r4
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  4003b0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003b4:	200c      	movs	r0, #12
  4003b6:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4003b8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003bc:	200d      	movs	r0, #13
  4003be:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4003c0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003c4:	200e      	movs	r0, #14
  4003c6:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  4003c8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003cc:	200b      	movs	r0, #11
  4003ce:	47a0      	blx	r4
#  endif
#endif /* CONF_BOARD_SPI */

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  4003d0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003d4:	2015      	movs	r0, #21
  4003d6:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  4003d8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4003dc:	2016      	movs	r0, #22
  4003de:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
#endif

#ifdef CONF_BOARD_ADM3312_EN
	/* Configure ADM33312 enable pin */
	gpio_configure_pin(PIN_USART1_EN_IDX, PIN_USART1_EN_FLAGS);
  4003e0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4003e4:	2017      	movs	r0, #23
  4003e6:	47a0      	blx	r4
	gpio_set_pin_low(PIN_USART1_EN_IDX);
  4003e8:	2017      	movs	r0, #23
  4003ea:	4b29      	ldr	r3, [pc, #164]	; (400490 <board_init+0x13c>)
  4003ec:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  4003ee:	4d29      	ldr	r5, [pc, #164]	; (400494 <board_init+0x140>)
  4003f0:	4629      	mov	r1, r5
  4003f2:	2040      	movs	r0, #64	; 0x40
  4003f4:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  4003f6:	4629      	mov	r1, r5
  4003f8:	2041      	movs	r0, #65	; 0x41
  4003fa:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  4003fc:	4629      	mov	r1, r5
  4003fe:	2042      	movs	r0, #66	; 0x42
  400400:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  400402:	4629      	mov	r1, r5
  400404:	2043      	movs	r0, #67	; 0x43
  400406:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400408:	4629      	mov	r1, r5
  40040a:	2044      	movs	r0, #68	; 0x44
  40040c:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  40040e:	4629      	mov	r1, r5
  400410:	2045      	movs	r0, #69	; 0x45
  400412:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  400414:	4629      	mov	r1, r5
  400416:	2046      	movs	r0, #70	; 0x46
  400418:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  40041a:	4629      	mov	r1, r5
  40041c:	2047      	movs	r0, #71	; 0x47
  40041e:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  400420:	4629      	mov	r1, r5
  400422:	204b      	movs	r0, #75	; 0x4b
  400424:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  400426:	4629      	mov	r1, r5
  400428:	2048      	movs	r0, #72	; 0x48
  40042a:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  40042c:	4629      	mov	r1, r5
  40042e:	204f      	movs	r0, #79	; 0x4f
  400430:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  400432:	4629      	mov	r1, r5
  400434:	2053      	movs	r0, #83	; 0x53
  400436:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400438:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  40043c:	204d      	movs	r0, #77	; 0x4d
  40043e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_ADS7843
	/* Configure Touchscreen SPI pins */
	gpio_configure_pin(BOARD_ADS7843_IRQ_GPIO,BOARD_ADS7843_IRQ_FLAGS);
  400440:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
  400444:	4629      	mov	r1, r5
  400446:	2010      	movs	r0, #16
  400448:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ADS7843_BUSY_GPIO, BOARD_ADS7843_BUSY_FLAGS);
  40044a:	4629      	mov	r1, r5
  40044c:	2011      	movs	r0, #17
  40044e:	47a0      	blx	r4
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400450:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400454:	200c      	movs	r0, #12
  400456:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400458:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40045c:	200d      	movs	r0, #13
  40045e:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400460:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400464:	200e      	movs	r0, #14
  400466:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400468:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40046c:	200b      	movs	r0, #11
  40046e:	47a0      	blx	r4
  400470:	bd38      	pop	{r3, r4, r5, pc}
  400472:	bf00      	nop
  400474:	400e1450 	.word	0x400e1450
  400478:	00400949 	.word	0x00400949
  40047c:	004005c5 	.word	0x004005c5
  400480:	28000079 	.word	0x28000079
  400484:	28000059 	.word	0x28000059
  400488:	400e0e00 	.word	0x400e0e00
  40048c:	004006e5 	.word	0x004006e5
  400490:	00400589 	.word	0x00400589
  400494:	08000001 	.word	0x08000001

00400498 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400498:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40049a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40049e:	d039      	beq.n	400514 <pio_set_peripheral+0x7c>
  4004a0:	d813      	bhi.n	4004ca <pio_set_peripheral+0x32>
  4004a2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4004a6:	d025      	beq.n	4004f4 <pio_set_peripheral+0x5c>
  4004a8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4004ac:	d10a      	bne.n	4004c4 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004ae:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004b0:	4313      	orrs	r3, r2
  4004b2:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4004b4:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4004b6:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4004b8:	400b      	ands	r3, r1
  4004ba:	ea23 0302 	bic.w	r3, r3, r2
  4004be:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4004c0:	6042      	str	r2, [r0, #4]
  4004c2:	4770      	bx	lr
	switch (ul_type) {
  4004c4:	2900      	cmp	r1, #0
  4004c6:	d1fb      	bne.n	4004c0 <pio_set_peripheral+0x28>
  4004c8:	4770      	bx	lr
  4004ca:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4004ce:	d020      	beq.n	400512 <pio_set_peripheral+0x7a>
  4004d0:	d809      	bhi.n	4004e6 <pio_set_peripheral+0x4e>
  4004d2:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4004d6:	d1f3      	bne.n	4004c0 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4004da:	4313      	orrs	r3, r2
  4004dc:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4004de:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4004e0:	4313      	orrs	r3, r2
  4004e2:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4004e4:	e7ec      	b.n	4004c0 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4004e6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4004ea:	d012      	beq.n	400512 <pio_set_peripheral+0x7a>
  4004ec:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4004f0:	d00f      	beq.n	400512 <pio_set_peripheral+0x7a>
  4004f2:	e7e5      	b.n	4004c0 <pio_set_peripheral+0x28>
{
  4004f4:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  4004f6:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4004f8:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4004fa:	43d3      	mvns	r3, r2
  4004fc:	4021      	ands	r1, r4
  4004fe:	461c      	mov	r4, r3
  400500:	4019      	ands	r1, r3
  400502:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400504:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400506:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400508:	400b      	ands	r3, r1
  40050a:	4023      	ands	r3, r4
  40050c:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40050e:	6042      	str	r2, [r0, #4]
}
  400510:	bc10      	pop	{r4}
  400512:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400514:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400516:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400518:	400b      	ands	r3, r1
  40051a:	ea23 0302 	bic.w	r3, r3, r2
  40051e:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400520:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400522:	4313      	orrs	r3, r2
  400524:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400526:	e7cb      	b.n	4004c0 <pio_set_peripheral+0x28>

00400528 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400528:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40052a:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40052e:	bf14      	ite	ne
  400530:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400532:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400534:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400538:	bf14      	ite	ne
  40053a:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40053c:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40053e:	f012 0f02 	tst.w	r2, #2
  400542:	d107      	bne.n	400554 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400544:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400548:	bf18      	it	ne
  40054a:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40054e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400550:	6001      	str	r1, [r0, #0]
  400552:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400554:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400558:	e7f9      	b.n	40054e <pio_set_input+0x26>

0040055a <pio_set_output>:
{
  40055a:	b410      	push	{r4}
  40055c:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40055e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400560:	b944      	cbnz	r4, 400574 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400562:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400564:	b143      	cbz	r3, 400578 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400566:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400568:	b942      	cbnz	r2, 40057c <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40056a:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40056c:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40056e:	6001      	str	r1, [r0, #0]
}
  400570:	bc10      	pop	{r4}
  400572:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400574:	6641      	str	r1, [r0, #100]	; 0x64
  400576:	e7f5      	b.n	400564 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400578:	6541      	str	r1, [r0, #84]	; 0x54
  40057a:	e7f5      	b.n	400568 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40057c:	6301      	str	r1, [r0, #48]	; 0x30
  40057e:	e7f5      	b.n	40056c <pio_set_output+0x12>

00400580 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400580:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400582:	4770      	bx	lr

00400584 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400584:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400586:	4770      	bx	lr

00400588 <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400588:	0943      	lsrs	r3, r0, #5
  40058a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  40058e:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400592:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400594:	f000 001f 	and.w	r0, r0, #31
  400598:	2201      	movs	r2, #1
  40059a:	fa02 f000 	lsl.w	r0, r2, r0
  40059e:	6358      	str	r0, [r3, #52]	; 0x34
  4005a0:	4770      	bx	lr

004005a2 <pio_toggle_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4005a2:	0943      	lsrs	r3, r0, #5
  4005a4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4005a8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4005ac:	025b      	lsls	r3, r3, #9
	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  4005ae:	6b99      	ldr	r1, [r3, #56]	; 0x38
  4005b0:	f000 021f 	and.w	r2, r0, #31
  4005b4:	2001      	movs	r0, #1
  4005b6:	4090      	lsls	r0, r2
  4005b8:	4201      	tst	r1, r0
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  4005ba:	bf14      	ite	ne
  4005bc:	6358      	strne	r0, [r3, #52]	; 0x34
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  4005be:	6318      	streq	r0, [r3, #48]	; 0x30
  4005c0:	4770      	bx	lr
	...

004005c4 <pio_configure_pin>:
{
  4005c4:	b570      	push	{r4, r5, r6, lr}
  4005c6:	b082      	sub	sp, #8
  4005c8:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4005ca:	0943      	lsrs	r3, r0, #5
  4005cc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4005d0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4005d4:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4005d6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4005da:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4005de:	d053      	beq.n	400688 <pio_configure_pin+0xc4>
  4005e0:	d80a      	bhi.n	4005f8 <pio_configure_pin+0x34>
  4005e2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4005e6:	d02d      	beq.n	400644 <pio_configure_pin+0x80>
  4005e8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4005ec:	d03b      	beq.n	400666 <pio_configure_pin+0xa2>
  4005ee:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4005f2:	d015      	beq.n	400620 <pio_configure_pin+0x5c>
		return 0;
  4005f4:	2000      	movs	r0, #0
  4005f6:	e023      	b.n	400640 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  4005f8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4005fc:	d055      	beq.n	4006aa <pio_configure_pin+0xe6>
  4005fe:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400602:	d052      	beq.n	4006aa <pio_configure_pin+0xe6>
  400604:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400608:	d1f4      	bne.n	4005f4 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40060a:	f000 011f 	and.w	r1, r0, #31
  40060e:	2601      	movs	r6, #1
  400610:	462a      	mov	r2, r5
  400612:	fa06 f101 	lsl.w	r1, r6, r1
  400616:	4620      	mov	r0, r4
  400618:	4b2f      	ldr	r3, [pc, #188]	; (4006d8 <pio_configure_pin+0x114>)
  40061a:	4798      	blx	r3
	return 1;
  40061c:	4630      	mov	r0, r6
		break;
  40061e:	e00f      	b.n	400640 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400620:	f000 001f 	and.w	r0, r0, #31
  400624:	2601      	movs	r6, #1
  400626:	4086      	lsls	r6, r0
  400628:	4632      	mov	r2, r6
  40062a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40062e:	4620      	mov	r0, r4
  400630:	4b2a      	ldr	r3, [pc, #168]	; (4006dc <pio_configure_pin+0x118>)
  400632:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400634:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400638:	bf14      	ite	ne
  40063a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40063c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40063e:	2001      	movs	r0, #1
}
  400640:	b002      	add	sp, #8
  400642:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400644:	f000 001f 	and.w	r0, r0, #31
  400648:	2601      	movs	r6, #1
  40064a:	4086      	lsls	r6, r0
  40064c:	4632      	mov	r2, r6
  40064e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400652:	4620      	mov	r0, r4
  400654:	4b21      	ldr	r3, [pc, #132]	; (4006dc <pio_configure_pin+0x118>)
  400656:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400658:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40065c:	bf14      	ite	ne
  40065e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400660:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400662:	2001      	movs	r0, #1
  400664:	e7ec      	b.n	400640 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400666:	f000 001f 	and.w	r0, r0, #31
  40066a:	2601      	movs	r6, #1
  40066c:	4086      	lsls	r6, r0
  40066e:	4632      	mov	r2, r6
  400670:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400674:	4620      	mov	r0, r4
  400676:	4b19      	ldr	r3, [pc, #100]	; (4006dc <pio_configure_pin+0x118>)
  400678:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40067a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40067e:	bf14      	ite	ne
  400680:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400682:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400684:	2001      	movs	r0, #1
  400686:	e7db      	b.n	400640 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400688:	f000 001f 	and.w	r0, r0, #31
  40068c:	2601      	movs	r6, #1
  40068e:	4086      	lsls	r6, r0
  400690:	4632      	mov	r2, r6
  400692:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400696:	4620      	mov	r0, r4
  400698:	4b10      	ldr	r3, [pc, #64]	; (4006dc <pio_configure_pin+0x118>)
  40069a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40069c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4006a0:	bf14      	ite	ne
  4006a2:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4006a4:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4006a6:	2001      	movs	r0, #1
  4006a8:	e7ca      	b.n	400640 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4006aa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4006ae:	f000 011f 	and.w	r1, r0, #31
  4006b2:	2601      	movs	r6, #1
  4006b4:	ea05 0306 	and.w	r3, r5, r6
  4006b8:	9300      	str	r3, [sp, #0]
  4006ba:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4006be:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4006c2:	bf14      	ite	ne
  4006c4:	2200      	movne	r2, #0
  4006c6:	2201      	moveq	r2, #1
  4006c8:	fa06 f101 	lsl.w	r1, r6, r1
  4006cc:	4620      	mov	r0, r4
  4006ce:	4c04      	ldr	r4, [pc, #16]	; (4006e0 <pio_configure_pin+0x11c>)
  4006d0:	47a0      	blx	r4
	return 1;
  4006d2:	4630      	mov	r0, r6
		break;
  4006d4:	e7b4      	b.n	400640 <pio_configure_pin+0x7c>
  4006d6:	bf00      	nop
  4006d8:	00400529 	.word	0x00400529
  4006dc:	00400499 	.word	0x00400499
  4006e0:	0040055b 	.word	0x0040055b

004006e4 <pio_configure_pin_group>:
{
  4006e4:	b570      	push	{r4, r5, r6, lr}
  4006e6:	b082      	sub	sp, #8
  4006e8:	4605      	mov	r5, r0
  4006ea:	460e      	mov	r6, r1
  4006ec:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  4006ee:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  4006f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4006f6:	d03d      	beq.n	400774 <pio_configure_pin_group+0x90>
  4006f8:	d80a      	bhi.n	400710 <pio_configure_pin_group+0x2c>
  4006fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4006fe:	d021      	beq.n	400744 <pio_configure_pin_group+0x60>
  400700:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400704:	d02a      	beq.n	40075c <pio_configure_pin_group+0x78>
  400706:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40070a:	d00e      	beq.n	40072a <pio_configure_pin_group+0x46>
		return 0;
  40070c:	2000      	movs	r0, #0
  40070e:	e017      	b.n	400740 <pio_configure_pin_group+0x5c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400710:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400714:	d03a      	beq.n	40078c <pio_configure_pin_group+0xa8>
  400716:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40071a:	d037      	beq.n	40078c <pio_configure_pin_group+0xa8>
  40071c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400720:	d1f4      	bne.n	40070c <pio_configure_pin_group+0x28>
		pio_set_input(p_pio, ul_mask, ul_flags);
  400722:	4b23      	ldr	r3, [pc, #140]	; (4007b0 <pio_configure_pin_group+0xcc>)
  400724:	4798      	blx	r3
	return 1;
  400726:	2001      	movs	r0, #1
		break;
  400728:	e00a      	b.n	400740 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  40072a:	460a      	mov	r2, r1
  40072c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400730:	4b20      	ldr	r3, [pc, #128]	; (4007b4 <pio_configure_pin_group+0xd0>)
  400732:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400734:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400738:	bf14      	ite	ne
  40073a:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40073c:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  40073e:	2001      	movs	r0, #1
}
  400740:	b002      	add	sp, #8
  400742:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400744:	460a      	mov	r2, r1
  400746:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40074a:	4b1a      	ldr	r3, [pc, #104]	; (4007b4 <pio_configure_pin_group+0xd0>)
  40074c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40074e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400752:	bf14      	ite	ne
  400754:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400756:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400758:	2001      	movs	r0, #1
  40075a:	e7f1      	b.n	400740 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  40075c:	460a      	mov	r2, r1
  40075e:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400762:	4b14      	ldr	r3, [pc, #80]	; (4007b4 <pio_configure_pin_group+0xd0>)
  400764:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400766:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40076a:	bf14      	ite	ne
  40076c:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40076e:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400770:	2001      	movs	r0, #1
  400772:	e7e5      	b.n	400740 <pio_configure_pin_group+0x5c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400774:	460a      	mov	r2, r1
  400776:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40077a:	4b0e      	ldr	r3, [pc, #56]	; (4007b4 <pio_configure_pin_group+0xd0>)
  40077c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40077e:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400782:	bf14      	ite	ne
  400784:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400786:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  400788:	2001      	movs	r0, #1
  40078a:	e7d9      	b.n	400740 <pio_configure_pin_group+0x5c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  40078c:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  400790:	f004 0301 	and.w	r3, r4, #1
  400794:	9300      	str	r3, [sp, #0]
  400796:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40079a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40079e:	bf14      	ite	ne
  4007a0:	2200      	movne	r2, #0
  4007a2:	2201      	moveq	r2, #1
  4007a4:	4631      	mov	r1, r6
  4007a6:	4628      	mov	r0, r5
  4007a8:	4c03      	ldr	r4, [pc, #12]	; (4007b8 <pio_configure_pin_group+0xd4>)
  4007aa:	47a0      	blx	r4
	return 1;
  4007ac:	2001      	movs	r0, #1
		break;
  4007ae:	e7c7      	b.n	400740 <pio_configure_pin_group+0x5c>
  4007b0:	00400529 	.word	0x00400529
  4007b4:	00400499 	.word	0x00400499
  4007b8:	0040055b 	.word	0x0040055b

004007bc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4007bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4007c0:	4681      	mov	r9, r0
  4007c2:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4007c4:	4b12      	ldr	r3, [pc, #72]	; (400810 <pio_handler_process+0x54>)
  4007c6:	4798      	blx	r3
  4007c8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4007ca:	4648      	mov	r0, r9
  4007cc:	4b11      	ldr	r3, [pc, #68]	; (400814 <pio_handler_process+0x58>)
  4007ce:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4007d0:	4005      	ands	r5, r0
  4007d2:	d013      	beq.n	4007fc <pio_handler_process+0x40>
  4007d4:	4c10      	ldr	r4, [pc, #64]	; (400818 <pio_handler_process+0x5c>)
  4007d6:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4007da:	e003      	b.n	4007e4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4007dc:	42b4      	cmp	r4, r6
  4007de:	d00d      	beq.n	4007fc <pio_handler_process+0x40>
  4007e0:	3410      	adds	r4, #16
		while (status != 0) {
  4007e2:	b15d      	cbz	r5, 4007fc <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  4007e4:	6820      	ldr	r0, [r4, #0]
  4007e6:	42b8      	cmp	r0, r7
  4007e8:	d1f8      	bne.n	4007dc <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4007ea:	6861      	ldr	r1, [r4, #4]
  4007ec:	4229      	tst	r1, r5
  4007ee:	d0f5      	beq.n	4007dc <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4007f0:	68e3      	ldr	r3, [r4, #12]
  4007f2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4007f4:	6863      	ldr	r3, [r4, #4]
  4007f6:	ea25 0503 	bic.w	r5, r5, r3
  4007fa:	e7ef      	b.n	4007dc <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4007fc:	4b07      	ldr	r3, [pc, #28]	; (40081c <pio_handler_process+0x60>)
  4007fe:	681b      	ldr	r3, [r3, #0]
  400800:	b123      	cbz	r3, 40080c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400802:	4b07      	ldr	r3, [pc, #28]	; (400820 <pio_handler_process+0x64>)
  400804:	681b      	ldr	r3, [r3, #0]
  400806:	b10b      	cbz	r3, 40080c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400808:	4648      	mov	r0, r9
  40080a:	4798      	blx	r3
  40080c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400810:	00400581 	.word	0x00400581
  400814:	00400585 	.word	0x00400585
  400818:	200009dc 	.word	0x200009dc
  40081c:	20000a94 	.word	0x20000a94
  400820:	20000a4c 	.word	0x20000a4c

00400824 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400824:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400826:	210b      	movs	r1, #11
  400828:	4801      	ldr	r0, [pc, #4]	; (400830 <PIOA_Handler+0xc>)
  40082a:	4b02      	ldr	r3, [pc, #8]	; (400834 <PIOA_Handler+0x10>)
  40082c:	4798      	blx	r3
  40082e:	bd08      	pop	{r3, pc}
  400830:	400e0e00 	.word	0x400e0e00
  400834:	004007bd 	.word	0x004007bd

00400838 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400838:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40083a:	210c      	movs	r1, #12
  40083c:	4801      	ldr	r0, [pc, #4]	; (400844 <PIOB_Handler+0xc>)
  40083e:	4b02      	ldr	r3, [pc, #8]	; (400848 <PIOB_Handler+0x10>)
  400840:	4798      	blx	r3
  400842:	bd08      	pop	{r3, pc}
  400844:	400e1000 	.word	0x400e1000
  400848:	004007bd 	.word	0x004007bd

0040084c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  40084c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40084e:	210d      	movs	r1, #13
  400850:	4801      	ldr	r0, [pc, #4]	; (400858 <PIOC_Handler+0xc>)
  400852:	4b02      	ldr	r3, [pc, #8]	; (40085c <PIOC_Handler+0x10>)
  400854:	4798      	blx	r3
  400856:	bd08      	pop	{r3, pc}
  400858:	400e1200 	.word	0x400e1200
  40085c:	004007bd 	.word	0x004007bd

00400860 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400860:	4a17      	ldr	r2, [pc, #92]	; (4008c0 <pmc_switch_mck_to_pllack+0x60>)
  400862:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400864:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400868:	4318      	orrs	r0, r3
  40086a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40086c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40086e:	f013 0f08 	tst.w	r3, #8
  400872:	d10a      	bne.n	40088a <pmc_switch_mck_to_pllack+0x2a>
  400874:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400878:	4911      	ldr	r1, [pc, #68]	; (4008c0 <pmc_switch_mck_to_pllack+0x60>)
  40087a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40087c:	f012 0f08 	tst.w	r2, #8
  400880:	d103      	bne.n	40088a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400882:	3b01      	subs	r3, #1
  400884:	d1f9      	bne.n	40087a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400886:	2001      	movs	r0, #1
  400888:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40088a:	4a0d      	ldr	r2, [pc, #52]	; (4008c0 <pmc_switch_mck_to_pllack+0x60>)
  40088c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40088e:	f023 0303 	bic.w	r3, r3, #3
  400892:	f043 0302 	orr.w	r3, r3, #2
  400896:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400898:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40089a:	f013 0f08 	tst.w	r3, #8
  40089e:	d10a      	bne.n	4008b6 <pmc_switch_mck_to_pllack+0x56>
  4008a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4008a4:	4906      	ldr	r1, [pc, #24]	; (4008c0 <pmc_switch_mck_to_pllack+0x60>)
  4008a6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4008a8:	f012 0f08 	tst.w	r2, #8
  4008ac:	d105      	bne.n	4008ba <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4008ae:	3b01      	subs	r3, #1
  4008b0:	d1f9      	bne.n	4008a6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4008b2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4008b4:	4770      	bx	lr
	return 0;
  4008b6:	2000      	movs	r0, #0
  4008b8:	4770      	bx	lr
  4008ba:	2000      	movs	r0, #0
  4008bc:	4770      	bx	lr
  4008be:	bf00      	nop
  4008c0:	400e0400 	.word	0x400e0400

004008c4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4008c4:	b9c8      	cbnz	r0, 4008fa <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4008c6:	4a11      	ldr	r2, [pc, #68]	; (40090c <pmc_switch_mainck_to_xtal+0x48>)
  4008c8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4008ca:	0209      	lsls	r1, r1, #8
  4008cc:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4008ce:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4008d2:	f023 0303 	bic.w	r3, r3, #3
  4008d6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4008da:	f043 0301 	orr.w	r3, r3, #1
  4008de:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4008e0:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4008e2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4008e4:	f013 0f01 	tst.w	r3, #1
  4008e8:	d0fb      	beq.n	4008e2 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4008ea:	4a08      	ldr	r2, [pc, #32]	; (40090c <pmc_switch_mainck_to_xtal+0x48>)
  4008ec:	6a13      	ldr	r3, [r2, #32]
  4008ee:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4008f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4008f6:	6213      	str	r3, [r2, #32]
  4008f8:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4008fa:	4904      	ldr	r1, [pc, #16]	; (40090c <pmc_switch_mainck_to_xtal+0x48>)
  4008fc:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4008fe:	4a04      	ldr	r2, [pc, #16]	; (400910 <pmc_switch_mainck_to_xtal+0x4c>)
  400900:	401a      	ands	r2, r3
  400902:	4b04      	ldr	r3, [pc, #16]	; (400914 <pmc_switch_mainck_to_xtal+0x50>)
  400904:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400906:	620b      	str	r3, [r1, #32]
  400908:	4770      	bx	lr
  40090a:	bf00      	nop
  40090c:	400e0400 	.word	0x400e0400
  400910:	fec8fffc 	.word	0xfec8fffc
  400914:	01370002 	.word	0x01370002

00400918 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400918:	4b02      	ldr	r3, [pc, #8]	; (400924 <pmc_osc_is_ready_mainck+0xc>)
  40091a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40091c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400920:	4770      	bx	lr
  400922:	bf00      	nop
  400924:	400e0400 	.word	0x400e0400

00400928 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400928:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40092c:	4b01      	ldr	r3, [pc, #4]	; (400934 <pmc_disable_pllack+0xc>)
  40092e:	629a      	str	r2, [r3, #40]	; 0x28
  400930:	4770      	bx	lr
  400932:	bf00      	nop
  400934:	400e0400 	.word	0x400e0400

00400938 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400938:	4b02      	ldr	r3, [pc, #8]	; (400944 <pmc_is_locked_pllack+0xc>)
  40093a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40093c:	f000 0002 	and.w	r0, r0, #2
  400940:	4770      	bx	lr
  400942:	bf00      	nop
  400944:	400e0400 	.word	0x400e0400

00400948 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400948:	2822      	cmp	r0, #34	; 0x22
  40094a:	d81e      	bhi.n	40098a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40094c:	281f      	cmp	r0, #31
  40094e:	d80c      	bhi.n	40096a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400950:	4b11      	ldr	r3, [pc, #68]	; (400998 <pmc_enable_periph_clk+0x50>)
  400952:	699a      	ldr	r2, [r3, #24]
  400954:	2301      	movs	r3, #1
  400956:	4083      	lsls	r3, r0
  400958:	4393      	bics	r3, r2
  40095a:	d018      	beq.n	40098e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40095c:	2301      	movs	r3, #1
  40095e:	fa03 f000 	lsl.w	r0, r3, r0
  400962:	4b0d      	ldr	r3, [pc, #52]	; (400998 <pmc_enable_periph_clk+0x50>)
  400964:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400966:	2000      	movs	r0, #0
  400968:	4770      	bx	lr
		ul_id -= 32;
  40096a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40096c:	4b0a      	ldr	r3, [pc, #40]	; (400998 <pmc_enable_periph_clk+0x50>)
  40096e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400972:	2301      	movs	r3, #1
  400974:	4083      	lsls	r3, r0
  400976:	4393      	bics	r3, r2
  400978:	d00b      	beq.n	400992 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40097a:	2301      	movs	r3, #1
  40097c:	fa03 f000 	lsl.w	r0, r3, r0
  400980:	4b05      	ldr	r3, [pc, #20]	; (400998 <pmc_enable_periph_clk+0x50>)
  400982:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400986:	2000      	movs	r0, #0
  400988:	4770      	bx	lr
		return 1;
  40098a:	2001      	movs	r0, #1
  40098c:	4770      	bx	lr
	return 0;
  40098e:	2000      	movs	r0, #0
  400990:	4770      	bx	lr
  400992:	2000      	movs	r0, #0
}
  400994:	4770      	bx	lr
  400996:	bf00      	nop
  400998:	400e0400 	.word	0x400e0400

0040099c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40099c:	e7fe      	b.n	40099c <Dummy_Handler>
	...

004009a0 <Reset_Handler>:
{
  4009a0:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4009a2:	4b21      	ldr	r3, [pc, #132]	; (400a28 <Reset_Handler+0x88>)
  4009a4:	4a21      	ldr	r2, [pc, #132]	; (400a2c <Reset_Handler+0x8c>)
  4009a6:	429a      	cmp	r2, r3
  4009a8:	d928      	bls.n	4009fc <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  4009aa:	4b21      	ldr	r3, [pc, #132]	; (400a30 <Reset_Handler+0x90>)
  4009ac:	4a1e      	ldr	r2, [pc, #120]	; (400a28 <Reset_Handler+0x88>)
  4009ae:	429a      	cmp	r2, r3
  4009b0:	d20c      	bcs.n	4009cc <Reset_Handler+0x2c>
  4009b2:	3b01      	subs	r3, #1
  4009b4:	1a9b      	subs	r3, r3, r2
  4009b6:	f023 0303 	bic.w	r3, r3, #3
  4009ba:	3304      	adds	r3, #4
  4009bc:	4413      	add	r3, r2
  4009be:	491b      	ldr	r1, [pc, #108]	; (400a2c <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  4009c0:	f851 0b04 	ldr.w	r0, [r1], #4
  4009c4:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  4009c8:	429a      	cmp	r2, r3
  4009ca:	d1f9      	bne.n	4009c0 <Reset_Handler+0x20>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  4009cc:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  4009ce:	4b19      	ldr	r3, [pc, #100]	; (400a34 <Reset_Handler+0x94>)
  4009d0:	4a19      	ldr	r2, [pc, #100]	; (400a38 <Reset_Handler+0x98>)
  4009d2:	429a      	cmp	r2, r3
  4009d4:	d20a      	bcs.n	4009ec <Reset_Handler+0x4c>
  4009d6:	3b01      	subs	r3, #1
  4009d8:	1a9b      	subs	r3, r3, r2
  4009da:	f023 0303 	bic.w	r3, r3, #3
  4009de:	3304      	adds	r3, #4
  4009e0:	4413      	add	r3, r2
		*pDest++ = 0;
  4009e2:	2100      	movs	r1, #0
  4009e4:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4009e8:	429a      	cmp	r2, r3
  4009ea:	d1fb      	bne.n	4009e4 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  4009ec:	4b13      	ldr	r3, [pc, #76]	; (400a3c <Reset_Handler+0x9c>)
  4009ee:	4a14      	ldr	r2, [pc, #80]	; (400a40 <Reset_Handler+0xa0>)
  4009f0:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4009f2:	4b14      	ldr	r3, [pc, #80]	; (400a44 <Reset_Handler+0xa4>)
  4009f4:	4798      	blx	r3
	main();
  4009f6:	4b14      	ldr	r3, [pc, #80]	; (400a48 <Reset_Handler+0xa8>)
  4009f8:	4798      	blx	r3
  4009fa:	e7fe      	b.n	4009fa <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4009fc:	4b0a      	ldr	r3, [pc, #40]	; (400a28 <Reset_Handler+0x88>)
  4009fe:	4a0b      	ldr	r2, [pc, #44]	; (400a2c <Reset_Handler+0x8c>)
  400a00:	429a      	cmp	r2, r3
  400a02:	d2e3      	bcs.n	4009cc <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  400a04:	4b0a      	ldr	r3, [pc, #40]	; (400a30 <Reset_Handler+0x90>)
  400a06:	4808      	ldr	r0, [pc, #32]	; (400a28 <Reset_Handler+0x88>)
  400a08:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  400a0a:	4611      	mov	r1, r2
  400a0c:	3a04      	subs	r2, #4
  400a0e:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  400a10:	2800      	cmp	r0, #0
  400a12:	d0db      	beq.n	4009cc <Reset_Handler+0x2c>
  400a14:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  400a18:	f852 0904 	ldr.w	r0, [r2], #-4
  400a1c:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  400a20:	42ca      	cmn	r2, r1
  400a22:	d1f9      	bne.n	400a18 <Reset_Handler+0x78>
  400a24:	e7d2      	b.n	4009cc <Reset_Handler+0x2c>
  400a26:	bf00      	nop
  400a28:	20000000 	.word	0x20000000
  400a2c:	00404abc 	.word	0x00404abc
  400a30:	200009c0 	.word	0x200009c0
  400a34:	20000ac8 	.word	0x20000ac8
  400a38:	200009c0 	.word	0x200009c0
  400a3c:	e000ed00 	.word	0xe000ed00
  400a40:	00400000 	.word	0x00400000
  400a44:	004011b1 	.word	0x004011b1
  400a48:	00400e69 	.word	0x00400e69

00400a4c <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  400a4c:	4b3c      	ldr	r3, [pc, #240]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400a4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a50:	f003 0303 	and.w	r3, r3, #3
  400a54:	2b03      	cmp	r3, #3
  400a56:	d80e      	bhi.n	400a76 <SystemCoreClockUpdate+0x2a>
  400a58:	e8df f003 	tbb	[pc, r3]
  400a5c:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  400a60:	4b38      	ldr	r3, [pc, #224]	; (400b44 <SystemCoreClockUpdate+0xf8>)
  400a62:	695b      	ldr	r3, [r3, #20]
  400a64:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400a68:	bf14      	ite	ne
  400a6a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400a6e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400a72:	4b35      	ldr	r3, [pc, #212]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400a74:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  400a76:	4b32      	ldr	r3, [pc, #200]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400a78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400a7a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400a7e:	2b70      	cmp	r3, #112	; 0x70
  400a80:	d055      	beq.n	400b2e <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400a82:	4b2f      	ldr	r3, [pc, #188]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400a84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  400a86:	4930      	ldr	r1, [pc, #192]	; (400b48 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400a88:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  400a8c:	680b      	ldr	r3, [r1, #0]
  400a8e:	40d3      	lsrs	r3, r2
  400a90:	600b      	str	r3, [r1, #0]
  400a92:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400a94:	4b2a      	ldr	r3, [pc, #168]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400a96:	6a1b      	ldr	r3, [r3, #32]
  400a98:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400a9c:	d003      	beq.n	400aa6 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  400a9e:	4a2b      	ldr	r2, [pc, #172]	; (400b4c <SystemCoreClockUpdate+0x100>)
  400aa0:	4b29      	ldr	r3, [pc, #164]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400aa2:	601a      	str	r2, [r3, #0]
  400aa4:	e7e7      	b.n	400a76 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400aa6:	4a2a      	ldr	r2, [pc, #168]	; (400b50 <SystemCoreClockUpdate+0x104>)
  400aa8:	4b27      	ldr	r3, [pc, #156]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400aaa:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400aac:	4b24      	ldr	r3, [pc, #144]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400aae:	6a1b      	ldr	r3, [r3, #32]
  400ab0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400ab4:	2b10      	cmp	r3, #16
  400ab6:	d005      	beq.n	400ac4 <SystemCoreClockUpdate+0x78>
  400ab8:	2b20      	cmp	r3, #32
  400aba:	d1dc      	bne.n	400a76 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400abc:	4a23      	ldr	r2, [pc, #140]	; (400b4c <SystemCoreClockUpdate+0x100>)
  400abe:	4b22      	ldr	r3, [pc, #136]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400ac0:	601a      	str	r2, [r3, #0]
			break;
  400ac2:	e7d8      	b.n	400a76 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400ac4:	4a23      	ldr	r2, [pc, #140]	; (400b54 <SystemCoreClockUpdate+0x108>)
  400ac6:	4b20      	ldr	r3, [pc, #128]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400ac8:	601a      	str	r2, [r3, #0]
			break;
  400aca:	e7d4      	b.n	400a76 <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  400acc:	4b1c      	ldr	r3, [pc, #112]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400ace:	6a1b      	ldr	r3, [r3, #32]
  400ad0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400ad4:	d018      	beq.n	400b08 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  400ad6:	4a1d      	ldr	r2, [pc, #116]	; (400b4c <SystemCoreClockUpdate+0x100>)
  400ad8:	4b1b      	ldr	r3, [pc, #108]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400ada:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  400adc:	4b18      	ldr	r3, [pc, #96]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400ade:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400ae0:	f003 0303 	and.w	r3, r3, #3
  400ae4:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  400ae6:	4a16      	ldr	r2, [pc, #88]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400ae8:	bf07      	ittee	eq
  400aea:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  400aec:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400aee:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400af0:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  400af2:	4815      	ldr	r0, [pc, #84]	; (400b48 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  400af4:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  400af8:	6803      	ldr	r3, [r0, #0]
  400afa:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  400afe:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  400b00:	fbb3 f3f2 	udiv	r3, r3, r2
  400b04:	6003      	str	r3, [r0, #0]
  400b06:	e7b6      	b.n	400a76 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400b08:	4a11      	ldr	r2, [pc, #68]	; (400b50 <SystemCoreClockUpdate+0x104>)
  400b0a:	4b0f      	ldr	r3, [pc, #60]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400b0c:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  400b0e:	4b0c      	ldr	r3, [pc, #48]	; (400b40 <SystemCoreClockUpdate+0xf4>)
  400b10:	6a1b      	ldr	r3, [r3, #32]
  400b12:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400b16:	2b10      	cmp	r3, #16
  400b18:	d005      	beq.n	400b26 <SystemCoreClockUpdate+0xda>
  400b1a:	2b20      	cmp	r3, #32
  400b1c:	d1de      	bne.n	400adc <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  400b1e:	4a0b      	ldr	r2, [pc, #44]	; (400b4c <SystemCoreClockUpdate+0x100>)
  400b20:	4b09      	ldr	r3, [pc, #36]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400b22:	601a      	str	r2, [r3, #0]
					break;
  400b24:	e7da      	b.n	400adc <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  400b26:	4a0b      	ldr	r2, [pc, #44]	; (400b54 <SystemCoreClockUpdate+0x108>)
  400b28:	4b07      	ldr	r3, [pc, #28]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400b2a:	601a      	str	r2, [r3, #0]
					break;
  400b2c:	e7d6      	b.n	400adc <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  400b2e:	4a06      	ldr	r2, [pc, #24]	; (400b48 <SystemCoreClockUpdate+0xfc>)
  400b30:	6813      	ldr	r3, [r2, #0]
  400b32:	4909      	ldr	r1, [pc, #36]	; (400b58 <SystemCoreClockUpdate+0x10c>)
  400b34:	fba1 1303 	umull	r1, r3, r1, r3
  400b38:	085b      	lsrs	r3, r3, #1
  400b3a:	6013      	str	r3, [r2, #0]
  400b3c:	4770      	bx	lr
  400b3e:	bf00      	nop
  400b40:	400e0400 	.word	0x400e0400
  400b44:	400e1410 	.word	0x400e1410
  400b48:	20000000 	.word	0x20000000
  400b4c:	00b71b00 	.word	0x00b71b00
  400b50:	003d0900 	.word	0x003d0900
  400b54:	007a1200 	.word	0x007a1200
  400b58:	aaaaaaab 	.word	0xaaaaaaab

00400b5c <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  400b5c:	4b1a      	ldr	r3, [pc, #104]	; (400bc8 <system_init_flash+0x6c>)
  400b5e:	4298      	cmp	r0, r3
  400b60:	d914      	bls.n	400b8c <system_init_flash+0x30>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  400b62:	4b1a      	ldr	r3, [pc, #104]	; (400bcc <system_init_flash+0x70>)
  400b64:	4298      	cmp	r0, r3
  400b66:	d919      	bls.n	400b9c <system_init_flash+0x40>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  400b68:	4b19      	ldr	r3, [pc, #100]	; (400bd0 <system_init_flash+0x74>)
  400b6a:	4298      	cmp	r0, r3
  400b6c:	d91d      	bls.n	400baa <system_init_flash+0x4e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  400b6e:	4b19      	ldr	r3, [pc, #100]	; (400bd4 <system_init_flash+0x78>)
  400b70:	4298      	cmp	r0, r3
  400b72:	d921      	bls.n	400bb8 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  400b74:	4b18      	ldr	r3, [pc, #96]	; (400bd8 <system_init_flash+0x7c>)
  400b76:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400b78:	bf94      	ite	ls
  400b7a:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400b7e:	4b17      	ldrhi	r3, [pc, #92]	; (400bdc <system_init_flash+0x80>)
  400b80:	4a17      	ldr	r2, [pc, #92]	; (400be0 <system_init_flash+0x84>)
  400b82:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400b84:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b88:	6013      	str	r3, [r2, #0]
  400b8a:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400b8c:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  400b90:	4a13      	ldr	r2, [pc, #76]	; (400be0 <system_init_flash+0x84>)
  400b92:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400b94:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400b98:	6013      	str	r3, [r2, #0]
  400b9a:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400b9c:	4b11      	ldr	r3, [pc, #68]	; (400be4 <system_init_flash+0x88>)
  400b9e:	4a10      	ldr	r2, [pc, #64]	; (400be0 <system_init_flash+0x84>)
  400ba0:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400ba2:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400ba6:	6013      	str	r3, [r2, #0]
  400ba8:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400baa:	4b0f      	ldr	r3, [pc, #60]	; (400be8 <system_init_flash+0x8c>)
  400bac:	4a0c      	ldr	r2, [pc, #48]	; (400be0 <system_init_flash+0x84>)
  400bae:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400bb0:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400bb4:	6013      	str	r3, [r2, #0]
  400bb6:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400bb8:	4b0c      	ldr	r3, [pc, #48]	; (400bec <system_init_flash+0x90>)
  400bba:	4a09      	ldr	r2, [pc, #36]	; (400be0 <system_init_flash+0x84>)
  400bbc:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400bbe:	f502 7200 	add.w	r2, r2, #512	; 0x200
  400bc2:	6013      	str	r3, [r2, #0]
  400bc4:	4770      	bx	lr
  400bc6:	bf00      	nop
  400bc8:	01312cff 	.word	0x01312cff
  400bcc:	026259ff 	.word	0x026259ff
  400bd0:	039386ff 	.word	0x039386ff
  400bd4:	04c4b3ff 	.word	0x04c4b3ff
  400bd8:	05f5e0ff 	.word	0x05f5e0ff
  400bdc:	04000500 	.word	0x04000500
  400be0:	400e0a00 	.word	0x400e0a00
  400be4:	04000100 	.word	0x04000100
  400be8:	04000200 	.word	0x04000200
  400bec:	04000300 	.word	0x04000300

00400bf0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400bf0:	4b0a      	ldr	r3, [pc, #40]	; (400c1c <_sbrk+0x2c>)
  400bf2:	681b      	ldr	r3, [r3, #0]
  400bf4:	b153      	cbz	r3, 400c0c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400bf6:	4b09      	ldr	r3, [pc, #36]	; (400c1c <_sbrk+0x2c>)
  400bf8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400bfa:	181a      	adds	r2, r3, r0
  400bfc:	4908      	ldr	r1, [pc, #32]	; (400c20 <_sbrk+0x30>)
  400bfe:	4291      	cmp	r1, r2
  400c00:	db08      	blt.n	400c14 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400c02:	4610      	mov	r0, r2
  400c04:	4a05      	ldr	r2, [pc, #20]	; (400c1c <_sbrk+0x2c>)
  400c06:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400c08:	4618      	mov	r0, r3
  400c0a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400c0c:	4a05      	ldr	r2, [pc, #20]	; (400c24 <_sbrk+0x34>)
  400c0e:	4b03      	ldr	r3, [pc, #12]	; (400c1c <_sbrk+0x2c>)
  400c10:	601a      	str	r2, [r3, #0]
  400c12:	e7f0      	b.n	400bf6 <_sbrk+0x6>
		return (caddr_t) -1;	
  400c14:	f04f 30ff 	mov.w	r0, #4294967295
}
  400c18:	4770      	bx	lr
  400c1a:	bf00      	nop
  400c1c:	20000a50 	.word	0x20000a50
  400c20:	20027ffc 	.word	0x20027ffc
  400c24:	20003ac8 	.word	0x20003ac8

00400c28 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400c28:	f04f 30ff 	mov.w	r0, #4294967295
  400c2c:	4770      	bx	lr

00400c2e <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400c2e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400c32:	604b      	str	r3, [r1, #4]

	return 0;
}
  400c34:	2000      	movs	r0, #0
  400c36:	4770      	bx	lr

00400c38 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400c38:	2001      	movs	r0, #1
  400c3a:	4770      	bx	lr

00400c3c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400c3c:	2000      	movs	r0, #0
  400c3e:	4770      	bx	lr

00400c40 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  400c40:	b5f0      	push	{r4, r5, r6, r7, lr}
  400c42:	b083      	sub	sp, #12
  400c44:	4605      	mov	r5, r0
  400c46:	460c      	mov	r4, r1
	uint32_t val = 0;
  400c48:	2300      	movs	r3, #0
  400c4a:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400c4c:	4b18      	ldr	r3, [pc, #96]	; (400cb0 <usart_serial_getchar+0x70>)
  400c4e:	4298      	cmp	r0, r3
  400c50:	d00a      	beq.n	400c68 <usart_serial_getchar+0x28>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400c52:	4b18      	ldr	r3, [pc, #96]	; (400cb4 <usart_serial_getchar+0x74>)
  400c54:	4298      	cmp	r0, r3
  400c56:	d00f      	beq.n	400c78 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400c58:	4b17      	ldr	r3, [pc, #92]	; (400cb8 <usart_serial_getchar+0x78>)
  400c5a:	4298      	cmp	r0, r3
  400c5c:	d014      	beq.n	400c88 <usart_serial_getchar+0x48>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400c5e:	4b17      	ldr	r3, [pc, #92]	; (400cbc <usart_serial_getchar+0x7c>)
  400c60:	429d      	cmp	r5, r3
  400c62:	d01b      	beq.n	400c9c <usart_serial_getchar+0x5c>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400c64:	b003      	add	sp, #12
  400c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  400c68:	461f      	mov	r7, r3
  400c6a:	4e15      	ldr	r6, [pc, #84]	; (400cc0 <usart_serial_getchar+0x80>)
  400c6c:	4621      	mov	r1, r4
  400c6e:	4638      	mov	r0, r7
  400c70:	47b0      	blx	r6
  400c72:	2800      	cmp	r0, #0
  400c74:	d1fa      	bne.n	400c6c <usart_serial_getchar+0x2c>
  400c76:	e7f2      	b.n	400c5e <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  400c78:	461e      	mov	r6, r3
  400c7a:	4d11      	ldr	r5, [pc, #68]	; (400cc0 <usart_serial_getchar+0x80>)
  400c7c:	4621      	mov	r1, r4
  400c7e:	4630      	mov	r0, r6
  400c80:	47a8      	blx	r5
  400c82:	2800      	cmp	r0, #0
  400c84:	d1fa      	bne.n	400c7c <usart_serial_getchar+0x3c>
  400c86:	e7ed      	b.n	400c64 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400c88:	461e      	mov	r6, r3
  400c8a:	4d0e      	ldr	r5, [pc, #56]	; (400cc4 <usart_serial_getchar+0x84>)
  400c8c:	a901      	add	r1, sp, #4
  400c8e:	4630      	mov	r0, r6
  400c90:	47a8      	blx	r5
  400c92:	2800      	cmp	r0, #0
  400c94:	d1fa      	bne.n	400c8c <usart_serial_getchar+0x4c>
		*data = (uint8_t)(val & 0xFF);
  400c96:	9b01      	ldr	r3, [sp, #4]
  400c98:	7023      	strb	r3, [r4, #0]
  400c9a:	e7e3      	b.n	400c64 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
  400c9c:	461e      	mov	r6, r3
  400c9e:	4d09      	ldr	r5, [pc, #36]	; (400cc4 <usart_serial_getchar+0x84>)
  400ca0:	a901      	add	r1, sp, #4
  400ca2:	4630      	mov	r0, r6
  400ca4:	47a8      	blx	r5
  400ca6:	2800      	cmp	r0, #0
  400ca8:	d1fa      	bne.n	400ca0 <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
  400caa:	9b01      	ldr	r3, [sp, #4]
  400cac:	7023      	strb	r3, [r4, #0]
}
  400cae:	e7d9      	b.n	400c64 <usart_serial_getchar+0x24>
  400cb0:	400e0600 	.word	0x400e0600
  400cb4:	400e0800 	.word	0x400e0800
  400cb8:	40024000 	.word	0x40024000
  400cbc:	40028000 	.word	0x40028000
  400cc0:	004002df 	.word	0x004002df
  400cc4:	00400189 	.word	0x00400189

00400cc8 <usart_serial_putchar>:
{
  400cc8:	b570      	push	{r4, r5, r6, lr}
  400cca:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400ccc:	4b18      	ldr	r3, [pc, #96]	; (400d30 <usart_serial_putchar+0x68>)
  400cce:	4298      	cmp	r0, r3
  400cd0:	d00a      	beq.n	400ce8 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  400cd2:	4b18      	ldr	r3, [pc, #96]	; (400d34 <usart_serial_putchar+0x6c>)
  400cd4:	4298      	cmp	r0, r3
  400cd6:	d010      	beq.n	400cfa <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400cd8:	4b17      	ldr	r3, [pc, #92]	; (400d38 <usart_serial_putchar+0x70>)
  400cda:	4298      	cmp	r0, r3
  400cdc:	d016      	beq.n	400d0c <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  400cde:	4b17      	ldr	r3, [pc, #92]	; (400d3c <usart_serial_putchar+0x74>)
  400ce0:	4298      	cmp	r0, r3
  400ce2:	d01c      	beq.n	400d1e <usart_serial_putchar+0x56>
	return 0;
  400ce4:	2000      	movs	r0, #0
}
  400ce6:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400ce8:	461e      	mov	r6, r3
  400cea:	4d15      	ldr	r5, [pc, #84]	; (400d40 <usart_serial_putchar+0x78>)
  400cec:	4621      	mov	r1, r4
  400cee:	4630      	mov	r0, r6
  400cf0:	47a8      	blx	r5
  400cf2:	2800      	cmp	r0, #0
  400cf4:	d1fa      	bne.n	400cec <usart_serial_putchar+0x24>
		return 1;
  400cf6:	2001      	movs	r0, #1
  400cf8:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400cfa:	461e      	mov	r6, r3
  400cfc:	4d10      	ldr	r5, [pc, #64]	; (400d40 <usart_serial_putchar+0x78>)
  400cfe:	4621      	mov	r1, r4
  400d00:	4630      	mov	r0, r6
  400d02:	47a8      	blx	r5
  400d04:	2800      	cmp	r0, #0
  400d06:	d1fa      	bne.n	400cfe <usart_serial_putchar+0x36>
		return 1;
  400d08:	2001      	movs	r0, #1
  400d0a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400d0c:	461e      	mov	r6, r3
  400d0e:	4d0d      	ldr	r5, [pc, #52]	; (400d44 <usart_serial_putchar+0x7c>)
  400d10:	4621      	mov	r1, r4
  400d12:	4630      	mov	r0, r6
  400d14:	47a8      	blx	r5
  400d16:	2800      	cmp	r0, #0
  400d18:	d1fa      	bne.n	400d10 <usart_serial_putchar+0x48>
		return 1;
  400d1a:	2001      	movs	r0, #1
  400d1c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  400d1e:	461e      	mov	r6, r3
  400d20:	4d08      	ldr	r5, [pc, #32]	; (400d44 <usart_serial_putchar+0x7c>)
  400d22:	4621      	mov	r1, r4
  400d24:	4630      	mov	r0, r6
  400d26:	47a8      	blx	r5
  400d28:	2800      	cmp	r0, #0
  400d2a:	d1fa      	bne.n	400d22 <usart_serial_putchar+0x5a>
		return 1;
  400d2c:	2001      	movs	r0, #1
  400d2e:	bd70      	pop	{r4, r5, r6, pc}
  400d30:	400e0600 	.word	0x400e0600
  400d34:	400e0800 	.word	0x400e0800
  400d38:	40024000 	.word	0x40024000
  400d3c:	40028000 	.word	0x40028000
  400d40:	004002cf 	.word	0x004002cf
  400d44:	00400175 	.word	0x00400175

00400d48 <inicializacao_UART>:
	tc_enable_interrupt(TC,	CHANNEL, TC_IER_CPCS);
	tc_start(TC, CHANNEL);
}

void inicializacao_UART ()
{
  400d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400d4c:	b084      	sub	sp, #16
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400d4e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400ddc <inicializacao_UART+0x94>
  400d52:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400d56:	4c16      	ldr	r4, [pc, #88]	; (400db0 <inicializacao_UART+0x68>)
  400d58:	6823      	ldr	r3, [r4, #0]
  400d5a:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400d5c:	68a3      	ldr	r3, [r4, #8]
  400d5e:	9303      	str	r3, [sp, #12]
  400d60:	2008      	movs	r0, #8
  400d62:	4f14      	ldr	r7, [pc, #80]	; (400db4 <inicializacao_UART+0x6c>)
  400d64:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400d66:	4d14      	ldr	r5, [pc, #80]	; (400db8 <inicializacao_UART+0x70>)
  400d68:	a901      	add	r1, sp, #4
  400d6a:	4628      	mov	r0, r5
  400d6c:	4e13      	ldr	r6, [pc, #76]	; (400dbc <inicializacao_UART+0x74>)
  400d6e:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400d70:	4b13      	ldr	r3, [pc, #76]	; (400dc0 <inicializacao_UART+0x78>)
  400d72:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400d74:	4a13      	ldr	r2, [pc, #76]	; (400dc4 <inicializacao_UART+0x7c>)
  400d76:	4b14      	ldr	r3, [pc, #80]	; (400dc8 <inicializacao_UART+0x80>)
  400d78:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400d7a:	4a14      	ldr	r2, [pc, #80]	; (400dcc <inicializacao_UART+0x84>)
  400d7c:	4b14      	ldr	r3, [pc, #80]	; (400dd0 <inicializacao_UART+0x88>)
  400d7e:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400d80:	f8cd 8004 	str.w	r8, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400d84:	6823      	ldr	r3, [r4, #0]
  400d86:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  400d88:	68a3      	ldr	r3, [r4, #8]
  400d8a:	9303      	str	r3, [sp, #12]
  400d8c:	2008      	movs	r0, #8
  400d8e:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
  400d90:	a901      	add	r1, sp, #4
  400d92:	4628      	mov	r0, r5
  400d94:	47b0      	blx	r6
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  400d96:	4d0f      	ldr	r5, [pc, #60]	; (400dd4 <inicializacao_UART+0x8c>)
  400d98:	682b      	ldr	r3, [r5, #0]
  400d9a:	2100      	movs	r1, #0
  400d9c:	6898      	ldr	r0, [r3, #8]
  400d9e:	4c0e      	ldr	r4, [pc, #56]	; (400dd8 <inicializacao_UART+0x90>)
  400da0:	47a0      	blx	r4
	setbuf(stdin, NULL);
  400da2:	682b      	ldr	r3, [r5, #0]
  400da4:	2100      	movs	r1, #0
  400da6:	6858      	ldr	r0, [r3, #4]
  400da8:	47a0      	blx	r4
		.paritytype = CONF_UART_PARITY,
		.stopbits = CONF_UART_STOP_BITS
	};
	usart_serial_init(CONF_UART, &usart_options);
	stdio_serial_init((Usart *)CONF_UART, &usart_options);
}
  400daa:	b004      	add	sp, #16
  400dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400db0:	20000004 	.word	0x20000004
  400db4:	00400949 	.word	0x00400949
  400db8:	400e0600 	.word	0x400e0600
  400dbc:	00400299 	.word	0x00400299
  400dc0:	20000a90 	.word	0x20000a90
  400dc4:	00400cc9 	.word	0x00400cc9
  400dc8:	20000a8c 	.word	0x20000a8c
  400dcc:	00400c41 	.word	0x00400c41
  400dd0:	20000a88 	.word	0x20000a88
  400dd4:	20000014 	.word	0x20000014
  400dd8:	00401371 	.word	0x00401371
  400ddc:	07270e00 	.word	0x07270e00

00400de0 <TC0_Handler>:

void TC_Handler(void)
{
  400de0:	b508      	push	{r3, lr}
	tc_get_status(TC,CHANNEL);
  400de2:	2100      	movs	r1, #0
  400de4:	4803      	ldr	r0, [pc, #12]	; (400df4 <TC0_Handler+0x14>)
  400de6:	4b04      	ldr	r3, [pc, #16]	; (400df8 <TC0_Handler+0x18>)
  400de8:	4798      	blx	r3
	LED_Toggle(LED0_GPIO);
  400dea:	2013      	movs	r0, #19
  400dec:	4b03      	ldr	r3, [pc, #12]	; (400dfc <TC0_Handler+0x1c>)
  400dee:	4798      	blx	r3
  400df0:	bd08      	pop	{r3, pc}
  400df2:	bf00      	nop
  400df4:	40010000 	.word	0x40010000
  400df8:	00400221 	.word	0x00400221
  400dfc:	004005a3 	.word	0x004005a3

00400e00 <configuracoes_gerais>:
}

void configuracoes_gerais()
{
  400e00:	b570      	push	{r4, r5, r6, lr}
	puts("Insira tempo maximo no escuro em horas:\r");
  400e02:	480e      	ldr	r0, [pc, #56]	; (400e3c <configuracoes_gerais+0x3c>)
  400e04:	4c0e      	ldr	r4, [pc, #56]	; (400e40 <configuracoes_gerais+0x40>)
  400e06:	47a0      	blx	r4
	scanf("%i", &escuro);
  400e08:	4d0e      	ldr	r5, [pc, #56]	; (400e44 <configuracoes_gerais+0x44>)
  400e0a:	4629      	mov	r1, r5
  400e0c:	480e      	ldr	r0, [pc, #56]	; (400e48 <configuracoes_gerais+0x48>)
  400e0e:	4e0f      	ldr	r6, [pc, #60]	; (400e4c <configuracoes_gerais+0x4c>)
  400e10:	47b0      	blx	r6
	escuro *= 3600;
  400e12:	682a      	ldr	r2, [r5, #0]
  400e14:	f44f 6361 	mov.w	r3, #3600	; 0xe10
  400e18:	fb03 f302 	mul.w	r3, r3, r2
  400e1c:	602b      	str	r3, [r5, #0]
	puts("Insira a luminosidade minima em %:\r");
  400e1e:	480c      	ldr	r0, [pc, #48]	; (400e50 <configuracoes_gerais+0x50>)
  400e20:	47a0      	blx	r4
	scanf("%f", &luz_min);
  400e22:	4d0c      	ldr	r5, [pc, #48]	; (400e54 <configuracoes_gerais+0x54>)
  400e24:	4629      	mov	r1, r5
  400e26:	480c      	ldr	r0, [pc, #48]	; (400e58 <configuracoes_gerais+0x58>)
  400e28:	47b0      	blx	r6
	luz_min /= 100.0;
  400e2a:	490c      	ldr	r1, [pc, #48]	; (400e5c <configuracoes_gerais+0x5c>)
  400e2c:	6828      	ldr	r0, [r5, #0]
  400e2e:	4b0c      	ldr	r3, [pc, #48]	; (400e60 <configuracoes_gerais+0x60>)
  400e30:	4798      	blx	r3
  400e32:	6028      	str	r0, [r5, #0]
	puts("Configuracao completa!\r");
  400e34:	480b      	ldr	r0, [pc, #44]	; (400e64 <configuracoes_gerais+0x64>)
  400e36:	47a0      	blx	r4
  400e38:	bd70      	pop	{r4, r5, r6, pc}
  400e3a:	bf00      	nop
  400e3c:	004048e0 	.word	0x004048e0
  400e40:	00401361 	.word	0x00401361
  400e44:	20000a98 	.word	0x20000a98
  400e48:	0040490c 	.word	0x0040490c
  400e4c:	00401201 	.word	0x00401201
  400e50:	00404910 	.word	0x00404910
  400e54:	20000a9c 	.word	0x20000a9c
  400e58:	00404934 	.word	0x00404934
  400e5c:	42c80000 	.word	0x42c80000
  400e60:	00401079 	.word	0x00401079
  400e64:	00404938 	.word	0x00404938

00400e68 <main>:
}

int main (void)
{
  400e68:	b530      	push	{r4, r5, lr}
  400e6a:	b085      	sub	sp, #20
	sysclk_init();
  400e6c:	4b1b      	ldr	r3, [pc, #108]	; (400edc <main+0x74>)
  400e6e:	4798      	blx	r3
	board_init();
  400e70:	4b1b      	ldr	r3, [pc, #108]	; (400ee0 <main+0x78>)
  400e72:	4798      	blx	r3
	pmc_enable_periph_clk(ID_TC);
  400e74:	2017      	movs	r0, #23
  400e76:	4b1b      	ldr	r3, [pc, #108]	; (400ee4 <main+0x7c>)
  400e78:	4798      	blx	r3
	tc_find_mck_divisor( freq_desejada, ul_sysclk, &ul_div, &ul_tcclks,	BOARD_MCK);
  400e7a:	4d1b      	ldr	r5, [pc, #108]	; (400ee8 <main+0x80>)
  400e7c:	9500      	str	r5, [sp, #0]
  400e7e:	ab03      	add	r3, sp, #12
  400e80:	aa02      	add	r2, sp, #8
  400e82:	4629      	mov	r1, r5
  400e84:	2001      	movs	r0, #1
  400e86:	4c19      	ldr	r4, [pc, #100]	; (400eec <main+0x84>)
  400e88:	47a0      	blx	r4
	tc_init(TC, CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  400e8a:	4c19      	ldr	r4, [pc, #100]	; (400ef0 <main+0x88>)
  400e8c:	9a03      	ldr	r2, [sp, #12]
  400e8e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  400e92:	2100      	movs	r1, #0
  400e94:	4620      	mov	r0, r4
  400e96:	4b17      	ldr	r3, [pc, #92]	; (400ef4 <main+0x8c>)
  400e98:	4798      	blx	r3
	tc_write_rc(TC, CHANNEL, counts);
  400e9a:	9a02      	ldr	r2, [sp, #8]
  400e9c:	fbb5 f2f2 	udiv	r2, r5, r2
  400ea0:	2100      	movs	r1, #0
  400ea2:	4620      	mov	r0, r4
  400ea4:	4b14      	ldr	r3, [pc, #80]	; (400ef8 <main+0x90>)
  400ea6:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400ea8:	4b14      	ldr	r3, [pc, #80]	; (400efc <main+0x94>)
  400eaa:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400eae:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400eb2:	2140      	movs	r1, #64	; 0x40
  400eb4:	f883 1317 	strb.w	r1, [r3, #791]	; 0x317
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400eb8:	601a      	str	r2, [r3, #0]
	tc_enable_interrupt(TC,	CHANNEL, TC_IER_CPCS);
  400eba:	2210      	movs	r2, #16
  400ebc:	2100      	movs	r1, #0
  400ebe:	4620      	mov	r0, r4
  400ec0:	4b0f      	ldr	r3, [pc, #60]	; (400f00 <main+0x98>)
  400ec2:	4798      	blx	r3
	tc_start(TC, CHANNEL);
  400ec4:	2100      	movs	r1, #0
  400ec6:	4620      	mov	r0, r4
  400ec8:	4b0e      	ldr	r3, [pc, #56]	; (400f04 <main+0x9c>)
  400eca:	4798      	blx	r3
	tc_config(1);
	inicializacao_UART();
  400ecc:	4b0e      	ldr	r3, [pc, #56]	; (400f08 <main+0xa0>)
  400ece:	4798      	blx	r3
	configuracoes_gerais();
  400ed0:	4b0e      	ldr	r3, [pc, #56]	; (400f0c <main+0xa4>)
  400ed2:	4798      	blx	r3
}
  400ed4:	2000      	movs	r0, #0
  400ed6:	b005      	add	sp, #20
  400ed8:	bd30      	pop	{r4, r5, pc}
  400eda:	bf00      	nop
  400edc:	004002f1 	.word	0x004002f1
  400ee0:	00400355 	.word	0x00400355
  400ee4:	00400949 	.word	0x00400949
  400ee8:	07270e00 	.word	0x07270e00
  400eec:	00400229 	.word	0x00400229
  400ef0:	40010000 	.word	0x40010000
  400ef4:	004001f1 	.word	0x004001f1
  400ef8:	00400211 	.word	0x00400211
  400efc:	e000e100 	.word	0xe000e100
  400f00:	00400219 	.word	0x00400219
  400f04:	00400209 	.word	0x00400209
  400f08:	00400d49 	.word	0x00400d49
  400f0c:	00400e01 	.word	0x00400e01

00400f10 <__aeabi_fmul>:
  400f10:	f04f 0cff 	mov.w	ip, #255	; 0xff
  400f14:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  400f18:	bf1e      	ittt	ne
  400f1a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  400f1e:	ea92 0f0c 	teqne	r2, ip
  400f22:	ea93 0f0c 	teqne	r3, ip
  400f26:	d06f      	beq.n	401008 <__aeabi_fmul+0xf8>
  400f28:	441a      	add	r2, r3
  400f2a:	ea80 0c01 	eor.w	ip, r0, r1
  400f2e:	0240      	lsls	r0, r0, #9
  400f30:	bf18      	it	ne
  400f32:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  400f36:	d01e      	beq.n	400f76 <__aeabi_fmul+0x66>
  400f38:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  400f3c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  400f40:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  400f44:	fba0 3101 	umull	r3, r1, r0, r1
  400f48:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  400f4c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  400f50:	bf3e      	ittt	cc
  400f52:	0049      	lslcc	r1, r1, #1
  400f54:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  400f58:	005b      	lslcc	r3, r3, #1
  400f5a:	ea40 0001 	orr.w	r0, r0, r1
  400f5e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  400f62:	2afd      	cmp	r2, #253	; 0xfd
  400f64:	d81d      	bhi.n	400fa2 <__aeabi_fmul+0x92>
  400f66:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  400f6a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  400f6e:	bf08      	it	eq
  400f70:	f020 0001 	biceq.w	r0, r0, #1
  400f74:	4770      	bx	lr
  400f76:	f090 0f00 	teq	r0, #0
  400f7a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  400f7e:	bf08      	it	eq
  400f80:	0249      	lsleq	r1, r1, #9
  400f82:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  400f86:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  400f8a:	3a7f      	subs	r2, #127	; 0x7f
  400f8c:	bfc2      	ittt	gt
  400f8e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  400f92:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  400f96:	4770      	bxgt	lr
  400f98:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400f9c:	f04f 0300 	mov.w	r3, #0
  400fa0:	3a01      	subs	r2, #1
  400fa2:	dc5d      	bgt.n	401060 <__aeabi_fmul+0x150>
  400fa4:	f112 0f19 	cmn.w	r2, #25
  400fa8:	bfdc      	itt	le
  400faa:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  400fae:	4770      	bxle	lr
  400fb0:	f1c2 0200 	rsb	r2, r2, #0
  400fb4:	0041      	lsls	r1, r0, #1
  400fb6:	fa21 f102 	lsr.w	r1, r1, r2
  400fba:	f1c2 0220 	rsb	r2, r2, #32
  400fbe:	fa00 fc02 	lsl.w	ip, r0, r2
  400fc2:	ea5f 0031 	movs.w	r0, r1, rrx
  400fc6:	f140 0000 	adc.w	r0, r0, #0
  400fca:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  400fce:	bf08      	it	eq
  400fd0:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  400fd4:	4770      	bx	lr
  400fd6:	f092 0f00 	teq	r2, #0
  400fda:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  400fde:	bf02      	ittt	eq
  400fe0:	0040      	lsleq	r0, r0, #1
  400fe2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  400fe6:	3a01      	subeq	r2, #1
  400fe8:	d0f9      	beq.n	400fde <__aeabi_fmul+0xce>
  400fea:	ea40 000c 	orr.w	r0, r0, ip
  400fee:	f093 0f00 	teq	r3, #0
  400ff2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  400ff6:	bf02      	ittt	eq
  400ff8:	0049      	lsleq	r1, r1, #1
  400ffa:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  400ffe:	3b01      	subeq	r3, #1
  401000:	d0f9      	beq.n	400ff6 <__aeabi_fmul+0xe6>
  401002:	ea41 010c 	orr.w	r1, r1, ip
  401006:	e78f      	b.n	400f28 <__aeabi_fmul+0x18>
  401008:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  40100c:	ea92 0f0c 	teq	r2, ip
  401010:	bf18      	it	ne
  401012:	ea93 0f0c 	teqne	r3, ip
  401016:	d00a      	beq.n	40102e <__aeabi_fmul+0x11e>
  401018:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  40101c:	bf18      	it	ne
  40101e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  401022:	d1d8      	bne.n	400fd6 <__aeabi_fmul+0xc6>
  401024:	ea80 0001 	eor.w	r0, r0, r1
  401028:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  40102c:	4770      	bx	lr
  40102e:	f090 0f00 	teq	r0, #0
  401032:	bf17      	itett	ne
  401034:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  401038:	4608      	moveq	r0, r1
  40103a:	f091 0f00 	teqne	r1, #0
  40103e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  401042:	d014      	beq.n	40106e <__aeabi_fmul+0x15e>
  401044:	ea92 0f0c 	teq	r2, ip
  401048:	d101      	bne.n	40104e <__aeabi_fmul+0x13e>
  40104a:	0242      	lsls	r2, r0, #9
  40104c:	d10f      	bne.n	40106e <__aeabi_fmul+0x15e>
  40104e:	ea93 0f0c 	teq	r3, ip
  401052:	d103      	bne.n	40105c <__aeabi_fmul+0x14c>
  401054:	024b      	lsls	r3, r1, #9
  401056:	bf18      	it	ne
  401058:	4608      	movne	r0, r1
  40105a:	d108      	bne.n	40106e <__aeabi_fmul+0x15e>
  40105c:	ea80 0001 	eor.w	r0, r0, r1
  401060:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  401064:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  401068:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40106c:	4770      	bx	lr
  40106e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  401072:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  401076:	4770      	bx	lr

00401078 <__aeabi_fdiv>:
  401078:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40107c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  401080:	bf1e      	ittt	ne
  401082:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  401086:	ea92 0f0c 	teqne	r2, ip
  40108a:	ea93 0f0c 	teqne	r3, ip
  40108e:	d069      	beq.n	401164 <__aeabi_fdiv+0xec>
  401090:	eba2 0203 	sub.w	r2, r2, r3
  401094:	ea80 0c01 	eor.w	ip, r0, r1
  401098:	0249      	lsls	r1, r1, #9
  40109a:	ea4f 2040 	mov.w	r0, r0, lsl #9
  40109e:	d037      	beq.n	401110 <__aeabi_fdiv+0x98>
  4010a0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4010a4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  4010a8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  4010ac:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  4010b0:	428b      	cmp	r3, r1
  4010b2:	bf38      	it	cc
  4010b4:	005b      	lslcc	r3, r3, #1
  4010b6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  4010ba:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  4010be:	428b      	cmp	r3, r1
  4010c0:	bf24      	itt	cs
  4010c2:	1a5b      	subcs	r3, r3, r1
  4010c4:	ea40 000c 	orrcs.w	r0, r0, ip
  4010c8:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  4010cc:	bf24      	itt	cs
  4010ce:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  4010d2:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4010d6:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  4010da:	bf24      	itt	cs
  4010dc:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  4010e0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4010e4:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  4010e8:	bf24      	itt	cs
  4010ea:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  4010ee:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4010f2:	011b      	lsls	r3, r3, #4
  4010f4:	bf18      	it	ne
  4010f6:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  4010fa:	d1e0      	bne.n	4010be <__aeabi_fdiv+0x46>
  4010fc:	2afd      	cmp	r2, #253	; 0xfd
  4010fe:	f63f af50 	bhi.w	400fa2 <__aeabi_fmul+0x92>
  401102:	428b      	cmp	r3, r1
  401104:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  401108:	bf08      	it	eq
  40110a:	f020 0001 	biceq.w	r0, r0, #1
  40110e:	4770      	bx	lr
  401110:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  401114:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  401118:	327f      	adds	r2, #127	; 0x7f
  40111a:	bfc2      	ittt	gt
  40111c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  401120:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  401124:	4770      	bxgt	lr
  401126:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40112a:	f04f 0300 	mov.w	r3, #0
  40112e:	3a01      	subs	r2, #1
  401130:	e737      	b.n	400fa2 <__aeabi_fmul+0x92>
  401132:	f092 0f00 	teq	r2, #0
  401136:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  40113a:	bf02      	ittt	eq
  40113c:	0040      	lsleq	r0, r0, #1
  40113e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  401142:	3a01      	subeq	r2, #1
  401144:	d0f9      	beq.n	40113a <__aeabi_fdiv+0xc2>
  401146:	ea40 000c 	orr.w	r0, r0, ip
  40114a:	f093 0f00 	teq	r3, #0
  40114e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  401152:	bf02      	ittt	eq
  401154:	0049      	lsleq	r1, r1, #1
  401156:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  40115a:	3b01      	subeq	r3, #1
  40115c:	d0f9      	beq.n	401152 <__aeabi_fdiv+0xda>
  40115e:	ea41 010c 	orr.w	r1, r1, ip
  401162:	e795      	b.n	401090 <__aeabi_fdiv+0x18>
  401164:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  401168:	ea92 0f0c 	teq	r2, ip
  40116c:	d108      	bne.n	401180 <__aeabi_fdiv+0x108>
  40116e:	0242      	lsls	r2, r0, #9
  401170:	f47f af7d 	bne.w	40106e <__aeabi_fmul+0x15e>
  401174:	ea93 0f0c 	teq	r3, ip
  401178:	f47f af70 	bne.w	40105c <__aeabi_fmul+0x14c>
  40117c:	4608      	mov	r0, r1
  40117e:	e776      	b.n	40106e <__aeabi_fmul+0x15e>
  401180:	ea93 0f0c 	teq	r3, ip
  401184:	d104      	bne.n	401190 <__aeabi_fdiv+0x118>
  401186:	024b      	lsls	r3, r1, #9
  401188:	f43f af4c 	beq.w	401024 <__aeabi_fmul+0x114>
  40118c:	4608      	mov	r0, r1
  40118e:	e76e      	b.n	40106e <__aeabi_fmul+0x15e>
  401190:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  401194:	bf18      	it	ne
  401196:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  40119a:	d1ca      	bne.n	401132 <__aeabi_fdiv+0xba>
  40119c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4011a0:	f47f af5c 	bne.w	40105c <__aeabi_fmul+0x14c>
  4011a4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4011a8:	f47f af3c 	bne.w	401024 <__aeabi_fmul+0x114>
  4011ac:	e75f      	b.n	40106e <__aeabi_fmul+0x15e>
  4011ae:	bf00      	nop

004011b0 <__libc_init_array>:
  4011b0:	b570      	push	{r4, r5, r6, lr}
  4011b2:	4e0f      	ldr	r6, [pc, #60]	; (4011f0 <__libc_init_array+0x40>)
  4011b4:	4d0f      	ldr	r5, [pc, #60]	; (4011f4 <__libc_init_array+0x44>)
  4011b6:	1b76      	subs	r6, r6, r5
  4011b8:	10b6      	asrs	r6, r6, #2
  4011ba:	bf18      	it	ne
  4011bc:	2400      	movne	r4, #0
  4011be:	d005      	beq.n	4011cc <__libc_init_array+0x1c>
  4011c0:	3401      	adds	r4, #1
  4011c2:	f855 3b04 	ldr.w	r3, [r5], #4
  4011c6:	4798      	blx	r3
  4011c8:	42a6      	cmp	r6, r4
  4011ca:	d1f9      	bne.n	4011c0 <__libc_init_array+0x10>
  4011cc:	4e0a      	ldr	r6, [pc, #40]	; (4011f8 <__libc_init_array+0x48>)
  4011ce:	4d0b      	ldr	r5, [pc, #44]	; (4011fc <__libc_init_array+0x4c>)
  4011d0:	1b76      	subs	r6, r6, r5
  4011d2:	f003 fc5d 	bl	404a90 <_init>
  4011d6:	10b6      	asrs	r6, r6, #2
  4011d8:	bf18      	it	ne
  4011da:	2400      	movne	r4, #0
  4011dc:	d006      	beq.n	4011ec <__libc_init_array+0x3c>
  4011de:	3401      	adds	r4, #1
  4011e0:	f855 3b04 	ldr.w	r3, [r5], #4
  4011e4:	4798      	blx	r3
  4011e6:	42a6      	cmp	r6, r4
  4011e8:	d1f9      	bne.n	4011de <__libc_init_array+0x2e>
  4011ea:	bd70      	pop	{r4, r5, r6, pc}
  4011ec:	bd70      	pop	{r4, r5, r6, pc}
  4011ee:	bf00      	nop
  4011f0:	00404a9c 	.word	0x00404a9c
  4011f4:	00404a9c 	.word	0x00404a9c
  4011f8:	00404aa4 	.word	0x00404aa4
  4011fc:	00404a9c 	.word	0x00404a9c

00401200 <iscanf>:
  401200:	b40f      	push	{r0, r1, r2, r3}
  401202:	b500      	push	{lr}
  401204:	4907      	ldr	r1, [pc, #28]	; (401224 <iscanf+0x24>)
  401206:	b083      	sub	sp, #12
  401208:	ab04      	add	r3, sp, #16
  40120a:	6808      	ldr	r0, [r1, #0]
  40120c:	f853 2b04 	ldr.w	r2, [r3], #4
  401210:	6841      	ldr	r1, [r0, #4]
  401212:	9301      	str	r3, [sp, #4]
  401214:	f000 fa02 	bl	40161c <__svfiscanf_r>
  401218:	b003      	add	sp, #12
  40121a:	f85d eb04 	ldr.w	lr, [sp], #4
  40121e:	b004      	add	sp, #16
  401220:	4770      	bx	lr
  401222:	bf00      	nop
  401224:	20000014 	.word	0x20000014

00401228 <memset>:
  401228:	b470      	push	{r4, r5, r6}
  40122a:	0786      	lsls	r6, r0, #30
  40122c:	d046      	beq.n	4012bc <memset+0x94>
  40122e:	1e54      	subs	r4, r2, #1
  401230:	2a00      	cmp	r2, #0
  401232:	d041      	beq.n	4012b8 <memset+0x90>
  401234:	b2ca      	uxtb	r2, r1
  401236:	4603      	mov	r3, r0
  401238:	e002      	b.n	401240 <memset+0x18>
  40123a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40123e:	d33b      	bcc.n	4012b8 <memset+0x90>
  401240:	f803 2b01 	strb.w	r2, [r3], #1
  401244:	079d      	lsls	r5, r3, #30
  401246:	d1f8      	bne.n	40123a <memset+0x12>
  401248:	2c03      	cmp	r4, #3
  40124a:	d92e      	bls.n	4012aa <memset+0x82>
  40124c:	b2cd      	uxtb	r5, r1
  40124e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401252:	2c0f      	cmp	r4, #15
  401254:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401258:	d919      	bls.n	40128e <memset+0x66>
  40125a:	f103 0210 	add.w	r2, r3, #16
  40125e:	4626      	mov	r6, r4
  401260:	3e10      	subs	r6, #16
  401262:	2e0f      	cmp	r6, #15
  401264:	f842 5c10 	str.w	r5, [r2, #-16]
  401268:	f842 5c0c 	str.w	r5, [r2, #-12]
  40126c:	f842 5c08 	str.w	r5, [r2, #-8]
  401270:	f842 5c04 	str.w	r5, [r2, #-4]
  401274:	f102 0210 	add.w	r2, r2, #16
  401278:	d8f2      	bhi.n	401260 <memset+0x38>
  40127a:	f1a4 0210 	sub.w	r2, r4, #16
  40127e:	f022 020f 	bic.w	r2, r2, #15
  401282:	f004 040f 	and.w	r4, r4, #15
  401286:	3210      	adds	r2, #16
  401288:	2c03      	cmp	r4, #3
  40128a:	4413      	add	r3, r2
  40128c:	d90d      	bls.n	4012aa <memset+0x82>
  40128e:	461e      	mov	r6, r3
  401290:	4622      	mov	r2, r4
  401292:	3a04      	subs	r2, #4
  401294:	2a03      	cmp	r2, #3
  401296:	f846 5b04 	str.w	r5, [r6], #4
  40129a:	d8fa      	bhi.n	401292 <memset+0x6a>
  40129c:	1f22      	subs	r2, r4, #4
  40129e:	f022 0203 	bic.w	r2, r2, #3
  4012a2:	3204      	adds	r2, #4
  4012a4:	4413      	add	r3, r2
  4012a6:	f004 0403 	and.w	r4, r4, #3
  4012aa:	b12c      	cbz	r4, 4012b8 <memset+0x90>
  4012ac:	b2c9      	uxtb	r1, r1
  4012ae:	441c      	add	r4, r3
  4012b0:	f803 1b01 	strb.w	r1, [r3], #1
  4012b4:	429c      	cmp	r4, r3
  4012b6:	d1fb      	bne.n	4012b0 <memset+0x88>
  4012b8:	bc70      	pop	{r4, r5, r6}
  4012ba:	4770      	bx	lr
  4012bc:	4614      	mov	r4, r2
  4012be:	4603      	mov	r3, r0
  4012c0:	e7c2      	b.n	401248 <memset+0x20>
  4012c2:	bf00      	nop

004012c4 <_puts_r>:
  4012c4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4012c6:	4605      	mov	r5, r0
  4012c8:	b089      	sub	sp, #36	; 0x24
  4012ca:	4608      	mov	r0, r1
  4012cc:	460c      	mov	r4, r1
  4012ce:	f000 f937 	bl	401540 <strlen>
  4012d2:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4012d4:	4f21      	ldr	r7, [pc, #132]	; (40135c <_puts_r+0x98>)
  4012d6:	9404      	str	r4, [sp, #16]
  4012d8:	2601      	movs	r6, #1
  4012da:	1c44      	adds	r4, r0, #1
  4012dc:	a904      	add	r1, sp, #16
  4012de:	2202      	movs	r2, #2
  4012e0:	9403      	str	r4, [sp, #12]
  4012e2:	9005      	str	r0, [sp, #20]
  4012e4:	68ac      	ldr	r4, [r5, #8]
  4012e6:	9706      	str	r7, [sp, #24]
  4012e8:	9607      	str	r6, [sp, #28]
  4012ea:	9101      	str	r1, [sp, #4]
  4012ec:	9202      	str	r2, [sp, #8]
  4012ee:	b353      	cbz	r3, 401346 <_puts_r+0x82>
  4012f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4012f2:	f013 0f01 	tst.w	r3, #1
  4012f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4012fa:	b29a      	uxth	r2, r3
  4012fc:	d101      	bne.n	401302 <_puts_r+0x3e>
  4012fe:	0590      	lsls	r0, r2, #22
  401300:	d525      	bpl.n	40134e <_puts_r+0x8a>
  401302:	0491      	lsls	r1, r2, #18
  401304:	d406      	bmi.n	401314 <_puts_r+0x50>
  401306:	6e62      	ldr	r2, [r4, #100]	; 0x64
  401308:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40130c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  401310:	81a3      	strh	r3, [r4, #12]
  401312:	6662      	str	r2, [r4, #100]	; 0x64
  401314:	4628      	mov	r0, r5
  401316:	aa01      	add	r2, sp, #4
  401318:	4621      	mov	r1, r4
  40131a:	f001 fa0d 	bl	402738 <__sfvwrite_r>
  40131e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  401320:	2800      	cmp	r0, #0
  401322:	bf0c      	ite	eq
  401324:	250a      	moveq	r5, #10
  401326:	f04f 35ff 	movne.w	r5, #4294967295
  40132a:	07da      	lsls	r2, r3, #31
  40132c:	d402      	bmi.n	401334 <_puts_r+0x70>
  40132e:	89a3      	ldrh	r3, [r4, #12]
  401330:	059b      	lsls	r3, r3, #22
  401332:	d502      	bpl.n	40133a <_puts_r+0x76>
  401334:	4628      	mov	r0, r5
  401336:	b009      	add	sp, #36	; 0x24
  401338:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40133a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40133c:	f001 fbf8 	bl	402b30 <__retarget_lock_release_recursive>
  401340:	4628      	mov	r0, r5
  401342:	b009      	add	sp, #36	; 0x24
  401344:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401346:	4628      	mov	r0, r5
  401348:	f000 ff8c 	bl	402264 <__sinit>
  40134c:	e7d0      	b.n	4012f0 <_puts_r+0x2c>
  40134e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401350:	f001 fbec 	bl	402b2c <__retarget_lock_acquire_recursive>
  401354:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401358:	b29a      	uxth	r2, r3
  40135a:	e7d2      	b.n	401302 <_puts_r+0x3e>
  40135c:	00404954 	.word	0x00404954

00401360 <puts>:
  401360:	4b02      	ldr	r3, [pc, #8]	; (40136c <puts+0xc>)
  401362:	4601      	mov	r1, r0
  401364:	6818      	ldr	r0, [r3, #0]
  401366:	f7ff bfad 	b.w	4012c4 <_puts_r>
  40136a:	bf00      	nop
  40136c:	20000014 	.word	0x20000014

00401370 <setbuf>:
  401370:	2900      	cmp	r1, #0
  401372:	bf0c      	ite	eq
  401374:	2202      	moveq	r2, #2
  401376:	2200      	movne	r2, #0
  401378:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40137c:	f000 b800 	b.w	401380 <setvbuf>

00401380 <setvbuf>:
  401380:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401384:	4c61      	ldr	r4, [pc, #388]	; (40150c <setvbuf+0x18c>)
  401386:	6825      	ldr	r5, [r4, #0]
  401388:	b083      	sub	sp, #12
  40138a:	4604      	mov	r4, r0
  40138c:	460f      	mov	r7, r1
  40138e:	4690      	mov	r8, r2
  401390:	461e      	mov	r6, r3
  401392:	b115      	cbz	r5, 40139a <setvbuf+0x1a>
  401394:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401396:	2b00      	cmp	r3, #0
  401398:	d064      	beq.n	401464 <setvbuf+0xe4>
  40139a:	f1b8 0f02 	cmp.w	r8, #2
  40139e:	d006      	beq.n	4013ae <setvbuf+0x2e>
  4013a0:	f1b8 0f01 	cmp.w	r8, #1
  4013a4:	f200 809f 	bhi.w	4014e6 <setvbuf+0x166>
  4013a8:	2e00      	cmp	r6, #0
  4013aa:	f2c0 809c 	blt.w	4014e6 <setvbuf+0x166>
  4013ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4013b0:	07d8      	lsls	r0, r3, #31
  4013b2:	d534      	bpl.n	40141e <setvbuf+0x9e>
  4013b4:	4621      	mov	r1, r4
  4013b6:	4628      	mov	r0, r5
  4013b8:	f000 feea 	bl	402190 <_fflush_r>
  4013bc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4013be:	b141      	cbz	r1, 4013d2 <setvbuf+0x52>
  4013c0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4013c4:	4299      	cmp	r1, r3
  4013c6:	d002      	beq.n	4013ce <setvbuf+0x4e>
  4013c8:	4628      	mov	r0, r5
  4013ca:	f001 f8cf 	bl	40256c <_free_r>
  4013ce:	2300      	movs	r3, #0
  4013d0:	6323      	str	r3, [r4, #48]	; 0x30
  4013d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4013d6:	2200      	movs	r2, #0
  4013d8:	61a2      	str	r2, [r4, #24]
  4013da:	6062      	str	r2, [r4, #4]
  4013dc:	061a      	lsls	r2, r3, #24
  4013de:	d43a      	bmi.n	401456 <setvbuf+0xd6>
  4013e0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4013e4:	f023 0303 	bic.w	r3, r3, #3
  4013e8:	f1b8 0f02 	cmp.w	r8, #2
  4013ec:	81a3      	strh	r3, [r4, #12]
  4013ee:	d01d      	beq.n	40142c <setvbuf+0xac>
  4013f0:	ab01      	add	r3, sp, #4
  4013f2:	466a      	mov	r2, sp
  4013f4:	4621      	mov	r1, r4
  4013f6:	4628      	mov	r0, r5
  4013f8:	f001 fb9c 	bl	402b34 <__swhatbuf_r>
  4013fc:	89a3      	ldrh	r3, [r4, #12]
  4013fe:	4318      	orrs	r0, r3
  401400:	81a0      	strh	r0, [r4, #12]
  401402:	2e00      	cmp	r6, #0
  401404:	d132      	bne.n	40146c <setvbuf+0xec>
  401406:	9e00      	ldr	r6, [sp, #0]
  401408:	4630      	mov	r0, r6
  40140a:	f001 fc0b 	bl	402c24 <malloc>
  40140e:	4607      	mov	r7, r0
  401410:	2800      	cmp	r0, #0
  401412:	d06b      	beq.n	4014ec <setvbuf+0x16c>
  401414:	89a3      	ldrh	r3, [r4, #12]
  401416:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40141a:	81a3      	strh	r3, [r4, #12]
  40141c:	e028      	b.n	401470 <setvbuf+0xf0>
  40141e:	89a3      	ldrh	r3, [r4, #12]
  401420:	0599      	lsls	r1, r3, #22
  401422:	d4c7      	bmi.n	4013b4 <setvbuf+0x34>
  401424:	6da0      	ldr	r0, [r4, #88]	; 0x58
  401426:	f001 fb81 	bl	402b2c <__retarget_lock_acquire_recursive>
  40142a:	e7c3      	b.n	4013b4 <setvbuf+0x34>
  40142c:	2500      	movs	r5, #0
  40142e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  401430:	2600      	movs	r6, #0
  401432:	f104 0243 	add.w	r2, r4, #67	; 0x43
  401436:	f043 0302 	orr.w	r3, r3, #2
  40143a:	2001      	movs	r0, #1
  40143c:	60a6      	str	r6, [r4, #8]
  40143e:	07ce      	lsls	r6, r1, #31
  401440:	81a3      	strh	r3, [r4, #12]
  401442:	6022      	str	r2, [r4, #0]
  401444:	6122      	str	r2, [r4, #16]
  401446:	6160      	str	r0, [r4, #20]
  401448:	d401      	bmi.n	40144e <setvbuf+0xce>
  40144a:	0598      	lsls	r0, r3, #22
  40144c:	d53e      	bpl.n	4014cc <setvbuf+0x14c>
  40144e:	4628      	mov	r0, r5
  401450:	b003      	add	sp, #12
  401452:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401456:	6921      	ldr	r1, [r4, #16]
  401458:	4628      	mov	r0, r5
  40145a:	f001 f887 	bl	40256c <_free_r>
  40145e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401462:	e7bd      	b.n	4013e0 <setvbuf+0x60>
  401464:	4628      	mov	r0, r5
  401466:	f000 fefd 	bl	402264 <__sinit>
  40146a:	e796      	b.n	40139a <setvbuf+0x1a>
  40146c:	2f00      	cmp	r7, #0
  40146e:	d0cb      	beq.n	401408 <setvbuf+0x88>
  401470:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401472:	2b00      	cmp	r3, #0
  401474:	d033      	beq.n	4014de <setvbuf+0x15e>
  401476:	9b00      	ldr	r3, [sp, #0]
  401478:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40147c:	6027      	str	r7, [r4, #0]
  40147e:	429e      	cmp	r6, r3
  401480:	bf1c      	itt	ne
  401482:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  401486:	81a2      	strhne	r2, [r4, #12]
  401488:	f1b8 0f01 	cmp.w	r8, #1
  40148c:	bf04      	itt	eq
  40148e:	f042 0201 	orreq.w	r2, r2, #1
  401492:	81a2      	strheq	r2, [r4, #12]
  401494:	b292      	uxth	r2, r2
  401496:	f012 0308 	ands.w	r3, r2, #8
  40149a:	6127      	str	r7, [r4, #16]
  40149c:	6166      	str	r6, [r4, #20]
  40149e:	d00e      	beq.n	4014be <setvbuf+0x13e>
  4014a0:	07d1      	lsls	r1, r2, #31
  4014a2:	d51a      	bpl.n	4014da <setvbuf+0x15a>
  4014a4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4014a6:	4276      	negs	r6, r6
  4014a8:	2300      	movs	r3, #0
  4014aa:	f015 0501 	ands.w	r5, r5, #1
  4014ae:	61a6      	str	r6, [r4, #24]
  4014b0:	60a3      	str	r3, [r4, #8]
  4014b2:	d009      	beq.n	4014c8 <setvbuf+0x148>
  4014b4:	2500      	movs	r5, #0
  4014b6:	4628      	mov	r0, r5
  4014b8:	b003      	add	sp, #12
  4014ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4014be:	60a3      	str	r3, [r4, #8]
  4014c0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4014c2:	f015 0501 	ands.w	r5, r5, #1
  4014c6:	d1f5      	bne.n	4014b4 <setvbuf+0x134>
  4014c8:	0593      	lsls	r3, r2, #22
  4014ca:	d4c0      	bmi.n	40144e <setvbuf+0xce>
  4014cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4014ce:	f001 fb2f 	bl	402b30 <__retarget_lock_release_recursive>
  4014d2:	4628      	mov	r0, r5
  4014d4:	b003      	add	sp, #12
  4014d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4014da:	60a6      	str	r6, [r4, #8]
  4014dc:	e7f0      	b.n	4014c0 <setvbuf+0x140>
  4014de:	4628      	mov	r0, r5
  4014e0:	f000 fec0 	bl	402264 <__sinit>
  4014e4:	e7c7      	b.n	401476 <setvbuf+0xf6>
  4014e6:	f04f 35ff 	mov.w	r5, #4294967295
  4014ea:	e7b0      	b.n	40144e <setvbuf+0xce>
  4014ec:	f8dd 9000 	ldr.w	r9, [sp]
  4014f0:	45b1      	cmp	r9, r6
  4014f2:	d004      	beq.n	4014fe <setvbuf+0x17e>
  4014f4:	4648      	mov	r0, r9
  4014f6:	f001 fb95 	bl	402c24 <malloc>
  4014fa:	4607      	mov	r7, r0
  4014fc:	b920      	cbnz	r0, 401508 <setvbuf+0x188>
  4014fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401502:	f04f 35ff 	mov.w	r5, #4294967295
  401506:	e792      	b.n	40142e <setvbuf+0xae>
  401508:	464e      	mov	r6, r9
  40150a:	e783      	b.n	401414 <setvbuf+0x94>
  40150c:	20000014 	.word	0x20000014
	...

00401540 <strlen>:
  401540:	f890 f000 	pld	[r0]
  401544:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  401548:	f020 0107 	bic.w	r1, r0, #7
  40154c:	f06f 0c00 	mvn.w	ip, #0
  401550:	f010 0407 	ands.w	r4, r0, #7
  401554:	f891 f020 	pld	[r1, #32]
  401558:	f040 8049 	bne.w	4015ee <strlen+0xae>
  40155c:	f04f 0400 	mov.w	r4, #0
  401560:	f06f 0007 	mvn.w	r0, #7
  401564:	e9d1 2300 	ldrd	r2, r3, [r1]
  401568:	f891 f040 	pld	[r1, #64]	; 0x40
  40156c:	f100 0008 	add.w	r0, r0, #8
  401570:	fa82 f24c 	uadd8	r2, r2, ip
  401574:	faa4 f28c 	sel	r2, r4, ip
  401578:	fa83 f34c 	uadd8	r3, r3, ip
  40157c:	faa2 f38c 	sel	r3, r2, ip
  401580:	bb4b      	cbnz	r3, 4015d6 <strlen+0x96>
  401582:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401586:	fa82 f24c 	uadd8	r2, r2, ip
  40158a:	f100 0008 	add.w	r0, r0, #8
  40158e:	faa4 f28c 	sel	r2, r4, ip
  401592:	fa83 f34c 	uadd8	r3, r3, ip
  401596:	faa2 f38c 	sel	r3, r2, ip
  40159a:	b9e3      	cbnz	r3, 4015d6 <strlen+0x96>
  40159c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4015a0:	fa82 f24c 	uadd8	r2, r2, ip
  4015a4:	f100 0008 	add.w	r0, r0, #8
  4015a8:	faa4 f28c 	sel	r2, r4, ip
  4015ac:	fa83 f34c 	uadd8	r3, r3, ip
  4015b0:	faa2 f38c 	sel	r3, r2, ip
  4015b4:	b97b      	cbnz	r3, 4015d6 <strlen+0x96>
  4015b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4015ba:	f101 0120 	add.w	r1, r1, #32
  4015be:	fa82 f24c 	uadd8	r2, r2, ip
  4015c2:	f100 0008 	add.w	r0, r0, #8
  4015c6:	faa4 f28c 	sel	r2, r4, ip
  4015ca:	fa83 f34c 	uadd8	r3, r3, ip
  4015ce:	faa2 f38c 	sel	r3, r2, ip
  4015d2:	2b00      	cmp	r3, #0
  4015d4:	d0c6      	beq.n	401564 <strlen+0x24>
  4015d6:	2a00      	cmp	r2, #0
  4015d8:	bf04      	itt	eq
  4015da:	3004      	addeq	r0, #4
  4015dc:	461a      	moveq	r2, r3
  4015de:	ba12      	rev	r2, r2
  4015e0:	fab2 f282 	clz	r2, r2
  4015e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4015e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4015ec:	4770      	bx	lr
  4015ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4015f2:	f004 0503 	and.w	r5, r4, #3
  4015f6:	f1c4 0000 	rsb	r0, r4, #0
  4015fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4015fe:	f014 0f04 	tst.w	r4, #4
  401602:	f891 f040 	pld	[r1, #64]	; 0x40
  401606:	fa0c f505 	lsl.w	r5, ip, r5
  40160a:	ea62 0205 	orn	r2, r2, r5
  40160e:	bf1c      	itt	ne
  401610:	ea63 0305 	ornne	r3, r3, r5
  401614:	4662      	movne	r2, ip
  401616:	f04f 0400 	mov.w	r4, #0
  40161a:	e7a9      	b.n	401570 <strlen+0x30>

0040161c <__svfiscanf_r>:
  40161c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401620:	468b      	mov	fp, r1
  401622:	b0d9      	sub	sp, #356	; 0x164
  401624:	6e49      	ldr	r1, [r1, #100]	; 0x64
  401626:	9306      	str	r3, [sp, #24]
  401628:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  40162c:	f011 0f01 	tst.w	r1, #1
  401630:	4607      	mov	r7, r0
  401632:	b299      	uxth	r1, r3
  401634:	d102      	bne.n	40163c <__svfiscanf_r+0x20>
  401636:	058c      	lsls	r4, r1, #22
  401638:	f140 83e5 	bpl.w	401e06 <__svfiscanf_r+0x7ea>
  40163c:	0488      	lsls	r0, r1, #18
  40163e:	d409      	bmi.n	401654 <__svfiscanf_r+0x38>
  401640:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  401644:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401648:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40164c:	f8ab 300c 	strh.w	r3, [fp, #12]
  401650:	f8cb 1064 	str.w	r1, [fp, #100]	; 0x64
  401654:	4614      	mov	r4, r2
  401656:	4626      	mov	r6, r4
  401658:	2300      	movs	r3, #0
  40165a:	9307      	str	r3, [sp, #28]
  40165c:	9304      	str	r3, [sp, #16]
  40165e:	469a      	mov	sl, r3
  401660:	9305      	str	r3, [sp, #20]
  401662:	f816 3b01 	ldrb.w	r3, [r6], #1
  401666:	930b      	str	r3, [sp, #44]	; 0x2c
  401668:	b363      	cbz	r3, 4016c4 <__svfiscanf_r+0xa8>
  40166a:	f001 fa4d 	bl	402b08 <__locale_ctype_ptr>
  40166e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401670:	4418      	add	r0, r3
  401672:	7845      	ldrb	r5, [r0, #1]
  401674:	f015 0508 	ands.w	r5, r5, #8
  401678:	d033      	beq.n	4016e2 <__svfiscanf_r+0xc6>
  40167a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40167e:	e012      	b.n	4016a6 <__svfiscanf_r+0x8a>
  401680:	f001 fa42 	bl	402b08 <__locale_ctype_ptr>
  401684:	f8db 3000 	ldr.w	r3, [fp]
  401688:	781a      	ldrb	r2, [r3, #0]
  40168a:	4410      	add	r0, r2
  40168c:	3301      	adds	r3, #1
  40168e:	7842      	ldrb	r2, [r0, #1]
  401690:	0711      	lsls	r1, r2, #28
  401692:	d510      	bpl.n	4016b6 <__svfiscanf_r+0x9a>
  401694:	f8db 2004 	ldr.w	r2, [fp, #4]
  401698:	f8cb 3000 	str.w	r3, [fp]
  40169c:	3a01      	subs	r2, #1
  40169e:	f10a 0a01 	add.w	sl, sl, #1
  4016a2:	f8cb 2004 	str.w	r2, [fp, #4]
  4016a6:	2a00      	cmp	r2, #0
  4016a8:	dcea      	bgt.n	401680 <__svfiscanf_r+0x64>
  4016aa:	4659      	mov	r1, fp
  4016ac:	4638      	mov	r0, r7
  4016ae:	f002 f8c1 	bl	403834 <__srefill_r>
  4016b2:	2800      	cmp	r0, #0
  4016b4:	d0e4      	beq.n	401680 <__svfiscanf_r+0x64>
  4016b6:	4634      	mov	r4, r6
  4016b8:	4626      	mov	r6, r4
  4016ba:	f816 3b01 	ldrb.w	r3, [r6], #1
  4016be:	930b      	str	r3, [sp, #44]	; 0x2c
  4016c0:	2b00      	cmp	r3, #0
  4016c2:	d1d2      	bne.n	40166a <__svfiscanf_r+0x4e>
  4016c4:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4016c8:	07da      	lsls	r2, r3, #31
  4016ca:	f100 81a7 	bmi.w	401a1c <__svfiscanf_r+0x400>
  4016ce:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4016d2:	059b      	lsls	r3, r3, #22
  4016d4:	f100 81a2 	bmi.w	401a1c <__svfiscanf_r+0x400>
  4016d8:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4016dc:	f001 fa28 	bl	402b30 <__retarget_lock_release_recursive>
  4016e0:	e19c      	b.n	401a1c <__svfiscanf_r+0x400>
  4016e2:	2b25      	cmp	r3, #37	; 0x25
  4016e4:	f040 8084 	bne.w	4017f0 <__svfiscanf_r+0x1d4>
  4016e8:	f894 8001 	ldrb.w	r8, [r4, #1]
  4016ec:	462c      	mov	r4, r5
  4016ee:	1c73      	adds	r3, r6, #1
  4016f0:	f1b8 0f78 	cmp.w	r8, #120	; 0x78
  4016f4:	f200 8196 	bhi.w	401a24 <__svfiscanf_r+0x408>
  4016f8:	e8df f018 	tbh	[pc, r8, lsl #1]
  4016fc:	01940184 	.word	0x01940184
  401700:	01940194 	.word	0x01940194
  401704:	01940194 	.word	0x01940194
  401708:	01940194 	.word	0x01940194
  40170c:	01940194 	.word	0x01940194
  401710:	01940194 	.word	0x01940194
  401714:	01940194 	.word	0x01940194
  401718:	01940194 	.word	0x01940194
  40171c:	01940194 	.word	0x01940194
  401720:	01940194 	.word	0x01940194
  401724:	01940194 	.word	0x01940194
  401728:	01940194 	.word	0x01940194
  40172c:	01940194 	.word	0x01940194
  401730:	01940194 	.word	0x01940194
  401734:	01940194 	.word	0x01940194
  401738:	01940194 	.word	0x01940194
  40173c:	01940194 	.word	0x01940194
  401740:	01940194 	.word	0x01940194
  401744:	00790194 	.word	0x00790194
  401748:	01940194 	.word	0x01940194
  40174c:	01940194 	.word	0x01940194
  401750:	0194017e 	.word	0x0194017e
  401754:	01940194 	.word	0x01940194
  401758:	01940194 	.word	0x01940194
  40175c:	01750175 	.word	0x01750175
  401760:	01750175 	.word	0x01750175
  401764:	01750175 	.word	0x01750175
  401768:	01750175 	.word	0x01750175
  40176c:	01750175 	.word	0x01750175
  401770:	01940194 	.word	0x01940194
  401774:	01940194 	.word	0x01940194
  401778:	01940194 	.word	0x01940194
  40177c:	01940194 	.word	0x01940194
  401780:	01940194 	.word	0x01940194
  401784:	01940171 	.word	0x01940171
  401788:	01940194 	.word	0x01940194
  40178c:	01940194 	.word	0x01940194
  401790:	01940194 	.word	0x01940194
  401794:	0194016b 	.word	0x0194016b
  401798:	01310194 	.word	0x01310194
  40179c:	01940194 	.word	0x01940194
  4017a0:	01940194 	.word	0x01940194
  4017a4:	01940194 	.word	0x01940194
  4017a8:	01940194 	.word	0x01940194
  4017ac:	01940128 	.word	0x01940128
  4017b0:	011f0194 	.word	0x011f0194
  4017b4:	01940194 	.word	0x01940194
  4017b8:	01940194 	.word	0x01940194
  4017bc:	01940194 	.word	0x01940194
  4017c0:	011a0194 	.word	0x011a0194
  4017c4:	01940108 	.word	0x01940108
  4017c8:	01940194 	.word	0x01940194
  4017cc:	00930102 	.word	0x00930102
  4017d0:	01940194 	.word	0x01940194
  4017d4:	01940161 	.word	0x01940161
  4017d8:	0148014a 	.word	0x0148014a
  4017dc:	01940144 	.word	0x01940144
  4017e0:	01410194 	.word	0x01410194
  4017e4:	013a0194 	.word	0x013a0194
  4017e8:	01940194 	.word	0x01940194
  4017ec:	0128      	.short	0x0128
  4017ee:	461e      	mov	r6, r3
  4017f0:	f8db 3004 	ldr.w	r3, [fp, #4]
  4017f4:	2b00      	cmp	r3, #0
  4017f6:	f340 8392 	ble.w	401f1e <__svfiscanf_r+0x902>
  4017fa:	f8db 3000 	ldr.w	r3, [fp]
  4017fe:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  401802:	7819      	ldrb	r1, [r3, #0]
  401804:	4291      	cmp	r1, r2
  401806:	f47f af5d 	bne.w	4016c4 <__svfiscanf_r+0xa8>
  40180a:	f8db 2004 	ldr.w	r2, [fp, #4]
  40180e:	3301      	adds	r3, #1
  401810:	3a01      	subs	r2, #1
  401812:	f8cb 3000 	str.w	r3, [fp]
  401816:	f10a 0a01 	add.w	sl, sl, #1
  40181a:	f8cb 2004 	str.w	r2, [fp, #4]
  40181e:	4634      	mov	r4, r6
  401820:	e74a      	b.n	4016b8 <__svfiscanf_r+0x9c>
  401822:	9303      	str	r3, [sp, #12]
  401824:	4bb2      	ldr	r3, [pc, #712]	; (401af0 <__svfiscanf_r+0x4d4>)
  401826:	9307      	str	r3, [sp, #28]
  401828:	2300      	movs	r3, #0
  40182a:	9304      	str	r3, [sp, #16]
  40182c:	2603      	movs	r6, #3
  40182e:	f8db 3004 	ldr.w	r3, [fp, #4]
  401832:	2b00      	cmp	r3, #0
  401834:	dd75      	ble.n	401922 <__svfiscanf_r+0x306>
  401836:	0669      	lsls	r1, r5, #25
  401838:	d533      	bpl.n	4018a2 <__svfiscanf_r+0x286>
  40183a:	2e02      	cmp	r6, #2
  40183c:	f000 820d 	beq.w	401c5a <__svfiscanf_r+0x63e>
  401840:	2e03      	cmp	r6, #3
  401842:	f000 8159 	beq.w	401af8 <__svfiscanf_r+0x4dc>
  401846:	2e01      	cmp	r6, #1
  401848:	f000 8120 	beq.w	401a8c <__svfiscanf_r+0x470>
  40184c:	2c00      	cmp	r4, #0
  40184e:	bf08      	it	eq
  401850:	2401      	moveq	r4, #1
  401852:	f015 0301 	ands.w	r3, r5, #1
  401856:	f040 825d 	bne.w	401d14 <__svfiscanf_r+0x6f8>
  40185a:	06ed      	lsls	r5, r5, #27
  40185c:	f140 830b 	bpl.w	401e76 <__svfiscanf_r+0x85a>
  401860:	461d      	mov	r5, r3
  401862:	e009      	b.n	401878 <__svfiscanf_r+0x25c>
  401864:	4413      	add	r3, r2
  401866:	f8cb 3000 	str.w	r3, [fp]
  40186a:	4415      	add	r5, r2
  40186c:	1aa4      	subs	r4, r4, r2
  40186e:	f001 ffe1 	bl	403834 <__srefill_r>
  401872:	2800      	cmp	r0, #0
  401874:	f040 82fb 	bne.w	401e6e <__svfiscanf_r+0x852>
  401878:	f8db 2004 	ldr.w	r2, [fp, #4]
  40187c:	f8db 3000 	ldr.w	r3, [fp]
  401880:	42a2      	cmp	r2, r4
  401882:	4659      	mov	r1, fp
  401884:	4638      	mov	r0, r7
  401886:	dbed      	blt.n	401864 <__svfiscanf_r+0x248>
  401888:	1b12      	subs	r2, r2, r4
  40188a:	4423      	add	r3, r4
  40188c:	f8cb 2004 	str.w	r2, [fp, #4]
  401890:	4425      	add	r5, r4
  401892:	f8cb 3000 	str.w	r3, [fp]
  401896:	9e03      	ldr	r6, [sp, #12]
  401898:	44aa      	add	sl, r5
  40189a:	4634      	mov	r4, r6
  40189c:	e70c      	b.n	4016b8 <__svfiscanf_r+0x9c>
  40189e:	f8cb 3000 	str.w	r3, [fp]
  4018a2:	f001 f931 	bl	402b08 <__locale_ctype_ptr>
  4018a6:	f8db 3000 	ldr.w	r3, [fp]
  4018aa:	781a      	ldrb	r2, [r3, #0]
  4018ac:	4410      	add	r0, r2
  4018ae:	3301      	adds	r3, #1
  4018b0:	7842      	ldrb	r2, [r0, #1]
  4018b2:	0712      	lsls	r2, r2, #28
  4018b4:	d5c1      	bpl.n	40183a <__svfiscanf_r+0x21e>
  4018b6:	f8db 2004 	ldr.w	r2, [fp, #4]
  4018ba:	3a01      	subs	r2, #1
  4018bc:	2a00      	cmp	r2, #0
  4018be:	f10a 0a01 	add.w	sl, sl, #1
  4018c2:	f8cb 2004 	str.w	r2, [fp, #4]
  4018c6:	dcea      	bgt.n	40189e <__svfiscanf_r+0x282>
  4018c8:	4659      	mov	r1, fp
  4018ca:	4638      	mov	r0, r7
  4018cc:	f001 ffb2 	bl	403834 <__srefill_r>
  4018d0:	2800      	cmp	r0, #0
  4018d2:	d0e6      	beq.n	4018a2 <__svfiscanf_r+0x286>
  4018d4:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4018d8:	07dc      	lsls	r4, r3, #31
  4018da:	d404      	bmi.n	4018e6 <__svfiscanf_r+0x2ca>
  4018dc:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4018e0:	0598      	lsls	r0, r3, #22
  4018e2:	f140 82b0 	bpl.w	401e46 <__svfiscanf_r+0x82a>
  4018e6:	9b05      	ldr	r3, [sp, #20]
  4018e8:	2b00      	cmp	r3, #0
  4018ea:	f000 8094 	beq.w	401a16 <__svfiscanf_r+0x3fa>
  4018ee:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4018f2:	0659      	lsls	r1, r3, #25
  4018f4:	f100 808f 	bmi.w	401a16 <__svfiscanf_r+0x3fa>
  4018f8:	9805      	ldr	r0, [sp, #20]
  4018fa:	b059      	add	sp, #356	; 0x164
  4018fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401900:	f896 8001 	ldrb.w	r8, [r6, #1]
  401904:	f045 0504 	orr.w	r5, r5, #4
  401908:	461e      	mov	r6, r3
  40190a:	e6f0      	b.n	4016ee <__svfiscanf_r+0xd2>
  40190c:	9303      	str	r3, [sp, #12]
  40190e:	4b78      	ldr	r3, [pc, #480]	; (401af0 <__svfiscanf_r+0x4d4>)
  401910:	9307      	str	r3, [sp, #28]
  401912:	230a      	movs	r3, #10
  401914:	9304      	str	r3, [sp, #16]
  401916:	f8db 3004 	ldr.w	r3, [fp, #4]
  40191a:	2b00      	cmp	r3, #0
  40191c:	f04f 0603 	mov.w	r6, #3
  401920:	dc89      	bgt.n	401836 <__svfiscanf_r+0x21a>
  401922:	4659      	mov	r1, fp
  401924:	4638      	mov	r0, r7
  401926:	f001 ff85 	bl	403834 <__srefill_r>
  40192a:	2800      	cmp	r0, #0
  40192c:	d083      	beq.n	401836 <__svfiscanf_r+0x21a>
  40192e:	e7d1      	b.n	4018d4 <__svfiscanf_r+0x2b8>
  401930:	9303      	str	r3, [sp, #12]
  401932:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  401936:	2600      	movs	r6, #0
  401938:	e779      	b.n	40182e <__svfiscanf_r+0x212>
  40193a:	4619      	mov	r1, r3
  40193c:	a818      	add	r0, sp, #96	; 0x60
  40193e:	f002 f815 	bl	40396c <__sccl>
  401942:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  401946:	9003      	str	r0, [sp, #12]
  401948:	2601      	movs	r6, #1
  40194a:	e770      	b.n	40182e <__svfiscanf_r+0x212>
  40194c:	9303      	str	r3, [sp, #12]
  40194e:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  401952:	4b68      	ldr	r3, [pc, #416]	; (401af4 <__svfiscanf_r+0x4d8>)
  401954:	9307      	str	r3, [sp, #28]
  401956:	2310      	movs	r3, #16
  401958:	9304      	str	r3, [sp, #16]
  40195a:	2603      	movs	r6, #3
  40195c:	e767      	b.n	40182e <__svfiscanf_r+0x212>
  40195e:	9303      	str	r3, [sp, #12]
  401960:	f045 0501 	orr.w	r5, r5, #1
  401964:	4b63      	ldr	r3, [pc, #396]	; (401af4 <__svfiscanf_r+0x4d8>)
  401966:	9307      	str	r3, [sp, #28]
  401968:	2308      	movs	r3, #8
  40196a:	9304      	str	r3, [sp, #16]
  40196c:	2603      	movs	r6, #3
  40196e:	e75e      	b.n	40182e <__svfiscanf_r+0x212>
  401970:	9303      	str	r3, [sp, #12]
  401972:	4b60      	ldr	r3, [pc, #384]	; (401af4 <__svfiscanf_r+0x4d8>)
  401974:	9307      	str	r3, [sp, #28]
  401976:	230a      	movs	r3, #10
  401978:	9304      	str	r3, [sp, #16]
  40197a:	2603      	movs	r6, #3
  40197c:	e757      	b.n	40182e <__svfiscanf_r+0x212>
  40197e:	9303      	str	r3, [sp, #12]
  401980:	2602      	movs	r6, #2
  401982:	e754      	b.n	40182e <__svfiscanf_r+0x212>
  401984:	9303      	str	r3, [sp, #12]
  401986:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  40198a:	e7e2      	b.n	401952 <__svfiscanf_r+0x336>
  40198c:	9303      	str	r3, [sp, #12]
  40198e:	e7e9      	b.n	401964 <__svfiscanf_r+0x348>
  401990:	06ea      	lsls	r2, r5, #27
  401992:	9303      	str	r3, [sp, #12]
  401994:	d477      	bmi.n	401a86 <__svfiscanf_r+0x46a>
  401996:	076b      	lsls	r3, r5, #29
  401998:	f100 82ec 	bmi.w	401f74 <__svfiscanf_r+0x958>
  40199c:	07ee      	lsls	r6, r5, #31
  40199e:	f100 82d8 	bmi.w	401f52 <__svfiscanf_r+0x936>
  4019a2:	07ad      	lsls	r5, r5, #30
  4019a4:	f140 82d5 	bpl.w	401f52 <__svfiscanf_r+0x936>
  4019a8:	9a06      	ldr	r2, [sp, #24]
  4019aa:	9e03      	ldr	r6, [sp, #12]
  4019ac:	6813      	ldr	r3, [r2, #0]
  4019ae:	4650      	mov	r0, sl
  4019b0:	17c1      	asrs	r1, r0, #31
  4019b2:	3204      	adds	r2, #4
  4019b4:	9206      	str	r2, [sp, #24]
  4019b6:	e9c3 0100 	strd	r0, r1, [r3]
  4019ba:	4634      	mov	r4, r6
  4019bc:	e67c      	b.n	4016b8 <__svfiscanf_r+0x9c>
  4019be:	f896 8001 	ldrb.w	r8, [r6, #1]
  4019c2:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
  4019c6:	f000 82b2 	beq.w	401f2e <__svfiscanf_r+0x912>
  4019ca:	f045 0501 	orr.w	r5, r5, #1
  4019ce:	461e      	mov	r6, r3
  4019d0:	e68d      	b.n	4016ee <__svfiscanf_r+0xd2>
  4019d2:	f896 8001 	ldrb.w	r8, [r6, #1]
  4019d6:	f045 0502 	orr.w	r5, r5, #2
  4019da:	461e      	mov	r6, r3
  4019dc:	e687      	b.n	4016ee <__svfiscanf_r+0xd2>
  4019de:	9303      	str	r3, [sp, #12]
  4019e0:	f045 0501 	orr.w	r5, r5, #1
  4019e4:	e793      	b.n	40190e <__svfiscanf_r+0x2f2>
  4019e6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4019ea:	eb08 0444 	add.w	r4, r8, r4, lsl #1
  4019ee:	3c30      	subs	r4, #48	; 0x30
  4019f0:	f896 8001 	ldrb.w	r8, [r6, #1]
  4019f4:	461e      	mov	r6, r3
  4019f6:	e67a      	b.n	4016ee <__svfiscanf_r+0xd2>
  4019f8:	f896 8001 	ldrb.w	r8, [r6, #1]
  4019fc:	f045 0510 	orr.w	r5, r5, #16
  401a00:	461e      	mov	r6, r3
  401a02:	e674      	b.n	4016ee <__svfiscanf_r+0xd2>
  401a04:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401a08:	07dc      	lsls	r4, r3, #31
  401a0a:	d404      	bmi.n	401a16 <__svfiscanf_r+0x3fa>
  401a0c:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401a10:	0598      	lsls	r0, r3, #22
  401a12:	f140 8293 	bpl.w	401f3c <__svfiscanf_r+0x920>
  401a16:	f04f 33ff 	mov.w	r3, #4294967295
  401a1a:	9305      	str	r3, [sp, #20]
  401a1c:	9805      	ldr	r0, [sp, #20]
  401a1e:	b059      	add	sp, #356	; 0x164
  401a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a24:	9303      	str	r3, [sp, #12]
  401a26:	f001 f86f 	bl	402b08 <__locale_ctype_ptr>
  401a2a:	4440      	add	r0, r8
  401a2c:	7843      	ldrb	r3, [r0, #1]
  401a2e:	f003 0303 	and.w	r3, r3, #3
  401a32:	2b01      	cmp	r3, #1
  401a34:	f47f af6b 	bne.w	40190e <__svfiscanf_r+0x2f2>
  401a38:	f045 0501 	orr.w	r5, r5, #1
  401a3c:	e767      	b.n	40190e <__svfiscanf_r+0x2f2>
  401a3e:	ab0c      	add	r3, sp, #48	; 0x30
  401a40:	4618      	mov	r0, r3
  401a42:	2208      	movs	r2, #8
  401a44:	2100      	movs	r1, #0
  401a46:	9308      	str	r3, [sp, #32]
  401a48:	f7ff fbee 	bl	401228 <memset>
  401a4c:	f015 0310 	ands.w	r3, r5, #16
  401a50:	9309      	str	r3, [sp, #36]	; 0x24
  401a52:	f000 81eb 	beq.w	401e2c <__svfiscanf_r+0x810>
  401a56:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  401a5a:	2600      	movs	r6, #0
  401a5c:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  401a60:	f001 f852 	bl	402b08 <__locale_ctype_ptr>
  401a64:	f8db 3000 	ldr.w	r3, [fp]
  401a68:	781b      	ldrb	r3, [r3, #0]
  401a6a:	4403      	add	r3, r0
  401a6c:	785b      	ldrb	r3, [r3, #1]
  401a6e:	071a      	lsls	r2, r3, #28
  401a70:	d402      	bmi.n	401a78 <__svfiscanf_r+0x45c>
  401a72:	2c00      	cmp	r4, #0
  401a74:	f040 8289 	bne.w	401f8a <__svfiscanf_r+0x96e>
  401a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401a7a:	b923      	cbnz	r3, 401a86 <__svfiscanf_r+0x46a>
  401a7c:	f8c9 3000 	str.w	r3, [r9]
  401a80:	9b05      	ldr	r3, [sp, #20]
  401a82:	3301      	adds	r3, #1
  401a84:	9305      	str	r3, [sp, #20]
  401a86:	9e03      	ldr	r6, [sp, #12]
  401a88:	4634      	mov	r4, r6
  401a8a:	e615      	b.n	4016b8 <__svfiscanf_r+0x9c>
  401a8c:	2c00      	cmp	r4, #0
  401a8e:	bf08      	it	eq
  401a90:	f04f 34ff 	moveq.w	r4, #4294967295
  401a94:	06e8      	lsls	r0, r5, #27
  401a96:	f140 810b 	bpl.w	401cb0 <__svfiscanf_r+0x694>
  401a9a:	f8db 2000 	ldr.w	r2, [fp]
  401a9e:	2500      	movs	r5, #0
  401aa0:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  401aa4:	7813      	ldrb	r3, [r2, #0]
  401aa6:	f818 3003 	ldrb.w	r3, [r8, r3]
  401aaa:	3201      	adds	r2, #1
  401aac:	b1db      	cbz	r3, 401ae6 <__svfiscanf_r+0x4ca>
  401aae:	f8db 3004 	ldr.w	r3, [fp, #4]
  401ab2:	f8cb 2000 	str.w	r2, [fp]
  401ab6:	3501      	adds	r5, #1
  401ab8:	3b01      	subs	r3, #1
  401aba:	42ac      	cmp	r4, r5
  401abc:	f8cb 3004 	str.w	r3, [fp, #4]
  401ac0:	f43f aee9 	beq.w	401896 <__svfiscanf_r+0x27a>
  401ac4:	2b00      	cmp	r3, #0
  401ac6:	dced      	bgt.n	401aa4 <__svfiscanf_r+0x488>
  401ac8:	4659      	mov	r1, fp
  401aca:	4638      	mov	r0, r7
  401acc:	f001 feb2 	bl	403834 <__srefill_r>
  401ad0:	2800      	cmp	r0, #0
  401ad2:	f47f aee0 	bne.w	401896 <__svfiscanf_r+0x27a>
  401ad6:	f8db 2000 	ldr.w	r2, [fp]
  401ada:	7813      	ldrb	r3, [r2, #0]
  401adc:	f818 3003 	ldrb.w	r3, [r8, r3]
  401ae0:	3201      	adds	r2, #1
  401ae2:	2b00      	cmp	r3, #0
  401ae4:	d1e3      	bne.n	401aae <__svfiscanf_r+0x492>
  401ae6:	2d00      	cmp	r5, #0
  401ae8:	f47f aed5 	bne.w	401896 <__svfiscanf_r+0x27a>
  401aec:	e5ea      	b.n	4016c4 <__svfiscanf_r+0xa8>
  401aee:	bf00      	nop
  401af0:	00403b91 	.word	0x00403b91
  401af4:	00403ebd 	.word	0x00403ebd
  401af8:	1e63      	subs	r3, r4, #1
  401afa:	2b26      	cmp	r3, #38	; 0x26
  401afc:	bf8c      	ite	hi
  401afe:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  401b02:	2200      	movls	r2, #0
  401b04:	f04f 0900 	mov.w	r9, #0
  401b08:	4611      	mov	r1, r2
  401b0a:	ae0e      	add	r6, sp, #56	; 0x38
  401b0c:	464b      	mov	r3, r9
  401b0e:	46b9      	mov	r9, r7
  401b10:	9f04      	ldr	r7, [sp, #16]
  401b12:	4652      	mov	r2, sl
  401b14:	bf88      	it	hi
  401b16:	2427      	movhi	r4, #39	; 0x27
  401b18:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  401b1c:	46b0      	mov	r8, r6
  401b1e:	468a      	mov	sl, r1
  401b20:	f8db 0000 	ldr.w	r0, [fp]
  401b24:	f890 e000 	ldrb.w	lr, [r0]
  401b28:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  401b2c:	294d      	cmp	r1, #77	; 0x4d
  401b2e:	d842      	bhi.n	401bb6 <__svfiscanf_r+0x59a>
  401b30:	e8df f001 	tbb	[pc, r1]
  401b34:	418e418e 	.word	0x418e418e
  401b38:	63636941 	.word	0x63636941
  401b3c:	63636363 	.word	0x63636363
  401b40:	415d5d63 	.word	0x415d5d63
  401b44:	41414141 	.word	0x41414141
  401b48:	58584141 	.word	0x58584141
  401b4c:	58585858 	.word	0x58585858
  401b50:	41414141 	.word	0x41414141
  401b54:	41414141 	.word	0x41414141
  401b58:	41414141 	.word	0x41414141
  401b5c:	41414141 	.word	0x41414141
  401b60:	41412741 	.word	0x41412741
  401b64:	41414141 	.word	0x41414141
  401b68:	58584141 	.word	0x58584141
  401b6c:	58585858 	.word	0x58585858
  401b70:	41414141 	.word	0x41414141
  401b74:	41414141 	.word	0x41414141
  401b78:	41414141 	.word	0x41414141
  401b7c:	41414141 	.word	0x41414141
  401b80:	2741      	.short	0x2741
  401b82:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  401b86:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  401b8a:	d114      	bne.n	401bb6 <__svfiscanf_r+0x59a>
  401b8c:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  401b90:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  401b94:	2710      	movs	r7, #16
  401b96:	f8db 1004 	ldr.w	r1, [fp, #4]
  401b9a:	f888 e000 	strb.w	lr, [r8]
  401b9e:	3901      	subs	r1, #1
  401ba0:	2900      	cmp	r1, #0
  401ba2:	f108 0801 	add.w	r8, r8, #1
  401ba6:	f8cb 1004 	str.w	r1, [fp, #4]
  401baa:	dd46      	ble.n	401c3a <__svfiscanf_r+0x61e>
  401bac:	3001      	adds	r0, #1
  401bae:	f8cb 0000 	str.w	r0, [fp]
  401bb2:	3c01      	subs	r4, #1
  401bb4:	d1b4      	bne.n	401b20 <__svfiscanf_r+0x504>
  401bb6:	05e9      	lsls	r1, r5, #23
  401bb8:	9704      	str	r7, [sp, #16]
  401bba:	4692      	mov	sl, r2
  401bbc:	464f      	mov	r7, r9
  401bbe:	4699      	mov	r9, r3
  401bc0:	d505      	bpl.n	401bce <__svfiscanf_r+0x5b2>
  401bc2:	45b0      	cmp	r8, r6
  401bc4:	f200 81a2 	bhi.w	401f0c <__svfiscanf_r+0x8f0>
  401bc8:	45b0      	cmp	r8, r6
  401bca:	f43f ad7b 	beq.w	4016c4 <__svfiscanf_r+0xa8>
  401bce:	f015 0410 	ands.w	r4, r5, #16
  401bd2:	f000 80e5 	beq.w	401da0 <__svfiscanf_r+0x784>
  401bd6:	eba8 0606 	sub.w	r6, r8, r6
  401bda:	44b1      	add	r9, r6
  401bdc:	9e03      	ldr	r6, [sp, #12]
  401bde:	44ca      	add	sl, r9
  401be0:	4634      	mov	r4, r6
  401be2:	e569      	b.n	4016b8 <__svfiscanf_r+0x9c>
  401be4:	2f0a      	cmp	r7, #10
  401be6:	dde6      	ble.n	401bb6 <__svfiscanf_r+0x59a>
  401be8:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  401bec:	e7d3      	b.n	401b96 <__svfiscanf_r+0x57a>
  401bee:	49ac      	ldr	r1, [pc, #688]	; (401ea0 <__svfiscanf_r+0x884>)
  401bf0:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  401bf4:	2f08      	cmp	r7, #8
  401bf6:	dcf7      	bgt.n	401be8 <__svfiscanf_r+0x5cc>
  401bf8:	e7dd      	b.n	401bb6 <__svfiscanf_r+0x59a>
  401bfa:	49a9      	ldr	r1, [pc, #676]	; (401ea0 <__svfiscanf_r+0x884>)
  401bfc:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  401c00:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  401c04:	e7c7      	b.n	401b96 <__svfiscanf_r+0x57a>
  401c06:	0529      	lsls	r1, r5, #20
  401c08:	d5c5      	bpl.n	401b96 <__svfiscanf_r+0x57a>
  401c0a:	b917      	cbnz	r7, 401c12 <__svfiscanf_r+0x5f6>
  401c0c:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  401c10:	2708      	movs	r7, #8
  401c12:	0569      	lsls	r1, r5, #21
  401c14:	f100 80eb 	bmi.w	401dee <__svfiscanf_r+0x7d2>
  401c18:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  401c1c:	f1ba 0f00 	cmp.w	sl, #0
  401c20:	d002      	beq.n	401c28 <__svfiscanf_r+0x60c>
  401c22:	f10a 3aff 	add.w	sl, sl, #4294967295
  401c26:	3401      	adds	r4, #1
  401c28:	f8db 1004 	ldr.w	r1, [fp, #4]
  401c2c:	3901      	subs	r1, #1
  401c2e:	2900      	cmp	r1, #0
  401c30:	f103 0301 	add.w	r3, r3, #1
  401c34:	f8cb 1004 	str.w	r1, [fp, #4]
  401c38:	dcb8      	bgt.n	401bac <__svfiscanf_r+0x590>
  401c3a:	4659      	mov	r1, fp
  401c3c:	4648      	mov	r0, r9
  401c3e:	9308      	str	r3, [sp, #32]
  401c40:	9204      	str	r2, [sp, #16]
  401c42:	f001 fdf7 	bl	403834 <__srefill_r>
  401c46:	9a04      	ldr	r2, [sp, #16]
  401c48:	9b08      	ldr	r3, [sp, #32]
  401c4a:	2800      	cmp	r0, #0
  401c4c:	d0b1      	beq.n	401bb2 <__svfiscanf_r+0x596>
  401c4e:	e7b2      	b.n	401bb6 <__svfiscanf_r+0x59a>
  401c50:	0629      	lsls	r1, r5, #24
  401c52:	d5b0      	bpl.n	401bb6 <__svfiscanf_r+0x59a>
  401c54:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  401c58:	e79d      	b.n	401b96 <__svfiscanf_r+0x57a>
  401c5a:	2c00      	cmp	r4, #0
  401c5c:	bf08      	it	eq
  401c5e:	f04f 34ff 	moveq.w	r4, #4294967295
  401c62:	f015 0601 	ands.w	r6, r5, #1
  401c66:	f47f aeea 	bne.w	401a3e <__svfiscanf_r+0x422>
  401c6a:	06eb      	lsls	r3, r5, #27
  401c6c:	f140 811c 	bpl.w	401ea8 <__svfiscanf_r+0x88c>
  401c70:	f000 ff4a 	bl	402b08 <__locale_ctype_ptr>
  401c74:	f8db 3000 	ldr.w	r3, [fp]
  401c78:	781a      	ldrb	r2, [r3, #0]
  401c7a:	4410      	add	r0, r2
  401c7c:	3301      	adds	r3, #1
  401c7e:	7842      	ldrb	r2, [r0, #1]
  401c80:	0715      	lsls	r5, r2, #28
  401c82:	d411      	bmi.n	401ca8 <__svfiscanf_r+0x68c>
  401c84:	f8db 2004 	ldr.w	r2, [fp, #4]
  401c88:	f8cb 3000 	str.w	r3, [fp]
  401c8c:	3601      	adds	r6, #1
  401c8e:	3a01      	subs	r2, #1
  401c90:	42b4      	cmp	r4, r6
  401c92:	f8cb 2004 	str.w	r2, [fp, #4]
  401c96:	d007      	beq.n	401ca8 <__svfiscanf_r+0x68c>
  401c98:	2a00      	cmp	r2, #0
  401c9a:	dce9      	bgt.n	401c70 <__svfiscanf_r+0x654>
  401c9c:	4659      	mov	r1, fp
  401c9e:	4638      	mov	r0, r7
  401ca0:	f001 fdc8 	bl	403834 <__srefill_r>
  401ca4:	2800      	cmp	r0, #0
  401ca6:	d0e3      	beq.n	401c70 <__svfiscanf_r+0x654>
  401ca8:	44b2      	add	sl, r6
  401caa:	9e03      	ldr	r6, [sp, #12]
  401cac:	4634      	mov	r4, r6
  401cae:	e503      	b.n	4016b8 <__svfiscanf_r+0x9c>
  401cb0:	9a06      	ldr	r2, [sp, #24]
  401cb2:	6815      	ldr	r5, [r2, #0]
  401cb4:	1d16      	adds	r6, r2, #4
  401cb6:	46a9      	mov	r9, r5
  401cb8:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  401cbc:	f8db 3000 	ldr.w	r3, [fp]
  401cc0:	781a      	ldrb	r2, [r3, #0]
  401cc2:	f818 2002 	ldrb.w	r2, [r8, r2]
  401cc6:	1c59      	adds	r1, r3, #1
  401cc8:	b1c2      	cbz	r2, 401cfc <__svfiscanf_r+0x6e0>
  401cca:	f8db 2004 	ldr.w	r2, [fp, #4]
  401cce:	f8cb 1000 	str.w	r1, [fp]
  401cd2:	3a01      	subs	r2, #1
  401cd4:	f8cb 2004 	str.w	r2, [fp, #4]
  401cd8:	781b      	ldrb	r3, [r3, #0]
  401cda:	f809 3b01 	strb.w	r3, [r9], #1
  401cde:	3c01      	subs	r4, #1
  401ce0:	d00c      	beq.n	401cfc <__svfiscanf_r+0x6e0>
  401ce2:	f8db 3004 	ldr.w	r3, [fp, #4]
  401ce6:	2b00      	cmp	r3, #0
  401ce8:	dce8      	bgt.n	401cbc <__svfiscanf_r+0x6a0>
  401cea:	4659      	mov	r1, fp
  401cec:	4638      	mov	r0, r7
  401cee:	f001 fda1 	bl	403834 <__srefill_r>
  401cf2:	2800      	cmp	r0, #0
  401cf4:	d0e2      	beq.n	401cbc <__svfiscanf_r+0x6a0>
  401cf6:	454d      	cmp	r5, r9
  401cf8:	f43f adec 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401cfc:	ebb9 0505 	subs.w	r5, r9, r5
  401d00:	f43f ace0 	beq.w	4016c4 <__svfiscanf_r+0xa8>
  401d04:	9a05      	ldr	r2, [sp, #20]
  401d06:	9606      	str	r6, [sp, #24]
  401d08:	2300      	movs	r3, #0
  401d0a:	3201      	adds	r2, #1
  401d0c:	9205      	str	r2, [sp, #20]
  401d0e:	f889 3000 	strb.w	r3, [r9]
  401d12:	e5c0      	b.n	401896 <__svfiscanf_r+0x27a>
  401d14:	ab0c      	add	r3, sp, #48	; 0x30
  401d16:	4618      	mov	r0, r3
  401d18:	2208      	movs	r2, #8
  401d1a:	2100      	movs	r1, #0
  401d1c:	9308      	str	r3, [sp, #32]
  401d1e:	f7ff fa83 	bl	401228 <memset>
  401d22:	f015 0310 	ands.w	r3, r5, #16
  401d26:	9309      	str	r3, [sp, #36]	; 0x24
  401d28:	d077      	beq.n	401e1a <__svfiscanf_r+0x7fe>
  401d2a:	f04f 0900 	mov.w	r9, #0
  401d2e:	2c00      	cmp	r4, #0
  401d30:	f43f aea9 	beq.w	401a86 <__svfiscanf_r+0x46a>
  401d34:	2500      	movs	r5, #0
  401d36:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  401d3a:	f000 fed3 	bl	402ae4 <__locale_mb_cur_max>
  401d3e:	42a8      	cmp	r0, r5
  401d40:	f43f adc8 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401d44:	e89b 000c 	ldmia.w	fp, {r2, r3}
  401d48:	f812 0b01 	ldrb.w	r0, [r2], #1
  401d4c:	f8cb 2000 	str.w	r2, [fp]
  401d50:	3b01      	subs	r3, #1
  401d52:	9a08      	ldr	r2, [sp, #32]
  401d54:	9200      	str	r2, [sp, #0]
  401d56:	1c6e      	adds	r6, r5, #1
  401d58:	f8cb 3004 	str.w	r3, [fp, #4]
  401d5c:	f808 0005 	strb.w	r0, [r8, r5]
  401d60:	4633      	mov	r3, r6
  401d62:	4642      	mov	r2, r8
  401d64:	4649      	mov	r1, r9
  401d66:	4638      	mov	r0, r7
  401d68:	f001 fa14 	bl	403194 <_mbrtowc_r>
  401d6c:	1c43      	adds	r3, r0, #1
  401d6e:	f43f adb1 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401d72:	2800      	cmp	r0, #0
  401d74:	d16c      	bne.n	401e50 <__svfiscanf_r+0x834>
  401d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d78:	2b00      	cmp	r3, #0
  401d7a:	d16d      	bne.n	401e58 <__svfiscanf_r+0x83c>
  401d7c:	f8c9 3000 	str.w	r3, [r9]
  401d80:	44b2      	add	sl, r6
  401d82:	3c01      	subs	r4, #1
  401d84:	f109 0904 	add.w	r9, r9, #4
  401d88:	2500      	movs	r5, #0
  401d8a:	f8db 3004 	ldr.w	r3, [fp, #4]
  401d8e:	2b00      	cmp	r3, #0
  401d90:	dd30      	ble.n	401df4 <__svfiscanf_r+0x7d8>
  401d92:	2c00      	cmp	r4, #0
  401d94:	d1d1      	bne.n	401d3a <__svfiscanf_r+0x71e>
  401d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401d98:	2b00      	cmp	r3, #0
  401d9a:	f47f ae74 	bne.w	401a86 <__svfiscanf_r+0x46a>
  401d9e:	e66f      	b.n	401a80 <__svfiscanf_r+0x464>
  401da0:	4622      	mov	r2, r4
  401da2:	f888 4000 	strb.w	r4, [r8]
  401da6:	9b04      	ldr	r3, [sp, #16]
  401da8:	9c07      	ldr	r4, [sp, #28]
  401daa:	4631      	mov	r1, r6
  401dac:	4638      	mov	r0, r7
  401dae:	47a0      	blx	r4
  401db0:	06aa      	lsls	r2, r5, #26
  401db2:	d442      	bmi.n	401e3a <__svfiscanf_r+0x81e>
  401db4:	076b      	lsls	r3, r5, #29
  401db6:	f100 80d7 	bmi.w	401f68 <__svfiscanf_r+0x94c>
  401dba:	f015 0201 	ands.w	r2, r5, #1
  401dbe:	d13c      	bne.n	401e3a <__svfiscanf_r+0x81e>
  401dc0:	07ad      	lsls	r5, r5, #30
  401dc2:	d53a      	bpl.n	401e3a <__svfiscanf_r+0x81e>
  401dc4:	9b07      	ldr	r3, [sp, #28]
  401dc6:	4619      	mov	r1, r3
  401dc8:	4b36      	ldr	r3, [pc, #216]	; (401ea4 <__svfiscanf_r+0x888>)
  401dca:	4299      	cmp	r1, r3
  401dcc:	4638      	mov	r0, r7
  401dce:	9b04      	ldr	r3, [sp, #16]
  401dd0:	4631      	mov	r1, r6
  401dd2:	f000 811e 	beq.w	402012 <__svfiscanf_r+0x9f6>
  401dd6:	f001 ffbb 	bl	403d50 <_strtoll_r>
  401dda:	9a06      	ldr	r2, [sp, #24]
  401ddc:	6813      	ldr	r3, [r2, #0]
  401dde:	e9c3 0100 	strd	r0, r1, [r3]
  401de2:	3204      	adds	r2, #4
  401de4:	9206      	str	r2, [sp, #24]
  401de6:	9b05      	ldr	r3, [sp, #20]
  401de8:	3301      	adds	r3, #1
  401dea:	9305      	str	r3, [sp, #20]
  401dec:	e6f3      	b.n	401bd6 <__svfiscanf_r+0x5ba>
  401dee:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  401df2:	e6d0      	b.n	401b96 <__svfiscanf_r+0x57a>
  401df4:	4659      	mov	r1, fp
  401df6:	4638      	mov	r0, r7
  401df8:	f001 fd1c 	bl	403834 <__srefill_r>
  401dfc:	2800      	cmp	r0, #0
  401dfe:	d0c8      	beq.n	401d92 <__svfiscanf_r+0x776>
  401e00:	2d00      	cmp	r5, #0
  401e02:	d0c8      	beq.n	401d96 <__svfiscanf_r+0x77a>
  401e04:	e566      	b.n	4018d4 <__svfiscanf_r+0x2b8>
  401e06:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401e0a:	9203      	str	r2, [sp, #12]
  401e0c:	f000 fe8e 	bl	402b2c <__retarget_lock_acquire_recursive>
  401e10:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  401e14:	9a03      	ldr	r2, [sp, #12]
  401e16:	b299      	uxth	r1, r3
  401e18:	e410      	b.n	40163c <__svfiscanf_r+0x20>
  401e1a:	9a06      	ldr	r2, [sp, #24]
  401e1c:	4613      	mov	r3, r2
  401e1e:	3304      	adds	r3, #4
  401e20:	f8d2 9000 	ldr.w	r9, [r2]
  401e24:	9306      	str	r3, [sp, #24]
  401e26:	2c00      	cmp	r4, #0
  401e28:	d184      	bne.n	401d34 <__svfiscanf_r+0x718>
  401e2a:	e629      	b.n	401a80 <__svfiscanf_r+0x464>
  401e2c:	9a06      	ldr	r2, [sp, #24]
  401e2e:	4613      	mov	r3, r2
  401e30:	3304      	adds	r3, #4
  401e32:	f8d2 9000 	ldr.w	r9, [r2]
  401e36:	9306      	str	r3, [sp, #24]
  401e38:	e60f      	b.n	401a5a <__svfiscanf_r+0x43e>
  401e3a:	9a06      	ldr	r2, [sp, #24]
  401e3c:	6813      	ldr	r3, [r2, #0]
  401e3e:	3204      	adds	r2, #4
  401e40:	9206      	str	r2, [sp, #24]
  401e42:	6018      	str	r0, [r3, #0]
  401e44:	e7cf      	b.n	401de6 <__svfiscanf_r+0x7ca>
  401e46:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401e4a:	f000 fe71 	bl	402b30 <__retarget_lock_release_recursive>
  401e4e:	e54a      	b.n	4018e6 <__svfiscanf_r+0x2ca>
  401e50:	3002      	adds	r0, #2
  401e52:	d105      	bne.n	401e60 <__svfiscanf_r+0x844>
  401e54:	4635      	mov	r5, r6
  401e56:	e798      	b.n	401d8a <__svfiscanf_r+0x76e>
  401e58:	44b2      	add	sl, r6
  401e5a:	3c01      	subs	r4, #1
  401e5c:	4605      	mov	r5, r0
  401e5e:	e794      	b.n	401d8a <__svfiscanf_r+0x76e>
  401e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e62:	44b2      	add	sl, r6
  401e64:	3c01      	subs	r4, #1
  401e66:	2b00      	cmp	r3, #0
  401e68:	d08c      	beq.n	401d84 <__svfiscanf_r+0x768>
  401e6a:	2500      	movs	r5, #0
  401e6c:	e78d      	b.n	401d8a <__svfiscanf_r+0x76e>
  401e6e:	2d00      	cmp	r5, #0
  401e70:	f47f ad11 	bne.w	401896 <__svfiscanf_r+0x27a>
  401e74:	e52e      	b.n	4018d4 <__svfiscanf_r+0x2b8>
  401e76:	9d06      	ldr	r5, [sp, #24]
  401e78:	4623      	mov	r3, r4
  401e7a:	6829      	ldr	r1, [r5, #0]
  401e7c:	f8cd b000 	str.w	fp, [sp]
  401e80:	2201      	movs	r2, #1
  401e82:	4638      	mov	r0, r7
  401e84:	f000 fa40 	bl	402308 <_fread_r>
  401e88:	1d2e      	adds	r6, r5, #4
  401e8a:	2800      	cmp	r0, #0
  401e8c:	f43f ad22 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401e90:	9b05      	ldr	r3, [sp, #20]
  401e92:	9606      	str	r6, [sp, #24]
  401e94:	9e03      	ldr	r6, [sp, #12]
  401e96:	3301      	adds	r3, #1
  401e98:	4482      	add	sl, r0
  401e9a:	9305      	str	r3, [sp, #20]
  401e9c:	4634      	mov	r4, r6
  401e9e:	e40b      	b.n	4016b8 <__svfiscanf_r+0x9c>
  401ea0:	00404958 	.word	0x00404958
  401ea4:	00403ebd 	.word	0x00403ebd
  401ea8:	9a06      	ldr	r2, [sp, #24]
  401eaa:	6816      	ldr	r6, [r2, #0]
  401eac:	f102 0804 	add.w	r8, r2, #4
  401eb0:	4635      	mov	r5, r6
  401eb2:	f000 fe29 	bl	402b08 <__locale_ctype_ptr>
  401eb6:	f8db 2000 	ldr.w	r2, [fp]
  401eba:	7813      	ldrb	r3, [r2, #0]
  401ebc:	4418      	add	r0, r3
  401ebe:	1c51      	adds	r1, r2, #1
  401ec0:	7843      	ldrb	r3, [r0, #1]
  401ec2:	0718      	lsls	r0, r3, #28
  401ec4:	d415      	bmi.n	401ef2 <__svfiscanf_r+0x8d6>
  401ec6:	f8db 3004 	ldr.w	r3, [fp, #4]
  401eca:	f8cb 1000 	str.w	r1, [fp]
  401ece:	3b01      	subs	r3, #1
  401ed0:	f8cb 3004 	str.w	r3, [fp, #4]
  401ed4:	7813      	ldrb	r3, [r2, #0]
  401ed6:	f805 3b01 	strb.w	r3, [r5], #1
  401eda:	3c01      	subs	r4, #1
  401edc:	d009      	beq.n	401ef2 <__svfiscanf_r+0x8d6>
  401ede:	f8db 3004 	ldr.w	r3, [fp, #4]
  401ee2:	2b00      	cmp	r3, #0
  401ee4:	dce5      	bgt.n	401eb2 <__svfiscanf_r+0x896>
  401ee6:	4659      	mov	r1, fp
  401ee8:	4638      	mov	r0, r7
  401eea:	f001 fca3 	bl	403834 <__srefill_r>
  401eee:	2800      	cmp	r0, #0
  401ef0:	d0df      	beq.n	401eb2 <__svfiscanf_r+0x896>
  401ef2:	1bae      	subs	r6, r5, r6
  401ef4:	9a05      	ldr	r2, [sp, #20]
  401ef6:	f8cd 8018 	str.w	r8, [sp, #24]
  401efa:	44b2      	add	sl, r6
  401efc:	9e03      	ldr	r6, [sp, #12]
  401efe:	2300      	movs	r3, #0
  401f00:	3201      	adds	r2, #1
  401f02:	9205      	str	r2, [sp, #20]
  401f04:	702b      	strb	r3, [r5, #0]
  401f06:	4634      	mov	r4, r6
  401f08:	f7ff bbd6 	b.w	4016b8 <__svfiscanf_r+0x9c>
  401f0c:	f818 1c01 	ldrb.w	r1, [r8, #-1]
  401f10:	465a      	mov	r2, fp
  401f12:	4638      	mov	r0, r7
  401f14:	f002 f910 	bl	404138 <_ungetc_r>
  401f18:	f108 38ff 	add.w	r8, r8, #4294967295
  401f1c:	e654      	b.n	401bc8 <__svfiscanf_r+0x5ac>
  401f1e:	4659      	mov	r1, fp
  401f20:	4638      	mov	r0, r7
  401f22:	f001 fc87 	bl	403834 <__srefill_r>
  401f26:	2800      	cmp	r0, #0
  401f28:	f43f ac67 	beq.w	4017fa <__svfiscanf_r+0x1de>
  401f2c:	e4d2      	b.n	4018d4 <__svfiscanf_r+0x2b8>
  401f2e:	f896 8002 	ldrb.w	r8, [r6, #2]
  401f32:	f045 0502 	orr.w	r5, r5, #2
  401f36:	3602      	adds	r6, #2
  401f38:	f7ff bbd9 	b.w	4016ee <__svfiscanf_r+0xd2>
  401f3c:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401f40:	f000 fdf6 	bl	402b30 <__retarget_lock_release_recursive>
  401f44:	f04f 33ff 	mov.w	r3, #4294967295
  401f48:	9305      	str	r3, [sp, #20]
  401f4a:	9805      	ldr	r0, [sp, #20]
  401f4c:	b059      	add	sp, #356	; 0x164
  401f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f52:	9a06      	ldr	r2, [sp, #24]
  401f54:	9e03      	ldr	r6, [sp, #12]
  401f56:	6813      	ldr	r3, [r2, #0]
  401f58:	f8c3 a000 	str.w	sl, [r3]
  401f5c:	4613      	mov	r3, r2
  401f5e:	3304      	adds	r3, #4
  401f60:	9306      	str	r3, [sp, #24]
  401f62:	4634      	mov	r4, r6
  401f64:	f7ff bba8 	b.w	4016b8 <__svfiscanf_r+0x9c>
  401f68:	9a06      	ldr	r2, [sp, #24]
  401f6a:	6813      	ldr	r3, [r2, #0]
  401f6c:	3204      	adds	r2, #4
  401f6e:	9206      	str	r2, [sp, #24]
  401f70:	8018      	strh	r0, [r3, #0]
  401f72:	e738      	b.n	401de6 <__svfiscanf_r+0x7ca>
  401f74:	9a06      	ldr	r2, [sp, #24]
  401f76:	9e03      	ldr	r6, [sp, #12]
  401f78:	6813      	ldr	r3, [r2, #0]
  401f7a:	f8a3 a000 	strh.w	sl, [r3]
  401f7e:	4613      	mov	r3, r2
  401f80:	3304      	adds	r3, #4
  401f82:	9306      	str	r3, [sp, #24]
  401f84:	4634      	mov	r4, r6
  401f86:	f7ff bb97 	b.w	4016b8 <__svfiscanf_r+0x9c>
  401f8a:	f000 fdab 	bl	402ae4 <__locale_mb_cur_max>
  401f8e:	4286      	cmp	r6, r0
  401f90:	f43f aca0 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401f94:	e89b 000c 	ldmia.w	fp, {r2, r3}
  401f98:	f812 0b01 	ldrb.w	r0, [r2], #1
  401f9c:	f8cb 2000 	str.w	r2, [fp]
  401fa0:	3b01      	subs	r3, #1
  401fa2:	9a08      	ldr	r2, [sp, #32]
  401fa4:	9200      	str	r2, [sp, #0]
  401fa6:	1c75      	adds	r5, r6, #1
  401fa8:	f8cb 3004 	str.w	r3, [fp, #4]
  401fac:	4649      	mov	r1, r9
  401fae:	f808 0006 	strb.w	r0, [r8, r6]
  401fb2:	462b      	mov	r3, r5
  401fb4:	4642      	mov	r2, r8
  401fb6:	4638      	mov	r0, r7
  401fb8:	f001 f8ec 	bl	403194 <_mbrtowc_r>
  401fbc:	1c41      	adds	r1, r0, #1
  401fbe:	f43f ac89 	beq.w	4018d4 <__svfiscanf_r+0x2b8>
  401fc2:	b198      	cbz	r0, 401fec <__svfiscanf_r+0x9d0>
  401fc4:	3002      	adds	r0, #2
  401fc6:	bf08      	it	eq
  401fc8:	462e      	moveq	r6, r5
  401fca:	d12e      	bne.n	40202a <__svfiscanf_r+0xa0e>
  401fcc:	f8db 3004 	ldr.w	r3, [fp, #4]
  401fd0:	2b00      	cmp	r3, #0
  401fd2:	f73f ad45 	bgt.w	401a60 <__svfiscanf_r+0x444>
  401fd6:	4659      	mov	r1, fp
  401fd8:	4638      	mov	r0, r7
  401fda:	f001 fc2b 	bl	403834 <__srefill_r>
  401fde:	2800      	cmp	r0, #0
  401fe0:	f43f ad3e 	beq.w	401a60 <__svfiscanf_r+0x444>
  401fe4:	2e00      	cmp	r6, #0
  401fe6:	f47f ac75 	bne.w	4018d4 <__svfiscanf_r+0x2b8>
  401fea:	e545      	b.n	401a78 <__svfiscanf_r+0x45c>
  401fec:	f8c9 0000 	str.w	r0, [r9]
  401ff0:	f000 fd6a 	bl	402ac8 <iswspace>
  401ff4:	4606      	mov	r6, r0
  401ff6:	b178      	cbz	r0, 402018 <__svfiscanf_r+0x9fc>
  401ff8:	2d00      	cmp	r5, #0
  401ffa:	f43f ad3d 	beq.w	401a78 <__svfiscanf_r+0x45c>
  401ffe:	4445      	add	r5, r8
  402000:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  402004:	465a      	mov	r2, fp
  402006:	4638      	mov	r0, r7
  402008:	f002 f896 	bl	404138 <_ungetc_r>
  40200c:	4545      	cmp	r5, r8
  40200e:	d1f7      	bne.n	402000 <__svfiscanf_r+0x9e4>
  402010:	e532      	b.n	401a78 <__svfiscanf_r+0x45c>
  402012:	f002 f843 	bl	40409c <_strtoull_r>
  402016:	e6e0      	b.n	401dda <__svfiscanf_r+0x7be>
  402018:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40201a:	44aa      	add	sl, r5
  40201c:	3c01      	subs	r4, #1
  40201e:	2b00      	cmp	r3, #0
  402020:	d1d4      	bne.n	401fcc <__svfiscanf_r+0x9b0>
  402022:	f109 0904 	add.w	r9, r9, #4
  402026:	461e      	mov	r6, r3
  402028:	e7d0      	b.n	401fcc <__svfiscanf_r+0x9b0>
  40202a:	f8d9 0000 	ldr.w	r0, [r9]
  40202e:	e7df      	b.n	401ff0 <__svfiscanf_r+0x9d4>

00402030 <register_fini>:
  402030:	4b02      	ldr	r3, [pc, #8]	; (40203c <register_fini+0xc>)
  402032:	b113      	cbz	r3, 40203a <register_fini+0xa>
  402034:	4802      	ldr	r0, [pc, #8]	; (402040 <register_fini+0x10>)
  402036:	f000 b805 	b.w	402044 <atexit>
  40203a:	4770      	bx	lr
  40203c:	00000000 	.word	0x00000000
  402040:	004022d5 	.word	0x004022d5

00402044 <atexit>:
  402044:	2300      	movs	r3, #0
  402046:	4601      	mov	r1, r0
  402048:	461a      	mov	r2, r3
  40204a:	4618      	mov	r0, r3
  40204c:	f002 b998 	b.w	404380 <__register_exitproc>

00402050 <__sflush_r>:
  402050:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402054:	b29a      	uxth	r2, r3
  402056:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40205a:	460d      	mov	r5, r1
  40205c:	0711      	lsls	r1, r2, #28
  40205e:	4680      	mov	r8, r0
  402060:	d43a      	bmi.n	4020d8 <__sflush_r+0x88>
  402062:	686a      	ldr	r2, [r5, #4]
  402064:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402068:	2a00      	cmp	r2, #0
  40206a:	81ab      	strh	r3, [r5, #12]
  40206c:	dd6f      	ble.n	40214e <__sflush_r+0xfe>
  40206e:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402070:	2c00      	cmp	r4, #0
  402072:	d049      	beq.n	402108 <__sflush_r+0xb8>
  402074:	2200      	movs	r2, #0
  402076:	b29b      	uxth	r3, r3
  402078:	f8d8 6000 	ldr.w	r6, [r8]
  40207c:	f8c8 2000 	str.w	r2, [r8]
  402080:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402084:	d067      	beq.n	402156 <__sflush_r+0x106>
  402086:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402088:	075f      	lsls	r7, r3, #29
  40208a:	d505      	bpl.n	402098 <__sflush_r+0x48>
  40208c:	6869      	ldr	r1, [r5, #4]
  40208e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402090:	1a52      	subs	r2, r2, r1
  402092:	b10b      	cbz	r3, 402098 <__sflush_r+0x48>
  402094:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402096:	1ad2      	subs	r2, r2, r3
  402098:	2300      	movs	r3, #0
  40209a:	69e9      	ldr	r1, [r5, #28]
  40209c:	4640      	mov	r0, r8
  40209e:	47a0      	blx	r4
  4020a0:	1c44      	adds	r4, r0, #1
  4020a2:	d03c      	beq.n	40211e <__sflush_r+0xce>
  4020a4:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4020a8:	692a      	ldr	r2, [r5, #16]
  4020aa:	602a      	str	r2, [r5, #0]
  4020ac:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4020b0:	2200      	movs	r2, #0
  4020b2:	81ab      	strh	r3, [r5, #12]
  4020b4:	04db      	lsls	r3, r3, #19
  4020b6:	606a      	str	r2, [r5, #4]
  4020b8:	d447      	bmi.n	40214a <__sflush_r+0xfa>
  4020ba:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4020bc:	f8c8 6000 	str.w	r6, [r8]
  4020c0:	b311      	cbz	r1, 402108 <__sflush_r+0xb8>
  4020c2:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4020c6:	4299      	cmp	r1, r3
  4020c8:	d002      	beq.n	4020d0 <__sflush_r+0x80>
  4020ca:	4640      	mov	r0, r8
  4020cc:	f000 fa4e 	bl	40256c <_free_r>
  4020d0:	2000      	movs	r0, #0
  4020d2:	6328      	str	r0, [r5, #48]	; 0x30
  4020d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4020d8:	692e      	ldr	r6, [r5, #16]
  4020da:	b1ae      	cbz	r6, 402108 <__sflush_r+0xb8>
  4020dc:	682c      	ldr	r4, [r5, #0]
  4020de:	602e      	str	r6, [r5, #0]
  4020e0:	0791      	lsls	r1, r2, #30
  4020e2:	bf0c      	ite	eq
  4020e4:	696b      	ldreq	r3, [r5, #20]
  4020e6:	2300      	movne	r3, #0
  4020e8:	1ba4      	subs	r4, r4, r6
  4020ea:	60ab      	str	r3, [r5, #8]
  4020ec:	e00a      	b.n	402104 <__sflush_r+0xb4>
  4020ee:	4623      	mov	r3, r4
  4020f0:	4632      	mov	r2, r6
  4020f2:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4020f4:	69e9      	ldr	r1, [r5, #28]
  4020f6:	4640      	mov	r0, r8
  4020f8:	47b8      	blx	r7
  4020fa:	2800      	cmp	r0, #0
  4020fc:	eba4 0400 	sub.w	r4, r4, r0
  402100:	4406      	add	r6, r0
  402102:	dd04      	ble.n	40210e <__sflush_r+0xbe>
  402104:	2c00      	cmp	r4, #0
  402106:	dcf2      	bgt.n	4020ee <__sflush_r+0x9e>
  402108:	2000      	movs	r0, #0
  40210a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40210e:	89ab      	ldrh	r3, [r5, #12]
  402110:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402114:	81ab      	strh	r3, [r5, #12]
  402116:	f04f 30ff 	mov.w	r0, #4294967295
  40211a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40211e:	f8d8 4000 	ldr.w	r4, [r8]
  402122:	2c1d      	cmp	r4, #29
  402124:	d8f3      	bhi.n	40210e <__sflush_r+0xbe>
  402126:	4b19      	ldr	r3, [pc, #100]	; (40218c <__sflush_r+0x13c>)
  402128:	40e3      	lsrs	r3, r4
  40212a:	43db      	mvns	r3, r3
  40212c:	f013 0301 	ands.w	r3, r3, #1
  402130:	d1ed      	bne.n	40210e <__sflush_r+0xbe>
  402132:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  402136:	606b      	str	r3, [r5, #4]
  402138:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  40213c:	6929      	ldr	r1, [r5, #16]
  40213e:	81ab      	strh	r3, [r5, #12]
  402140:	04da      	lsls	r2, r3, #19
  402142:	6029      	str	r1, [r5, #0]
  402144:	d5b9      	bpl.n	4020ba <__sflush_r+0x6a>
  402146:	2c00      	cmp	r4, #0
  402148:	d1b7      	bne.n	4020ba <__sflush_r+0x6a>
  40214a:	6528      	str	r0, [r5, #80]	; 0x50
  40214c:	e7b5      	b.n	4020ba <__sflush_r+0x6a>
  40214e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402150:	2a00      	cmp	r2, #0
  402152:	dc8c      	bgt.n	40206e <__sflush_r+0x1e>
  402154:	e7d8      	b.n	402108 <__sflush_r+0xb8>
  402156:	2301      	movs	r3, #1
  402158:	69e9      	ldr	r1, [r5, #28]
  40215a:	4640      	mov	r0, r8
  40215c:	47a0      	blx	r4
  40215e:	1c43      	adds	r3, r0, #1
  402160:	4602      	mov	r2, r0
  402162:	d002      	beq.n	40216a <__sflush_r+0x11a>
  402164:	89ab      	ldrh	r3, [r5, #12]
  402166:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402168:	e78e      	b.n	402088 <__sflush_r+0x38>
  40216a:	f8d8 3000 	ldr.w	r3, [r8]
  40216e:	2b00      	cmp	r3, #0
  402170:	d0f8      	beq.n	402164 <__sflush_r+0x114>
  402172:	2b1d      	cmp	r3, #29
  402174:	d001      	beq.n	40217a <__sflush_r+0x12a>
  402176:	2b16      	cmp	r3, #22
  402178:	d102      	bne.n	402180 <__sflush_r+0x130>
  40217a:	f8c8 6000 	str.w	r6, [r8]
  40217e:	e7c3      	b.n	402108 <__sflush_r+0xb8>
  402180:	89ab      	ldrh	r3, [r5, #12]
  402182:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402186:	81ab      	strh	r3, [r5, #12]
  402188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40218c:	20400001 	.word	0x20400001

00402190 <_fflush_r>:
  402190:	b538      	push	{r3, r4, r5, lr}
  402192:	460d      	mov	r5, r1
  402194:	4604      	mov	r4, r0
  402196:	b108      	cbz	r0, 40219c <_fflush_r+0xc>
  402198:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40219a:	b1bb      	cbz	r3, 4021cc <_fflush_r+0x3c>
  40219c:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4021a0:	b188      	cbz	r0, 4021c6 <_fflush_r+0x36>
  4021a2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021a4:	07db      	lsls	r3, r3, #31
  4021a6:	d401      	bmi.n	4021ac <_fflush_r+0x1c>
  4021a8:	0581      	lsls	r1, r0, #22
  4021aa:	d517      	bpl.n	4021dc <_fflush_r+0x4c>
  4021ac:	4620      	mov	r0, r4
  4021ae:	4629      	mov	r1, r5
  4021b0:	f7ff ff4e 	bl	402050 <__sflush_r>
  4021b4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4021b6:	07da      	lsls	r2, r3, #31
  4021b8:	4604      	mov	r4, r0
  4021ba:	d402      	bmi.n	4021c2 <_fflush_r+0x32>
  4021bc:	89ab      	ldrh	r3, [r5, #12]
  4021be:	059b      	lsls	r3, r3, #22
  4021c0:	d507      	bpl.n	4021d2 <_fflush_r+0x42>
  4021c2:	4620      	mov	r0, r4
  4021c4:	bd38      	pop	{r3, r4, r5, pc}
  4021c6:	4604      	mov	r4, r0
  4021c8:	4620      	mov	r0, r4
  4021ca:	bd38      	pop	{r3, r4, r5, pc}
  4021cc:	f000 f84a 	bl	402264 <__sinit>
  4021d0:	e7e4      	b.n	40219c <_fflush_r+0xc>
  4021d2:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4021d4:	f000 fcac 	bl	402b30 <__retarget_lock_release_recursive>
  4021d8:	4620      	mov	r0, r4
  4021da:	bd38      	pop	{r3, r4, r5, pc}
  4021dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4021de:	f000 fca5 	bl	402b2c <__retarget_lock_acquire_recursive>
  4021e2:	e7e3      	b.n	4021ac <_fflush_r+0x1c>

004021e4 <fflush>:
  4021e4:	b120      	cbz	r0, 4021f0 <fflush+0xc>
  4021e6:	4b05      	ldr	r3, [pc, #20]	; (4021fc <fflush+0x18>)
  4021e8:	4601      	mov	r1, r0
  4021ea:	6818      	ldr	r0, [r3, #0]
  4021ec:	f7ff bfd0 	b.w	402190 <_fflush_r>
  4021f0:	4b03      	ldr	r3, [pc, #12]	; (402200 <fflush+0x1c>)
  4021f2:	4904      	ldr	r1, [pc, #16]	; (402204 <fflush+0x20>)
  4021f4:	6818      	ldr	r0, [r3, #0]
  4021f6:	f000 bc3d 	b.w	402a74 <_fwalk_reent>
  4021fa:	bf00      	nop
  4021fc:	20000014 	.word	0x20000014
  402200:	00404950 	.word	0x00404950
  402204:	00402191 	.word	0x00402191

00402208 <_cleanup_r>:
  402208:	4901      	ldr	r1, [pc, #4]	; (402210 <_cleanup_r+0x8>)
  40220a:	f000 bc33 	b.w	402a74 <_fwalk_reent>
  40220e:	bf00      	nop
  402210:	00404469 	.word	0x00404469

00402214 <std.isra.0>:
  402214:	b510      	push	{r4, lr}
  402216:	2300      	movs	r3, #0
  402218:	4604      	mov	r4, r0
  40221a:	8181      	strh	r1, [r0, #12]
  40221c:	81c2      	strh	r2, [r0, #14]
  40221e:	6003      	str	r3, [r0, #0]
  402220:	6043      	str	r3, [r0, #4]
  402222:	6083      	str	r3, [r0, #8]
  402224:	6643      	str	r3, [r0, #100]	; 0x64
  402226:	6103      	str	r3, [r0, #16]
  402228:	6143      	str	r3, [r0, #20]
  40222a:	6183      	str	r3, [r0, #24]
  40222c:	4619      	mov	r1, r3
  40222e:	2208      	movs	r2, #8
  402230:	305c      	adds	r0, #92	; 0x5c
  402232:	f7fe fff9 	bl	401228 <memset>
  402236:	4807      	ldr	r0, [pc, #28]	; (402254 <std.isra.0+0x40>)
  402238:	4907      	ldr	r1, [pc, #28]	; (402258 <std.isra.0+0x44>)
  40223a:	4a08      	ldr	r2, [pc, #32]	; (40225c <std.isra.0+0x48>)
  40223c:	4b08      	ldr	r3, [pc, #32]	; (402260 <std.isra.0+0x4c>)
  40223e:	6220      	str	r0, [r4, #32]
  402240:	61e4      	str	r4, [r4, #28]
  402242:	6261      	str	r1, [r4, #36]	; 0x24
  402244:	62a2      	str	r2, [r4, #40]	; 0x28
  402246:	62e3      	str	r3, [r4, #44]	; 0x2c
  402248:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40224c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402250:	f000 bc68 	b.w	402b24 <__retarget_lock_init_recursive>
  402254:	004039e1 	.word	0x004039e1
  402258:	00403a05 	.word	0x00403a05
  40225c:	00403a41 	.word	0x00403a41
  402260:	00403a61 	.word	0x00403a61

00402264 <__sinit>:
  402264:	b510      	push	{r4, lr}
  402266:	4604      	mov	r4, r0
  402268:	4812      	ldr	r0, [pc, #72]	; (4022b4 <__sinit+0x50>)
  40226a:	f000 fc5f 	bl	402b2c <__retarget_lock_acquire_recursive>
  40226e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  402270:	b9d2      	cbnz	r2, 4022a8 <__sinit+0x44>
  402272:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  402276:	4810      	ldr	r0, [pc, #64]	; (4022b8 <__sinit+0x54>)
  402278:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40227c:	2103      	movs	r1, #3
  40227e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  402282:	63e0      	str	r0, [r4, #60]	; 0x3c
  402284:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  402288:	6860      	ldr	r0, [r4, #4]
  40228a:	2104      	movs	r1, #4
  40228c:	f7ff ffc2 	bl	402214 <std.isra.0>
  402290:	2201      	movs	r2, #1
  402292:	2109      	movs	r1, #9
  402294:	68a0      	ldr	r0, [r4, #8]
  402296:	f7ff ffbd 	bl	402214 <std.isra.0>
  40229a:	2202      	movs	r2, #2
  40229c:	2112      	movs	r1, #18
  40229e:	68e0      	ldr	r0, [r4, #12]
  4022a0:	f7ff ffb8 	bl	402214 <std.isra.0>
  4022a4:	2301      	movs	r3, #1
  4022a6:	63a3      	str	r3, [r4, #56]	; 0x38
  4022a8:	4802      	ldr	r0, [pc, #8]	; (4022b4 <__sinit+0x50>)
  4022aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4022ae:	f000 bc3f 	b.w	402b30 <__retarget_lock_release_recursive>
  4022b2:	bf00      	nop
  4022b4:	20000aac 	.word	0x20000aac
  4022b8:	00402209 	.word	0x00402209

004022bc <__sfp_lock_acquire>:
  4022bc:	4801      	ldr	r0, [pc, #4]	; (4022c4 <__sfp_lock_acquire+0x8>)
  4022be:	f000 bc35 	b.w	402b2c <__retarget_lock_acquire_recursive>
  4022c2:	bf00      	nop
  4022c4:	20000ac0 	.word	0x20000ac0

004022c8 <__sfp_lock_release>:
  4022c8:	4801      	ldr	r0, [pc, #4]	; (4022d0 <__sfp_lock_release+0x8>)
  4022ca:	f000 bc31 	b.w	402b30 <__retarget_lock_release_recursive>
  4022ce:	bf00      	nop
  4022d0:	20000ac0 	.word	0x20000ac0

004022d4 <__libc_fini_array>:
  4022d4:	b538      	push	{r3, r4, r5, lr}
  4022d6:	4c0a      	ldr	r4, [pc, #40]	; (402300 <__libc_fini_array+0x2c>)
  4022d8:	4d0a      	ldr	r5, [pc, #40]	; (402304 <__libc_fini_array+0x30>)
  4022da:	1b64      	subs	r4, r4, r5
  4022dc:	10a4      	asrs	r4, r4, #2
  4022de:	d00a      	beq.n	4022f6 <__libc_fini_array+0x22>
  4022e0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4022e4:	3b01      	subs	r3, #1
  4022e6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4022ea:	3c01      	subs	r4, #1
  4022ec:	f855 3904 	ldr.w	r3, [r5], #-4
  4022f0:	4798      	blx	r3
  4022f2:	2c00      	cmp	r4, #0
  4022f4:	d1f9      	bne.n	4022ea <__libc_fini_array+0x16>
  4022f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4022fa:	f002 bbd3 	b.w	404aa4 <_fini>
  4022fe:	bf00      	nop
  402300:	00404ab4 	.word	0x00404ab4
  402304:	00404ab0 	.word	0x00404ab0

00402308 <_fread_r>:
  402308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40230c:	b085      	sub	sp, #20
  40230e:	fb02 f703 	mul.w	r7, r2, r3
  402312:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402314:	2f00      	cmp	r7, #0
  402316:	d050      	beq.n	4023ba <_fread_r+0xb2>
  402318:	4606      	mov	r6, r0
  40231a:	460d      	mov	r5, r1
  40231c:	9301      	str	r3, [sp, #4]
  40231e:	9202      	str	r2, [sp, #8]
  402320:	b118      	cbz	r0, 40232a <_fread_r+0x22>
  402322:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402324:	2b00      	cmp	r3, #0
  402326:	f000 80be 	beq.w	4024a6 <_fread_r+0x19e>
  40232a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40232c:	f013 0f01 	tst.w	r3, #1
  402330:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402334:	b29a      	uxth	r2, r3
  402336:	d102      	bne.n	40233e <_fread_r+0x36>
  402338:	0590      	lsls	r0, r2, #22
  40233a:	f140 80b7 	bpl.w	4024ac <_fread_r+0x1a4>
  40233e:	0491      	lsls	r1, r2, #18
  402340:	d407      	bmi.n	402352 <_fread_r+0x4a>
  402342:	6e62      	ldr	r2, [r4, #100]	; 0x64
  402344:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402348:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  40234c:	81a3      	strh	r3, [r4, #12]
  40234e:	b29a      	uxth	r2, r3
  402350:	6661      	str	r1, [r4, #100]	; 0x64
  402352:	f8d4 9004 	ldr.w	r9, [r4, #4]
  402356:	f1b9 0f00 	cmp.w	r9, #0
  40235a:	db49      	blt.n	4023f0 <_fread_r+0xe8>
  40235c:	0792      	lsls	r2, r2, #30
  40235e:	464b      	mov	r3, r9
  402360:	d44c      	bmi.n	4023fc <_fread_r+0xf4>
  402362:	46b0      	mov	r8, r6
  402364:	46ba      	mov	sl, r7
  402366:	464e      	mov	r6, r9
  402368:	e00e      	b.n	402388 <_fread_r+0x80>
  40236a:	6821      	ldr	r1, [r4, #0]
  40236c:	f000 ffa8 	bl	4032c0 <memcpy>
  402370:	6823      	ldr	r3, [r4, #0]
  402372:	4433      	add	r3, r6
  402374:	6023      	str	r3, [r4, #0]
  402376:	4621      	mov	r1, r4
  402378:	4640      	mov	r0, r8
  40237a:	4435      	add	r5, r6
  40237c:	ebaa 0a06 	sub.w	sl, sl, r6
  402380:	f001 fa58 	bl	403834 <__srefill_r>
  402384:	bb10      	cbnz	r0, 4023cc <_fread_r+0xc4>
  402386:	6866      	ldr	r6, [r4, #4]
  402388:	45b2      	cmp	sl, r6
  40238a:	4632      	mov	r2, r6
  40238c:	4628      	mov	r0, r5
  40238e:	d8ec      	bhi.n	40236a <_fread_r+0x62>
  402390:	4652      	mov	r2, sl
  402392:	6821      	ldr	r1, [r4, #0]
  402394:	f000 ff94 	bl	4032c0 <memcpy>
  402398:	6862      	ldr	r2, [r4, #4]
  40239a:	6823      	ldr	r3, [r4, #0]
  40239c:	eba2 020a 	sub.w	r2, r2, sl
  4023a0:	4453      	add	r3, sl
  4023a2:	6062      	str	r2, [r4, #4]
  4023a4:	6023      	str	r3, [r4, #0]
  4023a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4023a8:	07da      	lsls	r2, r3, #31
  4023aa:	d40a      	bmi.n	4023c2 <_fread_r+0xba>
  4023ac:	89a3      	ldrh	r3, [r4, #12]
  4023ae:	059b      	lsls	r3, r3, #22
  4023b0:	d407      	bmi.n	4023c2 <_fread_r+0xba>
  4023b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023b4:	f000 fbbc 	bl	402b30 <__retarget_lock_release_recursive>
  4023b8:	9f01      	ldr	r7, [sp, #4]
  4023ba:	4638      	mov	r0, r7
  4023bc:	b005      	add	sp, #20
  4023be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4023c2:	9f01      	ldr	r7, [sp, #4]
  4023c4:	4638      	mov	r0, r7
  4023c6:	b005      	add	sp, #20
  4023c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4023cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4023ce:	07d8      	lsls	r0, r3, #31
  4023d0:	d405      	bmi.n	4023de <_fread_r+0xd6>
  4023d2:	89a3      	ldrh	r3, [r4, #12]
  4023d4:	0599      	lsls	r1, r3, #22
  4023d6:	d402      	bmi.n	4023de <_fread_r+0xd6>
  4023d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4023da:	f000 fba9 	bl	402b30 <__retarget_lock_release_recursive>
  4023de:	9b02      	ldr	r3, [sp, #8]
  4023e0:	eba7 070a 	sub.w	r7, r7, sl
  4023e4:	fbb7 f7f3 	udiv	r7, r7, r3
  4023e8:	4638      	mov	r0, r7
  4023ea:	b005      	add	sp, #20
  4023ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4023f0:	2100      	movs	r1, #0
  4023f2:	0792      	lsls	r2, r2, #30
  4023f4:	460b      	mov	r3, r1
  4023f6:	6061      	str	r1, [r4, #4]
  4023f8:	4689      	mov	r9, r1
  4023fa:	d5b2      	bpl.n	402362 <_fread_r+0x5a>
  4023fc:	42bb      	cmp	r3, r7
  4023fe:	bf28      	it	cs
  402400:	463b      	movcs	r3, r7
  402402:	461a      	mov	r2, r3
  402404:	6821      	ldr	r1, [r4, #0]
  402406:	9303      	str	r3, [sp, #12]
  402408:	4628      	mov	r0, r5
  40240a:	f000 ff59 	bl	4032c0 <memcpy>
  40240e:	e894 0005 	ldmia.w	r4, {r0, r2}
  402412:	9b03      	ldr	r3, [sp, #12]
  402414:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402416:	eb00 0903 	add.w	r9, r0, r3
  40241a:	1ad2      	subs	r2, r2, r3
  40241c:	f8c4 9000 	str.w	r9, [r4]
  402420:	6062      	str	r2, [r4, #4]
  402422:	eba7 0803 	sub.w	r8, r7, r3
  402426:	2900      	cmp	r1, #0
  402428:	d04b      	beq.n	4024c2 <_fread_r+0x1ba>
  40242a:	f1b8 0f00 	cmp.w	r8, #0
  40242e:	d0ba      	beq.n	4023a6 <_fread_r+0x9e>
  402430:	f104 0040 	add.w	r0, r4, #64	; 0x40
  402434:	4281      	cmp	r1, r0
  402436:	d005      	beq.n	402444 <_fread_r+0x13c>
  402438:	4630      	mov	r0, r6
  40243a:	f000 f897 	bl	40256c <_free_r>
  40243e:	f8d4 9000 	ldr.w	r9, [r4]
  402442:	9b03      	ldr	r3, [sp, #12]
  402444:	2100      	movs	r1, #0
  402446:	6321      	str	r1, [r4, #48]	; 0x30
  402448:	463a      	mov	r2, r7
  40244a:	441d      	add	r5, r3
  40244c:	4633      	mov	r3, r6
  40244e:	464f      	mov	r7, r9
  402450:	4646      	mov	r6, r8
  402452:	f8d4 b010 	ldr.w	fp, [r4, #16]
  402456:	f8d4 a014 	ldr.w	sl, [r4, #20]
  40245a:	4698      	mov	r8, r3
  40245c:	4691      	mov	r9, r2
  40245e:	e001      	b.n	402464 <_fread_r+0x15c>
  402460:	2e00      	cmp	r6, #0
  402462:	d0a0      	beq.n	4023a6 <_fread_r+0x9e>
  402464:	6125      	str	r5, [r4, #16]
  402466:	6166      	str	r6, [r4, #20]
  402468:	6025      	str	r5, [r4, #0]
  40246a:	4621      	mov	r1, r4
  40246c:	4640      	mov	r0, r8
  40246e:	f001 f9e1 	bl	403834 <__srefill_r>
  402472:	6863      	ldr	r3, [r4, #4]
  402474:	f8c4 b010 	str.w	fp, [r4, #16]
  402478:	1af6      	subs	r6, r6, r3
  40247a:	441d      	add	r5, r3
  40247c:	2300      	movs	r3, #0
  40247e:	f8c4 a014 	str.w	sl, [r4, #20]
  402482:	6027      	str	r7, [r4, #0]
  402484:	6063      	str	r3, [r4, #4]
  402486:	2800      	cmp	r0, #0
  402488:	d0ea      	beq.n	402460 <_fread_r+0x158>
  40248a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40248c:	46b0      	mov	r8, r6
  40248e:	07de      	lsls	r6, r3, #31
  402490:	464f      	mov	r7, r9
  402492:	d402      	bmi.n	40249a <_fread_r+0x192>
  402494:	89a3      	ldrh	r3, [r4, #12]
  402496:	059d      	lsls	r5, r3, #22
  402498:	d50f      	bpl.n	4024ba <_fread_r+0x1b2>
  40249a:	eba7 0708 	sub.w	r7, r7, r8
  40249e:	9b02      	ldr	r3, [sp, #8]
  4024a0:	fbb7 f7f3 	udiv	r7, r7, r3
  4024a4:	e789      	b.n	4023ba <_fread_r+0xb2>
  4024a6:	f7ff fedd 	bl	402264 <__sinit>
  4024aa:	e73e      	b.n	40232a <_fread_r+0x22>
  4024ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4024ae:	f000 fb3d 	bl	402b2c <__retarget_lock_acquire_recursive>
  4024b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4024b6:	b29a      	uxth	r2, r3
  4024b8:	e741      	b.n	40233e <_fread_r+0x36>
  4024ba:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4024bc:	f000 fb38 	bl	402b30 <__retarget_lock_release_recursive>
  4024c0:	e7eb      	b.n	40249a <_fread_r+0x192>
  4024c2:	f1b8 0f00 	cmp.w	r8, #0
  4024c6:	d1bf      	bne.n	402448 <_fread_r+0x140>
  4024c8:	e76d      	b.n	4023a6 <_fread_r+0x9e>
  4024ca:	bf00      	nop

004024cc <_malloc_trim_r>:
  4024cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4024ce:	4f24      	ldr	r7, [pc, #144]	; (402560 <_malloc_trim_r+0x94>)
  4024d0:	460c      	mov	r4, r1
  4024d2:	4606      	mov	r6, r0
  4024d4:	f000 fff2 	bl	4034bc <__malloc_lock>
  4024d8:	68bb      	ldr	r3, [r7, #8]
  4024da:	685d      	ldr	r5, [r3, #4]
  4024dc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4024e0:	310f      	adds	r1, #15
  4024e2:	f025 0503 	bic.w	r5, r5, #3
  4024e6:	4429      	add	r1, r5
  4024e8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4024ec:	f021 010f 	bic.w	r1, r1, #15
  4024f0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4024f4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4024f8:	db07      	blt.n	40250a <_malloc_trim_r+0x3e>
  4024fa:	2100      	movs	r1, #0
  4024fc:	4630      	mov	r0, r6
  4024fe:	f001 fa23 	bl	403948 <_sbrk_r>
  402502:	68bb      	ldr	r3, [r7, #8]
  402504:	442b      	add	r3, r5
  402506:	4298      	cmp	r0, r3
  402508:	d004      	beq.n	402514 <_malloc_trim_r+0x48>
  40250a:	4630      	mov	r0, r6
  40250c:	f000 ffdc 	bl	4034c8 <__malloc_unlock>
  402510:	2000      	movs	r0, #0
  402512:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402514:	4261      	negs	r1, r4
  402516:	4630      	mov	r0, r6
  402518:	f001 fa16 	bl	403948 <_sbrk_r>
  40251c:	3001      	adds	r0, #1
  40251e:	d00d      	beq.n	40253c <_malloc_trim_r+0x70>
  402520:	4b10      	ldr	r3, [pc, #64]	; (402564 <_malloc_trim_r+0x98>)
  402522:	68ba      	ldr	r2, [r7, #8]
  402524:	6819      	ldr	r1, [r3, #0]
  402526:	1b2d      	subs	r5, r5, r4
  402528:	f045 0501 	orr.w	r5, r5, #1
  40252c:	4630      	mov	r0, r6
  40252e:	1b09      	subs	r1, r1, r4
  402530:	6055      	str	r5, [r2, #4]
  402532:	6019      	str	r1, [r3, #0]
  402534:	f000 ffc8 	bl	4034c8 <__malloc_unlock>
  402538:	2001      	movs	r0, #1
  40253a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40253c:	2100      	movs	r1, #0
  40253e:	4630      	mov	r0, r6
  402540:	f001 fa02 	bl	403948 <_sbrk_r>
  402544:	68ba      	ldr	r2, [r7, #8]
  402546:	1a83      	subs	r3, r0, r2
  402548:	2b0f      	cmp	r3, #15
  40254a:	ddde      	ble.n	40250a <_malloc_trim_r+0x3e>
  40254c:	4c06      	ldr	r4, [pc, #24]	; (402568 <_malloc_trim_r+0x9c>)
  40254e:	4905      	ldr	r1, [pc, #20]	; (402564 <_malloc_trim_r+0x98>)
  402550:	6824      	ldr	r4, [r4, #0]
  402552:	f043 0301 	orr.w	r3, r3, #1
  402556:	1b00      	subs	r0, r0, r4
  402558:	6053      	str	r3, [r2, #4]
  40255a:	6008      	str	r0, [r1, #0]
  40255c:	e7d5      	b.n	40250a <_malloc_trim_r+0x3e>
  40255e:	bf00      	nop
  402560:	200005b0 	.word	0x200005b0
  402564:	20000a54 	.word	0x20000a54
  402568:	200009b8 	.word	0x200009b8

0040256c <_free_r>:
  40256c:	2900      	cmp	r1, #0
  40256e:	d044      	beq.n	4025fa <_free_r+0x8e>
  402570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402574:	460d      	mov	r5, r1
  402576:	4680      	mov	r8, r0
  402578:	f000 ffa0 	bl	4034bc <__malloc_lock>
  40257c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  402580:	4969      	ldr	r1, [pc, #420]	; (402728 <_free_r+0x1bc>)
  402582:	f027 0301 	bic.w	r3, r7, #1
  402586:	f1a5 0408 	sub.w	r4, r5, #8
  40258a:	18e2      	adds	r2, r4, r3
  40258c:	688e      	ldr	r6, [r1, #8]
  40258e:	6850      	ldr	r0, [r2, #4]
  402590:	42b2      	cmp	r2, r6
  402592:	f020 0003 	bic.w	r0, r0, #3
  402596:	d05e      	beq.n	402656 <_free_r+0xea>
  402598:	07fe      	lsls	r6, r7, #31
  40259a:	6050      	str	r0, [r2, #4]
  40259c:	d40b      	bmi.n	4025b6 <_free_r+0x4a>
  40259e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4025a2:	1be4      	subs	r4, r4, r7
  4025a4:	f101 0e08 	add.w	lr, r1, #8
  4025a8:	68a5      	ldr	r5, [r4, #8]
  4025aa:	4575      	cmp	r5, lr
  4025ac:	443b      	add	r3, r7
  4025ae:	d06d      	beq.n	40268c <_free_r+0x120>
  4025b0:	68e7      	ldr	r7, [r4, #12]
  4025b2:	60ef      	str	r7, [r5, #12]
  4025b4:	60bd      	str	r5, [r7, #8]
  4025b6:	1815      	adds	r5, r2, r0
  4025b8:	686d      	ldr	r5, [r5, #4]
  4025ba:	07ed      	lsls	r5, r5, #31
  4025bc:	d53e      	bpl.n	40263c <_free_r+0xd0>
  4025be:	f043 0201 	orr.w	r2, r3, #1
  4025c2:	6062      	str	r2, [r4, #4]
  4025c4:	50e3      	str	r3, [r4, r3]
  4025c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4025ca:	d217      	bcs.n	4025fc <_free_r+0x90>
  4025cc:	08db      	lsrs	r3, r3, #3
  4025ce:	1c58      	adds	r0, r3, #1
  4025d0:	109a      	asrs	r2, r3, #2
  4025d2:	684d      	ldr	r5, [r1, #4]
  4025d4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4025d8:	60a7      	str	r7, [r4, #8]
  4025da:	2301      	movs	r3, #1
  4025dc:	4093      	lsls	r3, r2
  4025de:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4025e2:	432b      	orrs	r3, r5
  4025e4:	3a08      	subs	r2, #8
  4025e6:	60e2      	str	r2, [r4, #12]
  4025e8:	604b      	str	r3, [r1, #4]
  4025ea:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4025ee:	60fc      	str	r4, [r7, #12]
  4025f0:	4640      	mov	r0, r8
  4025f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4025f6:	f000 bf67 	b.w	4034c8 <__malloc_unlock>
  4025fa:	4770      	bx	lr
  4025fc:	0a5a      	lsrs	r2, r3, #9
  4025fe:	2a04      	cmp	r2, #4
  402600:	d852      	bhi.n	4026a8 <_free_r+0x13c>
  402602:	099a      	lsrs	r2, r3, #6
  402604:	f102 0739 	add.w	r7, r2, #57	; 0x39
  402608:	00ff      	lsls	r7, r7, #3
  40260a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40260e:	19c8      	adds	r0, r1, r7
  402610:	59ca      	ldr	r2, [r1, r7]
  402612:	3808      	subs	r0, #8
  402614:	4290      	cmp	r0, r2
  402616:	d04f      	beq.n	4026b8 <_free_r+0x14c>
  402618:	6851      	ldr	r1, [r2, #4]
  40261a:	f021 0103 	bic.w	r1, r1, #3
  40261e:	428b      	cmp	r3, r1
  402620:	d232      	bcs.n	402688 <_free_r+0x11c>
  402622:	6892      	ldr	r2, [r2, #8]
  402624:	4290      	cmp	r0, r2
  402626:	d1f7      	bne.n	402618 <_free_r+0xac>
  402628:	68c3      	ldr	r3, [r0, #12]
  40262a:	60a0      	str	r0, [r4, #8]
  40262c:	60e3      	str	r3, [r4, #12]
  40262e:	609c      	str	r4, [r3, #8]
  402630:	60c4      	str	r4, [r0, #12]
  402632:	4640      	mov	r0, r8
  402634:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402638:	f000 bf46 	b.w	4034c8 <__malloc_unlock>
  40263c:	6895      	ldr	r5, [r2, #8]
  40263e:	4f3b      	ldr	r7, [pc, #236]	; (40272c <_free_r+0x1c0>)
  402640:	42bd      	cmp	r5, r7
  402642:	4403      	add	r3, r0
  402644:	d040      	beq.n	4026c8 <_free_r+0x15c>
  402646:	68d0      	ldr	r0, [r2, #12]
  402648:	60e8      	str	r0, [r5, #12]
  40264a:	f043 0201 	orr.w	r2, r3, #1
  40264e:	6085      	str	r5, [r0, #8]
  402650:	6062      	str	r2, [r4, #4]
  402652:	50e3      	str	r3, [r4, r3]
  402654:	e7b7      	b.n	4025c6 <_free_r+0x5a>
  402656:	07ff      	lsls	r7, r7, #31
  402658:	4403      	add	r3, r0
  40265a:	d407      	bmi.n	40266c <_free_r+0x100>
  40265c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  402660:	1aa4      	subs	r4, r4, r2
  402662:	4413      	add	r3, r2
  402664:	68a0      	ldr	r0, [r4, #8]
  402666:	68e2      	ldr	r2, [r4, #12]
  402668:	60c2      	str	r2, [r0, #12]
  40266a:	6090      	str	r0, [r2, #8]
  40266c:	4a30      	ldr	r2, [pc, #192]	; (402730 <_free_r+0x1c4>)
  40266e:	6812      	ldr	r2, [r2, #0]
  402670:	f043 0001 	orr.w	r0, r3, #1
  402674:	4293      	cmp	r3, r2
  402676:	6060      	str	r0, [r4, #4]
  402678:	608c      	str	r4, [r1, #8]
  40267a:	d3b9      	bcc.n	4025f0 <_free_r+0x84>
  40267c:	4b2d      	ldr	r3, [pc, #180]	; (402734 <_free_r+0x1c8>)
  40267e:	4640      	mov	r0, r8
  402680:	6819      	ldr	r1, [r3, #0]
  402682:	f7ff ff23 	bl	4024cc <_malloc_trim_r>
  402686:	e7b3      	b.n	4025f0 <_free_r+0x84>
  402688:	4610      	mov	r0, r2
  40268a:	e7cd      	b.n	402628 <_free_r+0xbc>
  40268c:	1811      	adds	r1, r2, r0
  40268e:	6849      	ldr	r1, [r1, #4]
  402690:	07c9      	lsls	r1, r1, #31
  402692:	d444      	bmi.n	40271e <_free_r+0x1b2>
  402694:	6891      	ldr	r1, [r2, #8]
  402696:	68d2      	ldr	r2, [r2, #12]
  402698:	60ca      	str	r2, [r1, #12]
  40269a:	4403      	add	r3, r0
  40269c:	f043 0001 	orr.w	r0, r3, #1
  4026a0:	6091      	str	r1, [r2, #8]
  4026a2:	6060      	str	r0, [r4, #4]
  4026a4:	50e3      	str	r3, [r4, r3]
  4026a6:	e7a3      	b.n	4025f0 <_free_r+0x84>
  4026a8:	2a14      	cmp	r2, #20
  4026aa:	d816      	bhi.n	4026da <_free_r+0x16e>
  4026ac:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4026b0:	00ff      	lsls	r7, r7, #3
  4026b2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4026b6:	e7aa      	b.n	40260e <_free_r+0xa2>
  4026b8:	10aa      	asrs	r2, r5, #2
  4026ba:	2301      	movs	r3, #1
  4026bc:	684d      	ldr	r5, [r1, #4]
  4026be:	4093      	lsls	r3, r2
  4026c0:	432b      	orrs	r3, r5
  4026c2:	604b      	str	r3, [r1, #4]
  4026c4:	4603      	mov	r3, r0
  4026c6:	e7b0      	b.n	40262a <_free_r+0xbe>
  4026c8:	f043 0201 	orr.w	r2, r3, #1
  4026cc:	614c      	str	r4, [r1, #20]
  4026ce:	610c      	str	r4, [r1, #16]
  4026d0:	60e5      	str	r5, [r4, #12]
  4026d2:	60a5      	str	r5, [r4, #8]
  4026d4:	6062      	str	r2, [r4, #4]
  4026d6:	50e3      	str	r3, [r4, r3]
  4026d8:	e78a      	b.n	4025f0 <_free_r+0x84>
  4026da:	2a54      	cmp	r2, #84	; 0x54
  4026dc:	d806      	bhi.n	4026ec <_free_r+0x180>
  4026de:	0b1a      	lsrs	r2, r3, #12
  4026e0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4026e4:	00ff      	lsls	r7, r7, #3
  4026e6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4026ea:	e790      	b.n	40260e <_free_r+0xa2>
  4026ec:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4026f0:	d806      	bhi.n	402700 <_free_r+0x194>
  4026f2:	0bda      	lsrs	r2, r3, #15
  4026f4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4026f8:	00ff      	lsls	r7, r7, #3
  4026fa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4026fe:	e786      	b.n	40260e <_free_r+0xa2>
  402700:	f240 5054 	movw	r0, #1364	; 0x554
  402704:	4282      	cmp	r2, r0
  402706:	d806      	bhi.n	402716 <_free_r+0x1aa>
  402708:	0c9a      	lsrs	r2, r3, #18
  40270a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40270e:	00ff      	lsls	r7, r7, #3
  402710:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  402714:	e77b      	b.n	40260e <_free_r+0xa2>
  402716:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40271a:	257e      	movs	r5, #126	; 0x7e
  40271c:	e777      	b.n	40260e <_free_r+0xa2>
  40271e:	f043 0101 	orr.w	r1, r3, #1
  402722:	6061      	str	r1, [r4, #4]
  402724:	6013      	str	r3, [r2, #0]
  402726:	e763      	b.n	4025f0 <_free_r+0x84>
  402728:	200005b0 	.word	0x200005b0
  40272c:	200005b8 	.word	0x200005b8
  402730:	200009bc 	.word	0x200009bc
  402734:	20000a84 	.word	0x20000a84

00402738 <__sfvwrite_r>:
  402738:	6893      	ldr	r3, [r2, #8]
  40273a:	2b00      	cmp	r3, #0
  40273c:	d073      	beq.n	402826 <__sfvwrite_r+0xee>
  40273e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402742:	898b      	ldrh	r3, [r1, #12]
  402744:	b083      	sub	sp, #12
  402746:	460c      	mov	r4, r1
  402748:	0719      	lsls	r1, r3, #28
  40274a:	9000      	str	r0, [sp, #0]
  40274c:	4616      	mov	r6, r2
  40274e:	d526      	bpl.n	40279e <__sfvwrite_r+0x66>
  402750:	6922      	ldr	r2, [r4, #16]
  402752:	b322      	cbz	r2, 40279e <__sfvwrite_r+0x66>
  402754:	f013 0002 	ands.w	r0, r3, #2
  402758:	6835      	ldr	r5, [r6, #0]
  40275a:	d02c      	beq.n	4027b6 <__sfvwrite_r+0x7e>
  40275c:	f04f 0900 	mov.w	r9, #0
  402760:	4fb0      	ldr	r7, [pc, #704]	; (402a24 <__sfvwrite_r+0x2ec>)
  402762:	46c8      	mov	r8, r9
  402764:	46b2      	mov	sl, r6
  402766:	45b8      	cmp	r8, r7
  402768:	4643      	mov	r3, r8
  40276a:	464a      	mov	r2, r9
  40276c:	bf28      	it	cs
  40276e:	463b      	movcs	r3, r7
  402770:	9800      	ldr	r0, [sp, #0]
  402772:	f1b8 0f00 	cmp.w	r8, #0
  402776:	d050      	beq.n	40281a <__sfvwrite_r+0xe2>
  402778:	69e1      	ldr	r1, [r4, #28]
  40277a:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40277c:	47b0      	blx	r6
  40277e:	2800      	cmp	r0, #0
  402780:	dd58      	ble.n	402834 <__sfvwrite_r+0xfc>
  402782:	f8da 3008 	ldr.w	r3, [sl, #8]
  402786:	1a1b      	subs	r3, r3, r0
  402788:	4481      	add	r9, r0
  40278a:	eba8 0800 	sub.w	r8, r8, r0
  40278e:	f8ca 3008 	str.w	r3, [sl, #8]
  402792:	2b00      	cmp	r3, #0
  402794:	d1e7      	bne.n	402766 <__sfvwrite_r+0x2e>
  402796:	2000      	movs	r0, #0
  402798:	b003      	add	sp, #12
  40279a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40279e:	4621      	mov	r1, r4
  4027a0:	9800      	ldr	r0, [sp, #0]
  4027a2:	f001 fd89 	bl	4042b8 <__swsetup_r>
  4027a6:	2800      	cmp	r0, #0
  4027a8:	f040 8133 	bne.w	402a12 <__sfvwrite_r+0x2da>
  4027ac:	89a3      	ldrh	r3, [r4, #12]
  4027ae:	6835      	ldr	r5, [r6, #0]
  4027b0:	f013 0002 	ands.w	r0, r3, #2
  4027b4:	d1d2      	bne.n	40275c <__sfvwrite_r+0x24>
  4027b6:	f013 0901 	ands.w	r9, r3, #1
  4027ba:	d145      	bne.n	402848 <__sfvwrite_r+0x110>
  4027bc:	464f      	mov	r7, r9
  4027be:	9601      	str	r6, [sp, #4]
  4027c0:	b337      	cbz	r7, 402810 <__sfvwrite_r+0xd8>
  4027c2:	059a      	lsls	r2, r3, #22
  4027c4:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4027c8:	f140 8083 	bpl.w	4028d2 <__sfvwrite_r+0x19a>
  4027cc:	4547      	cmp	r7, r8
  4027ce:	46c3      	mov	fp, r8
  4027d0:	f0c0 80ab 	bcc.w	40292a <__sfvwrite_r+0x1f2>
  4027d4:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4027d8:	f040 80ac 	bne.w	402934 <__sfvwrite_r+0x1fc>
  4027dc:	6820      	ldr	r0, [r4, #0]
  4027de:	46ba      	mov	sl, r7
  4027e0:	465a      	mov	r2, fp
  4027e2:	4649      	mov	r1, r9
  4027e4:	f000 fe06 	bl	4033f4 <memmove>
  4027e8:	68a2      	ldr	r2, [r4, #8]
  4027ea:	6823      	ldr	r3, [r4, #0]
  4027ec:	eba2 0208 	sub.w	r2, r2, r8
  4027f0:	445b      	add	r3, fp
  4027f2:	60a2      	str	r2, [r4, #8]
  4027f4:	6023      	str	r3, [r4, #0]
  4027f6:	9a01      	ldr	r2, [sp, #4]
  4027f8:	6893      	ldr	r3, [r2, #8]
  4027fa:	eba3 030a 	sub.w	r3, r3, sl
  4027fe:	44d1      	add	r9, sl
  402800:	eba7 070a 	sub.w	r7, r7, sl
  402804:	6093      	str	r3, [r2, #8]
  402806:	2b00      	cmp	r3, #0
  402808:	d0c5      	beq.n	402796 <__sfvwrite_r+0x5e>
  40280a:	89a3      	ldrh	r3, [r4, #12]
  40280c:	2f00      	cmp	r7, #0
  40280e:	d1d8      	bne.n	4027c2 <__sfvwrite_r+0x8a>
  402810:	f8d5 9000 	ldr.w	r9, [r5]
  402814:	686f      	ldr	r7, [r5, #4]
  402816:	3508      	adds	r5, #8
  402818:	e7d2      	b.n	4027c0 <__sfvwrite_r+0x88>
  40281a:	f8d5 9000 	ldr.w	r9, [r5]
  40281e:	f8d5 8004 	ldr.w	r8, [r5, #4]
  402822:	3508      	adds	r5, #8
  402824:	e79f      	b.n	402766 <__sfvwrite_r+0x2e>
  402826:	2000      	movs	r0, #0
  402828:	4770      	bx	lr
  40282a:	4621      	mov	r1, r4
  40282c:	9800      	ldr	r0, [sp, #0]
  40282e:	f7ff fcaf 	bl	402190 <_fflush_r>
  402832:	b370      	cbz	r0, 402892 <__sfvwrite_r+0x15a>
  402834:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402838:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40283c:	f04f 30ff 	mov.w	r0, #4294967295
  402840:	81a3      	strh	r3, [r4, #12]
  402842:	b003      	add	sp, #12
  402844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402848:	4681      	mov	r9, r0
  40284a:	4633      	mov	r3, r6
  40284c:	464e      	mov	r6, r9
  40284e:	46a8      	mov	r8, r5
  402850:	469a      	mov	sl, r3
  402852:	464d      	mov	r5, r9
  402854:	b34e      	cbz	r6, 4028aa <__sfvwrite_r+0x172>
  402856:	b380      	cbz	r0, 4028ba <__sfvwrite_r+0x182>
  402858:	6820      	ldr	r0, [r4, #0]
  40285a:	6923      	ldr	r3, [r4, #16]
  40285c:	6962      	ldr	r2, [r4, #20]
  40285e:	45b1      	cmp	r9, r6
  402860:	46cb      	mov	fp, r9
  402862:	bf28      	it	cs
  402864:	46b3      	movcs	fp, r6
  402866:	4298      	cmp	r0, r3
  402868:	465f      	mov	r7, fp
  40286a:	d904      	bls.n	402876 <__sfvwrite_r+0x13e>
  40286c:	68a3      	ldr	r3, [r4, #8]
  40286e:	4413      	add	r3, r2
  402870:	459b      	cmp	fp, r3
  402872:	f300 80a6 	bgt.w	4029c2 <__sfvwrite_r+0x28a>
  402876:	4593      	cmp	fp, r2
  402878:	db4b      	blt.n	402912 <__sfvwrite_r+0x1da>
  40287a:	4613      	mov	r3, r2
  40287c:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40287e:	69e1      	ldr	r1, [r4, #28]
  402880:	9800      	ldr	r0, [sp, #0]
  402882:	462a      	mov	r2, r5
  402884:	47b8      	blx	r7
  402886:	1e07      	subs	r7, r0, #0
  402888:	ddd4      	ble.n	402834 <__sfvwrite_r+0xfc>
  40288a:	ebb9 0907 	subs.w	r9, r9, r7
  40288e:	d0cc      	beq.n	40282a <__sfvwrite_r+0xf2>
  402890:	2001      	movs	r0, #1
  402892:	f8da 3008 	ldr.w	r3, [sl, #8]
  402896:	1bdb      	subs	r3, r3, r7
  402898:	443d      	add	r5, r7
  40289a:	1bf6      	subs	r6, r6, r7
  40289c:	f8ca 3008 	str.w	r3, [sl, #8]
  4028a0:	2b00      	cmp	r3, #0
  4028a2:	f43f af78 	beq.w	402796 <__sfvwrite_r+0x5e>
  4028a6:	2e00      	cmp	r6, #0
  4028a8:	d1d5      	bne.n	402856 <__sfvwrite_r+0x11e>
  4028aa:	f108 0308 	add.w	r3, r8, #8
  4028ae:	e913 0060 	ldmdb	r3, {r5, r6}
  4028b2:	4698      	mov	r8, r3
  4028b4:	3308      	adds	r3, #8
  4028b6:	2e00      	cmp	r6, #0
  4028b8:	d0f9      	beq.n	4028ae <__sfvwrite_r+0x176>
  4028ba:	4632      	mov	r2, r6
  4028bc:	210a      	movs	r1, #10
  4028be:	4628      	mov	r0, r5
  4028c0:	f000 fcae 	bl	403220 <memchr>
  4028c4:	2800      	cmp	r0, #0
  4028c6:	f000 80a1 	beq.w	402a0c <__sfvwrite_r+0x2d4>
  4028ca:	3001      	adds	r0, #1
  4028cc:	eba0 0905 	sub.w	r9, r0, r5
  4028d0:	e7c2      	b.n	402858 <__sfvwrite_r+0x120>
  4028d2:	6820      	ldr	r0, [r4, #0]
  4028d4:	6923      	ldr	r3, [r4, #16]
  4028d6:	4298      	cmp	r0, r3
  4028d8:	d802      	bhi.n	4028e0 <__sfvwrite_r+0x1a8>
  4028da:	6963      	ldr	r3, [r4, #20]
  4028dc:	429f      	cmp	r7, r3
  4028de:	d25d      	bcs.n	40299c <__sfvwrite_r+0x264>
  4028e0:	45b8      	cmp	r8, r7
  4028e2:	bf28      	it	cs
  4028e4:	46b8      	movcs	r8, r7
  4028e6:	4642      	mov	r2, r8
  4028e8:	4649      	mov	r1, r9
  4028ea:	f000 fd83 	bl	4033f4 <memmove>
  4028ee:	68a3      	ldr	r3, [r4, #8]
  4028f0:	6822      	ldr	r2, [r4, #0]
  4028f2:	eba3 0308 	sub.w	r3, r3, r8
  4028f6:	4442      	add	r2, r8
  4028f8:	60a3      	str	r3, [r4, #8]
  4028fa:	6022      	str	r2, [r4, #0]
  4028fc:	b10b      	cbz	r3, 402902 <__sfvwrite_r+0x1ca>
  4028fe:	46c2      	mov	sl, r8
  402900:	e779      	b.n	4027f6 <__sfvwrite_r+0xbe>
  402902:	4621      	mov	r1, r4
  402904:	9800      	ldr	r0, [sp, #0]
  402906:	f7ff fc43 	bl	402190 <_fflush_r>
  40290a:	2800      	cmp	r0, #0
  40290c:	d192      	bne.n	402834 <__sfvwrite_r+0xfc>
  40290e:	46c2      	mov	sl, r8
  402910:	e771      	b.n	4027f6 <__sfvwrite_r+0xbe>
  402912:	465a      	mov	r2, fp
  402914:	4629      	mov	r1, r5
  402916:	f000 fd6d 	bl	4033f4 <memmove>
  40291a:	68a2      	ldr	r2, [r4, #8]
  40291c:	6823      	ldr	r3, [r4, #0]
  40291e:	eba2 020b 	sub.w	r2, r2, fp
  402922:	445b      	add	r3, fp
  402924:	60a2      	str	r2, [r4, #8]
  402926:	6023      	str	r3, [r4, #0]
  402928:	e7af      	b.n	40288a <__sfvwrite_r+0x152>
  40292a:	6820      	ldr	r0, [r4, #0]
  40292c:	46b8      	mov	r8, r7
  40292e:	46ba      	mov	sl, r7
  402930:	46bb      	mov	fp, r7
  402932:	e755      	b.n	4027e0 <__sfvwrite_r+0xa8>
  402934:	6962      	ldr	r2, [r4, #20]
  402936:	6820      	ldr	r0, [r4, #0]
  402938:	6921      	ldr	r1, [r4, #16]
  40293a:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40293e:	eba0 0a01 	sub.w	sl, r0, r1
  402942:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  402946:	f10a 0001 	add.w	r0, sl, #1
  40294a:	ea4f 0868 	mov.w	r8, r8, asr #1
  40294e:	4438      	add	r0, r7
  402950:	4540      	cmp	r0, r8
  402952:	4642      	mov	r2, r8
  402954:	bf84      	itt	hi
  402956:	4680      	movhi	r8, r0
  402958:	4642      	movhi	r2, r8
  40295a:	055b      	lsls	r3, r3, #21
  40295c:	d544      	bpl.n	4029e8 <__sfvwrite_r+0x2b0>
  40295e:	4611      	mov	r1, r2
  402960:	9800      	ldr	r0, [sp, #0]
  402962:	f000 f967 	bl	402c34 <_malloc_r>
  402966:	4683      	mov	fp, r0
  402968:	2800      	cmp	r0, #0
  40296a:	d055      	beq.n	402a18 <__sfvwrite_r+0x2e0>
  40296c:	4652      	mov	r2, sl
  40296e:	6921      	ldr	r1, [r4, #16]
  402970:	f000 fca6 	bl	4032c0 <memcpy>
  402974:	89a3      	ldrh	r3, [r4, #12]
  402976:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40297a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40297e:	81a3      	strh	r3, [r4, #12]
  402980:	eb0b 000a 	add.w	r0, fp, sl
  402984:	eba8 030a 	sub.w	r3, r8, sl
  402988:	f8c4 b010 	str.w	fp, [r4, #16]
  40298c:	f8c4 8014 	str.w	r8, [r4, #20]
  402990:	6020      	str	r0, [r4, #0]
  402992:	60a3      	str	r3, [r4, #8]
  402994:	46b8      	mov	r8, r7
  402996:	46ba      	mov	sl, r7
  402998:	46bb      	mov	fp, r7
  40299a:	e721      	b.n	4027e0 <__sfvwrite_r+0xa8>
  40299c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  4029a0:	42b9      	cmp	r1, r7
  4029a2:	bf28      	it	cs
  4029a4:	4639      	movcs	r1, r7
  4029a6:	464a      	mov	r2, r9
  4029a8:	fb91 f1f3 	sdiv	r1, r1, r3
  4029ac:	9800      	ldr	r0, [sp, #0]
  4029ae:	6a66      	ldr	r6, [r4, #36]	; 0x24
  4029b0:	fb03 f301 	mul.w	r3, r3, r1
  4029b4:	69e1      	ldr	r1, [r4, #28]
  4029b6:	47b0      	blx	r6
  4029b8:	f1b0 0a00 	subs.w	sl, r0, #0
  4029bc:	f73f af1b 	bgt.w	4027f6 <__sfvwrite_r+0xbe>
  4029c0:	e738      	b.n	402834 <__sfvwrite_r+0xfc>
  4029c2:	461a      	mov	r2, r3
  4029c4:	4629      	mov	r1, r5
  4029c6:	9301      	str	r3, [sp, #4]
  4029c8:	f000 fd14 	bl	4033f4 <memmove>
  4029cc:	6822      	ldr	r2, [r4, #0]
  4029ce:	9b01      	ldr	r3, [sp, #4]
  4029d0:	9800      	ldr	r0, [sp, #0]
  4029d2:	441a      	add	r2, r3
  4029d4:	6022      	str	r2, [r4, #0]
  4029d6:	4621      	mov	r1, r4
  4029d8:	f7ff fbda 	bl	402190 <_fflush_r>
  4029dc:	9b01      	ldr	r3, [sp, #4]
  4029de:	2800      	cmp	r0, #0
  4029e0:	f47f af28 	bne.w	402834 <__sfvwrite_r+0xfc>
  4029e4:	461f      	mov	r7, r3
  4029e6:	e750      	b.n	40288a <__sfvwrite_r+0x152>
  4029e8:	9800      	ldr	r0, [sp, #0]
  4029ea:	f000 fd73 	bl	4034d4 <_realloc_r>
  4029ee:	4683      	mov	fp, r0
  4029f0:	2800      	cmp	r0, #0
  4029f2:	d1c5      	bne.n	402980 <__sfvwrite_r+0x248>
  4029f4:	9d00      	ldr	r5, [sp, #0]
  4029f6:	6921      	ldr	r1, [r4, #16]
  4029f8:	4628      	mov	r0, r5
  4029fa:	f7ff fdb7 	bl	40256c <_free_r>
  4029fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a02:	220c      	movs	r2, #12
  402a04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  402a08:	602a      	str	r2, [r5, #0]
  402a0a:	e715      	b.n	402838 <__sfvwrite_r+0x100>
  402a0c:	f106 0901 	add.w	r9, r6, #1
  402a10:	e722      	b.n	402858 <__sfvwrite_r+0x120>
  402a12:	f04f 30ff 	mov.w	r0, #4294967295
  402a16:	e6bf      	b.n	402798 <__sfvwrite_r+0x60>
  402a18:	9a00      	ldr	r2, [sp, #0]
  402a1a:	230c      	movs	r3, #12
  402a1c:	6013      	str	r3, [r2, #0]
  402a1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402a22:	e709      	b.n	402838 <__sfvwrite_r+0x100>
  402a24:	7ffffc00 	.word	0x7ffffc00

00402a28 <_fwalk>:
  402a28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402a2c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402a30:	d01b      	beq.n	402a6a <_fwalk+0x42>
  402a32:	4688      	mov	r8, r1
  402a34:	2600      	movs	r6, #0
  402a36:	687d      	ldr	r5, [r7, #4]
  402a38:	68bc      	ldr	r4, [r7, #8]
  402a3a:	3d01      	subs	r5, #1
  402a3c:	d40f      	bmi.n	402a5e <_fwalk+0x36>
  402a3e:	89a3      	ldrh	r3, [r4, #12]
  402a40:	2b01      	cmp	r3, #1
  402a42:	f105 35ff 	add.w	r5, r5, #4294967295
  402a46:	d906      	bls.n	402a56 <_fwalk+0x2e>
  402a48:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402a4c:	3301      	adds	r3, #1
  402a4e:	4620      	mov	r0, r4
  402a50:	d001      	beq.n	402a56 <_fwalk+0x2e>
  402a52:	47c0      	blx	r8
  402a54:	4306      	orrs	r6, r0
  402a56:	1c6b      	adds	r3, r5, #1
  402a58:	f104 0468 	add.w	r4, r4, #104	; 0x68
  402a5c:	d1ef      	bne.n	402a3e <_fwalk+0x16>
  402a5e:	683f      	ldr	r7, [r7, #0]
  402a60:	2f00      	cmp	r7, #0
  402a62:	d1e8      	bne.n	402a36 <_fwalk+0xe>
  402a64:	4630      	mov	r0, r6
  402a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402a6a:	463e      	mov	r6, r7
  402a6c:	4630      	mov	r0, r6
  402a6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402a72:	bf00      	nop

00402a74 <_fwalk_reent>:
  402a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402a78:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  402a7c:	d01f      	beq.n	402abe <_fwalk_reent+0x4a>
  402a7e:	4688      	mov	r8, r1
  402a80:	4606      	mov	r6, r0
  402a82:	f04f 0900 	mov.w	r9, #0
  402a86:	687d      	ldr	r5, [r7, #4]
  402a88:	68bc      	ldr	r4, [r7, #8]
  402a8a:	3d01      	subs	r5, #1
  402a8c:	d411      	bmi.n	402ab2 <_fwalk_reent+0x3e>
  402a8e:	89a3      	ldrh	r3, [r4, #12]
  402a90:	2b01      	cmp	r3, #1
  402a92:	f105 35ff 	add.w	r5, r5, #4294967295
  402a96:	d908      	bls.n	402aaa <_fwalk_reent+0x36>
  402a98:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  402a9c:	3301      	adds	r3, #1
  402a9e:	4621      	mov	r1, r4
  402aa0:	4630      	mov	r0, r6
  402aa2:	d002      	beq.n	402aaa <_fwalk_reent+0x36>
  402aa4:	47c0      	blx	r8
  402aa6:	ea49 0900 	orr.w	r9, r9, r0
  402aaa:	1c6b      	adds	r3, r5, #1
  402aac:	f104 0468 	add.w	r4, r4, #104	; 0x68
  402ab0:	d1ed      	bne.n	402a8e <_fwalk_reent+0x1a>
  402ab2:	683f      	ldr	r7, [r7, #0]
  402ab4:	2f00      	cmp	r7, #0
  402ab6:	d1e6      	bne.n	402a86 <_fwalk_reent+0x12>
  402ab8:	4648      	mov	r0, r9
  402aba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402abe:	46b9      	mov	r9, r7
  402ac0:	4648      	mov	r0, r9
  402ac2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402ac6:	bf00      	nop

00402ac8 <iswspace>:
  402ac8:	28ff      	cmp	r0, #255	; 0xff
  402aca:	d901      	bls.n	402ad0 <iswspace+0x8>
  402acc:	2000      	movs	r0, #0
  402ace:	4770      	bx	lr
  402ad0:	b510      	push	{r4, lr}
  402ad2:	4604      	mov	r4, r0
  402ad4:	f000 f818 	bl	402b08 <__locale_ctype_ptr>
  402ad8:	4420      	add	r0, r4
  402ada:	7840      	ldrb	r0, [r0, #1]
  402adc:	f000 0008 	and.w	r0, r0, #8
  402ae0:	bd10      	pop	{r4, pc}
  402ae2:	bf00      	nop

00402ae4 <__locale_mb_cur_max>:
  402ae4:	4b04      	ldr	r3, [pc, #16]	; (402af8 <__locale_mb_cur_max+0x14>)
  402ae6:	4a05      	ldr	r2, [pc, #20]	; (402afc <__locale_mb_cur_max+0x18>)
  402ae8:	681b      	ldr	r3, [r3, #0]
  402aea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  402aec:	2b00      	cmp	r3, #0
  402aee:	bf08      	it	eq
  402af0:	4613      	moveq	r3, r2
  402af2:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  402af6:	4770      	bx	lr
  402af8:	20000014 	.word	0x20000014
  402afc:	20000444 	.word	0x20000444

00402b00 <__locale_ctype_ptr_l>:
  402b00:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
  402b04:	4770      	bx	lr
  402b06:	bf00      	nop

00402b08 <__locale_ctype_ptr>:
  402b08:	4b04      	ldr	r3, [pc, #16]	; (402b1c <__locale_ctype_ptr+0x14>)
  402b0a:	4a05      	ldr	r2, [pc, #20]	; (402b20 <__locale_ctype_ptr+0x18>)
  402b0c:	681b      	ldr	r3, [r3, #0]
  402b0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  402b10:	2b00      	cmp	r3, #0
  402b12:	bf08      	it	eq
  402b14:	4613      	moveq	r3, r2
  402b16:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
  402b1a:	4770      	bx	lr
  402b1c:	20000014 	.word	0x20000014
  402b20:	20000444 	.word	0x20000444

00402b24 <__retarget_lock_init_recursive>:
  402b24:	4770      	bx	lr
  402b26:	bf00      	nop

00402b28 <__retarget_lock_close_recursive>:
  402b28:	4770      	bx	lr
  402b2a:	bf00      	nop

00402b2c <__retarget_lock_acquire_recursive>:
  402b2c:	4770      	bx	lr
  402b2e:	bf00      	nop

00402b30 <__retarget_lock_release_recursive>:
  402b30:	4770      	bx	lr
  402b32:	bf00      	nop

00402b34 <__swhatbuf_r>:
  402b34:	b570      	push	{r4, r5, r6, lr}
  402b36:	460c      	mov	r4, r1
  402b38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  402b3c:	2900      	cmp	r1, #0
  402b3e:	b090      	sub	sp, #64	; 0x40
  402b40:	4615      	mov	r5, r2
  402b42:	461e      	mov	r6, r3
  402b44:	db14      	blt.n	402b70 <__swhatbuf_r+0x3c>
  402b46:	aa01      	add	r2, sp, #4
  402b48:	f001 fcf0 	bl	40452c <_fstat_r>
  402b4c:	2800      	cmp	r0, #0
  402b4e:	db0f      	blt.n	402b70 <__swhatbuf_r+0x3c>
  402b50:	9a02      	ldr	r2, [sp, #8]
  402b52:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  402b56:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  402b5a:	fab2 f282 	clz	r2, r2
  402b5e:	0952      	lsrs	r2, r2, #5
  402b60:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402b64:	f44f 6000 	mov.w	r0, #2048	; 0x800
  402b68:	6032      	str	r2, [r6, #0]
  402b6a:	602b      	str	r3, [r5, #0]
  402b6c:	b010      	add	sp, #64	; 0x40
  402b6e:	bd70      	pop	{r4, r5, r6, pc}
  402b70:	89a2      	ldrh	r2, [r4, #12]
  402b72:	2300      	movs	r3, #0
  402b74:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  402b78:	6033      	str	r3, [r6, #0]
  402b7a:	d004      	beq.n	402b86 <__swhatbuf_r+0x52>
  402b7c:	2240      	movs	r2, #64	; 0x40
  402b7e:	4618      	mov	r0, r3
  402b80:	602a      	str	r2, [r5, #0]
  402b82:	b010      	add	sp, #64	; 0x40
  402b84:	bd70      	pop	{r4, r5, r6, pc}
  402b86:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402b8a:	602b      	str	r3, [r5, #0]
  402b8c:	b010      	add	sp, #64	; 0x40
  402b8e:	bd70      	pop	{r4, r5, r6, pc}

00402b90 <__smakebuf_r>:
  402b90:	898a      	ldrh	r2, [r1, #12]
  402b92:	0792      	lsls	r2, r2, #30
  402b94:	460b      	mov	r3, r1
  402b96:	d506      	bpl.n	402ba6 <__smakebuf_r+0x16>
  402b98:	f101 0243 	add.w	r2, r1, #67	; 0x43
  402b9c:	2101      	movs	r1, #1
  402b9e:	601a      	str	r2, [r3, #0]
  402ba0:	611a      	str	r2, [r3, #16]
  402ba2:	6159      	str	r1, [r3, #20]
  402ba4:	4770      	bx	lr
  402ba6:	b5f0      	push	{r4, r5, r6, r7, lr}
  402ba8:	b083      	sub	sp, #12
  402baa:	ab01      	add	r3, sp, #4
  402bac:	466a      	mov	r2, sp
  402bae:	460c      	mov	r4, r1
  402bb0:	4606      	mov	r6, r0
  402bb2:	f7ff ffbf 	bl	402b34 <__swhatbuf_r>
  402bb6:	9900      	ldr	r1, [sp, #0]
  402bb8:	4605      	mov	r5, r0
  402bba:	4630      	mov	r0, r6
  402bbc:	f000 f83a 	bl	402c34 <_malloc_r>
  402bc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402bc4:	b1d8      	cbz	r0, 402bfe <__smakebuf_r+0x6e>
  402bc6:	9a01      	ldr	r2, [sp, #4]
  402bc8:	4f15      	ldr	r7, [pc, #84]	; (402c20 <__smakebuf_r+0x90>)
  402bca:	9900      	ldr	r1, [sp, #0]
  402bcc:	63f7      	str	r7, [r6, #60]	; 0x3c
  402bce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402bd2:	81a3      	strh	r3, [r4, #12]
  402bd4:	6020      	str	r0, [r4, #0]
  402bd6:	6120      	str	r0, [r4, #16]
  402bd8:	6161      	str	r1, [r4, #20]
  402bda:	b91a      	cbnz	r2, 402be4 <__smakebuf_r+0x54>
  402bdc:	432b      	orrs	r3, r5
  402bde:	81a3      	strh	r3, [r4, #12]
  402be0:	b003      	add	sp, #12
  402be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402be4:	4630      	mov	r0, r6
  402be6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  402bea:	f001 fcb3 	bl	404554 <_isatty_r>
  402bee:	b1a0      	cbz	r0, 402c1a <__smakebuf_r+0x8a>
  402bf0:	89a3      	ldrh	r3, [r4, #12]
  402bf2:	f023 0303 	bic.w	r3, r3, #3
  402bf6:	f043 0301 	orr.w	r3, r3, #1
  402bfa:	b21b      	sxth	r3, r3
  402bfc:	e7ee      	b.n	402bdc <__smakebuf_r+0x4c>
  402bfe:	059a      	lsls	r2, r3, #22
  402c00:	d4ee      	bmi.n	402be0 <__smakebuf_r+0x50>
  402c02:	f023 0303 	bic.w	r3, r3, #3
  402c06:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402c0a:	f043 0302 	orr.w	r3, r3, #2
  402c0e:	2101      	movs	r1, #1
  402c10:	81a3      	strh	r3, [r4, #12]
  402c12:	6022      	str	r2, [r4, #0]
  402c14:	6122      	str	r2, [r4, #16]
  402c16:	6161      	str	r1, [r4, #20]
  402c18:	e7e2      	b.n	402be0 <__smakebuf_r+0x50>
  402c1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402c1e:	e7dd      	b.n	402bdc <__smakebuf_r+0x4c>
  402c20:	00402209 	.word	0x00402209

00402c24 <malloc>:
  402c24:	4b02      	ldr	r3, [pc, #8]	; (402c30 <malloc+0xc>)
  402c26:	4601      	mov	r1, r0
  402c28:	6818      	ldr	r0, [r3, #0]
  402c2a:	f000 b803 	b.w	402c34 <_malloc_r>
  402c2e:	bf00      	nop
  402c30:	20000014 	.word	0x20000014

00402c34 <_malloc_r>:
  402c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402c38:	f101 060b 	add.w	r6, r1, #11
  402c3c:	2e16      	cmp	r6, #22
  402c3e:	b083      	sub	sp, #12
  402c40:	4605      	mov	r5, r0
  402c42:	f240 809e 	bls.w	402d82 <_malloc_r+0x14e>
  402c46:	f036 0607 	bics.w	r6, r6, #7
  402c4a:	f100 80bd 	bmi.w	402dc8 <_malloc_r+0x194>
  402c4e:	42b1      	cmp	r1, r6
  402c50:	f200 80ba 	bhi.w	402dc8 <_malloc_r+0x194>
  402c54:	f000 fc32 	bl	4034bc <__malloc_lock>
  402c58:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  402c5c:	f0c0 8293 	bcc.w	403186 <_malloc_r+0x552>
  402c60:	0a73      	lsrs	r3, r6, #9
  402c62:	f000 80b8 	beq.w	402dd6 <_malloc_r+0x1a2>
  402c66:	2b04      	cmp	r3, #4
  402c68:	f200 8179 	bhi.w	402f5e <_malloc_r+0x32a>
  402c6c:	09b3      	lsrs	r3, r6, #6
  402c6e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  402c72:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  402c76:	00c3      	lsls	r3, r0, #3
  402c78:	4fbf      	ldr	r7, [pc, #764]	; (402f78 <_malloc_r+0x344>)
  402c7a:	443b      	add	r3, r7
  402c7c:	f1a3 0108 	sub.w	r1, r3, #8
  402c80:	685c      	ldr	r4, [r3, #4]
  402c82:	42a1      	cmp	r1, r4
  402c84:	d106      	bne.n	402c94 <_malloc_r+0x60>
  402c86:	e00c      	b.n	402ca2 <_malloc_r+0x6e>
  402c88:	2a00      	cmp	r2, #0
  402c8a:	f280 80aa 	bge.w	402de2 <_malloc_r+0x1ae>
  402c8e:	68e4      	ldr	r4, [r4, #12]
  402c90:	42a1      	cmp	r1, r4
  402c92:	d006      	beq.n	402ca2 <_malloc_r+0x6e>
  402c94:	6863      	ldr	r3, [r4, #4]
  402c96:	f023 0303 	bic.w	r3, r3, #3
  402c9a:	1b9a      	subs	r2, r3, r6
  402c9c:	2a0f      	cmp	r2, #15
  402c9e:	ddf3      	ble.n	402c88 <_malloc_r+0x54>
  402ca0:	4670      	mov	r0, lr
  402ca2:	693c      	ldr	r4, [r7, #16]
  402ca4:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 402f8c <_malloc_r+0x358>
  402ca8:	4574      	cmp	r4, lr
  402caa:	f000 81ab 	beq.w	403004 <_malloc_r+0x3d0>
  402cae:	6863      	ldr	r3, [r4, #4]
  402cb0:	f023 0303 	bic.w	r3, r3, #3
  402cb4:	1b9a      	subs	r2, r3, r6
  402cb6:	2a0f      	cmp	r2, #15
  402cb8:	f300 8190 	bgt.w	402fdc <_malloc_r+0x3a8>
  402cbc:	2a00      	cmp	r2, #0
  402cbe:	f8c7 e014 	str.w	lr, [r7, #20]
  402cc2:	f8c7 e010 	str.w	lr, [r7, #16]
  402cc6:	f280 809d 	bge.w	402e04 <_malloc_r+0x1d0>
  402cca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402cce:	f080 8161 	bcs.w	402f94 <_malloc_r+0x360>
  402cd2:	08db      	lsrs	r3, r3, #3
  402cd4:	f103 0c01 	add.w	ip, r3, #1
  402cd8:	1099      	asrs	r1, r3, #2
  402cda:	687a      	ldr	r2, [r7, #4]
  402cdc:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  402ce0:	f8c4 8008 	str.w	r8, [r4, #8]
  402ce4:	2301      	movs	r3, #1
  402ce6:	408b      	lsls	r3, r1
  402ce8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402cec:	4313      	orrs	r3, r2
  402cee:	3908      	subs	r1, #8
  402cf0:	60e1      	str	r1, [r4, #12]
  402cf2:	607b      	str	r3, [r7, #4]
  402cf4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  402cf8:	f8c8 400c 	str.w	r4, [r8, #12]
  402cfc:	1082      	asrs	r2, r0, #2
  402cfe:	2401      	movs	r4, #1
  402d00:	4094      	lsls	r4, r2
  402d02:	429c      	cmp	r4, r3
  402d04:	f200 808b 	bhi.w	402e1e <_malloc_r+0x1ea>
  402d08:	421c      	tst	r4, r3
  402d0a:	d106      	bne.n	402d1a <_malloc_r+0xe6>
  402d0c:	f020 0003 	bic.w	r0, r0, #3
  402d10:	0064      	lsls	r4, r4, #1
  402d12:	421c      	tst	r4, r3
  402d14:	f100 0004 	add.w	r0, r0, #4
  402d18:	d0fa      	beq.n	402d10 <_malloc_r+0xdc>
  402d1a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402d1e:	46cc      	mov	ip, r9
  402d20:	4680      	mov	r8, r0
  402d22:	f8dc 300c 	ldr.w	r3, [ip, #12]
  402d26:	459c      	cmp	ip, r3
  402d28:	d107      	bne.n	402d3a <_malloc_r+0x106>
  402d2a:	e16d      	b.n	403008 <_malloc_r+0x3d4>
  402d2c:	2a00      	cmp	r2, #0
  402d2e:	f280 817b 	bge.w	403028 <_malloc_r+0x3f4>
  402d32:	68db      	ldr	r3, [r3, #12]
  402d34:	459c      	cmp	ip, r3
  402d36:	f000 8167 	beq.w	403008 <_malloc_r+0x3d4>
  402d3a:	6859      	ldr	r1, [r3, #4]
  402d3c:	f021 0103 	bic.w	r1, r1, #3
  402d40:	1b8a      	subs	r2, r1, r6
  402d42:	2a0f      	cmp	r2, #15
  402d44:	ddf2      	ble.n	402d2c <_malloc_r+0xf8>
  402d46:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402d4a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  402d4e:	9300      	str	r3, [sp, #0]
  402d50:	199c      	adds	r4, r3, r6
  402d52:	4628      	mov	r0, r5
  402d54:	f046 0601 	orr.w	r6, r6, #1
  402d58:	f042 0501 	orr.w	r5, r2, #1
  402d5c:	605e      	str	r6, [r3, #4]
  402d5e:	f8c8 c00c 	str.w	ip, [r8, #12]
  402d62:	f8cc 8008 	str.w	r8, [ip, #8]
  402d66:	617c      	str	r4, [r7, #20]
  402d68:	613c      	str	r4, [r7, #16]
  402d6a:	f8c4 e00c 	str.w	lr, [r4, #12]
  402d6e:	f8c4 e008 	str.w	lr, [r4, #8]
  402d72:	6065      	str	r5, [r4, #4]
  402d74:	505a      	str	r2, [r3, r1]
  402d76:	f000 fba7 	bl	4034c8 <__malloc_unlock>
  402d7a:	9b00      	ldr	r3, [sp, #0]
  402d7c:	f103 0408 	add.w	r4, r3, #8
  402d80:	e01e      	b.n	402dc0 <_malloc_r+0x18c>
  402d82:	2910      	cmp	r1, #16
  402d84:	d820      	bhi.n	402dc8 <_malloc_r+0x194>
  402d86:	f000 fb99 	bl	4034bc <__malloc_lock>
  402d8a:	2610      	movs	r6, #16
  402d8c:	2318      	movs	r3, #24
  402d8e:	2002      	movs	r0, #2
  402d90:	4f79      	ldr	r7, [pc, #484]	; (402f78 <_malloc_r+0x344>)
  402d92:	443b      	add	r3, r7
  402d94:	f1a3 0208 	sub.w	r2, r3, #8
  402d98:	685c      	ldr	r4, [r3, #4]
  402d9a:	4294      	cmp	r4, r2
  402d9c:	f000 813d 	beq.w	40301a <_malloc_r+0x3e6>
  402da0:	6863      	ldr	r3, [r4, #4]
  402da2:	68e1      	ldr	r1, [r4, #12]
  402da4:	68a6      	ldr	r6, [r4, #8]
  402da6:	f023 0303 	bic.w	r3, r3, #3
  402daa:	4423      	add	r3, r4
  402dac:	4628      	mov	r0, r5
  402dae:	685a      	ldr	r2, [r3, #4]
  402db0:	60f1      	str	r1, [r6, #12]
  402db2:	f042 0201 	orr.w	r2, r2, #1
  402db6:	608e      	str	r6, [r1, #8]
  402db8:	605a      	str	r2, [r3, #4]
  402dba:	f000 fb85 	bl	4034c8 <__malloc_unlock>
  402dbe:	3408      	adds	r4, #8
  402dc0:	4620      	mov	r0, r4
  402dc2:	b003      	add	sp, #12
  402dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402dc8:	2400      	movs	r4, #0
  402dca:	230c      	movs	r3, #12
  402dcc:	4620      	mov	r0, r4
  402dce:	602b      	str	r3, [r5, #0]
  402dd0:	b003      	add	sp, #12
  402dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402dd6:	2040      	movs	r0, #64	; 0x40
  402dd8:	f44f 7300 	mov.w	r3, #512	; 0x200
  402ddc:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402de0:	e74a      	b.n	402c78 <_malloc_r+0x44>
  402de2:	4423      	add	r3, r4
  402de4:	68e1      	ldr	r1, [r4, #12]
  402de6:	685a      	ldr	r2, [r3, #4]
  402de8:	68a6      	ldr	r6, [r4, #8]
  402dea:	f042 0201 	orr.w	r2, r2, #1
  402dee:	60f1      	str	r1, [r6, #12]
  402df0:	4628      	mov	r0, r5
  402df2:	608e      	str	r6, [r1, #8]
  402df4:	605a      	str	r2, [r3, #4]
  402df6:	f000 fb67 	bl	4034c8 <__malloc_unlock>
  402dfa:	3408      	adds	r4, #8
  402dfc:	4620      	mov	r0, r4
  402dfe:	b003      	add	sp, #12
  402e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e04:	4423      	add	r3, r4
  402e06:	4628      	mov	r0, r5
  402e08:	685a      	ldr	r2, [r3, #4]
  402e0a:	f042 0201 	orr.w	r2, r2, #1
  402e0e:	605a      	str	r2, [r3, #4]
  402e10:	f000 fb5a 	bl	4034c8 <__malloc_unlock>
  402e14:	3408      	adds	r4, #8
  402e16:	4620      	mov	r0, r4
  402e18:	b003      	add	sp, #12
  402e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e1e:	68bc      	ldr	r4, [r7, #8]
  402e20:	6863      	ldr	r3, [r4, #4]
  402e22:	f023 0803 	bic.w	r8, r3, #3
  402e26:	45b0      	cmp	r8, r6
  402e28:	d304      	bcc.n	402e34 <_malloc_r+0x200>
  402e2a:	eba8 0306 	sub.w	r3, r8, r6
  402e2e:	2b0f      	cmp	r3, #15
  402e30:	f300 8085 	bgt.w	402f3e <_malloc_r+0x30a>
  402e34:	f8df 9158 	ldr.w	r9, [pc, #344]	; 402f90 <_malloc_r+0x35c>
  402e38:	4b50      	ldr	r3, [pc, #320]	; (402f7c <_malloc_r+0x348>)
  402e3a:	f8d9 2000 	ldr.w	r2, [r9]
  402e3e:	681b      	ldr	r3, [r3, #0]
  402e40:	3201      	adds	r2, #1
  402e42:	4433      	add	r3, r6
  402e44:	eb04 0a08 	add.w	sl, r4, r8
  402e48:	f000 8155 	beq.w	4030f6 <_malloc_r+0x4c2>
  402e4c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  402e50:	330f      	adds	r3, #15
  402e52:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  402e56:	f02b 0b0f 	bic.w	fp, fp, #15
  402e5a:	4659      	mov	r1, fp
  402e5c:	4628      	mov	r0, r5
  402e5e:	f000 fd73 	bl	403948 <_sbrk_r>
  402e62:	1c41      	adds	r1, r0, #1
  402e64:	4602      	mov	r2, r0
  402e66:	f000 80fc 	beq.w	403062 <_malloc_r+0x42e>
  402e6a:	4582      	cmp	sl, r0
  402e6c:	f200 80f7 	bhi.w	40305e <_malloc_r+0x42a>
  402e70:	4b43      	ldr	r3, [pc, #268]	; (402f80 <_malloc_r+0x34c>)
  402e72:	6819      	ldr	r1, [r3, #0]
  402e74:	4459      	add	r1, fp
  402e76:	6019      	str	r1, [r3, #0]
  402e78:	f000 814d 	beq.w	403116 <_malloc_r+0x4e2>
  402e7c:	f8d9 0000 	ldr.w	r0, [r9]
  402e80:	3001      	adds	r0, #1
  402e82:	bf1b      	ittet	ne
  402e84:	eba2 0a0a 	subne.w	sl, r2, sl
  402e88:	4451      	addne	r1, sl
  402e8a:	f8c9 2000 	streq.w	r2, [r9]
  402e8e:	6019      	strne	r1, [r3, #0]
  402e90:	f012 0107 	ands.w	r1, r2, #7
  402e94:	f000 8115 	beq.w	4030c2 <_malloc_r+0x48e>
  402e98:	f1c1 0008 	rsb	r0, r1, #8
  402e9c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  402ea0:	4402      	add	r2, r0
  402ea2:	3108      	adds	r1, #8
  402ea4:	eb02 090b 	add.w	r9, r2, fp
  402ea8:	f3c9 090b 	ubfx	r9, r9, #0, #12
  402eac:	eba1 0909 	sub.w	r9, r1, r9
  402eb0:	4649      	mov	r1, r9
  402eb2:	4628      	mov	r0, r5
  402eb4:	9301      	str	r3, [sp, #4]
  402eb6:	9200      	str	r2, [sp, #0]
  402eb8:	f000 fd46 	bl	403948 <_sbrk_r>
  402ebc:	1c43      	adds	r3, r0, #1
  402ebe:	e89d 000c 	ldmia.w	sp, {r2, r3}
  402ec2:	f000 8143 	beq.w	40314c <_malloc_r+0x518>
  402ec6:	1a80      	subs	r0, r0, r2
  402ec8:	4448      	add	r0, r9
  402eca:	f040 0001 	orr.w	r0, r0, #1
  402ece:	6819      	ldr	r1, [r3, #0]
  402ed0:	60ba      	str	r2, [r7, #8]
  402ed2:	4449      	add	r1, r9
  402ed4:	42bc      	cmp	r4, r7
  402ed6:	6050      	str	r0, [r2, #4]
  402ed8:	6019      	str	r1, [r3, #0]
  402eda:	d017      	beq.n	402f0c <_malloc_r+0x2d8>
  402edc:	f1b8 0f0f 	cmp.w	r8, #15
  402ee0:	f240 80fb 	bls.w	4030da <_malloc_r+0x4a6>
  402ee4:	6860      	ldr	r0, [r4, #4]
  402ee6:	f1a8 020c 	sub.w	r2, r8, #12
  402eea:	f022 0207 	bic.w	r2, r2, #7
  402eee:	eb04 0e02 	add.w	lr, r4, r2
  402ef2:	f000 0001 	and.w	r0, r0, #1
  402ef6:	f04f 0c05 	mov.w	ip, #5
  402efa:	4310      	orrs	r0, r2
  402efc:	2a0f      	cmp	r2, #15
  402efe:	6060      	str	r0, [r4, #4]
  402f00:	f8ce c004 	str.w	ip, [lr, #4]
  402f04:	f8ce c008 	str.w	ip, [lr, #8]
  402f08:	f200 8117 	bhi.w	40313a <_malloc_r+0x506>
  402f0c:	4b1d      	ldr	r3, [pc, #116]	; (402f84 <_malloc_r+0x350>)
  402f0e:	68bc      	ldr	r4, [r7, #8]
  402f10:	681a      	ldr	r2, [r3, #0]
  402f12:	4291      	cmp	r1, r2
  402f14:	bf88      	it	hi
  402f16:	6019      	strhi	r1, [r3, #0]
  402f18:	4b1b      	ldr	r3, [pc, #108]	; (402f88 <_malloc_r+0x354>)
  402f1a:	681a      	ldr	r2, [r3, #0]
  402f1c:	4291      	cmp	r1, r2
  402f1e:	6862      	ldr	r2, [r4, #4]
  402f20:	bf88      	it	hi
  402f22:	6019      	strhi	r1, [r3, #0]
  402f24:	f022 0203 	bic.w	r2, r2, #3
  402f28:	4296      	cmp	r6, r2
  402f2a:	eba2 0306 	sub.w	r3, r2, r6
  402f2e:	d801      	bhi.n	402f34 <_malloc_r+0x300>
  402f30:	2b0f      	cmp	r3, #15
  402f32:	dc04      	bgt.n	402f3e <_malloc_r+0x30a>
  402f34:	4628      	mov	r0, r5
  402f36:	f000 fac7 	bl	4034c8 <__malloc_unlock>
  402f3a:	2400      	movs	r4, #0
  402f3c:	e740      	b.n	402dc0 <_malloc_r+0x18c>
  402f3e:	19a2      	adds	r2, r4, r6
  402f40:	f043 0301 	orr.w	r3, r3, #1
  402f44:	f046 0601 	orr.w	r6, r6, #1
  402f48:	6066      	str	r6, [r4, #4]
  402f4a:	4628      	mov	r0, r5
  402f4c:	60ba      	str	r2, [r7, #8]
  402f4e:	6053      	str	r3, [r2, #4]
  402f50:	f000 faba 	bl	4034c8 <__malloc_unlock>
  402f54:	3408      	adds	r4, #8
  402f56:	4620      	mov	r0, r4
  402f58:	b003      	add	sp, #12
  402f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f5e:	2b14      	cmp	r3, #20
  402f60:	d971      	bls.n	403046 <_malloc_r+0x412>
  402f62:	2b54      	cmp	r3, #84	; 0x54
  402f64:	f200 80a3 	bhi.w	4030ae <_malloc_r+0x47a>
  402f68:	0b33      	lsrs	r3, r6, #12
  402f6a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  402f6e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  402f72:	00c3      	lsls	r3, r0, #3
  402f74:	e680      	b.n	402c78 <_malloc_r+0x44>
  402f76:	bf00      	nop
  402f78:	200005b0 	.word	0x200005b0
  402f7c:	20000a84 	.word	0x20000a84
  402f80:	20000a54 	.word	0x20000a54
  402f84:	20000a7c 	.word	0x20000a7c
  402f88:	20000a80 	.word	0x20000a80
  402f8c:	200005b8 	.word	0x200005b8
  402f90:	200009b8 	.word	0x200009b8
  402f94:	0a5a      	lsrs	r2, r3, #9
  402f96:	2a04      	cmp	r2, #4
  402f98:	d95b      	bls.n	403052 <_malloc_r+0x41e>
  402f9a:	2a14      	cmp	r2, #20
  402f9c:	f200 80ae 	bhi.w	4030fc <_malloc_r+0x4c8>
  402fa0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  402fa4:	00c9      	lsls	r1, r1, #3
  402fa6:	325b      	adds	r2, #91	; 0x5b
  402fa8:	eb07 0c01 	add.w	ip, r7, r1
  402fac:	5879      	ldr	r1, [r7, r1]
  402fae:	f1ac 0c08 	sub.w	ip, ip, #8
  402fb2:	458c      	cmp	ip, r1
  402fb4:	f000 8088 	beq.w	4030c8 <_malloc_r+0x494>
  402fb8:	684a      	ldr	r2, [r1, #4]
  402fba:	f022 0203 	bic.w	r2, r2, #3
  402fbe:	4293      	cmp	r3, r2
  402fc0:	d273      	bcs.n	4030aa <_malloc_r+0x476>
  402fc2:	6889      	ldr	r1, [r1, #8]
  402fc4:	458c      	cmp	ip, r1
  402fc6:	d1f7      	bne.n	402fb8 <_malloc_r+0x384>
  402fc8:	f8dc 200c 	ldr.w	r2, [ip, #12]
  402fcc:	687b      	ldr	r3, [r7, #4]
  402fce:	60e2      	str	r2, [r4, #12]
  402fd0:	f8c4 c008 	str.w	ip, [r4, #8]
  402fd4:	6094      	str	r4, [r2, #8]
  402fd6:	f8cc 400c 	str.w	r4, [ip, #12]
  402fda:	e68f      	b.n	402cfc <_malloc_r+0xc8>
  402fdc:	19a1      	adds	r1, r4, r6
  402fde:	f046 0c01 	orr.w	ip, r6, #1
  402fe2:	f042 0601 	orr.w	r6, r2, #1
  402fe6:	f8c4 c004 	str.w	ip, [r4, #4]
  402fea:	4628      	mov	r0, r5
  402fec:	6179      	str	r1, [r7, #20]
  402fee:	6139      	str	r1, [r7, #16]
  402ff0:	f8c1 e00c 	str.w	lr, [r1, #12]
  402ff4:	f8c1 e008 	str.w	lr, [r1, #8]
  402ff8:	604e      	str	r6, [r1, #4]
  402ffa:	50e2      	str	r2, [r4, r3]
  402ffc:	f000 fa64 	bl	4034c8 <__malloc_unlock>
  403000:	3408      	adds	r4, #8
  403002:	e6dd      	b.n	402dc0 <_malloc_r+0x18c>
  403004:	687b      	ldr	r3, [r7, #4]
  403006:	e679      	b.n	402cfc <_malloc_r+0xc8>
  403008:	f108 0801 	add.w	r8, r8, #1
  40300c:	f018 0f03 	tst.w	r8, #3
  403010:	f10c 0c08 	add.w	ip, ip, #8
  403014:	f47f ae85 	bne.w	402d22 <_malloc_r+0xee>
  403018:	e02d      	b.n	403076 <_malloc_r+0x442>
  40301a:	68dc      	ldr	r4, [r3, #12]
  40301c:	42a3      	cmp	r3, r4
  40301e:	bf08      	it	eq
  403020:	3002      	addeq	r0, #2
  403022:	f43f ae3e 	beq.w	402ca2 <_malloc_r+0x6e>
  403026:	e6bb      	b.n	402da0 <_malloc_r+0x16c>
  403028:	4419      	add	r1, r3
  40302a:	461c      	mov	r4, r3
  40302c:	684a      	ldr	r2, [r1, #4]
  40302e:	68db      	ldr	r3, [r3, #12]
  403030:	f854 6f08 	ldr.w	r6, [r4, #8]!
  403034:	f042 0201 	orr.w	r2, r2, #1
  403038:	604a      	str	r2, [r1, #4]
  40303a:	4628      	mov	r0, r5
  40303c:	60f3      	str	r3, [r6, #12]
  40303e:	609e      	str	r6, [r3, #8]
  403040:	f000 fa42 	bl	4034c8 <__malloc_unlock>
  403044:	e6bc      	b.n	402dc0 <_malloc_r+0x18c>
  403046:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40304a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40304e:	00c3      	lsls	r3, r0, #3
  403050:	e612      	b.n	402c78 <_malloc_r+0x44>
  403052:	099a      	lsrs	r2, r3, #6
  403054:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403058:	00c9      	lsls	r1, r1, #3
  40305a:	3238      	adds	r2, #56	; 0x38
  40305c:	e7a4      	b.n	402fa8 <_malloc_r+0x374>
  40305e:	42bc      	cmp	r4, r7
  403060:	d054      	beq.n	40310c <_malloc_r+0x4d8>
  403062:	68bc      	ldr	r4, [r7, #8]
  403064:	6862      	ldr	r2, [r4, #4]
  403066:	f022 0203 	bic.w	r2, r2, #3
  40306a:	e75d      	b.n	402f28 <_malloc_r+0x2f4>
  40306c:	f859 3908 	ldr.w	r3, [r9], #-8
  403070:	4599      	cmp	r9, r3
  403072:	f040 8086 	bne.w	403182 <_malloc_r+0x54e>
  403076:	f010 0f03 	tst.w	r0, #3
  40307a:	f100 30ff 	add.w	r0, r0, #4294967295
  40307e:	d1f5      	bne.n	40306c <_malloc_r+0x438>
  403080:	687b      	ldr	r3, [r7, #4]
  403082:	ea23 0304 	bic.w	r3, r3, r4
  403086:	607b      	str	r3, [r7, #4]
  403088:	0064      	lsls	r4, r4, #1
  40308a:	429c      	cmp	r4, r3
  40308c:	f63f aec7 	bhi.w	402e1e <_malloc_r+0x1ea>
  403090:	2c00      	cmp	r4, #0
  403092:	f43f aec4 	beq.w	402e1e <_malloc_r+0x1ea>
  403096:	421c      	tst	r4, r3
  403098:	4640      	mov	r0, r8
  40309a:	f47f ae3e 	bne.w	402d1a <_malloc_r+0xe6>
  40309e:	0064      	lsls	r4, r4, #1
  4030a0:	421c      	tst	r4, r3
  4030a2:	f100 0004 	add.w	r0, r0, #4
  4030a6:	d0fa      	beq.n	40309e <_malloc_r+0x46a>
  4030a8:	e637      	b.n	402d1a <_malloc_r+0xe6>
  4030aa:	468c      	mov	ip, r1
  4030ac:	e78c      	b.n	402fc8 <_malloc_r+0x394>
  4030ae:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4030b2:	d815      	bhi.n	4030e0 <_malloc_r+0x4ac>
  4030b4:	0bf3      	lsrs	r3, r6, #15
  4030b6:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4030ba:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4030be:	00c3      	lsls	r3, r0, #3
  4030c0:	e5da      	b.n	402c78 <_malloc_r+0x44>
  4030c2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4030c6:	e6ed      	b.n	402ea4 <_malloc_r+0x270>
  4030c8:	687b      	ldr	r3, [r7, #4]
  4030ca:	1092      	asrs	r2, r2, #2
  4030cc:	2101      	movs	r1, #1
  4030ce:	fa01 f202 	lsl.w	r2, r1, r2
  4030d2:	4313      	orrs	r3, r2
  4030d4:	607b      	str	r3, [r7, #4]
  4030d6:	4662      	mov	r2, ip
  4030d8:	e779      	b.n	402fce <_malloc_r+0x39a>
  4030da:	2301      	movs	r3, #1
  4030dc:	6053      	str	r3, [r2, #4]
  4030de:	e729      	b.n	402f34 <_malloc_r+0x300>
  4030e0:	f240 5254 	movw	r2, #1364	; 0x554
  4030e4:	4293      	cmp	r3, r2
  4030e6:	d822      	bhi.n	40312e <_malloc_r+0x4fa>
  4030e8:	0cb3      	lsrs	r3, r6, #18
  4030ea:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4030ee:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4030f2:	00c3      	lsls	r3, r0, #3
  4030f4:	e5c0      	b.n	402c78 <_malloc_r+0x44>
  4030f6:	f103 0b10 	add.w	fp, r3, #16
  4030fa:	e6ae      	b.n	402e5a <_malloc_r+0x226>
  4030fc:	2a54      	cmp	r2, #84	; 0x54
  4030fe:	d829      	bhi.n	403154 <_malloc_r+0x520>
  403100:	0b1a      	lsrs	r2, r3, #12
  403102:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403106:	00c9      	lsls	r1, r1, #3
  403108:	326e      	adds	r2, #110	; 0x6e
  40310a:	e74d      	b.n	402fa8 <_malloc_r+0x374>
  40310c:	4b20      	ldr	r3, [pc, #128]	; (403190 <_malloc_r+0x55c>)
  40310e:	6819      	ldr	r1, [r3, #0]
  403110:	4459      	add	r1, fp
  403112:	6019      	str	r1, [r3, #0]
  403114:	e6b2      	b.n	402e7c <_malloc_r+0x248>
  403116:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40311a:	2800      	cmp	r0, #0
  40311c:	f47f aeae 	bne.w	402e7c <_malloc_r+0x248>
  403120:	eb08 030b 	add.w	r3, r8, fp
  403124:	68ba      	ldr	r2, [r7, #8]
  403126:	f043 0301 	orr.w	r3, r3, #1
  40312a:	6053      	str	r3, [r2, #4]
  40312c:	e6ee      	b.n	402f0c <_malloc_r+0x2d8>
  40312e:	207f      	movs	r0, #127	; 0x7f
  403130:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  403134:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  403138:	e59e      	b.n	402c78 <_malloc_r+0x44>
  40313a:	f104 0108 	add.w	r1, r4, #8
  40313e:	4628      	mov	r0, r5
  403140:	9300      	str	r3, [sp, #0]
  403142:	f7ff fa13 	bl	40256c <_free_r>
  403146:	9b00      	ldr	r3, [sp, #0]
  403148:	6819      	ldr	r1, [r3, #0]
  40314a:	e6df      	b.n	402f0c <_malloc_r+0x2d8>
  40314c:	2001      	movs	r0, #1
  40314e:	f04f 0900 	mov.w	r9, #0
  403152:	e6bc      	b.n	402ece <_malloc_r+0x29a>
  403154:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403158:	d805      	bhi.n	403166 <_malloc_r+0x532>
  40315a:	0bda      	lsrs	r2, r3, #15
  40315c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403160:	00c9      	lsls	r1, r1, #3
  403162:	3277      	adds	r2, #119	; 0x77
  403164:	e720      	b.n	402fa8 <_malloc_r+0x374>
  403166:	f240 5154 	movw	r1, #1364	; 0x554
  40316a:	428a      	cmp	r2, r1
  40316c:	d805      	bhi.n	40317a <_malloc_r+0x546>
  40316e:	0c9a      	lsrs	r2, r3, #18
  403170:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403174:	00c9      	lsls	r1, r1, #3
  403176:	327c      	adds	r2, #124	; 0x7c
  403178:	e716      	b.n	402fa8 <_malloc_r+0x374>
  40317a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40317e:	227e      	movs	r2, #126	; 0x7e
  403180:	e712      	b.n	402fa8 <_malloc_r+0x374>
  403182:	687b      	ldr	r3, [r7, #4]
  403184:	e780      	b.n	403088 <_malloc_r+0x454>
  403186:	08f0      	lsrs	r0, r6, #3
  403188:	f106 0308 	add.w	r3, r6, #8
  40318c:	e600      	b.n	402d90 <_malloc_r+0x15c>
  40318e:	bf00      	nop
  403190:	20000a54 	.word	0x20000a54

00403194 <_mbrtowc_r>:
  403194:	b5f0      	push	{r4, r5, r6, r7, lr}
  403196:	b083      	sub	sp, #12
  403198:	4607      	mov	r7, r0
  40319a:	9d08      	ldr	r5, [sp, #32]
  40319c:	b192      	cbz	r2, 4031c4 <_mbrtowc_r+0x30>
  40319e:	4c11      	ldr	r4, [pc, #68]	; (4031e4 <_mbrtowc_r+0x50>)
  4031a0:	4e11      	ldr	r6, [pc, #68]	; (4031e8 <_mbrtowc_r+0x54>)
  4031a2:	6824      	ldr	r4, [r4, #0]
  4031a4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4031a6:	9500      	str	r5, [sp, #0]
  4031a8:	2c00      	cmp	r4, #0
  4031aa:	bf08      	it	eq
  4031ac:	4634      	moveq	r4, r6
  4031ae:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
  4031b2:	47a0      	blx	r4
  4031b4:	1c43      	adds	r3, r0, #1
  4031b6:	d103      	bne.n	4031c0 <_mbrtowc_r+0x2c>
  4031b8:	2200      	movs	r2, #0
  4031ba:	238a      	movs	r3, #138	; 0x8a
  4031bc:	602a      	str	r2, [r5, #0]
  4031be:	603b      	str	r3, [r7, #0]
  4031c0:	b003      	add	sp, #12
  4031c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4031c4:	4b07      	ldr	r3, [pc, #28]	; (4031e4 <_mbrtowc_r+0x50>)
  4031c6:	4908      	ldr	r1, [pc, #32]	; (4031e8 <_mbrtowc_r+0x54>)
  4031c8:	681b      	ldr	r3, [r3, #0]
  4031ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4031cc:	9500      	str	r5, [sp, #0]
  4031ce:	2b00      	cmp	r3, #0
  4031d0:	bf08      	it	eq
  4031d2:	460b      	moveq	r3, r1
  4031d4:	4614      	mov	r4, r2
  4031d6:	4621      	mov	r1, r4
  4031d8:	4a04      	ldr	r2, [pc, #16]	; (4031ec <_mbrtowc_r+0x58>)
  4031da:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
  4031de:	2301      	movs	r3, #1
  4031e0:	47a0      	blx	r4
  4031e2:	e7e7      	b.n	4031b4 <_mbrtowc_r+0x20>
  4031e4:	20000014 	.word	0x20000014
  4031e8:	20000444 	.word	0x20000444
  4031ec:	00404908 	.word	0x00404908

004031f0 <__ascii_mbtowc>:
  4031f0:	b082      	sub	sp, #8
  4031f2:	b149      	cbz	r1, 403208 <__ascii_mbtowc+0x18>
  4031f4:	b15a      	cbz	r2, 40320e <__ascii_mbtowc+0x1e>
  4031f6:	b16b      	cbz	r3, 403214 <__ascii_mbtowc+0x24>
  4031f8:	7813      	ldrb	r3, [r2, #0]
  4031fa:	600b      	str	r3, [r1, #0]
  4031fc:	7812      	ldrb	r2, [r2, #0]
  4031fe:	1c10      	adds	r0, r2, #0
  403200:	bf18      	it	ne
  403202:	2001      	movne	r0, #1
  403204:	b002      	add	sp, #8
  403206:	4770      	bx	lr
  403208:	a901      	add	r1, sp, #4
  40320a:	2a00      	cmp	r2, #0
  40320c:	d1f3      	bne.n	4031f6 <__ascii_mbtowc+0x6>
  40320e:	4610      	mov	r0, r2
  403210:	b002      	add	sp, #8
  403212:	4770      	bx	lr
  403214:	f06f 0001 	mvn.w	r0, #1
  403218:	e7f4      	b.n	403204 <__ascii_mbtowc+0x14>
  40321a:	bf00      	nop
  40321c:	0000      	movs	r0, r0
	...

00403220 <memchr>:
  403220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403224:	2a10      	cmp	r2, #16
  403226:	db2b      	blt.n	403280 <memchr+0x60>
  403228:	f010 0f07 	tst.w	r0, #7
  40322c:	d008      	beq.n	403240 <memchr+0x20>
  40322e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403232:	3a01      	subs	r2, #1
  403234:	428b      	cmp	r3, r1
  403236:	d02d      	beq.n	403294 <memchr+0x74>
  403238:	f010 0f07 	tst.w	r0, #7
  40323c:	b342      	cbz	r2, 403290 <memchr+0x70>
  40323e:	d1f6      	bne.n	40322e <memchr+0xe>
  403240:	b4f0      	push	{r4, r5, r6, r7}
  403242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40324a:	f022 0407 	bic.w	r4, r2, #7
  40324e:	f07f 0700 	mvns.w	r7, #0
  403252:	2300      	movs	r3, #0
  403254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403258:	3c08      	subs	r4, #8
  40325a:	ea85 0501 	eor.w	r5, r5, r1
  40325e:	ea86 0601 	eor.w	r6, r6, r1
  403262:	fa85 f547 	uadd8	r5, r5, r7
  403266:	faa3 f587 	sel	r5, r3, r7
  40326a:	fa86 f647 	uadd8	r6, r6, r7
  40326e:	faa5 f687 	sel	r6, r5, r7
  403272:	b98e      	cbnz	r6, 403298 <memchr+0x78>
  403274:	d1ee      	bne.n	403254 <memchr+0x34>
  403276:	bcf0      	pop	{r4, r5, r6, r7}
  403278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40327c:	f002 0207 	and.w	r2, r2, #7
  403280:	b132      	cbz	r2, 403290 <memchr+0x70>
  403282:	f810 3b01 	ldrb.w	r3, [r0], #1
  403286:	3a01      	subs	r2, #1
  403288:	ea83 0301 	eor.w	r3, r3, r1
  40328c:	b113      	cbz	r3, 403294 <memchr+0x74>
  40328e:	d1f8      	bne.n	403282 <memchr+0x62>
  403290:	2000      	movs	r0, #0
  403292:	4770      	bx	lr
  403294:	3801      	subs	r0, #1
  403296:	4770      	bx	lr
  403298:	2d00      	cmp	r5, #0
  40329a:	bf06      	itte	eq
  40329c:	4635      	moveq	r5, r6
  40329e:	3803      	subeq	r0, #3
  4032a0:	3807      	subne	r0, #7
  4032a2:	f015 0f01 	tst.w	r5, #1
  4032a6:	d107      	bne.n	4032b8 <memchr+0x98>
  4032a8:	3001      	adds	r0, #1
  4032aa:	f415 7f80 	tst.w	r5, #256	; 0x100
  4032ae:	bf02      	ittt	eq
  4032b0:	3001      	addeq	r0, #1
  4032b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4032b6:	3001      	addeq	r0, #1
  4032b8:	bcf0      	pop	{r4, r5, r6, r7}
  4032ba:	3801      	subs	r0, #1
  4032bc:	4770      	bx	lr
  4032be:	bf00      	nop

004032c0 <memcpy>:
  4032c0:	4684      	mov	ip, r0
  4032c2:	ea41 0300 	orr.w	r3, r1, r0
  4032c6:	f013 0303 	ands.w	r3, r3, #3
  4032ca:	d16d      	bne.n	4033a8 <memcpy+0xe8>
  4032cc:	3a40      	subs	r2, #64	; 0x40
  4032ce:	d341      	bcc.n	403354 <memcpy+0x94>
  4032d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4032d4:	f840 3b04 	str.w	r3, [r0], #4
  4032d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4032dc:	f840 3b04 	str.w	r3, [r0], #4
  4032e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4032e4:	f840 3b04 	str.w	r3, [r0], #4
  4032e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4032ec:	f840 3b04 	str.w	r3, [r0], #4
  4032f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4032f4:	f840 3b04 	str.w	r3, [r0], #4
  4032f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4032fc:	f840 3b04 	str.w	r3, [r0], #4
  403300:	f851 3b04 	ldr.w	r3, [r1], #4
  403304:	f840 3b04 	str.w	r3, [r0], #4
  403308:	f851 3b04 	ldr.w	r3, [r1], #4
  40330c:	f840 3b04 	str.w	r3, [r0], #4
  403310:	f851 3b04 	ldr.w	r3, [r1], #4
  403314:	f840 3b04 	str.w	r3, [r0], #4
  403318:	f851 3b04 	ldr.w	r3, [r1], #4
  40331c:	f840 3b04 	str.w	r3, [r0], #4
  403320:	f851 3b04 	ldr.w	r3, [r1], #4
  403324:	f840 3b04 	str.w	r3, [r0], #4
  403328:	f851 3b04 	ldr.w	r3, [r1], #4
  40332c:	f840 3b04 	str.w	r3, [r0], #4
  403330:	f851 3b04 	ldr.w	r3, [r1], #4
  403334:	f840 3b04 	str.w	r3, [r0], #4
  403338:	f851 3b04 	ldr.w	r3, [r1], #4
  40333c:	f840 3b04 	str.w	r3, [r0], #4
  403340:	f851 3b04 	ldr.w	r3, [r1], #4
  403344:	f840 3b04 	str.w	r3, [r0], #4
  403348:	f851 3b04 	ldr.w	r3, [r1], #4
  40334c:	f840 3b04 	str.w	r3, [r0], #4
  403350:	3a40      	subs	r2, #64	; 0x40
  403352:	d2bd      	bcs.n	4032d0 <memcpy+0x10>
  403354:	3230      	adds	r2, #48	; 0x30
  403356:	d311      	bcc.n	40337c <memcpy+0xbc>
  403358:	f851 3b04 	ldr.w	r3, [r1], #4
  40335c:	f840 3b04 	str.w	r3, [r0], #4
  403360:	f851 3b04 	ldr.w	r3, [r1], #4
  403364:	f840 3b04 	str.w	r3, [r0], #4
  403368:	f851 3b04 	ldr.w	r3, [r1], #4
  40336c:	f840 3b04 	str.w	r3, [r0], #4
  403370:	f851 3b04 	ldr.w	r3, [r1], #4
  403374:	f840 3b04 	str.w	r3, [r0], #4
  403378:	3a10      	subs	r2, #16
  40337a:	d2ed      	bcs.n	403358 <memcpy+0x98>
  40337c:	320c      	adds	r2, #12
  40337e:	d305      	bcc.n	40338c <memcpy+0xcc>
  403380:	f851 3b04 	ldr.w	r3, [r1], #4
  403384:	f840 3b04 	str.w	r3, [r0], #4
  403388:	3a04      	subs	r2, #4
  40338a:	d2f9      	bcs.n	403380 <memcpy+0xc0>
  40338c:	3204      	adds	r2, #4
  40338e:	d008      	beq.n	4033a2 <memcpy+0xe2>
  403390:	07d2      	lsls	r2, r2, #31
  403392:	bf1c      	itt	ne
  403394:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403398:	f800 3b01 	strbne.w	r3, [r0], #1
  40339c:	d301      	bcc.n	4033a2 <memcpy+0xe2>
  40339e:	880b      	ldrh	r3, [r1, #0]
  4033a0:	8003      	strh	r3, [r0, #0]
  4033a2:	4660      	mov	r0, ip
  4033a4:	4770      	bx	lr
  4033a6:	bf00      	nop
  4033a8:	2a08      	cmp	r2, #8
  4033aa:	d313      	bcc.n	4033d4 <memcpy+0x114>
  4033ac:	078b      	lsls	r3, r1, #30
  4033ae:	d08d      	beq.n	4032cc <memcpy+0xc>
  4033b0:	f010 0303 	ands.w	r3, r0, #3
  4033b4:	d08a      	beq.n	4032cc <memcpy+0xc>
  4033b6:	f1c3 0304 	rsb	r3, r3, #4
  4033ba:	1ad2      	subs	r2, r2, r3
  4033bc:	07db      	lsls	r3, r3, #31
  4033be:	bf1c      	itt	ne
  4033c0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4033c4:	f800 3b01 	strbne.w	r3, [r0], #1
  4033c8:	d380      	bcc.n	4032cc <memcpy+0xc>
  4033ca:	f831 3b02 	ldrh.w	r3, [r1], #2
  4033ce:	f820 3b02 	strh.w	r3, [r0], #2
  4033d2:	e77b      	b.n	4032cc <memcpy+0xc>
  4033d4:	3a04      	subs	r2, #4
  4033d6:	d3d9      	bcc.n	40338c <memcpy+0xcc>
  4033d8:	3a01      	subs	r2, #1
  4033da:	f811 3b01 	ldrb.w	r3, [r1], #1
  4033de:	f800 3b01 	strb.w	r3, [r0], #1
  4033e2:	d2f9      	bcs.n	4033d8 <memcpy+0x118>
  4033e4:	780b      	ldrb	r3, [r1, #0]
  4033e6:	7003      	strb	r3, [r0, #0]
  4033e8:	784b      	ldrb	r3, [r1, #1]
  4033ea:	7043      	strb	r3, [r0, #1]
  4033ec:	788b      	ldrb	r3, [r1, #2]
  4033ee:	7083      	strb	r3, [r0, #2]
  4033f0:	4660      	mov	r0, ip
  4033f2:	4770      	bx	lr

004033f4 <memmove>:
  4033f4:	4288      	cmp	r0, r1
  4033f6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4033f8:	d90d      	bls.n	403416 <memmove+0x22>
  4033fa:	188b      	adds	r3, r1, r2
  4033fc:	4298      	cmp	r0, r3
  4033fe:	d20a      	bcs.n	403416 <memmove+0x22>
  403400:	1884      	adds	r4, r0, r2
  403402:	2a00      	cmp	r2, #0
  403404:	d051      	beq.n	4034aa <memmove+0xb6>
  403406:	4622      	mov	r2, r4
  403408:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40340c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  403410:	4299      	cmp	r1, r3
  403412:	d1f9      	bne.n	403408 <memmove+0x14>
  403414:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403416:	2a0f      	cmp	r2, #15
  403418:	d948      	bls.n	4034ac <memmove+0xb8>
  40341a:	ea41 0300 	orr.w	r3, r1, r0
  40341e:	079b      	lsls	r3, r3, #30
  403420:	d146      	bne.n	4034b0 <memmove+0xbc>
  403422:	f100 0410 	add.w	r4, r0, #16
  403426:	f101 0310 	add.w	r3, r1, #16
  40342a:	4615      	mov	r5, r2
  40342c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  403430:	f844 6c10 	str.w	r6, [r4, #-16]
  403434:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  403438:	f844 6c0c 	str.w	r6, [r4, #-12]
  40343c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  403440:	f844 6c08 	str.w	r6, [r4, #-8]
  403444:	3d10      	subs	r5, #16
  403446:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40344a:	f844 6c04 	str.w	r6, [r4, #-4]
  40344e:	2d0f      	cmp	r5, #15
  403450:	f103 0310 	add.w	r3, r3, #16
  403454:	f104 0410 	add.w	r4, r4, #16
  403458:	d8e8      	bhi.n	40342c <memmove+0x38>
  40345a:	f1a2 0310 	sub.w	r3, r2, #16
  40345e:	f023 030f 	bic.w	r3, r3, #15
  403462:	f002 0e0f 	and.w	lr, r2, #15
  403466:	3310      	adds	r3, #16
  403468:	f1be 0f03 	cmp.w	lr, #3
  40346c:	4419      	add	r1, r3
  40346e:	4403      	add	r3, r0
  403470:	d921      	bls.n	4034b6 <memmove+0xc2>
  403472:	1f1e      	subs	r6, r3, #4
  403474:	460d      	mov	r5, r1
  403476:	4674      	mov	r4, lr
  403478:	3c04      	subs	r4, #4
  40347a:	f855 7b04 	ldr.w	r7, [r5], #4
  40347e:	f846 7f04 	str.w	r7, [r6, #4]!
  403482:	2c03      	cmp	r4, #3
  403484:	d8f8      	bhi.n	403478 <memmove+0x84>
  403486:	f1ae 0404 	sub.w	r4, lr, #4
  40348a:	f024 0403 	bic.w	r4, r4, #3
  40348e:	3404      	adds	r4, #4
  403490:	4421      	add	r1, r4
  403492:	4423      	add	r3, r4
  403494:	f002 0203 	and.w	r2, r2, #3
  403498:	b162      	cbz	r2, 4034b4 <memmove+0xc0>
  40349a:	3b01      	subs	r3, #1
  40349c:	440a      	add	r2, r1
  40349e:	f811 4b01 	ldrb.w	r4, [r1], #1
  4034a2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4034a6:	428a      	cmp	r2, r1
  4034a8:	d1f9      	bne.n	40349e <memmove+0xaa>
  4034aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4034ac:	4603      	mov	r3, r0
  4034ae:	e7f3      	b.n	403498 <memmove+0xa4>
  4034b0:	4603      	mov	r3, r0
  4034b2:	e7f2      	b.n	40349a <memmove+0xa6>
  4034b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4034b6:	4672      	mov	r2, lr
  4034b8:	e7ee      	b.n	403498 <memmove+0xa4>
  4034ba:	bf00      	nop

004034bc <__malloc_lock>:
  4034bc:	4801      	ldr	r0, [pc, #4]	; (4034c4 <__malloc_lock+0x8>)
  4034be:	f7ff bb35 	b.w	402b2c <__retarget_lock_acquire_recursive>
  4034c2:	bf00      	nop
  4034c4:	20000ab0 	.word	0x20000ab0

004034c8 <__malloc_unlock>:
  4034c8:	4801      	ldr	r0, [pc, #4]	; (4034d0 <__malloc_unlock+0x8>)
  4034ca:	f7ff bb31 	b.w	402b30 <__retarget_lock_release_recursive>
  4034ce:	bf00      	nop
  4034d0:	20000ab0 	.word	0x20000ab0

004034d4 <_realloc_r>:
  4034d4:	2900      	cmp	r1, #0
  4034d6:	f000 8095 	beq.w	403604 <_realloc_r+0x130>
  4034da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4034de:	460d      	mov	r5, r1
  4034e0:	4616      	mov	r6, r2
  4034e2:	b083      	sub	sp, #12
  4034e4:	4680      	mov	r8, r0
  4034e6:	f106 070b 	add.w	r7, r6, #11
  4034ea:	f7ff ffe7 	bl	4034bc <__malloc_lock>
  4034ee:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4034f2:	2f16      	cmp	r7, #22
  4034f4:	f02e 0403 	bic.w	r4, lr, #3
  4034f8:	f1a5 0908 	sub.w	r9, r5, #8
  4034fc:	d83c      	bhi.n	403578 <_realloc_r+0xa4>
  4034fe:	2210      	movs	r2, #16
  403500:	4617      	mov	r7, r2
  403502:	42be      	cmp	r6, r7
  403504:	d83d      	bhi.n	403582 <_realloc_r+0xae>
  403506:	4294      	cmp	r4, r2
  403508:	da43      	bge.n	403592 <_realloc_r+0xbe>
  40350a:	4bc4      	ldr	r3, [pc, #784]	; (40381c <_realloc_r+0x348>)
  40350c:	6899      	ldr	r1, [r3, #8]
  40350e:	eb09 0004 	add.w	r0, r9, r4
  403512:	4288      	cmp	r0, r1
  403514:	f000 80b4 	beq.w	403680 <_realloc_r+0x1ac>
  403518:	6843      	ldr	r3, [r0, #4]
  40351a:	f023 0101 	bic.w	r1, r3, #1
  40351e:	4401      	add	r1, r0
  403520:	6849      	ldr	r1, [r1, #4]
  403522:	07c9      	lsls	r1, r1, #31
  403524:	d54c      	bpl.n	4035c0 <_realloc_r+0xec>
  403526:	f01e 0f01 	tst.w	lr, #1
  40352a:	f000 809b 	beq.w	403664 <_realloc_r+0x190>
  40352e:	4631      	mov	r1, r6
  403530:	4640      	mov	r0, r8
  403532:	f7ff fb7f 	bl	402c34 <_malloc_r>
  403536:	4606      	mov	r6, r0
  403538:	2800      	cmp	r0, #0
  40353a:	d03a      	beq.n	4035b2 <_realloc_r+0xde>
  40353c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403540:	f023 0301 	bic.w	r3, r3, #1
  403544:	444b      	add	r3, r9
  403546:	f1a0 0208 	sub.w	r2, r0, #8
  40354a:	429a      	cmp	r2, r3
  40354c:	f000 8121 	beq.w	403792 <_realloc_r+0x2be>
  403550:	1f22      	subs	r2, r4, #4
  403552:	2a24      	cmp	r2, #36	; 0x24
  403554:	f200 8107 	bhi.w	403766 <_realloc_r+0x292>
  403558:	2a13      	cmp	r2, #19
  40355a:	f200 80db 	bhi.w	403714 <_realloc_r+0x240>
  40355e:	4603      	mov	r3, r0
  403560:	462a      	mov	r2, r5
  403562:	6811      	ldr	r1, [r2, #0]
  403564:	6019      	str	r1, [r3, #0]
  403566:	6851      	ldr	r1, [r2, #4]
  403568:	6059      	str	r1, [r3, #4]
  40356a:	6892      	ldr	r2, [r2, #8]
  40356c:	609a      	str	r2, [r3, #8]
  40356e:	4629      	mov	r1, r5
  403570:	4640      	mov	r0, r8
  403572:	f7fe fffb 	bl	40256c <_free_r>
  403576:	e01c      	b.n	4035b2 <_realloc_r+0xde>
  403578:	f027 0707 	bic.w	r7, r7, #7
  40357c:	2f00      	cmp	r7, #0
  40357e:	463a      	mov	r2, r7
  403580:	dabf      	bge.n	403502 <_realloc_r+0x2e>
  403582:	2600      	movs	r6, #0
  403584:	230c      	movs	r3, #12
  403586:	4630      	mov	r0, r6
  403588:	f8c8 3000 	str.w	r3, [r8]
  40358c:	b003      	add	sp, #12
  40358e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403592:	462e      	mov	r6, r5
  403594:	1be3      	subs	r3, r4, r7
  403596:	2b0f      	cmp	r3, #15
  403598:	d81e      	bhi.n	4035d8 <_realloc_r+0x104>
  40359a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40359e:	f003 0301 	and.w	r3, r3, #1
  4035a2:	4323      	orrs	r3, r4
  4035a4:	444c      	add	r4, r9
  4035a6:	f8c9 3004 	str.w	r3, [r9, #4]
  4035aa:	6863      	ldr	r3, [r4, #4]
  4035ac:	f043 0301 	orr.w	r3, r3, #1
  4035b0:	6063      	str	r3, [r4, #4]
  4035b2:	4640      	mov	r0, r8
  4035b4:	f7ff ff88 	bl	4034c8 <__malloc_unlock>
  4035b8:	4630      	mov	r0, r6
  4035ba:	b003      	add	sp, #12
  4035bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035c0:	f023 0303 	bic.w	r3, r3, #3
  4035c4:	18e1      	adds	r1, r4, r3
  4035c6:	4291      	cmp	r1, r2
  4035c8:	db1f      	blt.n	40360a <_realloc_r+0x136>
  4035ca:	68c3      	ldr	r3, [r0, #12]
  4035cc:	6882      	ldr	r2, [r0, #8]
  4035ce:	462e      	mov	r6, r5
  4035d0:	60d3      	str	r3, [r2, #12]
  4035d2:	460c      	mov	r4, r1
  4035d4:	609a      	str	r2, [r3, #8]
  4035d6:	e7dd      	b.n	403594 <_realloc_r+0xc0>
  4035d8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4035dc:	eb09 0107 	add.w	r1, r9, r7
  4035e0:	f002 0201 	and.w	r2, r2, #1
  4035e4:	444c      	add	r4, r9
  4035e6:	f043 0301 	orr.w	r3, r3, #1
  4035ea:	4317      	orrs	r7, r2
  4035ec:	f8c9 7004 	str.w	r7, [r9, #4]
  4035f0:	604b      	str	r3, [r1, #4]
  4035f2:	6863      	ldr	r3, [r4, #4]
  4035f4:	f043 0301 	orr.w	r3, r3, #1
  4035f8:	3108      	adds	r1, #8
  4035fa:	6063      	str	r3, [r4, #4]
  4035fc:	4640      	mov	r0, r8
  4035fe:	f7fe ffb5 	bl	40256c <_free_r>
  403602:	e7d6      	b.n	4035b2 <_realloc_r+0xde>
  403604:	4611      	mov	r1, r2
  403606:	f7ff bb15 	b.w	402c34 <_malloc_r>
  40360a:	f01e 0f01 	tst.w	lr, #1
  40360e:	d18e      	bne.n	40352e <_realloc_r+0x5a>
  403610:	f855 1c08 	ldr.w	r1, [r5, #-8]
  403614:	eba9 0a01 	sub.w	sl, r9, r1
  403618:	f8da 1004 	ldr.w	r1, [sl, #4]
  40361c:	f021 0103 	bic.w	r1, r1, #3
  403620:	440b      	add	r3, r1
  403622:	4423      	add	r3, r4
  403624:	4293      	cmp	r3, r2
  403626:	db25      	blt.n	403674 <_realloc_r+0x1a0>
  403628:	68c2      	ldr	r2, [r0, #12]
  40362a:	6881      	ldr	r1, [r0, #8]
  40362c:	4656      	mov	r6, sl
  40362e:	60ca      	str	r2, [r1, #12]
  403630:	6091      	str	r1, [r2, #8]
  403632:	f8da 100c 	ldr.w	r1, [sl, #12]
  403636:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40363a:	1f22      	subs	r2, r4, #4
  40363c:	2a24      	cmp	r2, #36	; 0x24
  40363e:	60c1      	str	r1, [r0, #12]
  403640:	6088      	str	r0, [r1, #8]
  403642:	f200 8094 	bhi.w	40376e <_realloc_r+0x29a>
  403646:	2a13      	cmp	r2, #19
  403648:	d96f      	bls.n	40372a <_realloc_r+0x256>
  40364a:	6829      	ldr	r1, [r5, #0]
  40364c:	f8ca 1008 	str.w	r1, [sl, #8]
  403650:	6869      	ldr	r1, [r5, #4]
  403652:	f8ca 100c 	str.w	r1, [sl, #12]
  403656:	2a1b      	cmp	r2, #27
  403658:	f200 80a2 	bhi.w	4037a0 <_realloc_r+0x2cc>
  40365c:	3508      	adds	r5, #8
  40365e:	f10a 0210 	add.w	r2, sl, #16
  403662:	e063      	b.n	40372c <_realloc_r+0x258>
  403664:	f855 3c08 	ldr.w	r3, [r5, #-8]
  403668:	eba9 0a03 	sub.w	sl, r9, r3
  40366c:	f8da 1004 	ldr.w	r1, [sl, #4]
  403670:	f021 0103 	bic.w	r1, r1, #3
  403674:	1863      	adds	r3, r4, r1
  403676:	4293      	cmp	r3, r2
  403678:	f6ff af59 	blt.w	40352e <_realloc_r+0x5a>
  40367c:	4656      	mov	r6, sl
  40367e:	e7d8      	b.n	403632 <_realloc_r+0x15e>
  403680:	6841      	ldr	r1, [r0, #4]
  403682:	f021 0b03 	bic.w	fp, r1, #3
  403686:	44a3      	add	fp, r4
  403688:	f107 0010 	add.w	r0, r7, #16
  40368c:	4583      	cmp	fp, r0
  40368e:	da56      	bge.n	40373e <_realloc_r+0x26a>
  403690:	f01e 0f01 	tst.w	lr, #1
  403694:	f47f af4b 	bne.w	40352e <_realloc_r+0x5a>
  403698:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40369c:	eba9 0a01 	sub.w	sl, r9, r1
  4036a0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4036a4:	f021 0103 	bic.w	r1, r1, #3
  4036a8:	448b      	add	fp, r1
  4036aa:	4558      	cmp	r0, fp
  4036ac:	dce2      	bgt.n	403674 <_realloc_r+0x1a0>
  4036ae:	4656      	mov	r6, sl
  4036b0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4036b4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4036b8:	1f22      	subs	r2, r4, #4
  4036ba:	2a24      	cmp	r2, #36	; 0x24
  4036bc:	60c1      	str	r1, [r0, #12]
  4036be:	6088      	str	r0, [r1, #8]
  4036c0:	f200 808f 	bhi.w	4037e2 <_realloc_r+0x30e>
  4036c4:	2a13      	cmp	r2, #19
  4036c6:	f240 808a 	bls.w	4037de <_realloc_r+0x30a>
  4036ca:	6829      	ldr	r1, [r5, #0]
  4036cc:	f8ca 1008 	str.w	r1, [sl, #8]
  4036d0:	6869      	ldr	r1, [r5, #4]
  4036d2:	f8ca 100c 	str.w	r1, [sl, #12]
  4036d6:	2a1b      	cmp	r2, #27
  4036d8:	f200 808a 	bhi.w	4037f0 <_realloc_r+0x31c>
  4036dc:	3508      	adds	r5, #8
  4036de:	f10a 0210 	add.w	r2, sl, #16
  4036e2:	6829      	ldr	r1, [r5, #0]
  4036e4:	6011      	str	r1, [r2, #0]
  4036e6:	6869      	ldr	r1, [r5, #4]
  4036e8:	6051      	str	r1, [r2, #4]
  4036ea:	68a9      	ldr	r1, [r5, #8]
  4036ec:	6091      	str	r1, [r2, #8]
  4036ee:	eb0a 0107 	add.w	r1, sl, r7
  4036f2:	ebab 0207 	sub.w	r2, fp, r7
  4036f6:	f042 0201 	orr.w	r2, r2, #1
  4036fa:	6099      	str	r1, [r3, #8]
  4036fc:	604a      	str	r2, [r1, #4]
  4036fe:	f8da 3004 	ldr.w	r3, [sl, #4]
  403702:	f003 0301 	and.w	r3, r3, #1
  403706:	431f      	orrs	r7, r3
  403708:	4640      	mov	r0, r8
  40370a:	f8ca 7004 	str.w	r7, [sl, #4]
  40370e:	f7ff fedb 	bl	4034c8 <__malloc_unlock>
  403712:	e751      	b.n	4035b8 <_realloc_r+0xe4>
  403714:	682b      	ldr	r3, [r5, #0]
  403716:	6003      	str	r3, [r0, #0]
  403718:	686b      	ldr	r3, [r5, #4]
  40371a:	6043      	str	r3, [r0, #4]
  40371c:	2a1b      	cmp	r2, #27
  40371e:	d82d      	bhi.n	40377c <_realloc_r+0x2a8>
  403720:	f100 0308 	add.w	r3, r0, #8
  403724:	f105 0208 	add.w	r2, r5, #8
  403728:	e71b      	b.n	403562 <_realloc_r+0x8e>
  40372a:	4632      	mov	r2, r6
  40372c:	6829      	ldr	r1, [r5, #0]
  40372e:	6011      	str	r1, [r2, #0]
  403730:	6869      	ldr	r1, [r5, #4]
  403732:	6051      	str	r1, [r2, #4]
  403734:	68a9      	ldr	r1, [r5, #8]
  403736:	6091      	str	r1, [r2, #8]
  403738:	461c      	mov	r4, r3
  40373a:	46d1      	mov	r9, sl
  40373c:	e72a      	b.n	403594 <_realloc_r+0xc0>
  40373e:	eb09 0107 	add.w	r1, r9, r7
  403742:	ebab 0b07 	sub.w	fp, fp, r7
  403746:	f04b 0201 	orr.w	r2, fp, #1
  40374a:	6099      	str	r1, [r3, #8]
  40374c:	604a      	str	r2, [r1, #4]
  40374e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  403752:	f003 0301 	and.w	r3, r3, #1
  403756:	431f      	orrs	r7, r3
  403758:	4640      	mov	r0, r8
  40375a:	f845 7c04 	str.w	r7, [r5, #-4]
  40375e:	f7ff feb3 	bl	4034c8 <__malloc_unlock>
  403762:	462e      	mov	r6, r5
  403764:	e728      	b.n	4035b8 <_realloc_r+0xe4>
  403766:	4629      	mov	r1, r5
  403768:	f7ff fe44 	bl	4033f4 <memmove>
  40376c:	e6ff      	b.n	40356e <_realloc_r+0x9a>
  40376e:	4629      	mov	r1, r5
  403770:	4630      	mov	r0, r6
  403772:	461c      	mov	r4, r3
  403774:	46d1      	mov	r9, sl
  403776:	f7ff fe3d 	bl	4033f4 <memmove>
  40377a:	e70b      	b.n	403594 <_realloc_r+0xc0>
  40377c:	68ab      	ldr	r3, [r5, #8]
  40377e:	6083      	str	r3, [r0, #8]
  403780:	68eb      	ldr	r3, [r5, #12]
  403782:	60c3      	str	r3, [r0, #12]
  403784:	2a24      	cmp	r2, #36	; 0x24
  403786:	d017      	beq.n	4037b8 <_realloc_r+0x2e4>
  403788:	f100 0310 	add.w	r3, r0, #16
  40378c:	f105 0210 	add.w	r2, r5, #16
  403790:	e6e7      	b.n	403562 <_realloc_r+0x8e>
  403792:	f850 3c04 	ldr.w	r3, [r0, #-4]
  403796:	f023 0303 	bic.w	r3, r3, #3
  40379a:	441c      	add	r4, r3
  40379c:	462e      	mov	r6, r5
  40379e:	e6f9      	b.n	403594 <_realloc_r+0xc0>
  4037a0:	68a9      	ldr	r1, [r5, #8]
  4037a2:	f8ca 1010 	str.w	r1, [sl, #16]
  4037a6:	68e9      	ldr	r1, [r5, #12]
  4037a8:	f8ca 1014 	str.w	r1, [sl, #20]
  4037ac:	2a24      	cmp	r2, #36	; 0x24
  4037ae:	d00c      	beq.n	4037ca <_realloc_r+0x2f6>
  4037b0:	3510      	adds	r5, #16
  4037b2:	f10a 0218 	add.w	r2, sl, #24
  4037b6:	e7b9      	b.n	40372c <_realloc_r+0x258>
  4037b8:	692b      	ldr	r3, [r5, #16]
  4037ba:	6103      	str	r3, [r0, #16]
  4037bc:	696b      	ldr	r3, [r5, #20]
  4037be:	6143      	str	r3, [r0, #20]
  4037c0:	f105 0218 	add.w	r2, r5, #24
  4037c4:	f100 0318 	add.w	r3, r0, #24
  4037c8:	e6cb      	b.n	403562 <_realloc_r+0x8e>
  4037ca:	692a      	ldr	r2, [r5, #16]
  4037cc:	f8ca 2018 	str.w	r2, [sl, #24]
  4037d0:	696a      	ldr	r2, [r5, #20]
  4037d2:	f8ca 201c 	str.w	r2, [sl, #28]
  4037d6:	3518      	adds	r5, #24
  4037d8:	f10a 0220 	add.w	r2, sl, #32
  4037dc:	e7a6      	b.n	40372c <_realloc_r+0x258>
  4037de:	4632      	mov	r2, r6
  4037e0:	e77f      	b.n	4036e2 <_realloc_r+0x20e>
  4037e2:	4629      	mov	r1, r5
  4037e4:	4630      	mov	r0, r6
  4037e6:	9301      	str	r3, [sp, #4]
  4037e8:	f7ff fe04 	bl	4033f4 <memmove>
  4037ec:	9b01      	ldr	r3, [sp, #4]
  4037ee:	e77e      	b.n	4036ee <_realloc_r+0x21a>
  4037f0:	68a9      	ldr	r1, [r5, #8]
  4037f2:	f8ca 1010 	str.w	r1, [sl, #16]
  4037f6:	68e9      	ldr	r1, [r5, #12]
  4037f8:	f8ca 1014 	str.w	r1, [sl, #20]
  4037fc:	2a24      	cmp	r2, #36	; 0x24
  4037fe:	d003      	beq.n	403808 <_realloc_r+0x334>
  403800:	3510      	adds	r5, #16
  403802:	f10a 0218 	add.w	r2, sl, #24
  403806:	e76c      	b.n	4036e2 <_realloc_r+0x20e>
  403808:	692a      	ldr	r2, [r5, #16]
  40380a:	f8ca 2018 	str.w	r2, [sl, #24]
  40380e:	696a      	ldr	r2, [r5, #20]
  403810:	f8ca 201c 	str.w	r2, [sl, #28]
  403814:	3518      	adds	r5, #24
  403816:	f10a 0220 	add.w	r2, sl, #32
  40381a:	e762      	b.n	4036e2 <_realloc_r+0x20e>
  40381c:	200005b0 	.word	0x200005b0

00403820 <lflush>:
  403820:	8983      	ldrh	r3, [r0, #12]
  403822:	f003 0309 	and.w	r3, r3, #9
  403826:	2b09      	cmp	r3, #9
  403828:	d001      	beq.n	40382e <lflush+0xe>
  40382a:	2000      	movs	r0, #0
  40382c:	4770      	bx	lr
  40382e:	f7fe bcd9 	b.w	4021e4 <fflush>
  403832:	bf00      	nop

00403834 <__srefill_r>:
  403834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403836:	460c      	mov	r4, r1
  403838:	4605      	mov	r5, r0
  40383a:	b110      	cbz	r0, 403842 <__srefill_r+0xe>
  40383c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40383e:	2b00      	cmp	r3, #0
  403840:	d045      	beq.n	4038ce <__srefill_r+0x9a>
  403842:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403846:	b29a      	uxth	r2, r3
  403848:	0497      	lsls	r7, r2, #18
  40384a:	d407      	bmi.n	40385c <__srefill_r+0x28>
  40384c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40384e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  403852:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  403856:	6662      	str	r2, [r4, #100]	; 0x64
  403858:	81a3      	strh	r3, [r4, #12]
  40385a:	b29a      	uxth	r2, r3
  40385c:	2100      	movs	r1, #0
  40385e:	0696      	lsls	r6, r2, #26
  403860:	6061      	str	r1, [r4, #4]
  403862:	d431      	bmi.n	4038c8 <__srefill_r+0x94>
  403864:	0750      	lsls	r0, r2, #29
  403866:	d522      	bpl.n	4038ae <__srefill_r+0x7a>
  403868:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40386a:	b161      	cbz	r1, 403886 <__srefill_r+0x52>
  40386c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  403870:	4299      	cmp	r1, r3
  403872:	d002      	beq.n	40387a <__srefill_r+0x46>
  403874:	4628      	mov	r0, r5
  403876:	f7fe fe79 	bl	40256c <_free_r>
  40387a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  40387c:	6063      	str	r3, [r4, #4]
  40387e:	2000      	movs	r0, #0
  403880:	6320      	str	r0, [r4, #48]	; 0x30
  403882:	2b00      	cmp	r3, #0
  403884:	d13f      	bne.n	403906 <__srefill_r+0xd2>
  403886:	6923      	ldr	r3, [r4, #16]
  403888:	2b00      	cmp	r3, #0
  40388a:	d04c      	beq.n	403926 <__srefill_r+0xf2>
  40388c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  403890:	b2be      	uxth	r6, r7
  403892:	07b3      	lsls	r3, r6, #30
  403894:	d11e      	bne.n	4038d4 <__srefill_r+0xa0>
  403896:	6922      	ldr	r2, [r4, #16]
  403898:	6022      	str	r2, [r4, #0]
  40389a:	4628      	mov	r0, r5
  40389c:	6963      	ldr	r3, [r4, #20]
  40389e:	6a25      	ldr	r5, [r4, #32]
  4038a0:	69e1      	ldr	r1, [r4, #28]
  4038a2:	47a8      	blx	r5
  4038a4:	2800      	cmp	r0, #0
  4038a6:	6060      	str	r0, [r4, #4]
  4038a8:	dd09      	ble.n	4038be <__srefill_r+0x8a>
  4038aa:	2000      	movs	r0, #0
  4038ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4038ae:	06d1      	lsls	r1, r2, #27
  4038b0:	d53e      	bpl.n	403930 <__srefill_r+0xfc>
  4038b2:	0712      	lsls	r2, r2, #28
  4038b4:	d42a      	bmi.n	40390c <__srefill_r+0xd8>
  4038b6:	f043 0304 	orr.w	r3, r3, #4
  4038ba:	81a3      	strh	r3, [r4, #12]
  4038bc:	e7e3      	b.n	403886 <__srefill_r+0x52>
  4038be:	89a3      	ldrh	r3, [r4, #12]
  4038c0:	d119      	bne.n	4038f6 <__srefill_r+0xc2>
  4038c2:	f043 0320 	orr.w	r3, r3, #32
  4038c6:	81a3      	strh	r3, [r4, #12]
  4038c8:	f04f 30ff 	mov.w	r0, #4294967295
  4038cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4038ce:	f7fe fcc9 	bl	402264 <__sinit>
  4038d2:	e7b6      	b.n	403842 <__srefill_r+0xe>
  4038d4:	4b1a      	ldr	r3, [pc, #104]	; (403940 <__srefill_r+0x10c>)
  4038d6:	491b      	ldr	r1, [pc, #108]	; (403944 <__srefill_r+0x110>)
  4038d8:	6818      	ldr	r0, [r3, #0]
  4038da:	2301      	movs	r3, #1
  4038dc:	81a3      	strh	r3, [r4, #12]
  4038de:	f006 0609 	and.w	r6, r6, #9
  4038e2:	f7ff f8a1 	bl	402a28 <_fwalk>
  4038e6:	2e09      	cmp	r6, #9
  4038e8:	81a7      	strh	r7, [r4, #12]
  4038ea:	d1d4      	bne.n	403896 <__srefill_r+0x62>
  4038ec:	4621      	mov	r1, r4
  4038ee:	4628      	mov	r0, r5
  4038f0:	f7fe fbae 	bl	402050 <__sflush_r>
  4038f4:	e7cf      	b.n	403896 <__srefill_r+0x62>
  4038f6:	2200      	movs	r2, #0
  4038f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4038fc:	81a3      	strh	r3, [r4, #12]
  4038fe:	6062      	str	r2, [r4, #4]
  403900:	f04f 30ff 	mov.w	r0, #4294967295
  403904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403906:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  403908:	6023      	str	r3, [r4, #0]
  40390a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40390c:	4621      	mov	r1, r4
  40390e:	4628      	mov	r0, r5
  403910:	f7fe fc3e 	bl	402190 <_fflush_r>
  403914:	2800      	cmp	r0, #0
  403916:	d1d7      	bne.n	4038c8 <__srefill_r+0x94>
  403918:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40391c:	60a0      	str	r0, [r4, #8]
  40391e:	61a0      	str	r0, [r4, #24]
  403920:	f023 0308 	bic.w	r3, r3, #8
  403924:	e7c7      	b.n	4038b6 <__srefill_r+0x82>
  403926:	4621      	mov	r1, r4
  403928:	4628      	mov	r0, r5
  40392a:	f7ff f931 	bl	402b90 <__smakebuf_r>
  40392e:	e7ad      	b.n	40388c <__srefill_r+0x58>
  403930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403934:	2209      	movs	r2, #9
  403936:	602a      	str	r2, [r5, #0]
  403938:	f04f 30ff 	mov.w	r0, #4294967295
  40393c:	81a3      	strh	r3, [r4, #12]
  40393e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403940:	00404950 	.word	0x00404950
  403944:	00403821 	.word	0x00403821

00403948 <_sbrk_r>:
  403948:	b538      	push	{r3, r4, r5, lr}
  40394a:	4c07      	ldr	r4, [pc, #28]	; (403968 <_sbrk_r+0x20>)
  40394c:	2300      	movs	r3, #0
  40394e:	4605      	mov	r5, r0
  403950:	4608      	mov	r0, r1
  403952:	6023      	str	r3, [r4, #0]
  403954:	f7fd f94c 	bl	400bf0 <_sbrk>
  403958:	1c43      	adds	r3, r0, #1
  40395a:	d000      	beq.n	40395e <_sbrk_r+0x16>
  40395c:	bd38      	pop	{r3, r4, r5, pc}
  40395e:	6823      	ldr	r3, [r4, #0]
  403960:	2b00      	cmp	r3, #0
  403962:	d0fb      	beq.n	40395c <_sbrk_r+0x14>
  403964:	602b      	str	r3, [r5, #0]
  403966:	bd38      	pop	{r3, r4, r5, pc}
  403968:	20000ac4 	.word	0x20000ac4

0040396c <__sccl>:
  40396c:	b470      	push	{r4, r5, r6}
  40396e:	780c      	ldrb	r4, [r1, #0]
  403970:	2c5e      	cmp	r4, #94	; 0x5e
  403972:	d02f      	beq.n	4039d4 <__sccl+0x68>
  403974:	2200      	movs	r2, #0
  403976:	1c4d      	adds	r5, r1, #1
  403978:	4616      	mov	r6, r2
  40397a:	1e43      	subs	r3, r0, #1
  40397c:	f100 01ff 	add.w	r1, r0, #255	; 0xff
  403980:	f803 2f01 	strb.w	r2, [r3, #1]!
  403984:	428b      	cmp	r3, r1
  403986:	d1fb      	bne.n	403980 <__sccl+0x14>
  403988:	b174      	cbz	r4, 4039a8 <__sccl+0x3c>
  40398a:	f086 0201 	eor.w	r2, r6, #1
  40398e:	5502      	strb	r2, [r0, r4]
  403990:	1c6e      	adds	r6, r5, #1
  403992:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  403996:	2b2d      	cmp	r3, #45	; 0x2d
  403998:	4631      	mov	r1, r6
  40399a:	d00d      	beq.n	4039b8 <__sccl+0x4c>
  40399c:	2b5d      	cmp	r3, #93	; 0x5d
  40399e:	d004      	beq.n	4039aa <__sccl+0x3e>
  4039a0:	b133      	cbz	r3, 4039b0 <__sccl+0x44>
  4039a2:	461c      	mov	r4, r3
  4039a4:	4635      	mov	r5, r6
  4039a6:	e7f2      	b.n	40398e <__sccl+0x22>
  4039a8:	1e69      	subs	r1, r5, #1
  4039aa:	4608      	mov	r0, r1
  4039ac:	bc70      	pop	{r4, r5, r6}
  4039ae:	4770      	bx	lr
  4039b0:	4629      	mov	r1, r5
  4039b2:	4608      	mov	r0, r1
  4039b4:	bc70      	pop	{r4, r5, r6}
  4039b6:	4770      	bx	lr
  4039b8:	7869      	ldrb	r1, [r5, #1]
  4039ba:	295d      	cmp	r1, #93	; 0x5d
  4039bc:	d0f1      	beq.n	4039a2 <__sccl+0x36>
  4039be:	428c      	cmp	r4, r1
  4039c0:	dcef      	bgt.n	4039a2 <__sccl+0x36>
  4039c2:	3502      	adds	r5, #2
  4039c4:	1903      	adds	r3, r0, r4
  4039c6:	3401      	adds	r4, #1
  4039c8:	42a1      	cmp	r1, r4
  4039ca:	f803 2f01 	strb.w	r2, [r3, #1]!
  4039ce:	dcfa      	bgt.n	4039c6 <__sccl+0x5a>
  4039d0:	3602      	adds	r6, #2
  4039d2:	e7de      	b.n	403992 <__sccl+0x26>
  4039d4:	2201      	movs	r2, #1
  4039d6:	784c      	ldrb	r4, [r1, #1]
  4039d8:	4616      	mov	r6, r2
  4039da:	1c8d      	adds	r5, r1, #2
  4039dc:	e7cd      	b.n	40397a <__sccl+0xe>
  4039de:	bf00      	nop

004039e0 <__sread>:
  4039e0:	b510      	push	{r4, lr}
  4039e2:	460c      	mov	r4, r1
  4039e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4039e8:	f000 fddc 	bl	4045a4 <_read_r>
  4039ec:	2800      	cmp	r0, #0
  4039ee:	db03      	blt.n	4039f8 <__sread+0x18>
  4039f0:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4039f2:	4403      	add	r3, r0
  4039f4:	6523      	str	r3, [r4, #80]	; 0x50
  4039f6:	bd10      	pop	{r4, pc}
  4039f8:	89a3      	ldrh	r3, [r4, #12]
  4039fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4039fe:	81a3      	strh	r3, [r4, #12]
  403a00:	bd10      	pop	{r4, pc}
  403a02:	bf00      	nop

00403a04 <__swrite>:
  403a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403a08:	4616      	mov	r6, r2
  403a0a:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  403a0e:	461f      	mov	r7, r3
  403a10:	05d3      	lsls	r3, r2, #23
  403a12:	460c      	mov	r4, r1
  403a14:	4605      	mov	r5, r0
  403a16:	d507      	bpl.n	403a28 <__swrite+0x24>
  403a18:	2200      	movs	r2, #0
  403a1a:	2302      	movs	r3, #2
  403a1c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403a20:	f000 fdaa 	bl	404578 <_lseek_r>
  403a24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  403a28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403a2c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  403a30:	81a2      	strh	r2, [r4, #12]
  403a32:	463b      	mov	r3, r7
  403a34:	4632      	mov	r2, r6
  403a36:	4628      	mov	r0, r5
  403a38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403a3c:	f000 bc26 	b.w	40428c <_write_r>

00403a40 <__sseek>:
  403a40:	b510      	push	{r4, lr}
  403a42:	460c      	mov	r4, r1
  403a44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403a48:	f000 fd96 	bl	404578 <_lseek_r>
  403a4c:	89a3      	ldrh	r3, [r4, #12]
  403a4e:	1c42      	adds	r2, r0, #1
  403a50:	bf0e      	itee	eq
  403a52:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  403a56:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403a5a:	6520      	strne	r0, [r4, #80]	; 0x50
  403a5c:	81a3      	strh	r3, [r4, #12]
  403a5e:	bd10      	pop	{r4, pc}

00403a60 <__sclose>:
  403a60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403a64:	f000 bcee 	b.w	404444 <_close_r>

00403a68 <_strtol_l.isra.0>:
  403a68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a6c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  403a70:	460f      	mov	r7, r1
  403a72:	4680      	mov	r8, r0
  403a74:	4616      	mov	r6, r2
  403a76:	461d      	mov	r5, r3
  403a78:	468a      	mov	sl, r1
  403a7a:	e000      	b.n	403a7e <_strtol_l.isra.0+0x16>
  403a7c:	46a2      	mov	sl, r4
  403a7e:	4654      	mov	r4, sl
  403a80:	4648      	mov	r0, r9
  403a82:	f814 bb01 	ldrb.w	fp, [r4], #1
  403a86:	f7ff f83b 	bl	402b00 <__locale_ctype_ptr_l>
  403a8a:	4458      	add	r0, fp
  403a8c:	7842      	ldrb	r2, [r0, #1]
  403a8e:	f012 0208 	ands.w	r2, r2, #8
  403a92:	d1f3      	bne.n	403a7c <_strtol_l.isra.0+0x14>
  403a94:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
  403a98:	d04f      	beq.n	403b3a <_strtol_l.isra.0+0xd2>
  403a9a:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
  403a9e:	bf04      	itt	eq
  403aa0:	f894 b000 	ldrbeq.w	fp, [r4]
  403aa4:	f10a 0402 	addeq.w	r4, sl, #2
  403aa8:	b11d      	cbz	r5, 403ab2 <_strtol_l.isra.0+0x4a>
  403aaa:	2d10      	cmp	r5, #16
  403aac:	d056      	beq.n	403b5c <_strtol_l.isra.0+0xf4>
  403aae:	46ac      	mov	ip, r5
  403ab0:	e004      	b.n	403abc <_strtol_l.isra.0+0x54>
  403ab2:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  403ab6:	d060      	beq.n	403b7a <_strtol_l.isra.0+0x112>
  403ab8:	250a      	movs	r5, #10
  403aba:	46ac      	mov	ip, r5
  403abc:	2a00      	cmp	r2, #0
  403abe:	bf0c      	ite	eq
  403ac0:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
  403ac4:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
  403ac8:	2100      	movs	r1, #0
  403aca:	fbb9 fefc 	udiv	lr, r9, ip
  403ace:	4608      	mov	r0, r1
  403ad0:	fb0c 9a1e 	mls	sl, ip, lr, r9
  403ad4:	e005      	b.n	403ae2 <_strtol_l.isra.0+0x7a>
  403ad6:	d029      	beq.n	403b2c <_strtol_l.isra.0+0xc4>
  403ad8:	fb0c 3000 	mla	r0, ip, r0, r3
  403adc:	2101      	movs	r1, #1
  403ade:	f814 bb01 	ldrb.w	fp, [r4], #1
  403ae2:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
  403ae6:	2b09      	cmp	r3, #9
  403ae8:	d905      	bls.n	403af6 <_strtol_l.isra.0+0x8e>
  403aea:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
  403aee:	2b19      	cmp	r3, #25
  403af0:	d80b      	bhi.n	403b0a <_strtol_l.isra.0+0xa2>
  403af2:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
  403af6:	429d      	cmp	r5, r3
  403af8:	dd0f      	ble.n	403b1a <_strtol_l.isra.0+0xb2>
  403afa:	f1b1 3fff 	cmp.w	r1, #4294967295
  403afe:	d0ee      	beq.n	403ade <_strtol_l.isra.0+0x76>
  403b00:	4586      	cmp	lr, r0
  403b02:	d2e8      	bcs.n	403ad6 <_strtol_l.isra.0+0x6e>
  403b04:	f04f 31ff 	mov.w	r1, #4294967295
  403b08:	e7e9      	b.n	403ade <_strtol_l.isra.0+0x76>
  403b0a:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
  403b0e:	2b19      	cmp	r3, #25
  403b10:	d803      	bhi.n	403b1a <_strtol_l.isra.0+0xb2>
  403b12:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
  403b16:	429d      	cmp	r5, r3
  403b18:	dcef      	bgt.n	403afa <_strtol_l.isra.0+0x92>
  403b1a:	1c4b      	adds	r3, r1, #1
  403b1c:	d013      	beq.n	403b46 <_strtol_l.isra.0+0xde>
  403b1e:	b102      	cbz	r2, 403b22 <_strtol_l.isra.0+0xba>
  403b20:	4240      	negs	r0, r0
  403b22:	b146      	cbz	r6, 403b36 <_strtol_l.isra.0+0xce>
  403b24:	b9c1      	cbnz	r1, 403b58 <_strtol_l.isra.0+0xf0>
  403b26:	6037      	str	r7, [r6, #0]
  403b28:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b2c:	459a      	cmp	sl, r3
  403b2e:	dad3      	bge.n	403ad8 <_strtol_l.isra.0+0x70>
  403b30:	f04f 31ff 	mov.w	r1, #4294967295
  403b34:	e7d3      	b.n	403ade <_strtol_l.isra.0+0x76>
  403b36:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b3a:	f894 b000 	ldrb.w	fp, [r4]
  403b3e:	2201      	movs	r2, #1
  403b40:	f10a 0402 	add.w	r4, sl, #2
  403b44:	e7b0      	b.n	403aa8 <_strtol_l.isra.0+0x40>
  403b46:	2322      	movs	r3, #34	; 0x22
  403b48:	f8c8 3000 	str.w	r3, [r8]
  403b4c:	b1ee      	cbz	r6, 403b8a <_strtol_l.isra.0+0x122>
  403b4e:	1e67      	subs	r7, r4, #1
  403b50:	4648      	mov	r0, r9
  403b52:	6037      	str	r7, [r6, #0]
  403b54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b58:	4681      	mov	r9, r0
  403b5a:	e7f8      	b.n	403b4e <_strtol_l.isra.0+0xe6>
  403b5c:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  403b60:	d1a5      	bne.n	403aae <_strtol_l.isra.0+0x46>
  403b62:	7823      	ldrb	r3, [r4, #0]
  403b64:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403b68:	2b58      	cmp	r3, #88	; 0x58
  403b6a:	d1a0      	bne.n	403aae <_strtol_l.isra.0+0x46>
  403b6c:	f04f 0c10 	mov.w	ip, #16
  403b70:	f894 b001 	ldrb.w	fp, [r4, #1]
  403b74:	4665      	mov	r5, ip
  403b76:	3402      	adds	r4, #2
  403b78:	e7a0      	b.n	403abc <_strtol_l.isra.0+0x54>
  403b7a:	7823      	ldrb	r3, [r4, #0]
  403b7c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403b80:	2b58      	cmp	r3, #88	; 0x58
  403b82:	d0f3      	beq.n	403b6c <_strtol_l.isra.0+0x104>
  403b84:	2508      	movs	r5, #8
  403b86:	46ac      	mov	ip, r5
  403b88:	e798      	b.n	403abc <_strtol_l.isra.0+0x54>
  403b8a:	4648      	mov	r0, r9
  403b8c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00403b90 <_strtol_r>:
  403b90:	b530      	push	{r4, r5, lr}
  403b92:	4c06      	ldr	r4, [pc, #24]	; (403bac <_strtol_r+0x1c>)
  403b94:	4d06      	ldr	r5, [pc, #24]	; (403bb0 <_strtol_r+0x20>)
  403b96:	6824      	ldr	r4, [r4, #0]
  403b98:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403b9a:	b083      	sub	sp, #12
  403b9c:	2c00      	cmp	r4, #0
  403b9e:	bf08      	it	eq
  403ba0:	462c      	moveq	r4, r5
  403ba2:	9400      	str	r4, [sp, #0]
  403ba4:	f7ff ff60 	bl	403a68 <_strtol_l.isra.0>
  403ba8:	b003      	add	sp, #12
  403baa:	bd30      	pop	{r4, r5, pc}
  403bac:	20000014 	.word	0x20000014
  403bb0:	20000444 	.word	0x20000444

00403bb4 <_strtoll_l.isra.0>:
  403bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403bb8:	b085      	sub	sp, #20
  403bba:	461e      	mov	r6, r3
  403bbc:	9102      	str	r1, [sp, #8]
  403bbe:	9003      	str	r0, [sp, #12]
  403bc0:	9200      	str	r2, [sp, #0]
  403bc2:	4688      	mov	r8, r1
  403bc4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  403bc6:	e000      	b.n	403bca <_strtoll_l.isra.0+0x16>
  403bc8:	46a8      	mov	r8, r5
  403bca:	4645      	mov	r5, r8
  403bcc:	4638      	mov	r0, r7
  403bce:	f815 4b01 	ldrb.w	r4, [r5], #1
  403bd2:	f7fe ff95 	bl	402b00 <__locale_ctype_ptr_l>
  403bd6:	4420      	add	r0, r4
  403bd8:	7843      	ldrb	r3, [r0, #1]
  403bda:	f013 0308 	ands.w	r3, r3, #8
  403bde:	d1f3      	bne.n	403bc8 <_strtoll_l.isra.0+0x14>
  403be0:	2c2d      	cmp	r4, #45	; 0x2d
  403be2:	f000 8081 	beq.w	403ce8 <_strtoll_l.isra.0+0x134>
  403be6:	2c2b      	cmp	r4, #43	; 0x2b
  403be8:	bf03      	ittte	eq
  403bea:	782c      	ldrbeq	r4, [r5, #0]
  403bec:	9301      	streq	r3, [sp, #4]
  403bee:	f108 0502 	addeq.w	r5, r8, #2
  403bf2:	9301      	strne	r3, [sp, #4]
  403bf4:	b166      	cbz	r6, 403c10 <_strtoll_l.isra.0+0x5c>
  403bf6:	2e10      	cmp	r6, #16
  403bf8:	f000 8088 	beq.w	403d0c <_strtoll_l.isra.0+0x158>
  403bfc:	9b01      	ldr	r3, [sp, #4]
  403bfe:	46b0      	mov	r8, r6
  403c00:	ea4f 79e6 	mov.w	r9, r6, asr #31
  403c04:	b97b      	cbnz	r3, 403c26 <_strtoll_l.isra.0+0x72>
  403c06:	f04f 3aff 	mov.w	sl, #4294967295
  403c0a:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
  403c0e:	e00e      	b.n	403c2e <_strtoll_l.isra.0+0x7a>
  403c10:	2c30      	cmp	r4, #48	; 0x30
  403c12:	f000 808a 	beq.w	403d2a <_strtoll_l.isra.0+0x176>
  403c16:	f04f 080a 	mov.w	r8, #10
  403c1a:	f04f 0900 	mov.w	r9, #0
  403c1e:	260a      	movs	r6, #10
  403c20:	9b01      	ldr	r3, [sp, #4]
  403c22:	2b00      	cmp	r3, #0
  403c24:	d0ef      	beq.n	403c06 <_strtoll_l.isra.0+0x52>
  403c26:	f04f 0a00 	mov.w	sl, #0
  403c2a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
  403c2e:	4642      	mov	r2, r8
  403c30:	464b      	mov	r3, r9
  403c32:	4650      	mov	r0, sl
  403c34:	4639      	mov	r1, r7
  403c36:	f000 fccb 	bl	4045d0 <__aeabi_uldivmod>
  403c3a:	464b      	mov	r3, r9
  403c3c:	4693      	mov	fp, r2
  403c3e:	4650      	mov	r0, sl
  403c40:	4642      	mov	r2, r8
  403c42:	4639      	mov	r1, r7
  403c44:	f000 fcc4 	bl	4045d0 <__aeabi_uldivmod>
  403c48:	f04f 0e00 	mov.w	lr, #0
  403c4c:	2200      	movs	r2, #0
  403c4e:	2300      	movs	r3, #0
  403c50:	e00f      	b.n	403c72 <_strtoll_l.isra.0+0xbe>
  403c52:	d044      	beq.n	403cde <_strtoll_l.isra.0+0x12a>
  403c54:	fb02 f409 	mul.w	r4, r2, r9
  403c58:	fb08 4403 	mla	r4, r8, r3, r4
  403c5c:	fba2 2308 	umull	r2, r3, r2, r8
  403c60:	4423      	add	r3, r4
  403c62:	eb12 020c 	adds.w	r2, r2, ip
  403c66:	eb43 73ec 	adc.w	r3, r3, ip, asr #31
  403c6a:	f04f 0e01 	mov.w	lr, #1
  403c6e:	f815 4b01 	ldrb.w	r4, [r5], #1
  403c72:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
  403c76:	f1bc 0f09 	cmp.w	ip, #9
  403c7a:	d906      	bls.n	403c8a <_strtoll_l.isra.0+0xd6>
  403c7c:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
  403c80:	f1bc 0f19 	cmp.w	ip, #25
  403c84:	d80d      	bhi.n	403ca2 <_strtoll_l.isra.0+0xee>
  403c86:	f1a4 0c37 	sub.w	ip, r4, #55	; 0x37
  403c8a:	4566      	cmp	r6, ip
  403c8c:	dd12      	ble.n	403cb4 <_strtoll_l.isra.0+0x100>
  403c8e:	f1be 3fff 	cmp.w	lr, #4294967295
  403c92:	d0ec      	beq.n	403c6e <_strtoll_l.isra.0+0xba>
  403c94:	4299      	cmp	r1, r3
  403c96:	bf08      	it	eq
  403c98:	4290      	cmpeq	r0, r2
  403c9a:	d2da      	bcs.n	403c52 <_strtoll_l.isra.0+0x9e>
  403c9c:	f04f 3eff 	mov.w	lr, #4294967295
  403ca0:	e7e5      	b.n	403c6e <_strtoll_l.isra.0+0xba>
  403ca2:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
  403ca6:	f1bc 0f19 	cmp.w	ip, #25
  403caa:	d803      	bhi.n	403cb4 <_strtoll_l.isra.0+0x100>
  403cac:	f1a4 0c57 	sub.w	ip, r4, #87	; 0x57
  403cb0:	4566      	cmp	r6, ip
  403cb2:	dcec      	bgt.n	403c8e <_strtoll_l.isra.0+0xda>
  403cb4:	f1be 3fff 	cmp.w	lr, #4294967295
  403cb8:	d01c      	beq.n	403cf4 <_strtoll_l.isra.0+0x140>
  403cba:	9901      	ldr	r1, [sp, #4]
  403cbc:	b111      	cbz	r1, 403cc4 <_strtoll_l.isra.0+0x110>
  403cbe:	4252      	negs	r2, r2
  403cc0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  403cc4:	9900      	ldr	r1, [sp, #0]
  403cc6:	b129      	cbz	r1, 403cd4 <_strtoll_l.isra.0+0x120>
  403cc8:	f1be 0f00 	cmp.w	lr, #0
  403ccc:	d11b      	bne.n	403d06 <_strtoll_l.isra.0+0x152>
  403cce:	9d02      	ldr	r5, [sp, #8]
  403cd0:	9900      	ldr	r1, [sp, #0]
  403cd2:	600d      	str	r5, [r1, #0]
  403cd4:	4610      	mov	r0, r2
  403cd6:	4619      	mov	r1, r3
  403cd8:	b005      	add	sp, #20
  403cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cde:	45e3      	cmp	fp, ip
  403ce0:	dab8      	bge.n	403c54 <_strtoll_l.isra.0+0xa0>
  403ce2:	f04f 3eff 	mov.w	lr, #4294967295
  403ce6:	e7c2      	b.n	403c6e <_strtoll_l.isra.0+0xba>
  403ce8:	2301      	movs	r3, #1
  403cea:	782c      	ldrb	r4, [r5, #0]
  403cec:	9301      	str	r3, [sp, #4]
  403cee:	f108 0502 	add.w	r5, r8, #2
  403cf2:	e77f      	b.n	403bf4 <_strtoll_l.isra.0+0x40>
  403cf4:	9a03      	ldr	r2, [sp, #12]
  403cf6:	2322      	movs	r3, #34	; 0x22
  403cf8:	6013      	str	r3, [r2, #0]
  403cfa:	9b00      	ldr	r3, [sp, #0]
  403cfc:	b32b      	cbz	r3, 403d4a <_strtoll_l.isra.0+0x196>
  403cfe:	4652      	mov	r2, sl
  403d00:	463b      	mov	r3, r7
  403d02:	3d01      	subs	r5, #1
  403d04:	e7e4      	b.n	403cd0 <_strtoll_l.isra.0+0x11c>
  403d06:	4692      	mov	sl, r2
  403d08:	461f      	mov	r7, r3
  403d0a:	e7f8      	b.n	403cfe <_strtoll_l.isra.0+0x14a>
  403d0c:	2c30      	cmp	r4, #48	; 0x30
  403d0e:	d117      	bne.n	403d40 <_strtoll_l.isra.0+0x18c>
  403d10:	782b      	ldrb	r3, [r5, #0]
  403d12:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403d16:	2b58      	cmp	r3, #88	; 0x58
  403d18:	d112      	bne.n	403d40 <_strtoll_l.isra.0+0x18c>
  403d1a:	786c      	ldrb	r4, [r5, #1]
  403d1c:	f04f 0810 	mov.w	r8, #16
  403d20:	f04f 0900 	mov.w	r9, #0
  403d24:	3502      	adds	r5, #2
  403d26:	2610      	movs	r6, #16
  403d28:	e77a      	b.n	403c20 <_strtoll_l.isra.0+0x6c>
  403d2a:	782b      	ldrb	r3, [r5, #0]
  403d2c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403d30:	2b58      	cmp	r3, #88	; 0x58
  403d32:	d0f2      	beq.n	403d1a <_strtoll_l.isra.0+0x166>
  403d34:	f04f 0808 	mov.w	r8, #8
  403d38:	f04f 0900 	mov.w	r9, #0
  403d3c:	2608      	movs	r6, #8
  403d3e:	e76f      	b.n	403c20 <_strtoll_l.isra.0+0x6c>
  403d40:	f04f 0810 	mov.w	r8, #16
  403d44:	f04f 0900 	mov.w	r9, #0
  403d48:	e76a      	b.n	403c20 <_strtoll_l.isra.0+0x6c>
  403d4a:	4652      	mov	r2, sl
  403d4c:	463b      	mov	r3, r7
  403d4e:	e7c1      	b.n	403cd4 <_strtoll_l.isra.0+0x120>

00403d50 <_strtoll_r>:
  403d50:	b530      	push	{r4, r5, lr}
  403d52:	4c06      	ldr	r4, [pc, #24]	; (403d6c <_strtoll_r+0x1c>)
  403d54:	4d06      	ldr	r5, [pc, #24]	; (403d70 <_strtoll_r+0x20>)
  403d56:	6824      	ldr	r4, [r4, #0]
  403d58:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403d5a:	b083      	sub	sp, #12
  403d5c:	2c00      	cmp	r4, #0
  403d5e:	bf08      	it	eq
  403d60:	462c      	moveq	r4, r5
  403d62:	9400      	str	r4, [sp, #0]
  403d64:	f7ff ff26 	bl	403bb4 <_strtoll_l.isra.0>
  403d68:	b003      	add	sp, #12
  403d6a:	bd30      	pop	{r4, r5, pc}
  403d6c:	20000014 	.word	0x20000014
  403d70:	20000444 	.word	0x20000444

00403d74 <_strtoul_l.isra.0>:
  403d74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403d78:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  403d7c:	460e      	mov	r6, r1
  403d7e:	4607      	mov	r7, r0
  403d80:	4615      	mov	r5, r2
  403d82:	4698      	mov	r8, r3
  403d84:	468a      	mov	sl, r1
  403d86:	e000      	b.n	403d8a <_strtoul_l.isra.0+0x16>
  403d88:	46a2      	mov	sl, r4
  403d8a:	4654      	mov	r4, sl
  403d8c:	4648      	mov	r0, r9
  403d8e:	f814 bb01 	ldrb.w	fp, [r4], #1
  403d92:	f7fe feb5 	bl	402b00 <__locale_ctype_ptr_l>
  403d96:	4458      	add	r0, fp
  403d98:	7840      	ldrb	r0, [r0, #1]
  403d9a:	f010 0008 	ands.w	r0, r0, #8
  403d9e:	d1f3      	bne.n	403d88 <_strtoul_l.isra.0+0x14>
  403da0:	4659      	mov	r1, fp
  403da2:	292d      	cmp	r1, #45	; 0x2d
  403da4:	d059      	beq.n	403e5a <_strtoul_l.isra.0+0xe6>
  403da6:	292b      	cmp	r1, #43	; 0x2b
  403da8:	bf04      	itt	eq
  403daa:	7821      	ldrbeq	r1, [r4, #0]
  403dac:	f10a 0402 	addeq.w	r4, sl, #2
  403db0:	f1b8 0f00 	cmp.w	r8, #0
  403db4:	d00c      	beq.n	403dd0 <_strtoul_l.isra.0+0x5c>
  403db6:	f1b8 0f10 	cmp.w	r8, #16
  403dba:	d053      	beq.n	403e64 <_strtoul_l.isra.0+0xf0>
  403dbc:	f04f 3cff 	mov.w	ip, #4294967295
  403dc0:	fbbc fcf8 	udiv	ip, ip, r8
  403dc4:	fb08 fa0c 	mul.w	sl, r8, ip
  403dc8:	ea6f 0a0a 	mvn.w	sl, sl
  403dcc:	46c1      	mov	r9, r8
  403dce:	e008      	b.n	403de2 <_strtoul_l.isra.0+0x6e>
  403dd0:	2930      	cmp	r1, #48	; 0x30
  403dd2:	d058      	beq.n	403e86 <_strtoul_l.isra.0+0x112>
  403dd4:	f04f 080a 	mov.w	r8, #10
  403dd8:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 403eb8 <_strtoul_l.isra.0+0x144>
  403ddc:	46c1      	mov	r9, r8
  403dde:	f04f 0a05 	mov.w	sl, #5
  403de2:	2300      	movs	r3, #0
  403de4:	469e      	mov	lr, r3
  403de6:	e005      	b.n	403df4 <_strtoul_l.isra.0+0x80>
  403de8:	d02a      	beq.n	403e40 <_strtoul_l.isra.0+0xcc>
  403dea:	fb09 2e0e 	mla	lr, r9, lr, r2
  403dee:	2301      	movs	r3, #1
  403df0:	f814 1b01 	ldrb.w	r1, [r4], #1
  403df4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
  403df8:	2a09      	cmp	r2, #9
  403dfa:	d905      	bls.n	403e08 <_strtoul_l.isra.0+0x94>
  403dfc:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
  403e00:	2a19      	cmp	r2, #25
  403e02:	d80a      	bhi.n	403e1a <_strtoul_l.isra.0+0xa6>
  403e04:	f1a1 0237 	sub.w	r2, r1, #55	; 0x37
  403e08:	4590      	cmp	r8, r2
  403e0a:	dd0e      	ble.n	403e2a <_strtoul_l.isra.0+0xb6>
  403e0c:	2b00      	cmp	r3, #0
  403e0e:	db01      	blt.n	403e14 <_strtoul_l.isra.0+0xa0>
  403e10:	45e6      	cmp	lr, ip
  403e12:	d9e9      	bls.n	403de8 <_strtoul_l.isra.0+0x74>
  403e14:	f04f 33ff 	mov.w	r3, #4294967295
  403e18:	e7ea      	b.n	403df0 <_strtoul_l.isra.0+0x7c>
  403e1a:	f1a1 0261 	sub.w	r2, r1, #97	; 0x61
  403e1e:	2a19      	cmp	r2, #25
  403e20:	d803      	bhi.n	403e2a <_strtoul_l.isra.0+0xb6>
  403e22:	f1a1 0257 	sub.w	r2, r1, #87	; 0x57
  403e26:	4590      	cmp	r8, r2
  403e28:	dcf0      	bgt.n	403e0c <_strtoul_l.isra.0+0x98>
  403e2a:	2b00      	cmp	r3, #0
  403e2c:	db0d      	blt.n	403e4a <_strtoul_l.isra.0+0xd6>
  403e2e:	b108      	cbz	r0, 403e34 <_strtoul_l.isra.0+0xc0>
  403e30:	f1ce 0e00 	rsb	lr, lr, #0
  403e34:	b10d      	cbz	r5, 403e3a <_strtoul_l.isra.0+0xc6>
  403e36:	b973      	cbnz	r3, 403e56 <_strtoul_l.isra.0+0xe2>
  403e38:	602e      	str	r6, [r5, #0]
  403e3a:	4670      	mov	r0, lr
  403e3c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403e40:	4552      	cmp	r2, sl
  403e42:	ddd2      	ble.n	403dea <_strtoul_l.isra.0+0x76>
  403e44:	f04f 33ff 	mov.w	r3, #4294967295
  403e48:	e7d2      	b.n	403df0 <_strtoul_l.isra.0+0x7c>
  403e4a:	2322      	movs	r3, #34	; 0x22
  403e4c:	603b      	str	r3, [r7, #0]
  403e4e:	f04f 3eff 	mov.w	lr, #4294967295
  403e52:	2d00      	cmp	r5, #0
  403e54:	d0f1      	beq.n	403e3a <_strtoul_l.isra.0+0xc6>
  403e56:	1e66      	subs	r6, r4, #1
  403e58:	e7ee      	b.n	403e38 <_strtoul_l.isra.0+0xc4>
  403e5a:	7821      	ldrb	r1, [r4, #0]
  403e5c:	2001      	movs	r0, #1
  403e5e:	f10a 0402 	add.w	r4, sl, #2
  403e62:	e7a5      	b.n	403db0 <_strtoul_l.isra.0+0x3c>
  403e64:	2930      	cmp	r1, #48	; 0x30
  403e66:	d11b      	bne.n	403ea0 <_strtoul_l.isra.0+0x12c>
  403e68:	7823      	ldrb	r3, [r4, #0]
  403e6a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403e6e:	2b58      	cmp	r3, #88	; 0x58
  403e70:	d11c      	bne.n	403eac <_strtoul_l.isra.0+0x138>
  403e72:	f04f 0910 	mov.w	r9, #16
  403e76:	7861      	ldrb	r1, [r4, #1]
  403e78:	46c8      	mov	r8, r9
  403e7a:	f04f 0a0f 	mov.w	sl, #15
  403e7e:	3402      	adds	r4, #2
  403e80:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  403e84:	e7ad      	b.n	403de2 <_strtoul_l.isra.0+0x6e>
  403e86:	7823      	ldrb	r3, [r4, #0]
  403e88:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  403e8c:	2b58      	cmp	r3, #88	; 0x58
  403e8e:	d0f0      	beq.n	403e72 <_strtoul_l.isra.0+0xfe>
  403e90:	f04f 0808 	mov.w	r8, #8
  403e94:	46c1      	mov	r9, r8
  403e96:	f04f 0a07 	mov.w	sl, #7
  403e9a:	f06f 4c60 	mvn.w	ip, #3758096384	; 0xe0000000
  403e9e:	e7a0      	b.n	403de2 <_strtoul_l.isra.0+0x6e>
  403ea0:	f04f 0a0f 	mov.w	sl, #15
  403ea4:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  403ea8:	46c1      	mov	r9, r8
  403eaa:	e79a      	b.n	403de2 <_strtoul_l.isra.0+0x6e>
  403eac:	46c1      	mov	r9, r8
  403eae:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  403eb2:	f04f 0a0f 	mov.w	sl, #15
  403eb6:	e794      	b.n	403de2 <_strtoul_l.isra.0+0x6e>
  403eb8:	19999999 	.word	0x19999999

00403ebc <_strtoul_r>:
  403ebc:	b530      	push	{r4, r5, lr}
  403ebe:	4c06      	ldr	r4, [pc, #24]	; (403ed8 <_strtoul_r+0x1c>)
  403ec0:	4d06      	ldr	r5, [pc, #24]	; (403edc <_strtoul_r+0x20>)
  403ec2:	6824      	ldr	r4, [r4, #0]
  403ec4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403ec6:	b083      	sub	sp, #12
  403ec8:	2c00      	cmp	r4, #0
  403eca:	bf08      	it	eq
  403ecc:	462c      	moveq	r4, r5
  403ece:	9400      	str	r4, [sp, #0]
  403ed0:	f7ff ff50 	bl	403d74 <_strtoul_l.isra.0>
  403ed4:	b003      	add	sp, #12
  403ed6:	bd30      	pop	{r4, r5, pc}
  403ed8:	20000014 	.word	0x20000014
  403edc:	20000444 	.word	0x20000444

00403ee0 <_strtoull_l.isra.0>:
  403ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403ee4:	b085      	sub	sp, #20
  403ee6:	4693      	mov	fp, r2
  403ee8:	9102      	str	r1, [sp, #8]
  403eea:	9003      	str	r0, [sp, #12]
  403eec:	469a      	mov	sl, r3
  403eee:	460f      	mov	r7, r1
  403ef0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  403ef2:	e000      	b.n	403ef6 <_strtoull_l.isra.0+0x16>
  403ef4:	462f      	mov	r7, r5
  403ef6:	463d      	mov	r5, r7
  403ef8:	4630      	mov	r0, r6
  403efa:	f815 4b01 	ldrb.w	r4, [r5], #1
  403efe:	f7fe fdff 	bl	402b00 <__locale_ctype_ptr_l>
  403f02:	4420      	add	r0, r4
  403f04:	7843      	ldrb	r3, [r0, #1]
  403f06:	f013 0308 	ands.w	r3, r3, #8
  403f0a:	d1f3      	bne.n	403ef4 <_strtoull_l.isra.0+0x14>
  403f0c:	2c2d      	cmp	r4, #45	; 0x2d
  403f0e:	f000 8089 	beq.w	404024 <_strtoull_l.isra.0+0x144>
  403f12:	2c2b      	cmp	r4, #43	; 0x2b
  403f14:	bf03      	ittte	eq
  403f16:	782c      	ldrbeq	r4, [r5, #0]
  403f18:	9301      	streq	r3, [sp, #4]
  403f1a:	1cbd      	addeq	r5, r7, #2
  403f1c:	9301      	strne	r3, [sp, #4]
  403f1e:	f1ba 0f00 	cmp.w	sl, #0
  403f22:	d019      	beq.n	403f58 <_strtoull_l.isra.0+0x78>
  403f24:	f1ba 0f10 	cmp.w	sl, #16
  403f28:	f000 8081 	beq.w	40402e <_strtoull_l.isra.0+0x14e>
  403f2c:	46d0      	mov	r8, sl
  403f2e:	ea4f 79ea 	mov.w	r9, sl, asr #31
  403f32:	4642      	mov	r2, r8
  403f34:	464b      	mov	r3, r9
  403f36:	f04f 30ff 	mov.w	r0, #4294967295
  403f3a:	f04f 31ff 	mov.w	r1, #4294967295
  403f3e:	f000 fb47 	bl	4045d0 <__aeabi_uldivmod>
  403f42:	4642      	mov	r2, r8
  403f44:	4606      	mov	r6, r0
  403f46:	460f      	mov	r7, r1
  403f48:	464b      	mov	r3, r9
  403f4a:	f04f 30ff 	mov.w	r0, #4294967295
  403f4e:	f04f 31ff 	mov.w	r1, #4294967295
  403f52:	f000 fb3d 	bl	4045d0 <__aeabi_uldivmod>
  403f56:	e00b      	b.n	403f70 <_strtoull_l.isra.0+0x90>
  403f58:	2c30      	cmp	r4, #48	; 0x30
  403f5a:	d07d      	beq.n	404058 <_strtoull_l.isra.0+0x178>
  403f5c:	4f4e      	ldr	r7, [pc, #312]	; (404098 <_strtoull_l.isra.0+0x1b8>)
  403f5e:	2205      	movs	r2, #5
  403f60:	f04f 3699 	mov.w	r6, #2576980377	; 0x99999999
  403f64:	f04f 080a 	mov.w	r8, #10
  403f68:	f04f 0900 	mov.w	r9, #0
  403f6c:	f04f 0a0a 	mov.w	sl, #10
  403f70:	f04f 0e00 	mov.w	lr, #0
  403f74:	2000      	movs	r0, #0
  403f76:	2100      	movs	r1, #0
  403f78:	e011      	b.n	403f9e <_strtoull_l.isra.0+0xbe>
  403f7a:	42b9      	cmp	r1, r7
  403f7c:	bf08      	it	eq
  403f7e:	42b0      	cmpeq	r0, r6
  403f80:	d03f      	beq.n	404002 <_strtoull_l.isra.0+0x122>
  403f82:	fb00 f409 	mul.w	r4, r0, r9
  403f86:	fb08 4401 	mla	r4, r8, r1, r4
  403f8a:	fba0 0108 	umull	r0, r1, r0, r8
  403f8e:	4421      	add	r1, r4
  403f90:	18c0      	adds	r0, r0, r3
  403f92:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
  403f96:	f04f 0e01 	mov.w	lr, #1
  403f9a:	f815 4b01 	ldrb.w	r4, [r5], #1
  403f9e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
  403fa2:	2b09      	cmp	r3, #9
  403fa4:	d905      	bls.n	403fb2 <_strtoull_l.isra.0+0xd2>
  403fa6:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
  403faa:	2b19      	cmp	r3, #25
  403fac:	d80d      	bhi.n	403fca <_strtoull_l.isra.0+0xea>
  403fae:	f1a4 0337 	sub.w	r3, r4, #55	; 0x37
  403fb2:	459a      	cmp	sl, r3
  403fb4:	dd11      	ble.n	403fda <_strtoull_l.isra.0+0xfa>
  403fb6:	f1be 0f00 	cmp.w	lr, #0
  403fba:	db03      	blt.n	403fc4 <_strtoull_l.isra.0+0xe4>
  403fbc:	428f      	cmp	r7, r1
  403fbe:	bf08      	it	eq
  403fc0:	4286      	cmpeq	r6, r0
  403fc2:	d2da      	bcs.n	403f7a <_strtoull_l.isra.0+0x9a>
  403fc4:	f04f 3eff 	mov.w	lr, #4294967295
  403fc8:	e7e7      	b.n	403f9a <_strtoull_l.isra.0+0xba>
  403fca:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
  403fce:	2b19      	cmp	r3, #25
  403fd0:	d803      	bhi.n	403fda <_strtoull_l.isra.0+0xfa>
  403fd2:	f1a4 0357 	sub.w	r3, r4, #87	; 0x57
  403fd6:	459a      	cmp	sl, r3
  403fd8:	dced      	bgt.n	403fb6 <_strtoull_l.isra.0+0xd6>
  403fda:	f1be 0f00 	cmp.w	lr, #0
  403fde:	db15      	blt.n	40400c <_strtoull_l.isra.0+0x12c>
  403fe0:	9b01      	ldr	r3, [sp, #4]
  403fe2:	b113      	cbz	r3, 403fea <_strtoull_l.isra.0+0x10a>
  403fe4:	4240      	negs	r0, r0
  403fe6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403fea:	f1bb 0f00 	cmp.w	fp, #0
  403fee:	d005      	beq.n	403ffc <_strtoull_l.isra.0+0x11c>
  403ff0:	f1be 0f00 	cmp.w	lr, #0
  403ff4:	d114      	bne.n	404020 <_strtoull_l.isra.0+0x140>
  403ff6:	9d02      	ldr	r5, [sp, #8]
  403ff8:	f8cb 5000 	str.w	r5, [fp]
  403ffc:	b005      	add	sp, #20
  403ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404002:	4293      	cmp	r3, r2
  404004:	ddbd      	ble.n	403f82 <_strtoull_l.isra.0+0xa2>
  404006:	f04f 3eff 	mov.w	lr, #4294967295
  40400a:	e7c6      	b.n	403f9a <_strtoull_l.isra.0+0xba>
  40400c:	9a03      	ldr	r2, [sp, #12]
  40400e:	2322      	movs	r3, #34	; 0x22
  404010:	6013      	str	r3, [r2, #0]
  404012:	f04f 30ff 	mov.w	r0, #4294967295
  404016:	f04f 31ff 	mov.w	r1, #4294967295
  40401a:	f1bb 0f00 	cmp.w	fp, #0
  40401e:	d0ed      	beq.n	403ffc <_strtoull_l.isra.0+0x11c>
  404020:	3d01      	subs	r5, #1
  404022:	e7e9      	b.n	403ff8 <_strtoull_l.isra.0+0x118>
  404024:	2301      	movs	r3, #1
  404026:	782c      	ldrb	r4, [r5, #0]
  404028:	9301      	str	r3, [sp, #4]
  40402a:	1cbd      	adds	r5, r7, #2
  40402c:	e777      	b.n	403f1e <_strtoull_l.isra.0+0x3e>
  40402e:	2c30      	cmp	r4, #48	; 0x30
  404030:	d123      	bne.n	40407a <_strtoull_l.isra.0+0x19a>
  404032:	782b      	ldrb	r3, [r5, #0]
  404034:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404038:	2b58      	cmp	r3, #88	; 0x58
  40403a:	d128      	bne.n	40408e <_strtoull_l.isra.0+0x1ae>
  40403c:	786c      	ldrb	r4, [r5, #1]
  40403e:	220f      	movs	r2, #15
  404040:	3502      	adds	r5, #2
  404042:	f04f 36ff 	mov.w	r6, #4294967295
  404046:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  40404a:	f04f 0810 	mov.w	r8, #16
  40404e:	f04f 0900 	mov.w	r9, #0
  404052:	f04f 0a10 	mov.w	sl, #16
  404056:	e78b      	b.n	403f70 <_strtoull_l.isra.0+0x90>
  404058:	782b      	ldrb	r3, [r5, #0]
  40405a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  40405e:	2b58      	cmp	r3, #88	; 0x58
  404060:	d0ec      	beq.n	40403c <_strtoull_l.isra.0+0x15c>
  404062:	2207      	movs	r2, #7
  404064:	f04f 36ff 	mov.w	r6, #4294967295
  404068:	f06f 4760 	mvn.w	r7, #3758096384	; 0xe0000000
  40406c:	f04f 0808 	mov.w	r8, #8
  404070:	f04f 0900 	mov.w	r9, #0
  404074:	f04f 0a08 	mov.w	sl, #8
  404078:	e77a      	b.n	403f70 <_strtoull_l.isra.0+0x90>
  40407a:	220f      	movs	r2, #15
  40407c:	f04f 36ff 	mov.w	r6, #4294967295
  404080:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  404084:	f04f 0810 	mov.w	r8, #16
  404088:	f04f 0900 	mov.w	r9, #0
  40408c:	e770      	b.n	403f70 <_strtoull_l.isra.0+0x90>
  40408e:	f04f 0810 	mov.w	r8, #16
  404092:	f04f 0900 	mov.w	r9, #0
  404096:	e74c      	b.n	403f32 <_strtoull_l.isra.0+0x52>
  404098:	19999999 	.word	0x19999999

0040409c <_strtoull_r>:
  40409c:	b530      	push	{r4, r5, lr}
  40409e:	4c06      	ldr	r4, [pc, #24]	; (4040b8 <_strtoull_r+0x1c>)
  4040a0:	4d06      	ldr	r5, [pc, #24]	; (4040bc <_strtoull_r+0x20>)
  4040a2:	6824      	ldr	r4, [r4, #0]
  4040a4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  4040a6:	b083      	sub	sp, #12
  4040a8:	2c00      	cmp	r4, #0
  4040aa:	bf08      	it	eq
  4040ac:	462c      	moveq	r4, r5
  4040ae:	9400      	str	r4, [sp, #0]
  4040b0:	f7ff ff16 	bl	403ee0 <_strtoull_l.isra.0>
  4040b4:	b003      	add	sp, #12
  4040b6:	bd30      	pop	{r4, r5, pc}
  4040b8:	20000014 	.word	0x20000014
  4040bc:	20000444 	.word	0x20000444

004040c0 <__submore>:
  4040c0:	f101 0340 	add.w	r3, r1, #64	; 0x40
  4040c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4040c8:	460c      	mov	r4, r1
  4040ca:	6b09      	ldr	r1, [r1, #48]	; 0x30
  4040cc:	4299      	cmp	r1, r3
  4040ce:	d014      	beq.n	4040fa <__submore+0x3a>
  4040d0:	6b66      	ldr	r6, [r4, #52]	; 0x34
  4040d2:	0077      	lsls	r7, r6, #1
  4040d4:	463a      	mov	r2, r7
  4040d6:	f7ff f9fd 	bl	4034d4 <_realloc_r>
  4040da:	4605      	mov	r5, r0
  4040dc:	b340      	cbz	r0, 404130 <__submore+0x70>
  4040de:	eb00 0806 	add.w	r8, r0, r6
  4040e2:	4632      	mov	r2, r6
  4040e4:	4640      	mov	r0, r8
  4040e6:	4629      	mov	r1, r5
  4040e8:	f7ff f8ea 	bl	4032c0 <memcpy>
  4040ec:	f8c4 8000 	str.w	r8, [r4]
  4040f0:	6325      	str	r5, [r4, #48]	; 0x30
  4040f2:	6367      	str	r7, [r4, #52]	; 0x34
  4040f4:	2000      	movs	r0, #0
  4040f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4040fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4040fe:	f7fe fd99 	bl	402c34 <_malloc_r>
  404102:	b1a8      	cbz	r0, 404130 <__submore+0x70>
  404104:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404108:	6320      	str	r0, [r4, #48]	; 0x30
  40410a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40410e:	6362      	str	r2, [r4, #52]	; 0x34
  404110:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404114:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404118:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  40411c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404120:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404124:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404128:	6020      	str	r0, [r4, #0]
  40412a:	2000      	movs	r0, #0
  40412c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404130:	f04f 30ff 	mov.w	r0, #4294967295
  404134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404138 <_ungetc_r>:
  404138:	b570      	push	{r4, r5, r6, lr}
  40413a:	1c4c      	adds	r4, r1, #1
  40413c:	d024      	beq.n	404188 <_ungetc_r+0x50>
  40413e:	4606      	mov	r6, r0
  404140:	4614      	mov	r4, r2
  404142:	460d      	mov	r5, r1
  404144:	b110      	cbz	r0, 40414c <_ungetc_r+0x14>
  404146:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404148:	2b00      	cmp	r3, #0
  40414a:	d04d      	beq.n	4041e8 <_ungetc_r+0xb0>
  40414c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40414e:	f013 0f01 	tst.w	r3, #1
  404152:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404156:	b29a      	uxth	r2, r3
  404158:	d101      	bne.n	40415e <_ungetc_r+0x26>
  40415a:	0591      	lsls	r1, r2, #22
  40415c:	d559      	bpl.n	404212 <_ungetc_r+0xda>
  40415e:	0492      	lsls	r2, r2, #18
  404160:	d405      	bmi.n	40416e <_ungetc_r+0x36>
  404162:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404164:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404168:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40416c:	6662      	str	r2, [r4, #100]	; 0x64
  40416e:	f023 0320 	bic.w	r3, r3, #32
  404172:	b29a      	uxth	r2, r3
  404174:	0750      	lsls	r0, r2, #29
  404176:	81a3      	strh	r3, [r4, #12]
  404178:	d41b      	bmi.n	4041b2 <_ungetc_r+0x7a>
  40417a:	06d1      	lsls	r1, r2, #27
  40417c:	d408      	bmi.n	404190 <_ungetc_r+0x58>
  40417e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404180:	07d8      	lsls	r0, r3, #31
  404182:	d401      	bmi.n	404188 <_ungetc_r+0x50>
  404184:	0591      	lsls	r1, r2, #22
  404186:	d53e      	bpl.n	404206 <_ungetc_r+0xce>
  404188:	f04f 35ff 	mov.w	r5, #4294967295
  40418c:	4628      	mov	r0, r5
  40418e:	bd70      	pop	{r4, r5, r6, pc}
  404190:	0712      	lsls	r2, r2, #28
  404192:	d50b      	bpl.n	4041ac <_ungetc_r+0x74>
  404194:	4621      	mov	r1, r4
  404196:	4630      	mov	r0, r6
  404198:	f7fd fffa 	bl	402190 <_fflush_r>
  40419c:	2800      	cmp	r0, #0
  40419e:	d12c      	bne.n	4041fa <_ungetc_r+0xc2>
  4041a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4041a4:	60a0      	str	r0, [r4, #8]
  4041a6:	61a0      	str	r0, [r4, #24]
  4041a8:	f023 0308 	bic.w	r3, r3, #8
  4041ac:	f043 0304 	orr.w	r3, r3, #4
  4041b0:	81a3      	strh	r3, [r4, #12]
  4041b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4041b4:	b2ed      	uxtb	r5, r5
  4041b6:	2b00      	cmp	r3, #0
  4041b8:	d034      	beq.n	404224 <_ungetc_r+0xec>
  4041ba:	6862      	ldr	r2, [r4, #4]
  4041bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
  4041be:	429a      	cmp	r2, r3
  4041c0:	da15      	bge.n	4041ee <_ungetc_r+0xb6>
  4041c2:	6823      	ldr	r3, [r4, #0]
  4041c4:	1e5a      	subs	r2, r3, #1
  4041c6:	6022      	str	r2, [r4, #0]
  4041c8:	f803 5c01 	strb.w	r5, [r3, #-1]
  4041cc:	6863      	ldr	r3, [r4, #4]
  4041ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4041d0:	3301      	adds	r3, #1
  4041d2:	07d0      	lsls	r0, r2, #31
  4041d4:	6063      	str	r3, [r4, #4]
  4041d6:	d4d9      	bmi.n	40418c <_ungetc_r+0x54>
  4041d8:	89a3      	ldrh	r3, [r4, #12]
  4041da:	059b      	lsls	r3, r3, #22
  4041dc:	d4d6      	bmi.n	40418c <_ungetc_r+0x54>
  4041de:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4041e0:	f7fe fca6 	bl	402b30 <__retarget_lock_release_recursive>
  4041e4:	4628      	mov	r0, r5
  4041e6:	bd70      	pop	{r4, r5, r6, pc}
  4041e8:	f7fe f83c 	bl	402264 <__sinit>
  4041ec:	e7ae      	b.n	40414c <_ungetc_r+0x14>
  4041ee:	4630      	mov	r0, r6
  4041f0:	4621      	mov	r1, r4
  4041f2:	f7ff ff65 	bl	4040c0 <__submore>
  4041f6:	2800      	cmp	r0, #0
  4041f8:	d0e3      	beq.n	4041c2 <_ungetc_r+0x8a>
  4041fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4041fc:	07de      	lsls	r6, r3, #31
  4041fe:	d4c3      	bmi.n	404188 <_ungetc_r+0x50>
  404200:	89a3      	ldrh	r3, [r4, #12]
  404202:	059d      	lsls	r5, r3, #22
  404204:	d4c0      	bmi.n	404188 <_ungetc_r+0x50>
  404206:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404208:	f7fe fc92 	bl	402b30 <__retarget_lock_release_recursive>
  40420c:	f04f 35ff 	mov.w	r5, #4294967295
  404210:	e7bc      	b.n	40418c <_ungetc_r+0x54>
  404212:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404214:	f7fe fc8a 	bl	402b2c <__retarget_lock_acquire_recursive>
  404218:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40421c:	b29a      	uxth	r2, r3
  40421e:	0492      	lsls	r2, r2, #18
  404220:	d4a5      	bmi.n	40416e <_ungetc_r+0x36>
  404222:	e79e      	b.n	404162 <_ungetc_r+0x2a>
  404224:	6922      	ldr	r2, [r4, #16]
  404226:	6823      	ldr	r3, [r4, #0]
  404228:	b172      	cbz	r2, 404248 <_ungetc_r+0x110>
  40422a:	429a      	cmp	r2, r3
  40422c:	d20c      	bcs.n	404248 <_ungetc_r+0x110>
  40422e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404232:	42aa      	cmp	r2, r5
  404234:	d108      	bne.n	404248 <_ungetc_r+0x110>
  404236:	6862      	ldr	r2, [r4, #4]
  404238:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40423a:	3b01      	subs	r3, #1
  40423c:	3201      	adds	r2, #1
  40423e:	07c9      	lsls	r1, r1, #31
  404240:	6023      	str	r3, [r4, #0]
  404242:	6062      	str	r2, [r4, #4]
  404244:	d5c8      	bpl.n	4041d8 <_ungetc_r+0xa0>
  404246:	e7a1      	b.n	40418c <_ungetc_r+0x54>
  404248:	63a3      	str	r3, [r4, #56]	; 0x38
  40424a:	4623      	mov	r3, r4
  40424c:	6860      	ldr	r0, [r4, #4]
  40424e:	63e0      	str	r0, [r4, #60]	; 0x3c
  404250:	2203      	movs	r2, #3
  404252:	f104 0140 	add.w	r1, r4, #64	; 0x40
  404256:	6362      	str	r2, [r4, #52]	; 0x34
  404258:	6321      	str	r1, [r4, #48]	; 0x30
  40425a:	f803 5f42 	strb.w	r5, [r3, #66]!
  40425e:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404260:	6023      	str	r3, [r4, #0]
  404262:	07d2      	lsls	r2, r2, #31
  404264:	f04f 0301 	mov.w	r3, #1
  404268:	6063      	str	r3, [r4, #4]
  40426a:	d48f      	bmi.n	40418c <_ungetc_r+0x54>
  40426c:	e7b4      	b.n	4041d8 <_ungetc_r+0xa0>
  40426e:	bf00      	nop

00404270 <__ascii_wctomb>:
  404270:	b121      	cbz	r1, 40427c <__ascii_wctomb+0xc>
  404272:	2aff      	cmp	r2, #255	; 0xff
  404274:	d804      	bhi.n	404280 <__ascii_wctomb+0x10>
  404276:	700a      	strb	r2, [r1, #0]
  404278:	2001      	movs	r0, #1
  40427a:	4770      	bx	lr
  40427c:	4608      	mov	r0, r1
  40427e:	4770      	bx	lr
  404280:	238a      	movs	r3, #138	; 0x8a
  404282:	6003      	str	r3, [r0, #0]
  404284:	f04f 30ff 	mov.w	r0, #4294967295
  404288:	4770      	bx	lr
  40428a:	bf00      	nop

0040428c <_write_r>:
  40428c:	b570      	push	{r4, r5, r6, lr}
  40428e:	460d      	mov	r5, r1
  404290:	4c08      	ldr	r4, [pc, #32]	; (4042b4 <_write_r+0x28>)
  404292:	4611      	mov	r1, r2
  404294:	4606      	mov	r6, r0
  404296:	461a      	mov	r2, r3
  404298:	4628      	mov	r0, r5
  40429a:	2300      	movs	r3, #0
  40429c:	6023      	str	r3, [r4, #0]
  40429e:	f7fb ff7f 	bl	4001a0 <_write>
  4042a2:	1c43      	adds	r3, r0, #1
  4042a4:	d000      	beq.n	4042a8 <_write_r+0x1c>
  4042a6:	bd70      	pop	{r4, r5, r6, pc}
  4042a8:	6823      	ldr	r3, [r4, #0]
  4042aa:	2b00      	cmp	r3, #0
  4042ac:	d0fb      	beq.n	4042a6 <_write_r+0x1a>
  4042ae:	6033      	str	r3, [r6, #0]
  4042b0:	bd70      	pop	{r4, r5, r6, pc}
  4042b2:	bf00      	nop
  4042b4:	20000ac4 	.word	0x20000ac4

004042b8 <__swsetup_r>:
  4042b8:	b538      	push	{r3, r4, r5, lr}
  4042ba:	4b30      	ldr	r3, [pc, #192]	; (40437c <__swsetup_r+0xc4>)
  4042bc:	681b      	ldr	r3, [r3, #0]
  4042be:	4605      	mov	r5, r0
  4042c0:	460c      	mov	r4, r1
  4042c2:	b113      	cbz	r3, 4042ca <__swsetup_r+0x12>
  4042c4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4042c6:	2a00      	cmp	r2, #0
  4042c8:	d038      	beq.n	40433c <__swsetup_r+0x84>
  4042ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4042ce:	b293      	uxth	r3, r2
  4042d0:	0718      	lsls	r0, r3, #28
  4042d2:	d50c      	bpl.n	4042ee <__swsetup_r+0x36>
  4042d4:	6920      	ldr	r0, [r4, #16]
  4042d6:	b1a8      	cbz	r0, 404304 <__swsetup_r+0x4c>
  4042d8:	f013 0201 	ands.w	r2, r3, #1
  4042dc:	d01e      	beq.n	40431c <__swsetup_r+0x64>
  4042de:	6963      	ldr	r3, [r4, #20]
  4042e0:	2200      	movs	r2, #0
  4042e2:	425b      	negs	r3, r3
  4042e4:	61a3      	str	r3, [r4, #24]
  4042e6:	60a2      	str	r2, [r4, #8]
  4042e8:	b1f0      	cbz	r0, 404328 <__swsetup_r+0x70>
  4042ea:	2000      	movs	r0, #0
  4042ec:	bd38      	pop	{r3, r4, r5, pc}
  4042ee:	06d9      	lsls	r1, r3, #27
  4042f0:	d53c      	bpl.n	40436c <__swsetup_r+0xb4>
  4042f2:	0758      	lsls	r0, r3, #29
  4042f4:	d426      	bmi.n	404344 <__swsetup_r+0x8c>
  4042f6:	6920      	ldr	r0, [r4, #16]
  4042f8:	f042 0308 	orr.w	r3, r2, #8
  4042fc:	81a3      	strh	r3, [r4, #12]
  4042fe:	b29b      	uxth	r3, r3
  404300:	2800      	cmp	r0, #0
  404302:	d1e9      	bne.n	4042d8 <__swsetup_r+0x20>
  404304:	f403 7220 	and.w	r2, r3, #640	; 0x280
  404308:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  40430c:	d0e4      	beq.n	4042d8 <__swsetup_r+0x20>
  40430e:	4628      	mov	r0, r5
  404310:	4621      	mov	r1, r4
  404312:	f7fe fc3d 	bl	402b90 <__smakebuf_r>
  404316:	89a3      	ldrh	r3, [r4, #12]
  404318:	6920      	ldr	r0, [r4, #16]
  40431a:	e7dd      	b.n	4042d8 <__swsetup_r+0x20>
  40431c:	0799      	lsls	r1, r3, #30
  40431e:	bf58      	it	pl
  404320:	6962      	ldrpl	r2, [r4, #20]
  404322:	60a2      	str	r2, [r4, #8]
  404324:	2800      	cmp	r0, #0
  404326:	d1e0      	bne.n	4042ea <__swsetup_r+0x32>
  404328:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40432c:	061a      	lsls	r2, r3, #24
  40432e:	d5dd      	bpl.n	4042ec <__swsetup_r+0x34>
  404330:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404334:	81a3      	strh	r3, [r4, #12]
  404336:	f04f 30ff 	mov.w	r0, #4294967295
  40433a:	bd38      	pop	{r3, r4, r5, pc}
  40433c:	4618      	mov	r0, r3
  40433e:	f7fd ff91 	bl	402264 <__sinit>
  404342:	e7c2      	b.n	4042ca <__swsetup_r+0x12>
  404344:	6b21      	ldr	r1, [r4, #48]	; 0x30
  404346:	b151      	cbz	r1, 40435e <__swsetup_r+0xa6>
  404348:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40434c:	4299      	cmp	r1, r3
  40434e:	d004      	beq.n	40435a <__swsetup_r+0xa2>
  404350:	4628      	mov	r0, r5
  404352:	f7fe f90b 	bl	40256c <_free_r>
  404356:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40435a:	2300      	movs	r3, #0
  40435c:	6323      	str	r3, [r4, #48]	; 0x30
  40435e:	2300      	movs	r3, #0
  404360:	6920      	ldr	r0, [r4, #16]
  404362:	6063      	str	r3, [r4, #4]
  404364:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  404368:	6020      	str	r0, [r4, #0]
  40436a:	e7c5      	b.n	4042f8 <__swsetup_r+0x40>
  40436c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  404370:	2309      	movs	r3, #9
  404372:	602b      	str	r3, [r5, #0]
  404374:	f04f 30ff 	mov.w	r0, #4294967295
  404378:	81a2      	strh	r2, [r4, #12]
  40437a:	bd38      	pop	{r3, r4, r5, pc}
  40437c:	20000014 	.word	0x20000014

00404380 <__register_exitproc>:
  404380:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404384:	4d2c      	ldr	r5, [pc, #176]	; (404438 <__register_exitproc+0xb8>)
  404386:	4606      	mov	r6, r0
  404388:	6828      	ldr	r0, [r5, #0]
  40438a:	4698      	mov	r8, r3
  40438c:	460f      	mov	r7, r1
  40438e:	4691      	mov	r9, r2
  404390:	f7fe fbcc 	bl	402b2c <__retarget_lock_acquire_recursive>
  404394:	4b29      	ldr	r3, [pc, #164]	; (40443c <__register_exitproc+0xbc>)
  404396:	681c      	ldr	r4, [r3, #0]
  404398:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40439c:	2b00      	cmp	r3, #0
  40439e:	d03e      	beq.n	40441e <__register_exitproc+0x9e>
  4043a0:	685a      	ldr	r2, [r3, #4]
  4043a2:	2a1f      	cmp	r2, #31
  4043a4:	dc1c      	bgt.n	4043e0 <__register_exitproc+0x60>
  4043a6:	f102 0e01 	add.w	lr, r2, #1
  4043aa:	b176      	cbz	r6, 4043ca <__register_exitproc+0x4a>
  4043ac:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4043b0:	2401      	movs	r4, #1
  4043b2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4043b6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4043ba:	4094      	lsls	r4, r2
  4043bc:	4320      	orrs	r0, r4
  4043be:	2e02      	cmp	r6, #2
  4043c0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4043c4:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4043c8:	d023      	beq.n	404412 <__register_exitproc+0x92>
  4043ca:	3202      	adds	r2, #2
  4043cc:	f8c3 e004 	str.w	lr, [r3, #4]
  4043d0:	6828      	ldr	r0, [r5, #0]
  4043d2:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4043d6:	f7fe fbab 	bl	402b30 <__retarget_lock_release_recursive>
  4043da:	2000      	movs	r0, #0
  4043dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4043e0:	4b17      	ldr	r3, [pc, #92]	; (404440 <__register_exitproc+0xc0>)
  4043e2:	b30b      	cbz	r3, 404428 <__register_exitproc+0xa8>
  4043e4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4043e8:	f7fe fc1c 	bl	402c24 <malloc>
  4043ec:	4603      	mov	r3, r0
  4043ee:	b1d8      	cbz	r0, 404428 <__register_exitproc+0xa8>
  4043f0:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4043f4:	6002      	str	r2, [r0, #0]
  4043f6:	2100      	movs	r1, #0
  4043f8:	6041      	str	r1, [r0, #4]
  4043fa:	460a      	mov	r2, r1
  4043fc:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404400:	f04f 0e01 	mov.w	lr, #1
  404404:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404408:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40440c:	2e00      	cmp	r6, #0
  40440e:	d0dc      	beq.n	4043ca <__register_exitproc+0x4a>
  404410:	e7cc      	b.n	4043ac <__register_exitproc+0x2c>
  404412:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404416:	430c      	orrs	r4, r1
  404418:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40441c:	e7d5      	b.n	4043ca <__register_exitproc+0x4a>
  40441e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404422:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404426:	e7bb      	b.n	4043a0 <__register_exitproc+0x20>
  404428:	6828      	ldr	r0, [r5, #0]
  40442a:	f7fe fb81 	bl	402b30 <__retarget_lock_release_recursive>
  40442e:	f04f 30ff 	mov.w	r0, #4294967295
  404432:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404436:	bf00      	nop
  404438:	20000440 	.word	0x20000440
  40443c:	00404950 	.word	0x00404950
  404440:	00402c25 	.word	0x00402c25

00404444 <_close_r>:
  404444:	b538      	push	{r3, r4, r5, lr}
  404446:	4c07      	ldr	r4, [pc, #28]	; (404464 <_close_r+0x20>)
  404448:	2300      	movs	r3, #0
  40444a:	4605      	mov	r5, r0
  40444c:	4608      	mov	r0, r1
  40444e:	6023      	str	r3, [r4, #0]
  404450:	f7fc fbea 	bl	400c28 <_close>
  404454:	1c43      	adds	r3, r0, #1
  404456:	d000      	beq.n	40445a <_close_r+0x16>
  404458:	bd38      	pop	{r3, r4, r5, pc}
  40445a:	6823      	ldr	r3, [r4, #0]
  40445c:	2b00      	cmp	r3, #0
  40445e:	d0fb      	beq.n	404458 <_close_r+0x14>
  404460:	602b      	str	r3, [r5, #0]
  404462:	bd38      	pop	{r3, r4, r5, pc}
  404464:	20000ac4 	.word	0x20000ac4

00404468 <_fclose_r>:
  404468:	b570      	push	{r4, r5, r6, lr}
  40446a:	b159      	cbz	r1, 404484 <_fclose_r+0x1c>
  40446c:	4605      	mov	r5, r0
  40446e:	460c      	mov	r4, r1
  404470:	b110      	cbz	r0, 404478 <_fclose_r+0x10>
  404472:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404474:	2b00      	cmp	r3, #0
  404476:	d03c      	beq.n	4044f2 <_fclose_r+0x8a>
  404478:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40447a:	07d8      	lsls	r0, r3, #31
  40447c:	d505      	bpl.n	40448a <_fclose_r+0x22>
  40447e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404482:	b92b      	cbnz	r3, 404490 <_fclose_r+0x28>
  404484:	2600      	movs	r6, #0
  404486:	4630      	mov	r0, r6
  404488:	bd70      	pop	{r4, r5, r6, pc}
  40448a:	89a3      	ldrh	r3, [r4, #12]
  40448c:	0599      	lsls	r1, r3, #22
  40448e:	d53c      	bpl.n	40450a <_fclose_r+0xa2>
  404490:	4621      	mov	r1, r4
  404492:	4628      	mov	r0, r5
  404494:	f7fd fddc 	bl	402050 <__sflush_r>
  404498:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40449a:	4606      	mov	r6, r0
  40449c:	b133      	cbz	r3, 4044ac <_fclose_r+0x44>
  40449e:	69e1      	ldr	r1, [r4, #28]
  4044a0:	4628      	mov	r0, r5
  4044a2:	4798      	blx	r3
  4044a4:	2800      	cmp	r0, #0
  4044a6:	bfb8      	it	lt
  4044a8:	f04f 36ff 	movlt.w	r6, #4294967295
  4044ac:	89a3      	ldrh	r3, [r4, #12]
  4044ae:	061a      	lsls	r2, r3, #24
  4044b0:	d422      	bmi.n	4044f8 <_fclose_r+0x90>
  4044b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4044b4:	b141      	cbz	r1, 4044c8 <_fclose_r+0x60>
  4044b6:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4044ba:	4299      	cmp	r1, r3
  4044bc:	d002      	beq.n	4044c4 <_fclose_r+0x5c>
  4044be:	4628      	mov	r0, r5
  4044c0:	f7fe f854 	bl	40256c <_free_r>
  4044c4:	2300      	movs	r3, #0
  4044c6:	6323      	str	r3, [r4, #48]	; 0x30
  4044c8:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4044ca:	b121      	cbz	r1, 4044d6 <_fclose_r+0x6e>
  4044cc:	4628      	mov	r0, r5
  4044ce:	f7fe f84d 	bl	40256c <_free_r>
  4044d2:	2300      	movs	r3, #0
  4044d4:	6463      	str	r3, [r4, #68]	; 0x44
  4044d6:	f7fd fef1 	bl	4022bc <__sfp_lock_acquire>
  4044da:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4044dc:	2200      	movs	r2, #0
  4044de:	07db      	lsls	r3, r3, #31
  4044e0:	81a2      	strh	r2, [r4, #12]
  4044e2:	d50e      	bpl.n	404502 <_fclose_r+0x9a>
  4044e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4044e6:	f7fe fb1f 	bl	402b28 <__retarget_lock_close_recursive>
  4044ea:	f7fd feed 	bl	4022c8 <__sfp_lock_release>
  4044ee:	4630      	mov	r0, r6
  4044f0:	bd70      	pop	{r4, r5, r6, pc}
  4044f2:	f7fd feb7 	bl	402264 <__sinit>
  4044f6:	e7bf      	b.n	404478 <_fclose_r+0x10>
  4044f8:	6921      	ldr	r1, [r4, #16]
  4044fa:	4628      	mov	r0, r5
  4044fc:	f7fe f836 	bl	40256c <_free_r>
  404500:	e7d7      	b.n	4044b2 <_fclose_r+0x4a>
  404502:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404504:	f7fe fb14 	bl	402b30 <__retarget_lock_release_recursive>
  404508:	e7ec      	b.n	4044e4 <_fclose_r+0x7c>
  40450a:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40450c:	f7fe fb0e 	bl	402b2c <__retarget_lock_acquire_recursive>
  404510:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404514:	2b00      	cmp	r3, #0
  404516:	d1bb      	bne.n	404490 <_fclose_r+0x28>
  404518:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40451a:	f016 0601 	ands.w	r6, r6, #1
  40451e:	d1b1      	bne.n	404484 <_fclose_r+0x1c>
  404520:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404522:	f7fe fb05 	bl	402b30 <__retarget_lock_release_recursive>
  404526:	4630      	mov	r0, r6
  404528:	bd70      	pop	{r4, r5, r6, pc}
  40452a:	bf00      	nop

0040452c <_fstat_r>:
  40452c:	b538      	push	{r3, r4, r5, lr}
  40452e:	460b      	mov	r3, r1
  404530:	4c07      	ldr	r4, [pc, #28]	; (404550 <_fstat_r+0x24>)
  404532:	4605      	mov	r5, r0
  404534:	4611      	mov	r1, r2
  404536:	4618      	mov	r0, r3
  404538:	2300      	movs	r3, #0
  40453a:	6023      	str	r3, [r4, #0]
  40453c:	f7fc fb77 	bl	400c2e <_fstat>
  404540:	1c43      	adds	r3, r0, #1
  404542:	d000      	beq.n	404546 <_fstat_r+0x1a>
  404544:	bd38      	pop	{r3, r4, r5, pc}
  404546:	6823      	ldr	r3, [r4, #0]
  404548:	2b00      	cmp	r3, #0
  40454a:	d0fb      	beq.n	404544 <_fstat_r+0x18>
  40454c:	602b      	str	r3, [r5, #0]
  40454e:	bd38      	pop	{r3, r4, r5, pc}
  404550:	20000ac4 	.word	0x20000ac4

00404554 <_isatty_r>:
  404554:	b538      	push	{r3, r4, r5, lr}
  404556:	4c07      	ldr	r4, [pc, #28]	; (404574 <_isatty_r+0x20>)
  404558:	2300      	movs	r3, #0
  40455a:	4605      	mov	r5, r0
  40455c:	4608      	mov	r0, r1
  40455e:	6023      	str	r3, [r4, #0]
  404560:	f7fc fb6a 	bl	400c38 <_isatty>
  404564:	1c43      	adds	r3, r0, #1
  404566:	d000      	beq.n	40456a <_isatty_r+0x16>
  404568:	bd38      	pop	{r3, r4, r5, pc}
  40456a:	6823      	ldr	r3, [r4, #0]
  40456c:	2b00      	cmp	r3, #0
  40456e:	d0fb      	beq.n	404568 <_isatty_r+0x14>
  404570:	602b      	str	r3, [r5, #0]
  404572:	bd38      	pop	{r3, r4, r5, pc}
  404574:	20000ac4 	.word	0x20000ac4

00404578 <_lseek_r>:
  404578:	b570      	push	{r4, r5, r6, lr}
  40457a:	460d      	mov	r5, r1
  40457c:	4c08      	ldr	r4, [pc, #32]	; (4045a0 <_lseek_r+0x28>)
  40457e:	4611      	mov	r1, r2
  404580:	4606      	mov	r6, r0
  404582:	461a      	mov	r2, r3
  404584:	4628      	mov	r0, r5
  404586:	2300      	movs	r3, #0
  404588:	6023      	str	r3, [r4, #0]
  40458a:	f7fc fb57 	bl	400c3c <_lseek>
  40458e:	1c43      	adds	r3, r0, #1
  404590:	d000      	beq.n	404594 <_lseek_r+0x1c>
  404592:	bd70      	pop	{r4, r5, r6, pc}
  404594:	6823      	ldr	r3, [r4, #0]
  404596:	2b00      	cmp	r3, #0
  404598:	d0fb      	beq.n	404592 <_lseek_r+0x1a>
  40459a:	6033      	str	r3, [r6, #0]
  40459c:	bd70      	pop	{r4, r5, r6, pc}
  40459e:	bf00      	nop
  4045a0:	20000ac4 	.word	0x20000ac4

004045a4 <_read_r>:
  4045a4:	b570      	push	{r4, r5, r6, lr}
  4045a6:	460d      	mov	r5, r1
  4045a8:	4c08      	ldr	r4, [pc, #32]	; (4045cc <_read_r+0x28>)
  4045aa:	4611      	mov	r1, r2
  4045ac:	4606      	mov	r6, r0
  4045ae:	461a      	mov	r2, r3
  4045b0:	4628      	mov	r0, r5
  4045b2:	2300      	movs	r3, #0
  4045b4:	6023      	str	r3, [r4, #0]
  4045b6:	f7fb fdbf 	bl	400138 <_read>
  4045ba:	1c43      	adds	r3, r0, #1
  4045bc:	d000      	beq.n	4045c0 <_read_r+0x1c>
  4045be:	bd70      	pop	{r4, r5, r6, pc}
  4045c0:	6823      	ldr	r3, [r4, #0]
  4045c2:	2b00      	cmp	r3, #0
  4045c4:	d0fb      	beq.n	4045be <_read_r+0x1a>
  4045c6:	6033      	str	r3, [r6, #0]
  4045c8:	bd70      	pop	{r4, r5, r6, pc}
  4045ca:	bf00      	nop
  4045cc:	20000ac4 	.word	0x20000ac4

004045d0 <__aeabi_uldivmod>:
  4045d0:	b953      	cbnz	r3, 4045e8 <__aeabi_uldivmod+0x18>
  4045d2:	b94a      	cbnz	r2, 4045e8 <__aeabi_uldivmod+0x18>
  4045d4:	2900      	cmp	r1, #0
  4045d6:	bf08      	it	eq
  4045d8:	2800      	cmpeq	r0, #0
  4045da:	bf1c      	itt	ne
  4045dc:	f04f 31ff 	movne.w	r1, #4294967295
  4045e0:	f04f 30ff 	movne.w	r0, #4294967295
  4045e4:	f000 b97a 	b.w	4048dc <__aeabi_idiv0>
  4045e8:	f1ad 0c08 	sub.w	ip, sp, #8
  4045ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4045f0:	f000 f806 	bl	404600 <__udivmoddi4>
  4045f4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4045f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4045fc:	b004      	add	sp, #16
  4045fe:	4770      	bx	lr

00404600 <__udivmoddi4>:
  404600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404604:	468c      	mov	ip, r1
  404606:	460d      	mov	r5, r1
  404608:	4604      	mov	r4, r0
  40460a:	9e08      	ldr	r6, [sp, #32]
  40460c:	2b00      	cmp	r3, #0
  40460e:	d151      	bne.n	4046b4 <__udivmoddi4+0xb4>
  404610:	428a      	cmp	r2, r1
  404612:	4617      	mov	r7, r2
  404614:	d96d      	bls.n	4046f2 <__udivmoddi4+0xf2>
  404616:	fab2 fe82 	clz	lr, r2
  40461a:	f1be 0f00 	cmp.w	lr, #0
  40461e:	d00b      	beq.n	404638 <__udivmoddi4+0x38>
  404620:	f1ce 0c20 	rsb	ip, lr, #32
  404624:	fa01 f50e 	lsl.w	r5, r1, lr
  404628:	fa20 fc0c 	lsr.w	ip, r0, ip
  40462c:	fa02 f70e 	lsl.w	r7, r2, lr
  404630:	ea4c 0c05 	orr.w	ip, ip, r5
  404634:	fa00 f40e 	lsl.w	r4, r0, lr
  404638:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40463c:	0c25      	lsrs	r5, r4, #16
  40463e:	fbbc f8fa 	udiv	r8, ip, sl
  404642:	fa1f f987 	uxth.w	r9, r7
  404646:	fb0a cc18 	mls	ip, sl, r8, ip
  40464a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40464e:	fb08 f309 	mul.w	r3, r8, r9
  404652:	42ab      	cmp	r3, r5
  404654:	d90a      	bls.n	40466c <__udivmoddi4+0x6c>
  404656:	19ed      	adds	r5, r5, r7
  404658:	f108 32ff 	add.w	r2, r8, #4294967295
  40465c:	f080 8123 	bcs.w	4048a6 <__udivmoddi4+0x2a6>
  404660:	42ab      	cmp	r3, r5
  404662:	f240 8120 	bls.w	4048a6 <__udivmoddi4+0x2a6>
  404666:	f1a8 0802 	sub.w	r8, r8, #2
  40466a:	443d      	add	r5, r7
  40466c:	1aed      	subs	r5, r5, r3
  40466e:	b2a4      	uxth	r4, r4
  404670:	fbb5 f0fa 	udiv	r0, r5, sl
  404674:	fb0a 5510 	mls	r5, sl, r0, r5
  404678:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40467c:	fb00 f909 	mul.w	r9, r0, r9
  404680:	45a1      	cmp	r9, r4
  404682:	d909      	bls.n	404698 <__udivmoddi4+0x98>
  404684:	19e4      	adds	r4, r4, r7
  404686:	f100 33ff 	add.w	r3, r0, #4294967295
  40468a:	f080 810a 	bcs.w	4048a2 <__udivmoddi4+0x2a2>
  40468e:	45a1      	cmp	r9, r4
  404690:	f240 8107 	bls.w	4048a2 <__udivmoddi4+0x2a2>
  404694:	3802      	subs	r0, #2
  404696:	443c      	add	r4, r7
  404698:	eba4 0409 	sub.w	r4, r4, r9
  40469c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4046a0:	2100      	movs	r1, #0
  4046a2:	2e00      	cmp	r6, #0
  4046a4:	d061      	beq.n	40476a <__udivmoddi4+0x16a>
  4046a6:	fa24 f40e 	lsr.w	r4, r4, lr
  4046aa:	2300      	movs	r3, #0
  4046ac:	6034      	str	r4, [r6, #0]
  4046ae:	6073      	str	r3, [r6, #4]
  4046b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4046b4:	428b      	cmp	r3, r1
  4046b6:	d907      	bls.n	4046c8 <__udivmoddi4+0xc8>
  4046b8:	2e00      	cmp	r6, #0
  4046ba:	d054      	beq.n	404766 <__udivmoddi4+0x166>
  4046bc:	2100      	movs	r1, #0
  4046be:	e886 0021 	stmia.w	r6, {r0, r5}
  4046c2:	4608      	mov	r0, r1
  4046c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4046c8:	fab3 f183 	clz	r1, r3
  4046cc:	2900      	cmp	r1, #0
  4046ce:	f040 808e 	bne.w	4047ee <__udivmoddi4+0x1ee>
  4046d2:	42ab      	cmp	r3, r5
  4046d4:	d302      	bcc.n	4046dc <__udivmoddi4+0xdc>
  4046d6:	4282      	cmp	r2, r0
  4046d8:	f200 80fa 	bhi.w	4048d0 <__udivmoddi4+0x2d0>
  4046dc:	1a84      	subs	r4, r0, r2
  4046de:	eb65 0503 	sbc.w	r5, r5, r3
  4046e2:	2001      	movs	r0, #1
  4046e4:	46ac      	mov	ip, r5
  4046e6:	2e00      	cmp	r6, #0
  4046e8:	d03f      	beq.n	40476a <__udivmoddi4+0x16a>
  4046ea:	e886 1010 	stmia.w	r6, {r4, ip}
  4046ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4046f2:	b912      	cbnz	r2, 4046fa <__udivmoddi4+0xfa>
  4046f4:	2701      	movs	r7, #1
  4046f6:	fbb7 f7f2 	udiv	r7, r7, r2
  4046fa:	fab7 fe87 	clz	lr, r7
  4046fe:	f1be 0f00 	cmp.w	lr, #0
  404702:	d134      	bne.n	40476e <__udivmoddi4+0x16e>
  404704:	1beb      	subs	r3, r5, r7
  404706:	0c3a      	lsrs	r2, r7, #16
  404708:	fa1f fc87 	uxth.w	ip, r7
  40470c:	2101      	movs	r1, #1
  40470e:	fbb3 f8f2 	udiv	r8, r3, r2
  404712:	0c25      	lsrs	r5, r4, #16
  404714:	fb02 3318 	mls	r3, r2, r8, r3
  404718:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40471c:	fb0c f308 	mul.w	r3, ip, r8
  404720:	42ab      	cmp	r3, r5
  404722:	d907      	bls.n	404734 <__udivmoddi4+0x134>
  404724:	19ed      	adds	r5, r5, r7
  404726:	f108 30ff 	add.w	r0, r8, #4294967295
  40472a:	d202      	bcs.n	404732 <__udivmoddi4+0x132>
  40472c:	42ab      	cmp	r3, r5
  40472e:	f200 80d1 	bhi.w	4048d4 <__udivmoddi4+0x2d4>
  404732:	4680      	mov	r8, r0
  404734:	1aed      	subs	r5, r5, r3
  404736:	b2a3      	uxth	r3, r4
  404738:	fbb5 f0f2 	udiv	r0, r5, r2
  40473c:	fb02 5510 	mls	r5, r2, r0, r5
  404740:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  404744:	fb0c fc00 	mul.w	ip, ip, r0
  404748:	45a4      	cmp	ip, r4
  40474a:	d907      	bls.n	40475c <__udivmoddi4+0x15c>
  40474c:	19e4      	adds	r4, r4, r7
  40474e:	f100 33ff 	add.w	r3, r0, #4294967295
  404752:	d202      	bcs.n	40475a <__udivmoddi4+0x15a>
  404754:	45a4      	cmp	ip, r4
  404756:	f200 80b8 	bhi.w	4048ca <__udivmoddi4+0x2ca>
  40475a:	4618      	mov	r0, r3
  40475c:	eba4 040c 	sub.w	r4, r4, ip
  404760:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  404764:	e79d      	b.n	4046a2 <__udivmoddi4+0xa2>
  404766:	4631      	mov	r1, r6
  404768:	4630      	mov	r0, r6
  40476a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40476e:	f1ce 0420 	rsb	r4, lr, #32
  404772:	fa05 f30e 	lsl.w	r3, r5, lr
  404776:	fa07 f70e 	lsl.w	r7, r7, lr
  40477a:	fa20 f804 	lsr.w	r8, r0, r4
  40477e:	0c3a      	lsrs	r2, r7, #16
  404780:	fa25 f404 	lsr.w	r4, r5, r4
  404784:	ea48 0803 	orr.w	r8, r8, r3
  404788:	fbb4 f1f2 	udiv	r1, r4, r2
  40478c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  404790:	fb02 4411 	mls	r4, r2, r1, r4
  404794:	fa1f fc87 	uxth.w	ip, r7
  404798:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40479c:	fb01 f30c 	mul.w	r3, r1, ip
  4047a0:	42ab      	cmp	r3, r5
  4047a2:	fa00 f40e 	lsl.w	r4, r0, lr
  4047a6:	d909      	bls.n	4047bc <__udivmoddi4+0x1bc>
  4047a8:	19ed      	adds	r5, r5, r7
  4047aa:	f101 30ff 	add.w	r0, r1, #4294967295
  4047ae:	f080 808a 	bcs.w	4048c6 <__udivmoddi4+0x2c6>
  4047b2:	42ab      	cmp	r3, r5
  4047b4:	f240 8087 	bls.w	4048c6 <__udivmoddi4+0x2c6>
  4047b8:	3902      	subs	r1, #2
  4047ba:	443d      	add	r5, r7
  4047bc:	1aeb      	subs	r3, r5, r3
  4047be:	fa1f f588 	uxth.w	r5, r8
  4047c2:	fbb3 f0f2 	udiv	r0, r3, r2
  4047c6:	fb02 3310 	mls	r3, r2, r0, r3
  4047ca:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4047ce:	fb00 f30c 	mul.w	r3, r0, ip
  4047d2:	42ab      	cmp	r3, r5
  4047d4:	d907      	bls.n	4047e6 <__udivmoddi4+0x1e6>
  4047d6:	19ed      	adds	r5, r5, r7
  4047d8:	f100 38ff 	add.w	r8, r0, #4294967295
  4047dc:	d26f      	bcs.n	4048be <__udivmoddi4+0x2be>
  4047de:	42ab      	cmp	r3, r5
  4047e0:	d96d      	bls.n	4048be <__udivmoddi4+0x2be>
  4047e2:	3802      	subs	r0, #2
  4047e4:	443d      	add	r5, r7
  4047e6:	1aeb      	subs	r3, r5, r3
  4047e8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4047ec:	e78f      	b.n	40470e <__udivmoddi4+0x10e>
  4047ee:	f1c1 0720 	rsb	r7, r1, #32
  4047f2:	fa22 f807 	lsr.w	r8, r2, r7
  4047f6:	408b      	lsls	r3, r1
  4047f8:	fa05 f401 	lsl.w	r4, r5, r1
  4047fc:	ea48 0303 	orr.w	r3, r8, r3
  404800:	fa20 fe07 	lsr.w	lr, r0, r7
  404804:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  404808:	40fd      	lsrs	r5, r7
  40480a:	ea4e 0e04 	orr.w	lr, lr, r4
  40480e:	fbb5 f9fc 	udiv	r9, r5, ip
  404812:	ea4f 441e 	mov.w	r4, lr, lsr #16
  404816:	fb0c 5519 	mls	r5, ip, r9, r5
  40481a:	fa1f f883 	uxth.w	r8, r3
  40481e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  404822:	fb09 f408 	mul.w	r4, r9, r8
  404826:	42ac      	cmp	r4, r5
  404828:	fa02 f201 	lsl.w	r2, r2, r1
  40482c:	fa00 fa01 	lsl.w	sl, r0, r1
  404830:	d908      	bls.n	404844 <__udivmoddi4+0x244>
  404832:	18ed      	adds	r5, r5, r3
  404834:	f109 30ff 	add.w	r0, r9, #4294967295
  404838:	d243      	bcs.n	4048c2 <__udivmoddi4+0x2c2>
  40483a:	42ac      	cmp	r4, r5
  40483c:	d941      	bls.n	4048c2 <__udivmoddi4+0x2c2>
  40483e:	f1a9 0902 	sub.w	r9, r9, #2
  404842:	441d      	add	r5, r3
  404844:	1b2d      	subs	r5, r5, r4
  404846:	fa1f fe8e 	uxth.w	lr, lr
  40484a:	fbb5 f0fc 	udiv	r0, r5, ip
  40484e:	fb0c 5510 	mls	r5, ip, r0, r5
  404852:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  404856:	fb00 f808 	mul.w	r8, r0, r8
  40485a:	45a0      	cmp	r8, r4
  40485c:	d907      	bls.n	40486e <__udivmoddi4+0x26e>
  40485e:	18e4      	adds	r4, r4, r3
  404860:	f100 35ff 	add.w	r5, r0, #4294967295
  404864:	d229      	bcs.n	4048ba <__udivmoddi4+0x2ba>
  404866:	45a0      	cmp	r8, r4
  404868:	d927      	bls.n	4048ba <__udivmoddi4+0x2ba>
  40486a:	3802      	subs	r0, #2
  40486c:	441c      	add	r4, r3
  40486e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  404872:	eba4 0408 	sub.w	r4, r4, r8
  404876:	fba0 8902 	umull	r8, r9, r0, r2
  40487a:	454c      	cmp	r4, r9
  40487c:	46c6      	mov	lr, r8
  40487e:	464d      	mov	r5, r9
  404880:	d315      	bcc.n	4048ae <__udivmoddi4+0x2ae>
  404882:	d012      	beq.n	4048aa <__udivmoddi4+0x2aa>
  404884:	b156      	cbz	r6, 40489c <__udivmoddi4+0x29c>
  404886:	ebba 030e 	subs.w	r3, sl, lr
  40488a:	eb64 0405 	sbc.w	r4, r4, r5
  40488e:	fa04 f707 	lsl.w	r7, r4, r7
  404892:	40cb      	lsrs	r3, r1
  404894:	431f      	orrs	r7, r3
  404896:	40cc      	lsrs	r4, r1
  404898:	6037      	str	r7, [r6, #0]
  40489a:	6074      	str	r4, [r6, #4]
  40489c:	2100      	movs	r1, #0
  40489e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4048a2:	4618      	mov	r0, r3
  4048a4:	e6f8      	b.n	404698 <__udivmoddi4+0x98>
  4048a6:	4690      	mov	r8, r2
  4048a8:	e6e0      	b.n	40466c <__udivmoddi4+0x6c>
  4048aa:	45c2      	cmp	sl, r8
  4048ac:	d2ea      	bcs.n	404884 <__udivmoddi4+0x284>
  4048ae:	ebb8 0e02 	subs.w	lr, r8, r2
  4048b2:	eb69 0503 	sbc.w	r5, r9, r3
  4048b6:	3801      	subs	r0, #1
  4048b8:	e7e4      	b.n	404884 <__udivmoddi4+0x284>
  4048ba:	4628      	mov	r0, r5
  4048bc:	e7d7      	b.n	40486e <__udivmoddi4+0x26e>
  4048be:	4640      	mov	r0, r8
  4048c0:	e791      	b.n	4047e6 <__udivmoddi4+0x1e6>
  4048c2:	4681      	mov	r9, r0
  4048c4:	e7be      	b.n	404844 <__udivmoddi4+0x244>
  4048c6:	4601      	mov	r1, r0
  4048c8:	e778      	b.n	4047bc <__udivmoddi4+0x1bc>
  4048ca:	3802      	subs	r0, #2
  4048cc:	443c      	add	r4, r7
  4048ce:	e745      	b.n	40475c <__udivmoddi4+0x15c>
  4048d0:	4608      	mov	r0, r1
  4048d2:	e708      	b.n	4046e6 <__udivmoddi4+0xe6>
  4048d4:	f1a8 0802 	sub.w	r8, r8, #2
  4048d8:	443d      	add	r5, r7
  4048da:	e72b      	b.n	404734 <__udivmoddi4+0x134>

004048dc <__aeabi_idiv0>:
  4048dc:	4770      	bx	lr
  4048de:	bf00      	nop
  4048e0:	69736e49 	.word	0x69736e49
  4048e4:	74206172 	.word	0x74206172
  4048e8:	6f706d65 	.word	0x6f706d65
  4048ec:	78616d20 	.word	0x78616d20
  4048f0:	206f6d69 	.word	0x206f6d69
  4048f4:	65206f6e 	.word	0x65206f6e
  4048f8:	72756373 	.word	0x72756373
  4048fc:	6d65206f 	.word	0x6d65206f
  404900:	726f6820 	.word	0x726f6820
  404904:	0d3a7361 	.word	0x0d3a7361
  404908:	00000000 	.word	0x00000000
  40490c:	00006925 	.word	0x00006925
  404910:	69736e49 	.word	0x69736e49
  404914:	61206172 	.word	0x61206172
  404918:	6d756c20 	.word	0x6d756c20
  40491c:	736f6e69 	.word	0x736f6e69
  404920:	64616469 	.word	0x64616469
  404924:	696d2065 	.word	0x696d2065
  404928:	616d696e 	.word	0x616d696e
  40492c:	206d6520 	.word	0x206d6520
  404930:	000d3a25 	.word	0x000d3a25
  404934:	00006625 	.word	0x00006625
  404938:	666e6f43 	.word	0x666e6f43
  40493c:	72756769 	.word	0x72756769
  404940:	6f616361 	.word	0x6f616361
  404944:	6d6f6320 	.word	0x6d6f6320
  404948:	74656c70 	.word	0x74656c70
  40494c:	000d2161 	.word	0x000d2161

00404950 <_global_impure_ptr>:
  404950:	20000018 0000000a                       ... ....

00404958 <basefix.6805>:
  404958:	0001000a 00030002 00050004 00070006     ................
  404968:	00090008 000b000a 000d000c 000f000e     ................
  404978:	00000010 00000043 49534f50 00000058     ....C...POSIX...
  404988:	0000002e                                ....

0040498c <_ctype_>:
  40498c:	20202000 20202020 28282020 20282828     .         ((((( 
  40499c:	20202020 20202020 20202020 20202020                     
  4049ac:	10108820 10101010 10101010 10101010      ...............
  4049bc:	04040410 04040404 10040404 10101010     ................
  4049cc:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4049dc:	01010101 01010101 01010101 10101010     ................
  4049ec:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4049fc:	02020202 02020202 02020202 10101010     ................
  404a0c:	00000020 00000000 00000000 00000000      ...............
	...

00404a90 <_init>:
  404a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404a92:	bf00      	nop
  404a94:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404a96:	bc08      	pop	{r3}
  404a98:	469e      	mov	lr, r3
  404a9a:	4770      	bx	lr

00404a9c <__init_array_start>:
  404a9c:	00402031 	.word	0x00402031

00404aa0 <__frame_dummy_init_array_entry>:
  404aa0:	004000f1                                ..@.

00404aa4 <_fini>:
  404aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404aa6:	bf00      	nop
  404aa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  404aaa:	bc08      	pop	{r3}
  404aac:	469e      	mov	lr, r3
  404aae:	4770      	bx	lr

00404ab0 <__fini_array_start>:
  404ab0:	004000cd 	.word	0x004000cd
