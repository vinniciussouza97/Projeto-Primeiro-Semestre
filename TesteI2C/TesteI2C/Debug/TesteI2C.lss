
TesteI2C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006bd8  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406bd8  00406bd8  00016bd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000088c  20000000  00406be0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000004b0  2000088c  0040746c  0002088c  2**2
                  ALLOC
  4 .stack        00003004  20000d3c  0040791c  0002088c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0002088c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000208b6  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000ad5c  00000000  00000000  0002090f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001b31  00000000  00000000  0002b66b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000808  00000000  00000000  0002d19c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000007e0  00000000  00000000  0002d9a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001470b  00000000  00000000  0002e184  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000a7db  00000000  00000000  0004288f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00058978  00000000  00000000  0004d06a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001b08  00000000  00000000  000a59e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00005551  00000000  00000000  000a74ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003d40 	.word	0x20003d40
  400004:	004012e5 	.word	0x004012e5
  400008:	004012e1 	.word	0x004012e1
  40000c:	004012e1 	.word	0x004012e1
  400010:	004012e1 	.word	0x004012e1
  400014:	004012e1 	.word	0x004012e1
  400018:	004012e1 	.word	0x004012e1
	...
  40002c:	004012e1 	.word	0x004012e1
  400030:	004012e1 	.word	0x004012e1
  400034:	00000000 	.word	0x00000000
  400038:	004012e1 	.word	0x004012e1
  40003c:	004012e1 	.word	0x004012e1
  400040:	004012e1 	.word	0x004012e1
  400044:	004012e1 	.word	0x004012e1
  400048:	004012e1 	.word	0x004012e1
  40004c:	004012e1 	.word	0x004012e1
  400050:	004012e1 	.word	0x004012e1
  400054:	004012e1 	.word	0x004012e1
  400058:	004012e1 	.word	0x004012e1
  40005c:	004012e1 	.word	0x004012e1
  400060:	004012e1 	.word	0x004012e1
  400064:	004012e1 	.word	0x004012e1
  400068:	00000000 	.word	0x00000000
  40006c:	00401165 	.word	0x00401165
  400070:	00401179 	.word	0x00401179
  400074:	0040118d 	.word	0x0040118d
  400078:	004012e1 	.word	0x004012e1
  40007c:	004012e1 	.word	0x004012e1
	...
  400088:	004012e1 	.word	0x004012e1
  40008c:	004012e1 	.word	0x004012e1
  400090:	004012e1 	.word	0x004012e1
  400094:	004012e1 	.word	0x004012e1
  400098:	004012e1 	.word	0x004012e1
  40009c:	004012e1 	.word	0x004012e1
  4000a0:	004012e1 	.word	0x004012e1
  4000a4:	004012e1 	.word	0x004012e1
  4000a8:	004012e1 	.word	0x004012e1
  4000ac:	004012e1 	.word	0x004012e1
  4000b0:	004012e1 	.word	0x004012e1
  4000b4:	004012e1 	.word	0x004012e1
  4000b8:	004012e1 	.word	0x004012e1
  4000bc:	004012e1 	.word	0x004012e1
  4000c0:	004012e1 	.word	0x004012e1
  4000c4:	004012e1 	.word	0x004012e1
  4000c8:	004012e1 	.word	0x004012e1

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000088c 	.word	0x2000088c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00406be0 	.word	0x00406be0

004000f0 <frame_dummy>:
  4000f0:	4b08      	ldr	r3, [pc, #32]	; (400114 <frame_dummy+0x24>)
  4000f2:	b510      	push	{r4, lr}
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4908      	ldr	r1, [pc, #32]	; (400118 <frame_dummy+0x28>)
  4000f8:	4808      	ldr	r0, [pc, #32]	; (40011c <frame_dummy+0x2c>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	4808      	ldr	r0, [pc, #32]	; (400120 <frame_dummy+0x30>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b903      	cbnz	r3, 400106 <frame_dummy+0x16>
  400104:	bd10      	pop	{r4, pc}
  400106:	4b07      	ldr	r3, [pc, #28]	; (400124 <frame_dummy+0x34>)
  400108:	2b00      	cmp	r3, #0
  40010a:	d0fb      	beq.n	400104 <frame_dummy+0x14>
  40010c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400110:	4718      	bx	r3
  400112:	bf00      	nop
  400114:	00000000 	.word	0x00000000
  400118:	20000890 	.word	0x20000890
  40011c:	00406be0 	.word	0x00406be0
  400120:	00406be0 	.word	0x00406be0
  400124:	00000000 	.word	0x00000000

00400128 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  400128:	b470      	push	{r4, r5, r6}
  40012a:	b083      	sub	sp, #12
	volatile uint32_t ul_delay;
	uint32_t i;

#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  40012c:	f1c0 0011 	rsb	r0, r0, #17
#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  400130:	2810      	cmp	r0, #16
  400132:	bf28      	it	cs
  400134:	2010      	movcs	r0, #16
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  400136:	2800      	cmp	r0, #0
  400138:	bf08      	it	eq
  40013a:	2001      	moveq	r0, #1
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  40013c:	2100      	movs	r1, #0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40013e:	4e10      	ldr	r6, [pc, #64]	; (400180 <aat31xx_set_backlight+0x58>)
  400140:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
		ul_delay = DELAY_PULSE;
  400144:	2418      	movs	r4, #24
  400146:	6375      	str	r5, [r6, #52]	; 0x34
  400148:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  40014a:	9b01      	ldr	r3, [sp, #4]
  40014c:	1e5a      	subs	r2, r3, #1
  40014e:	9201      	str	r2, [sp, #4]
  400150:	2b00      	cmp	r3, #0
  400152:	d1fa      	bne.n	40014a <aat31xx_set_backlight+0x22>
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400154:	6335      	str	r5, [r6, #48]	; 0x30
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);

		ul_delay = DELAY_PULSE;
  400156:	9401      	str	r4, [sp, #4]
		while (ul_delay--) {
  400158:	9b01      	ldr	r3, [sp, #4]
  40015a:	1e5a      	subs	r2, r3, #1
  40015c:	9201      	str	r2, [sp, #4]
  40015e:	2b00      	cmp	r3, #0
  400160:	d1fa      	bne.n	400158 <aat31xx_set_backlight+0x30>
	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
  400162:	3101      	adds	r1, #1
  400164:	4281      	cmp	r1, r0
  400166:	d3ee      	bcc.n	400146 <aat31xx_set_backlight+0x1e>
		ul_delay = DELAY_PULSE;
		while (ul_delay--) {
		}
	}

	ul_delay = DELAY_ENABLE;
  400168:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40016c:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  40016e:	9b01      	ldr	r3, [sp, #4]
  400170:	1e5a      	subs	r2, r3, #1
  400172:	9201      	str	r2, [sp, #4]
  400174:	2b00      	cmp	r3, #0
  400176:	d1fa      	bne.n	40016e <aat31xx_set_backlight+0x46>
	}
}
  400178:	b003      	add	sp, #12
  40017a:	bc70      	pop	{r4, r5, r6}
  40017c:	4770      	bx	lr
  40017e:	bf00      	nop
  400180:	400e1200 	.word	0x400e1200

00400184 <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  400184:	b082      	sub	sp, #8
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400186:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  40018a:	4b06      	ldr	r3, [pc, #24]	; (4001a4 <aat31xx_disable_backlight+0x20>)
  40018c:	635a      	str	r2, [r3, #52]	; 0x34
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);

	ul_delay = DELAY_DISABLE;
  40018e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400192:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  400194:	9b01      	ldr	r3, [sp, #4]
  400196:	1e5a      	subs	r2, r3, #1
  400198:	9201      	str	r2, [sp, #4]
  40019a:	2b00      	cmp	r3, #0
  40019c:	d1fa      	bne.n	400194 <aat31xx_disable_backlight+0x10>
	}
}
  40019e:	b002      	add	sp, #8
  4001a0:	4770      	bx	lr
  4001a2:	bf00      	nop
  4001a4:	400e1200 	.word	0x400e1200

004001a8 <ili93xx_write_ram_prepare>:
/**
 * \brief Prepare to write GRAM data for ili93xx.
 */
static void ili93xx_write_ram_prepare(void)
{
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4001a8:	4b0a      	ldr	r3, [pc, #40]	; (4001d4 <ili93xx_write_ram_prepare+0x2c>)
  4001aa:	781b      	ldrb	r3, [r3, #0]
  4001ac:	2b01      	cmp	r3, #1
  4001ae:	d106      	bne.n	4001be <ili93xx_write_ram_prepare+0x16>
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  4001b0:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4001b4:	2200      	movs	r2, #0
  4001b6:	701a      	strb	r2, [r3, #0]
  4001b8:	2222      	movs	r2, #34	; 0x22
  4001ba:	701a      	strb	r2, [r3, #0]
  4001bc:	4770      	bx	lr
		/** Write Data to GRAM (R22h) */
		LCD_IR(0);
		LCD_IR(ILI9325_GRAM_DATA_REG);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4001be:	2b02      	cmp	r3, #2
  4001c0:	d107      	bne.n	4001d2 <ili93xx_write_ram_prepare+0x2a>
  4001c2:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  4001c6:	222c      	movs	r2, #44	; 0x2c
  4001c8:	701a      	strb	r2, [r3, #0]
  4001ca:	2200      	movs	r2, #0
  4001cc:	701a      	strb	r2, [r3, #0]
  4001ce:	223c      	movs	r2, #60	; 0x3c
  4001d0:	701a      	strb	r2, [r3, #0]
  4001d2:	4770      	bx	lr
  4001d4:	20000c68 	.word	0x20000c68

004001d8 <ili93xx_write_ram>:
 *
 * \param ul_color 24-bits RGB color.
 */
static void ili93xx_write_ram(ili93xx_color_t ul_color)
{
	LCD_WD((ul_color >> 16) & 0xFF);
  4001d8:	f3c0 4207 	ubfx	r2, r0, #16, #8
}

static inline void LCD_WD(uint8_t lcd_data)
{
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  4001dc:	4b03      	ldr	r3, [pc, #12]	; (4001ec <ili93xx_write_ram+0x14>)
  4001de:	701a      	strb	r2, [r3, #0]
	LCD_WD((ul_color >> 8) & 0xFF);
  4001e0:	f3c0 2207 	ubfx	r2, r0, #8, #8
  4001e4:	701a      	strb	r2, [r3, #0]
	LCD_WD(ul_color & 0xFF);
  4001e6:	b2c0      	uxtb	r0, r0
  4001e8:	7018      	strb	r0, [r3, #0]
  4001ea:	4770      	bx	lr
  4001ec:	61000002 	.word	0x61000002

004001f0 <ili93xx_write_ram_buffer>:
 * \param p_ul_buf data buffer.
 * \param ul_size size in pixels.
 */
static void ili93xx_write_ram_buffer(const ili93xx_color_t *p_ul_buf,
		uint32_t ul_size)
{
  4001f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4001f4:	4607      	mov	r7, r0
  4001f6:	4688      	mov	r8, r1
	uint32_t ul_addr;
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  4001f8:	f031 0907 	bics.w	r9, r1, #7
  4001fc:	d018      	beq.n	400230 <ili93xx_write_ram_buffer+0x40>
  4001fe:	4604      	mov	r4, r0
  400200:	2600      	movs	r6, #0
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  400202:	4d12      	ldr	r5, [pc, #72]	; (40024c <ili93xx_write_ram_buffer+0x5c>)
  400204:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
  400208:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 1]);
  40020a:	6860      	ldr	r0, [r4, #4]
  40020c:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 2]);
  40020e:	68a0      	ldr	r0, [r4, #8]
  400210:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 3]);
  400212:	68e0      	ldr	r0, [r4, #12]
  400214:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 4]);
  400216:	6920      	ldr	r0, [r4, #16]
  400218:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 5]);
  40021a:	6960      	ldr	r0, [r4, #20]
  40021c:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 6]);
  40021e:	69a0      	ldr	r0, [r4, #24]
  400220:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 7]);
  400222:	69e0      	ldr	r0, [r4, #28]
  400224:	47a8      	blx	r5
 */
static void ili93xx_write_ram_buffer(const ili93xx_color_t *p_ul_buf,
		uint32_t ul_size)
{
	uint32_t ul_addr;
	for (ul_addr = 0; ul_addr < (ul_size - ul_size % 8); ul_addr += 8) {
  400226:	3608      	adds	r6, #8
  400228:	3420      	adds	r4, #32
  40022a:	454e      	cmp	r6, r9
  40022c:	d3ea      	bcc.n	400204 <ili93xx_write_ram_buffer+0x14>
  40022e:	e000      	b.n	400232 <ili93xx_write_ram_buffer+0x42>
  400230:	2600      	movs	r6, #0
		ili93xx_write_ram(p_ul_buf[ul_addr + 4]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 5]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 6]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 7]);
	}
	for (; ul_addr < ul_size; ul_addr++) {
  400232:	45b0      	cmp	r8, r6
  400234:	d908      	bls.n	400248 <ili93xx_write_ram_buffer+0x58>
  400236:	eb07 0486 	add.w	r4, r7, r6, lsl #2
		ili93xx_write_ram(p_ul_buf[ul_addr]);
  40023a:	4d04      	ldr	r5, [pc, #16]	; (40024c <ili93xx_write_ram_buffer+0x5c>)
  40023c:	f854 0b04 	ldr.w	r0, [r4], #4
  400240:	47a8      	blx	r5
		ili93xx_write_ram(p_ul_buf[ul_addr + 4]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 5]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 6]);
		ili93xx_write_ram(p_ul_buf[ul_addr + 7]);
	}
	for (; ul_addr < ul_size; ul_addr++) {
  400242:	3601      	adds	r6, #1
  400244:	45b0      	cmp	r8, r6
  400246:	d8f9      	bhi.n	40023c <ili93xx_write_ram_buffer+0x4c>
  400248:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40024c:	004001d9 	.word	0x004001d9

00400250 <ili93xx_write_register_word>:
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400250:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400254:	2200      	movs	r2, #0
  400256:	701a      	strb	r2, [r3, #0]
  400258:	7018      	strb	r0, [r3, #0]
 */
static void ili93xx_write_register_word(uint8_t uc_reg, uint16_t us_data)
{
	LCD_IR(0);
	LCD_IR(uc_reg);
	LCD_WD((us_data >> 8) & 0xFF);
  40025a:	0a0a      	lsrs	r2, r1, #8
}

static inline void LCD_WD(uint8_t lcd_data)
{
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  40025c:	3302      	adds	r3, #2
  40025e:	701a      	strb	r2, [r3, #0]
	LCD_WD(us_data & 0xFF);
  400260:	b2c9      	uxtb	r1, r1
  400262:	7019      	strb	r1, [r3, #0]
  400264:	4770      	bx	lr
  400266:	bf00      	nop

00400268 <ili93xx_write_register>:
 * \param uc_reg register address.
 * \param us_data data to be written.
 */
static void ili93xx_write_register(uint8_t uc_reg, uint8_t *p_data,
		uint8_t uc_datacnt)
{
  400268:	b410      	push	{r4}
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40026a:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  40026e:	2400      	movs	r4, #0
  400270:	701c      	strb	r4, [r3, #0]
  400272:	7018      	strb	r0, [r3, #0]
	LCD_IR(0);
	LCD_IR(uc_reg);
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  400274:	b14a      	cbz	r2, 40028a <ili93xx_write_register+0x22>
  400276:	1e4b      	subs	r3, r1, #1
  400278:	1e50      	subs	r0, r2, #1
  40027a:	fa51 f180 	uxtab	r1, r1, r0
}

static inline void LCD_WD(uint8_t lcd_data)
{
	*((volatile uint8_t *)((BOARD_ILI93XX_ADDR) | (BOARD_ILI93XX_RS))) =
  40027e:	4804      	ldr	r0, [pc, #16]	; (400290 <ili93xx_write_register+0x28>)
		LCD_WD(p_data[i]);
  400280:	f813 2f01 	ldrb.w	r2, [r3, #1]!
  400284:	7002      	strb	r2, [r0, #0]
static void ili93xx_write_register(uint8_t uc_reg, uint8_t *p_data,
		uint8_t uc_datacnt)
{
	LCD_IR(0);
	LCD_IR(uc_reg);
	for (uint8_t i = 0; i < uc_datacnt; i++) {
  400286:	428b      	cmp	r3, r1
  400288:	d1fa      	bne.n	400280 <ili93xx_write_register+0x18>
		LCD_WD(p_data[i]);
	}
}
  40028a:	bc10      	pop	{r4}
  40028c:	4770      	bx	lr
  40028e:	bf00      	nop
  400290:	61000002 	.word	0x61000002

00400294 <ili93xx_delay>:

/**
 * \brief Delay function.
 */
static void ili93xx_delay(uint32_t ul_ms)
{
  400294:	b082      	sub	sp, #8
	volatile uint32_t i;

	for (i = 0; i < ul_ms; i++) {
  400296:	2300      	movs	r3, #0
  400298:	9301      	str	r3, [sp, #4]
  40029a:	9b01      	ldr	r3, [sp, #4]
  40029c:	4298      	cmp	r0, r3
  40029e:	d911      	bls.n	4002c4 <ili93xx_delay+0x30>
		for (i = 0; i < 100000; i++) {
  4002a0:	2100      	movs	r1, #0
  4002a2:	4a09      	ldr	r2, [pc, #36]	; (4002c8 <ili93xx_delay+0x34>)
  4002a4:	9101      	str	r1, [sp, #4]
  4002a6:	9b01      	ldr	r3, [sp, #4]
  4002a8:	4293      	cmp	r3, r2
  4002aa:	d805      	bhi.n	4002b8 <ili93xx_delay+0x24>
  4002ac:	9b01      	ldr	r3, [sp, #4]
  4002ae:	3301      	adds	r3, #1
  4002b0:	9301      	str	r3, [sp, #4]
  4002b2:	9b01      	ldr	r3, [sp, #4]
  4002b4:	4293      	cmp	r3, r2
  4002b6:	d9f9      	bls.n	4002ac <ili93xx_delay+0x18>
 */
static void ili93xx_delay(uint32_t ul_ms)
{
	volatile uint32_t i;

	for (i = 0; i < ul_ms; i++) {
  4002b8:	9b01      	ldr	r3, [sp, #4]
  4002ba:	3301      	adds	r3, #1
  4002bc:	9301      	str	r3, [sp, #4]
  4002be:	9b01      	ldr	r3, [sp, #4]
  4002c0:	4283      	cmp	r3, r0
  4002c2:	d3ef      	bcc.n	4002a4 <ili93xx_delay+0x10>
		for (i = 0; i < 100000; i++) {
		}
	}
}
  4002c4:	b002      	add	sp, #8
  4002c6:	4770      	bx	lr
  4002c8:	0001869f 	.word	0x0001869f

004002cc <ili93xx_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili93xx_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  4002cc:	b430      	push	{r4, r5}
	uint32_t dw;

	if (*p_ul_x1 >= g_ul_lcd_x_length) {
  4002ce:	4c15      	ldr	r4, [pc, #84]	; (400324 <ili93xx_check_box_coordinates+0x58>)
  4002d0:	6824      	ldr	r4, [r4, #0]
  4002d2:	6805      	ldr	r5, [r0, #0]
  4002d4:	42a5      	cmp	r5, r4
		*p_ul_x1 = g_ul_lcd_x_length - 1;
  4002d6:	bf24      	itt	cs
  4002d8:	f104 35ff 	addcs.w	r5, r4, #4294967295
  4002dc:	6005      	strcs	r5, [r0, #0]
	}

	if (*p_ul_x2 >= g_ul_lcd_x_length) {
  4002de:	6815      	ldr	r5, [r2, #0]
  4002e0:	42ac      	cmp	r4, r5
		*p_ul_x2 = g_ul_lcd_x_length - 1;
  4002e2:	bf9c      	itt	ls
  4002e4:	f104 34ff 	addls.w	r4, r4, #4294967295
  4002e8:	6014      	strls	r4, [r2, #0]
	}

	if (*p_ul_y1 >= g_ul_lcd_y_length) {
  4002ea:	4c0f      	ldr	r4, [pc, #60]	; (400328 <ili93xx_check_box_coordinates+0x5c>)
  4002ec:	6824      	ldr	r4, [r4, #0]
  4002ee:	680d      	ldr	r5, [r1, #0]
  4002f0:	42a5      	cmp	r5, r4
		*p_ul_y1 = g_ul_lcd_y_length - 1;
  4002f2:	bf24      	itt	cs
  4002f4:	f104 35ff 	addcs.w	r5, r4, #4294967295
  4002f8:	600d      	strcs	r5, [r1, #0]
	}

	if (*p_ul_y2 >= g_ul_lcd_y_length) {
  4002fa:	681d      	ldr	r5, [r3, #0]
  4002fc:	42ac      	cmp	r4, r5
		*p_ul_y2 = g_ul_lcd_y_length - 1;
  4002fe:	bf9c      	itt	ls
  400300:	f104 34ff 	addls.w	r4, r4, #4294967295
  400304:	601c      	strls	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  400306:	6804      	ldr	r4, [r0, #0]
  400308:	6815      	ldr	r5, [r2, #0]
  40030a:	42ac      	cmp	r4, r5
		dw = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  40030c:	bf84      	itt	hi
  40030e:	6005      	strhi	r5, [r0, #0]
		*p_ul_x2 = dw;
  400310:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  400312:	680a      	ldr	r2, [r1, #0]
  400314:	6818      	ldr	r0, [r3, #0]
  400316:	4282      	cmp	r2, r0
		dw = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  400318:	bf84      	itt	hi
  40031a:	6008      	strhi	r0, [r1, #0]
		*p_ul_y2 = dw;
  40031c:	601a      	strhi	r2, [r3, #0]
	}
}
  40031e:	bc30      	pop	{r4, r5}
  400320:	4770      	bx	lr
  400322:	bf00      	nop
  400324:	2000000c 	.word	0x2000000c
  400328:	20000010 	.word	0x20000010

0040032c <ili93xx_device_type_identify>:
 *        ILI9341 device ID locates in Read ID4 (RD3h) register.
 *
 * \return 0 if secceed in identifying device; otherwise fails.
 */
uint8_t ili93xx_device_type_identify(void)
{
  40032c:	b082      	sub	sp, #8
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  40032e:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400332:	2200      	movs	r2, #0
  400334:	701a      	strb	r2, [r3, #0]
  400336:	22d3      	movs	r2, #211	; 0xd3
  400338:	701a      	strb	r2, [r3, #0]
																lcd_data;
}

static inline uint8_t LCD_RD(void)
{
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  40033a:	3302      	adds	r3, #2
  40033c:	781a      	ldrb	r2, [r3, #0]
{
	LCD_IR(0);
	LCD_IR(uc_reg);

	for (uint8_t i = 0; i < uc_datacnt; i++) {
		p_data[i] = LCD_RD();
  40033e:	f88d 2000 	strb.w	r2, [sp]
  400342:	781a      	ldrb	r2, [r3, #0]
  400344:	f88d 2001 	strb.w	r2, [sp, #1]
  400348:	781a      	ldrb	r2, [r3, #0]
  40034a:	f88d 2002 	strb.w	r2, [sp, #2]
  40034e:	781b      	ldrb	r3, [r3, #0]
  400350:	b2db      	uxtb	r3, r3
  400352:	f88d 3003 	strb.w	r3, [sp, #3]

	/** Read ID4 (RD4h) register to get device code for ILI9341*/
	ili93xx_read_register(ILI9341_CMD_READ_ID4, paratable, 4);
	chipid = ((uint16_t)paratable[2] << 8) + paratable[3];

	if (chipid == ILI9341_DEVICE_CODE) {
  400356:	b2d2      	uxtb	r2, r2
  400358:	eb03 2302 	add.w	r3, r3, r2, lsl #8
  40035c:	b29b      	uxth	r3, r3
  40035e:	f249 3241 	movw	r2, #37697	; 0x9341
  400362:	4293      	cmp	r3, r2
  400364:	d104      	bne.n	400370 <ili93xx_device_type_identify+0x44>
		g_uc_device_type = DEVICE_TYPE_ILI9341;
  400366:	2202      	movs	r2, #2
  400368:	4b0e      	ldr	r3, [pc, #56]	; (4003a4 <ili93xx_device_type_identify+0x78>)
  40036a:	701a      	strb	r2, [r3, #0]
		return 0;
  40036c:	2000      	movs	r0, #0
  40036e:	e017      	b.n	4003a0 <ili93xx_device_type_identify+0x74>
/** Define EBI access for ILI93xx 8-bit System Interface.*/
#if defined(BOARD_ILI93XX_ADDR) && defined (BOARD_ILI93XX_RS)
static inline void LCD_IR(uint8_t lcd_index)
{
	/** ILI93XX index register address */
	*((volatile uint8_t *)(BOARD_ILI93XX_ADDR)) = lcd_index;
  400370:	f04f 43c2 	mov.w	r3, #1627389952	; 0x61000000
  400374:	2200      	movs	r2, #0
  400376:	701a      	strb	r2, [r3, #0]
  400378:	701a      	strb	r2, [r3, #0]
																lcd_data;
}

static inline uint8_t LCD_RD(void)
{
	return *((volatile uint8_t *)((BOARD_ILI93XX_ADDR) |(BOARD_ILI93XX_RS)));
  40037a:	3302      	adds	r3, #2
  40037c:	781a      	ldrb	r2, [r3, #0]
{
	LCD_IR(0);
	LCD_IR(uc_reg);

	for (uint8_t i = 0; i < uc_datacnt; i++) {
		p_data[i] = LCD_RD();
  40037e:	f88d 2000 	strb.w	r2, [sp]
  400382:	781b      	ldrb	r3, [r3, #0]
	}

	/** Driver Code Read (R00h) for ILI9325*/
	ili93xx_read_register(ILI9325_DEVICE_CODE_REG, paratable, 2);
	chipid = ((uint16_t)paratable[0] << 8) + paratable[1];
	if (chipid == ILI9325_DEVICE_CODE) {
  400384:	b2d2      	uxtb	r2, r2
  400386:	eb03 2302 	add.w	r3, r3, r2, lsl #8
  40038a:	b29b      	uxth	r3, r3
  40038c:	f249 3225 	movw	r2, #37669	; 0x9325
  400390:	4293      	cmp	r3, r2
  400392:	d104      	bne.n	40039e <ili93xx_device_type_identify+0x72>
		g_uc_device_type = DEVICE_TYPE_ILI9325;
  400394:	2201      	movs	r2, #1
  400396:	4b03      	ldr	r3, [pc, #12]	; (4003a4 <ili93xx_device_type_identify+0x78>)
  400398:	701a      	strb	r2, [r3, #0]
		return 0;
  40039a:	2000      	movs	r0, #0
  40039c:	e000      	b.n	4003a0 <ili93xx_device_type_identify+0x74>
	}

	return 1;
  40039e:	2001      	movs	r0, #1
}
  4003a0:	b002      	add	sp, #8
  4003a2:	4770      	bx	lr
  4003a4:	20000c68 	.word	0x20000c68

004003a8 <ili93xx_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili93xx_display_on(void)
{
  4003a8:	b508      	push	{r3, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4003aa:	4b09      	ldr	r3, [pc, #36]	; (4003d0 <ili93xx_display_on+0x28>)
  4003ac:	781b      	ldrb	r3, [r3, #0]
  4003ae:	2b01      	cmp	r3, #1
  4003b0:	d105      	bne.n	4003be <ili93xx_display_on+0x16>
		ili93xx_write_register_word(ILI9325_DISP_CTRL1,
  4003b2:	f240 1133 	movw	r1, #307	; 0x133
  4003b6:	2007      	movs	r0, #7
  4003b8:	4b06      	ldr	r3, [pc, #24]	; (4003d4 <ili93xx_display_on+0x2c>)
  4003ba:	4798      	blx	r3
  4003bc:	bd08      	pop	{r3, pc}
				ILI9325_DISP_CTRL1_BASEE |
				ILI9325_DISP_CTRL1_GON |
				ILI9325_DISP_CTRL1_DTE |
				ILI9325_DISP_CTRL1_D(0x03));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4003be:	2b02      	cmp	r3, #2
  4003c0:	d104      	bne.n	4003cc <ili93xx_display_on+0x24>
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, NULL, 0);
  4003c2:	2200      	movs	r2, #0
  4003c4:	4611      	mov	r1, r2
  4003c6:	2029      	movs	r0, #41	; 0x29
  4003c8:	4b03      	ldr	r3, [pc, #12]	; (4003d8 <ili93xx_display_on+0x30>)
  4003ca:	4798      	blx	r3
  4003cc:	bd08      	pop	{r3, pc}
  4003ce:	bf00      	nop
  4003d0:	20000c68 	.word	0x20000c68
  4003d4:	00400251 	.word	0x00400251
  4003d8:	00400269 	.word	0x00400269

004003dc <ili93xx_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili93xx_set_foreground_color(ili93xx_color_t ul_color)
{
  4003dc:	4a04      	ldr	r2, [pc, #16]	; (4003f0 <ili93xx_set_foreground_color+0x14>)
  4003de:	1f13      	subs	r3, r2, #4
  4003e0:	f502 726f 	add.w	r2, r2, #956	; 0x3bc
	uint32_t i;

	/** Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
		g_ul_pixel_cache[i] = ul_color;
  4003e4:	f843 0f04 	str.w	r0, [r3, #4]!
void ili93xx_set_foreground_color(ili93xx_color_t ul_color)
{
	uint32_t i;

	/** Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  4003e8:	4293      	cmp	r3, r2
  4003ea:	d1fb      	bne.n	4003e4 <ili93xx_set_foreground_color+0x8>
		g_ul_pixel_cache[i] = ul_color;
	}
}
  4003ec:	4770      	bx	lr
  4003ee:	bf00      	nop
  4003f0:	200008a8 	.word	0x200008a8

004003f4 <ili93xx_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili93xx_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  4003f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4003f8:	b082      	sub	sp, #8
  4003fa:	460c      	mov	r4, r1
  4003fc:	4617      	mov	r7, r2
  4003fe:	461e      	mov	r6, r3
	Assert(ul_x <= (g_ul_lcd_x_length - 1));
	Assert(ul_y <= (g_ul_lcd_y_length - 1));
	Assert(ul_width <= (g_ul_lcd_x_length - ul_x));
	Assert(ul_height <= (g_ul_lcd_y_length - ul_y));
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  400400:	4b23      	ldr	r3, [pc, #140]	; (400490 <ili93xx_set_window+0x9c>)
  400402:	781b      	ldrb	r3, [r3, #0]
  400404:	2b01      	cmp	r3, #1
  400406:	d114      	bne.n	400432 <ili93xx_set_window+0x3e>
		/** Set Horizontal Address Start Position */
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_START,
  400408:	b285      	uxth	r5, r0
  40040a:	4629      	mov	r1, r5
  40040c:	2050      	movs	r0, #80	; 0x50
  40040e:	f8df 8088 	ldr.w	r8, [pc, #136]	; 400498 <ili93xx_set_window+0xa4>
  400412:	47c0      	blx	r8
				(uint16_t)ul_x);

		/** Set Horizontal Address End Position */
		ili93xx_write_register_word(ILI9325_HORIZONTAL_ADDR_END,
  400414:	1e78      	subs	r0, r7, #1
  400416:	1829      	adds	r1, r5, r0
  400418:	b289      	uxth	r1, r1
  40041a:	2051      	movs	r0, #81	; 0x51
  40041c:	47c0      	blx	r8
				(uint16_t)(ul_x + ul_width - 1));

		/** Set Vertical Address Start Position */
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_START,
  40041e:	b2a4      	uxth	r4, r4
  400420:	4621      	mov	r1, r4
  400422:	2052      	movs	r0, #82	; 0x52
  400424:	47c0      	blx	r8
				(uint16_t)ul_y);

		/** Set Vertical Address End Position */
		ili93xx_write_register_word(ILI9325_VERTICAL_ADDR_END,
  400426:	1e71      	subs	r1, r6, #1
  400428:	4421      	add	r1, r4
  40042a:	b289      	uxth	r1, r1
  40042c:	2053      	movs	r0, #83	; 0x53
  40042e:	47c0      	blx	r8
  400430:	e02a      	b.n	400488 <ili93xx_set_window+0x94>
				(uint16_t)(ul_y + ul_height - 1));
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  400432:	2b02      	cmp	r3, #2
  400434:	d128      	bne.n	400488 <ili93xx_set_window+0x94>
		uint8_t paratable[4];

		/** Set Column Address Position */
		paratable[0] = (ul_x >> 8) & 0xFF;
  400436:	0a03      	lsrs	r3, r0, #8
  400438:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_x & 0xFF;
  40043c:	b2c3      	uxtb	r3, r0
  40043e:	f88d 3005 	strb.w	r3, [sp, #5]
		paratable[2] = ((ul_x + ul_width - 1) >> 8) & 0xFF;
  400442:	3a01      	subs	r2, #1
  400444:	4410      	add	r0, r2
  400446:	0a00      	lsrs	r0, r0, #8
  400448:	f88d 0006 	strb.w	r0, [sp, #6]
		paratable[3] = (ul_x + ul_width - 1) & 0xFF;
  40044c:	4617      	mov	r7, r2
  40044e:	441f      	add	r7, r3
  400450:	f88d 7007 	strb.w	r7, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_COLUMN_ADDRESS_SET,
  400454:	2204      	movs	r2, #4
  400456:	eb0d 0102 	add.w	r1, sp, r2
  40045a:	202a      	movs	r0, #42	; 0x2a
  40045c:	4d0d      	ldr	r5, [pc, #52]	; (400494 <ili93xx_set_window+0xa0>)
  40045e:	47a8      	blx	r5
				paratable, 4);

		/** Set Page Address Position */
		paratable[0] = (ul_y >> 8) & 0xFF;
  400460:	0a23      	lsrs	r3, r4, #8
  400462:	f88d 3004 	strb.w	r3, [sp, #4]
		paratable[1] = ul_y & 0xFF;
  400466:	b2e3      	uxtb	r3, r4
  400468:	f88d 3005 	strb.w	r3, [sp, #5]
		paratable[2] = ((ul_y + ul_height - 1) >> 8) & 0xFF;
  40046c:	1e72      	subs	r2, r6, #1
  40046e:	4414      	add	r4, r2
  400470:	0a24      	lsrs	r4, r4, #8
  400472:	f88d 4006 	strb.w	r4, [sp, #6]
		paratable[3] = (ul_y + ul_height - 1) & 0xFF;
  400476:	4616      	mov	r6, r2
  400478:	441e      	add	r6, r3
  40047a:	f88d 6007 	strb.w	r6, [sp, #7]
		ili93xx_write_register(ILI9341_CMD_PAGE_ADDRESS_SET,
  40047e:	2204      	movs	r2, #4
  400480:	eb0d 0102 	add.w	r1, sp, r2
  400484:	202b      	movs	r0, #43	; 0x2b
  400486:	47a8      	blx	r5
				       paratable, 4);
	}
}
  400488:	b002      	add	sp, #8
  40048a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40048e:	bf00      	nop
  400490:	20000c68 	.word	0x20000c68
  400494:	00400269 	.word	0x00400269
  400498:	00400251 	.word	0x00400251

0040049c <ili93xx_set_cursor_position>:
 *
 * \param us_x X coordinate of upper-left corner on LCD.
 * \param us_y Y coordinate of upper-left corner on LCD.
 */
void ili93xx_set_cursor_position(uint16_t us_x, uint16_t us_y)
{
  40049c:	b538      	push	{r3, r4, r5, lr}
	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  40049e:	4b06      	ldr	r3, [pc, #24]	; (4004b8 <ili93xx_set_cursor_position+0x1c>)
  4004a0:	781b      	ldrb	r3, [r3, #0]
  4004a2:	2b01      	cmp	r3, #1
  4004a4:	d107      	bne.n	4004b6 <ili93xx_set_cursor_position+0x1a>
  4004a6:	460c      	mov	r4, r1
  4004a8:	4601      	mov	r1, r0
		/** GRAM Horizontal/Vertical Address Set (R20h, R21h) */
		ili93xx_write_register_word(ILI9325_HORIZONTAL_GRAM_ADDR_SET, us_x);
  4004aa:	2020      	movs	r0, #32
  4004ac:	4d03      	ldr	r5, [pc, #12]	; (4004bc <ili93xx_set_cursor_position+0x20>)
  4004ae:	47a8      	blx	r5
		ili93xx_write_register_word(ILI9325_VERTICAL_GRAM_ADDR_SET, us_y);
  4004b0:	4621      	mov	r1, r4
  4004b2:	2021      	movs	r0, #33	; 0x21
  4004b4:	47a8      	blx	r5
  4004b6:	bd38      	pop	{r3, r4, r5, pc}
  4004b8:	20000c68 	.word	0x20000c68
  4004bc:	00400251 	.word	0x00400251

004004c0 <ili93xx_init>:
 * \param p_opt pointer to ILI93xx option structure.
 *
 * \return 0 if initialization succeeds, otherwise fails.
 */
uint32_t ili93xx_init(struct ili93xx_opt_t *p_opt)
{
  4004c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4004c4:	b083      	sub	sp, #12
  4004c6:	4606      	mov	r6, r0
	uint8_t paratable[6];

	/** Identify the LCD driver device*/
	if (ili93xx_device_type_identify() != 0) {
  4004c8:	4bac      	ldr	r3, [pc, #688]	; (40077c <ili93xx_init+0x2bc>)
  4004ca:	4798      	blx	r3
  4004cc:	2800      	cmp	r0, #0
  4004ce:	f040 814f 	bne.w	400770 <ili93xx_init+0x2b0>
		return 1;
	}

	g_ul_lcd_x_length = ILI93XX_LCD_WIDTH;
  4004d2:	22f0      	movs	r2, #240	; 0xf0
  4004d4:	4baa      	ldr	r3, [pc, #680]	; (400780 <ili93xx_init+0x2c0>)
  4004d6:	601a      	str	r2, [r3, #0]
	g_ul_lcd_y_length = ILI93XX_LCD_HEIGHT;
  4004d8:	f44f 72a0 	mov.w	r2, #320	; 0x140
  4004dc:	4ba9      	ldr	r3, [pc, #676]	; (400784 <ili93xx_init+0x2c4>)
  4004de:	601a      	str	r2, [r3, #0]

	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4004e0:	4ba9      	ldr	r3, [pc, #676]	; (400788 <ili93xx_init+0x2c8>)
  4004e2:	781b      	ldrb	r3, [r3, #0]
  4004e4:	2b01      	cmp	r3, #1
  4004e6:	f040 80b1 	bne.w	40064c <ili93xx_init+0x18c>
		/** Turn off LCD */
		ili93xx_write_register_word(ILI9325_DISP_CTRL1, ILI9325_DISP_CTRL1_GON |
  4004ea:	2133      	movs	r1, #51	; 0x33
  4004ec:	2007      	movs	r0, #7
  4004ee:	4ca7      	ldr	r4, [pc, #668]	; (40078c <ili93xx_init+0x2cc>)
  4004f0:	47a0      	blx	r4
				ILI9325_DISP_CTRL1_DTE | ILI9325_DISP_CTRL1_D(0x03));

		/** Start initial sequence */
		/** Disable sleep and standby mode*/
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  4004f2:	2100      	movs	r1, #0
  4004f4:	2010      	movs	r0, #16
  4004f6:	47a0      	blx	r4
		/** Start internal OSC */
		ili93xx_write_register_word(ILI9325_START_OSC_CTRL,
  4004f8:	2101      	movs	r1, #1
  4004fa:	2000      	movs	r0, #0
  4004fc:	47a0      	blx	r4
				ILI9325_START_OSC_CTRL_EN);
		/** Set SS bit and direction output from S720 to S1 */
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL1,
  4004fe:	f44f 7180 	mov.w	r1, #256	; 0x100
  400502:	2001      	movs	r0, #1
  400504:	47a0      	blx	r4
				ILI9325_DRIVER_OUTPUT_CTRL1_SS);
		/** Set 1 line inversion */
		ili93xx_write_register_word(ILI9325_LCD_DRIVING_CTRL,
  400506:	f44f 61e0 	mov.w	r1, #1792	; 0x700
  40050a:	2002      	movs	r0, #2
  40050c:	47a0      	blx	r4
				ILI9325_LCD_DRIVING_CTRL_BIT10 | ILI9325_LCD_DRIVING_CTRL_EOR
				| ILI9325_LCD_DRIVING_CTRL_BC0);
		/** Disable resizing feature */
		ili93xx_write_register_word(ILI9325_RESIZE_CTRL, 0x0000);
  40050e:	2100      	movs	r1, #0
  400510:	2004      	movs	r0, #4
  400512:	47a0      	blx	r4
		/** Set the back porch and front porch */
		ili93xx_write_register_word(ILI9325_DISP_CTRL2,
  400514:	f240 2107 	movw	r1, #519	; 0x207
  400518:	2008      	movs	r0, #8
  40051a:	47a0      	blx	r4
				ILI9325_DISP_CTRL2_BP(
				0x07) | ILI9325_DISP_CTRL2_FP(0x02));
		/** Set non-display area refresh cycle ISC[3:0] */
		ili93xx_write_register_word(ILI9325_DISP_CTRL3, 0x0000);
  40051c:	2100      	movs	r1, #0
  40051e:	2009      	movs	r0, #9
  400520:	47a0      	blx	r4
		/** Disable FMARK function */
		ili93xx_write_register_word(ILI9325_DISP_CTRL4, 0x0000);
  400522:	2100      	movs	r1, #0
  400524:	200a      	movs	r0, #10
  400526:	47a0      	blx	r4
		/** 18-bit RGB interface and writing display data by system
		 *interface */
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL1,
  400528:	2100      	movs	r1, #0
  40052a:	200c      	movs	r0, #12
  40052c:	47a0      	blx	r4
				0x0000);
		/** Set the output position of frame cycle */
		ili93xx_write_register_word(ILI9325_FRAME_MAKER_POS, 0x0000);
  40052e:	2100      	movs	r1, #0
  400530:	200d      	movs	r0, #13
  400532:	47a0      	blx	r4
		/** RGB interface polarity */
		ili93xx_write_register_word(ILI9325_RGB_DISP_INTERFACE_CTRL2,
  400534:	2100      	movs	r1, #0
  400536:	200f      	movs	r0, #15
  400538:	47a0      	blx	r4
				0x0000);

		/** Power on sequence */
		/** Disable sleep and standby mode */
		ili93xx_write_register_word(ILI9325_POWER_CTRL1, 0x0000);
  40053a:	2100      	movs	r1, #0
  40053c:	2010      	movs	r0, #16
  40053e:	47a0      	blx	r4

		/**
		 * Selects the operating frequency of the step-up circuit 1,2
		 * and Sets the ratio factor of Vci.
		 */
		ili93xx_write_register_word(ILI9325_POWER_CTRL2, 0x0000);
  400540:	2100      	movs	r1, #0
  400542:	2011      	movs	r0, #17
  400544:	47a0      	blx	r4
		/** Set VREG1OUT voltage */
		ili93xx_write_register_word(ILI9325_POWER_CTRL3, 0x0000);
  400546:	2100      	movs	r1, #0
  400548:	2012      	movs	r0, #18
  40054a:	47a0      	blx	r4
		/** Set VCOM amplitude */
		ili93xx_write_register_word(ILI9325_POWER_CTRL4, 0x0000);
  40054c:	2100      	movs	r1, #0
  40054e:	2013      	movs	r0, #19
  400550:	47a0      	blx	r4
		ili93xx_delay(200);
  400552:	20c8      	movs	r0, #200	; 0xc8
  400554:	4d8e      	ldr	r5, [pc, #568]	; (400790 <ili93xx_init+0x2d0>)
  400556:	47a8      	blx	r5

		/**
		 * Adjusts the constant current and Sets the factor used
		 * in the step-up circuits.
		 */
		ili93xx_write_register_word(ILI9325_POWER_CTRL1,
  400558:	f241 2190 	movw	r1, #4752	; 0x1290
  40055c:	2010      	movs	r0, #16
  40055e:	47a0      	blx	r4

		/**
		 * Select the operating frequency of the step-up circuit 1,2 and
		 * Sets the ratio factor of Vci
		 */
		ili93xx_write_register_word(ILI9325_POWER_CTRL2,
  400560:	f240 2127 	movw	r1, #551	; 0x227
  400564:	2011      	movs	r0, #17
  400566:	47a0      	blx	r4
				ILI9325_POWER_CTRL2_DC1(0x02) |
				ILI9325_POWER_CTRL2_DC0(0x02) | ILI9325_POWER_CTRL2_VC(0x07));
		ili93xx_delay(50);
  400568:	2032      	movs	r0, #50	; 0x32
  40056a:	47a8      	blx	r5
		/** Internal reference voltage= Vci */
		ili93xx_write_register_word(ILI9325_POWER_CTRL3,
  40056c:	211b      	movs	r1, #27
  40056e:	2012      	movs	r0, #18
  400570:	47a0      	blx	r4
				ILI9325_POWER_CTRL3_PON | ILI9325_POWER_CTRL3_VRH(0x0B));
		ili93xx_delay(50);
  400572:	2032      	movs	r0, #50	; 0x32
  400574:	47a8      	blx	r5
		/** Set VDV[4:0] for VCOM amplitude */
		ili93xx_write_register_word(ILI9325_POWER_CTRL4,
  400576:	f44f 5188 	mov.w	r1, #4352	; 0x1100
  40057a:	2013      	movs	r0, #19
  40057c:	47a0      	blx	r4
				ILI9325_POWER_CTRL4_VDV(0x11));
		/** Set VCM[5:0] for VCOMH */
		ili93xx_write_register_word(ILI9325_POWER_CTRL7,
  40057e:	2119      	movs	r1, #25
  400580:	2029      	movs	r0, #41	; 0x29
  400582:	47a0      	blx	r4
				ILI9325_POWER_CTRL7_VCM(0x19));
		/** Set Frame Rate */
		ili93xx_write_register_word(ILI9325_FRAME_RATE_AND_COLOR_CTRL,
  400584:	210d      	movs	r1, #13
  400586:	202b      	movs	r0, #43	; 0x2b
  400588:	47a0      	blx	r4
				ILI9325_FRAME_RATE_AND_COLOR_CTRL_FRS(0x0D));
		ili93xx_delay(50);
  40058a:	2032      	movs	r0, #50	; 0x32
  40058c:	47a8      	blx	r5

		/** Adjust the Gamma Curve */
		ili93xx_write_register_word(ILI9325_GAMMA_CTL1, 0x0000);
  40058e:	2100      	movs	r1, #0
  400590:	2030      	movs	r0, #48	; 0x30
  400592:	47a0      	blx	r4
		ili93xx_write_register_word(ILI9325_GAMMA_CTL2,
  400594:	f44f 7101 	mov.w	r1, #516	; 0x204
  400598:	2031      	movs	r0, #49	; 0x31
  40059a:	47a0      	blx	r4
				ILI9325_GAMMA_CTL2_KP3(0x02) |
				ILI9325_GAMMA_CTL2_KP2(0x04));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL3,
  40059c:	f44f 7100 	mov.w	r1, #512	; 0x200
  4005a0:	2032      	movs	r0, #50	; 0x32
  4005a2:	47a0      	blx	r4
				ILI9325_GAMMA_CTL3_KP5(0x02) |
				ILI9325_GAMMA_CTL3_KP4(0x00));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL4,
  4005a4:	2107      	movs	r1, #7
  4005a6:	2035      	movs	r0, #53	; 0x35
  4005a8:	47a0      	blx	r4
				ILI9325_GAMMA_CTL4_RP1(0x00) |
				ILI9325_GAMMA_CTL4_RP0(0x07));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL5,
  4005aa:	f241 4104 	movw	r1, #5124	; 0x1404
  4005ae:	2036      	movs	r0, #54	; 0x36
  4005b0:	47a0      	blx	r4
				ILI9325_GAMMA_CTL5_VRP1(0x14) |
				ILI9325_GAMMA_CTL5_VRP0(0x04));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL6,
  4005b2:	f240 7105 	movw	r1, #1797	; 0x705
  4005b6:	2037      	movs	r0, #55	; 0x37
  4005b8:	47a0      	blx	r4
				ILI9325_GAMMA_CTL6_KN1(0x07) |
				ILI9325_GAMMA_CTL6_KN0(0x05));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL7,
  4005ba:	f240 3105 	movw	r1, #773	; 0x305
  4005be:	2038      	movs	r0, #56	; 0x38
  4005c0:	47a0      	blx	r4
				ILI9325_GAMMA_CTL7_KN3(0x03) |
				ILI9325_GAMMA_CTL7_KN2(0x05));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL8,
  4005c2:	f240 7107 	movw	r1, #1799	; 0x707
  4005c6:	2039      	movs	r0, #57	; 0x39
  4005c8:	47a0      	blx	r4
				ILI9325_GAMMA_CTL8_KN5(0x07) |
				ILI9325_GAMMA_CTL8_KN4(0x07));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL9,
  4005ca:	f240 7101 	movw	r1, #1793	; 0x701
  4005ce:	203c      	movs	r0, #60	; 0x3c
  4005d0:	47a0      	blx	r4
				ILI9325_GAMMA_CTL9_RN1(0x07) |
				ILI9325_GAMMA_CTL9_RN0(0x01));
		ili93xx_write_register_word(ILI9325_GAMMA_CTL10,
  4005d2:	210e      	movs	r1, #14
  4005d4:	203d      	movs	r0, #61	; 0x3d
  4005d6:	47a0      	blx	r4
		 * DFM Set the mode of transferring data to the internal RAM
		 * when TRI = 1.
		 * I/D[1:0] = 11 Horizontal : increment Vertical : increment,
		 * AM=0:Horizontal
		 */
		ili93xx_write_register_word(ILI9325_ENTRY_MODE,
  4005d8:	f24d 0110 	movw	r1, #53264	; 0xd010
  4005dc:	2003      	movs	r0, #3
  4005de:	47a0      	blx	r4
				ILI9325_ENTRY_MODE_ID(0x01) | ILI9325_ENTRY_MODE_BGR);
		/**
		 * Sets the number of lines to drive the LCD at an interval of 8
		 * lines. The scan direction is from G320 to G1
		 */
		ili93xx_write_register_word(ILI9325_DRIVER_OUTPUT_CTRL2,
  4005e0:	f44f 4127 	mov.w	r1, #42752	; 0xa700
  4005e4:	2060      	movs	r0, #96	; 0x60
  4005e6:	47a0      	blx	r4
				ILI9325_DRIVER_OUTPUT_CTRL2_GS |
				ILI9325_DRIVER_OUTPUT_CTRL2_NL(0x27));

		/** Vertical Scrolling */
		/** Disable scrolling and enable the grayscale inversion */
		ili93xx_write_register_word(ILI9325_BASE_IMG_DISP_CTRL,
  4005e8:	2101      	movs	r1, #1
  4005ea:	2061      	movs	r0, #97	; 0x61
  4005ec:	47a0      	blx	r4
				ILI9325_BASE_IMG_DISP_CTRL_REV);
		ili93xx_write_register_word(ILI9325_VERTICAL_SCROLL_CTRL,
  4005ee:	2100      	movs	r1, #0
  4005f0:	206a      	movs	r0, #106	; 0x6a
  4005f2:	47a0      	blx	r4
				0x0000);

		/** Disable Partial Display */
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_DISP_POS,
  4005f4:	2100      	movs	r1, #0
  4005f6:	2080      	movs	r0, #128	; 0x80
  4005f8:	47a0      	blx	r4
				0x0000);
		ili93xx_write_register_word(
  4005fa:	2100      	movs	r1, #0
  4005fc:	2081      	movs	r0, #129	; 0x81
  4005fe:	47a0      	blx	r4
				ILI9325_PARTIAL_IMG1_AREA_START_LINE,
				0x0000);
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG1_AREA_END_LINE,
  400600:	2100      	movs	r1, #0
  400602:	2082      	movs	r0, #130	; 0x82
  400604:	47a0      	blx	r4
				0x0000);
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_DISP_POS,
  400606:	2100      	movs	r1, #0
  400608:	2083      	movs	r0, #131	; 0x83
  40060a:	47a0      	blx	r4
				0x0000);
		ili93xx_write_register_word(
  40060c:	2100      	movs	r1, #0
  40060e:	2084      	movs	r0, #132	; 0x84
  400610:	47a0      	blx	r4
				ILI9325_PARTIAL_IMG2_AREA_START_LINE,
				0x0000);
		ili93xx_write_register_word(ILI9325_PARTIAL_IMG2_AREA_END_LINE,
  400612:	2100      	movs	r1, #0
  400614:	2085      	movs	r0, #133	; 0x85
  400616:	47a0      	blx	r4
				0x0000);

		/** Panel Control */
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL1,
  400618:	2110      	movs	r1, #16
  40061a:	2090      	movs	r0, #144	; 0x90
  40061c:	47a0      	blx	r4
				ILI9325_PANEL_INTERFACE_CTRL1_RTNI(0x10));
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL2,
  40061e:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400622:	2092      	movs	r0, #146	; 0x92
  400624:	47a0      	blx	r4
				ILI9325_PANEL_INTERFACE_CTRL2_NOWI(0x06));
		ili93xx_write_register_word(ILI9325_PANEL_INTERFACE_CTRL4,
  400626:	f44f 7188 	mov.w	r1, #272	; 0x110
  40062a:	2095      	movs	r0, #149	; 0x95
  40062c:	47a0      	blx	r4
				ILI9325_PANEL_INTERFACE_CTRL4_DIVE(0x01) |
				ILI9325_PANEL_INTERFACE_CTRL4_RTNE(0x10));

		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  40062e:	6873      	ldr	r3, [r6, #4]
  400630:	6832      	ldr	r2, [r6, #0]
  400632:	2100      	movs	r1, #0
  400634:	4608      	mov	r0, r1
  400636:	4c57      	ldr	r4, [pc, #348]	; (400794 <ili93xx_init+0x2d4>)
  400638:	47a0      	blx	r4
		ili93xx_set_foreground_color(p_opt->foreground_color);
  40063a:	68b0      	ldr	r0, [r6, #8]
  40063c:	4b56      	ldr	r3, [pc, #344]	; (400798 <ili93xx_init+0x2d8>)
  40063e:	4798      	blx	r3
		ili93xx_set_cursor_position(0, 0);
  400640:	2100      	movs	r1, #0
  400642:	4608      	mov	r0, r1
  400644:	4b55      	ldr	r3, [pc, #340]	; (40079c <ili93xx_init+0x2dc>)
  400646:	4798      	blx	r3
	} else {
		/** exit with return value 1 if device type is not supported.*/
		return 1;
	}

	return 0;
  400648:	2000      	movs	r0, #0
  40064a:	e094      	b.n	400776 <ili93xx_init+0x2b6>
				ILI9325_PANEL_INTERFACE_CTRL4_RTNE(0x10));

		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
		ili93xx_set_foreground_color(p_opt->foreground_color);
		ili93xx_set_cursor_position(0, 0);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  40064c:	2b02      	cmp	r3, #2
  40064e:	f040 8091 	bne.w	400774 <ili93xx_init+0x2b4>
		/** init for ILI9341 **/
		/** power control A configuration*/
		paratable[0] = 0x39;
  400652:	2339      	movs	r3, #57	; 0x39
  400654:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x2C;
  400658:	232c      	movs	r3, #44	; 0x2c
  40065a:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x00;
  40065e:	2400      	movs	r4, #0
  400660:	f88d 4002 	strb.w	r4, [sp, #2]
		paratable[3] = 0x34;
  400664:	2334      	movs	r3, #52	; 0x34
  400666:	f88d 3003 	strb.w	r3, [sp, #3]
		paratable[4] = 0x02;
  40066a:	2702      	movs	r7, #2
  40066c:	f88d 7004 	strb.w	r7, [sp, #4]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_A, paratable, 5);
  400670:	2205      	movs	r2, #5
  400672:	4669      	mov	r1, sp
  400674:	20cb      	movs	r0, #203	; 0xcb
  400676:	4d4a      	ldr	r5, [pc, #296]	; (4007a0 <ili93xx_init+0x2e0>)
  400678:	47a8      	blx	r5

		/** power control B configuration */
		paratable[0] = 0;
  40067a:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0xAA;
  40067e:	23aa      	movs	r3, #170	; 0xaa
  400680:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0xB0;
  400684:	23b0      	movs	r3, #176	; 0xb0
  400686:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_B, paratable, 3);
  40068a:	2203      	movs	r2, #3
  40068c:	4669      	mov	r1, sp
  40068e:	20cf      	movs	r0, #207	; 0xcf
  400690:	47a8      	blx	r5

		/** Pump Ratio Control configuration */
		paratable[0] = 0x30;
  400692:	2330      	movs	r3, #48	; 0x30
  400694:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PUMP_RATIO_CONTROL,
  400698:	2201      	movs	r2, #1
  40069a:	4669      	mov	r1, sp
  40069c:	20f7      	movs	r0, #247	; 0xf7
  40069e:	47a8      	blx	r5
				paratable, 1);

		/** Power Control 1 configuration*/
		paratable[0] = 0x25;
  4006a0:	2325      	movs	r3, #37	; 0x25
  4006a2:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_1, paratable, 1);
  4006a6:	2201      	movs	r2, #1
  4006a8:	4669      	mov	r1, sp
  4006aa:	20c0      	movs	r0, #192	; 0xc0
  4006ac:	47a8      	blx	r5

		/** Power Control 2 configuration*/
		paratable[0] = 0x11;
  4006ae:	f04f 0911 	mov.w	r9, #17
  4006b2:	f88d 9000 	strb.w	r9, [sp]
		ili93xx_write_register(ILI9341_CMD_POWER_CONTROL_2, paratable, 1);
  4006b6:	2201      	movs	r2, #1
  4006b8:	4669      	mov	r1, sp
  4006ba:	20c1      	movs	r0, #193	; 0xc1
  4006bc:	47a8      	blx	r5

		/** VOM Control 1 configuration*/
		paratable[0] = 0x5C;
  4006be:	235c      	movs	r3, #92	; 0x5c
  4006c0:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x4C;
  4006c4:	234c      	movs	r3, #76	; 0x4c
  4006c6:	f88d 3001 	strb.w	r3, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_1, paratable, 2);
  4006ca:	463a      	mov	r2, r7
  4006cc:	4669      	mov	r1, sp
  4006ce:	20c5      	movs	r0, #197	; 0xc5
  4006d0:	47a8      	blx	r5

		/** VOM control 2 configuration*/
		paratable[0] = 0x94;
  4006d2:	2394      	movs	r3, #148	; 0x94
  4006d4:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_VCOM_CONTROL_2, paratable, 1);
  4006d8:	2201      	movs	r2, #1
  4006da:	4669      	mov	r1, sp
  4006dc:	20c7      	movs	r0, #199	; 0xc7
  4006de:	47a8      	blx	r5

		/** Driver Timing Control A configuration*/
		paratable[0] = 0x85;
  4006e0:	2385      	movs	r3, #133	; 0x85
  4006e2:	f88d 3000 	strb.w	r3, [sp]
		paratable[1] = 0x01;
  4006e6:	f04f 0801 	mov.w	r8, #1
  4006ea:	f88d 8001 	strb.w	r8, [sp, #1]
		paratable[2] = 0x78;
  4006ee:	2378      	movs	r3, #120	; 0x78
  4006f0:	f88d 3002 	strb.w	r3, [sp, #2]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_A, paratable, 3);
  4006f4:	2203      	movs	r2, #3
  4006f6:	4669      	mov	r1, sp
  4006f8:	20e8      	movs	r0, #232	; 0xe8
  4006fa:	47a8      	blx	r5

		/** Driver Timing Control B configuration*/
		paratable[0] = 0x00;
  4006fc:	f88d 4000 	strb.w	r4, [sp]
		paratable[1] = 0x00;
  400700:	f88d 4001 	strb.w	r4, [sp, #1]
		ili93xx_write_register(ILI9341_CMD_DRIVER_TIMING_CTL_B, paratable, 2);
  400704:	463a      	mov	r2, r7
  400706:	4669      	mov	r1, sp
  400708:	20ea      	movs	r0, #234	; 0xea
  40070a:	47a8      	blx	r5

		/** Memory Access Control configuration*/
		paratable[0] = ILI9341_CMD_MEMORY_ACCESS_CONTROL_MX |
  40070c:	2348      	movs	r3, #72	; 0x48
  40070e:	f88d 3000 	strb.w	r3, [sp]
				ILI9341_CMD_MEMORY_ACCESS_CONTROL_BGR;
		ili93xx_write_register(ILI9341_CMD_MEMORY_ACCESS_CONTROL,
  400712:	4642      	mov	r2, r8
  400714:	4669      	mov	r1, sp
  400716:	2036      	movs	r0, #54	; 0x36
  400718:	47a8      	blx	r5
				paratable, 1);

		/** Colmod Pixel Format Set configuation*/
		paratable[0] = 0x06;
  40071a:	2306      	movs	r3, #6
  40071c:	f88d 3000 	strb.w	r3, [sp]
		ili93xx_write_register(ILI9341_CMD_PIXEL_FORMAT_SET, paratable, 1);
  400720:	4642      	mov	r2, r8
  400722:	4669      	mov	r1, sp
  400724:	203a      	movs	r0, #58	; 0x3a
  400726:	47a8      	blx	r5

		/** Display Function Control */
		paratable[0] = 0x02;
  400728:	f88d 7000 	strb.w	r7, [sp]
		paratable[1] = 0x82;
  40072c:	2382      	movs	r3, #130	; 0x82
  40072e:	f88d 3001 	strb.w	r3, [sp, #1]
		paratable[2] = 0x27;
  400732:	2327      	movs	r3, #39	; 0x27
  400734:	f88d 3002 	strb.w	r3, [sp, #2]
		paratable[3] = 0x00;
  400738:	f88d 4003 	strb.w	r4, [sp, #3]
		ili93xx_write_register(ILI9341_CMD_DISPLAY_FUNCTION_CTL, paratable, 4);
  40073c:	2204      	movs	r2, #4
  40073e:	4669      	mov	r1, sp
  400740:	20b6      	movs	r0, #182	; 0xb6
  400742:	47a8      	blx	r5
		
		/** set window area*/
		ili93xx_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  400744:	6873      	ldr	r3, [r6, #4]
  400746:	6832      	ldr	r2, [r6, #0]
  400748:	4621      	mov	r1, r4
  40074a:	4620      	mov	r0, r4
  40074c:	4f11      	ldr	r7, [pc, #68]	; (400794 <ili93xx_init+0x2d4>)
  40074e:	47b8      	blx	r7
		ili93xx_set_foreground_color(p_opt->foreground_color);
  400750:	68b0      	ldr	r0, [r6, #8]
  400752:	4b11      	ldr	r3, [pc, #68]	; (400798 <ili93xx_init+0x2d8>)
  400754:	4798      	blx	r3
		/** Leave sleep mode*/
		ili93xx_write_register(ILI9341_CMD_SLEEP_OUT, paratable, 0);
  400756:	4622      	mov	r2, r4
  400758:	4669      	mov	r1, sp
  40075a:	4648      	mov	r0, r9
  40075c:	47a8      	blx	r5
		ili93xx_delay(10);
  40075e:	200a      	movs	r0, #10
  400760:	4b0b      	ldr	r3, [pc, #44]	; (400790 <ili93xx_init+0x2d0>)
  400762:	4798      	blx	r3
		/** Display on*/
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, paratable, 0);
  400764:	4622      	mov	r2, r4
  400766:	4669      	mov	r1, sp
  400768:	2029      	movs	r0, #41	; 0x29
  40076a:	47a8      	blx	r5
	} else {
		/** exit with return value 1 if device type is not supported.*/
		return 1;
	}

	return 0;
  40076c:	4620      	mov	r0, r4
  40076e:	e002      	b.n	400776 <ili93xx_init+0x2b6>
{
	uint8_t paratable[6];

	/** Identify the LCD driver device*/
	if (ili93xx_device_type_identify() != 0) {
		return 1;
  400770:	2001      	movs	r0, #1
  400772:	e000      	b.n	400776 <ili93xx_init+0x2b6>
		ili93xx_delay(10);
		/** Display on*/
		ili93xx_write_register(ILI9341_CMD_DISPLAY_ON, paratable, 0);
	} else {
		/** exit with return value 1 if device type is not supported.*/
		return 1;
  400774:	2001      	movs	r0, #1
	}

	return 0;
}
  400776:	b003      	add	sp, #12
  400778:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40077c:	0040032d 	.word	0x0040032d
  400780:	2000000c 	.word	0x2000000c
  400784:	20000010 	.word	0x20000010
  400788:	20000c68 	.word	0x20000c68
  40078c:	00400251 	.word	0x00400251
  400790:	00400295 	.word	0x00400295
  400794:	004003f5 	.word	0x004003f5
  400798:	004003dd 	.word	0x004003dd
  40079c:	0040049d 	.word	0x0040049d
  4007a0:	00400269 	.word	0x00400269

004007a4 <ili93xx_draw_pixel>:
 * \param ul_y Y coordinate of pixel.
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili93xx_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
  4007a4:	b510      	push	{r4, lr}
	if ((ul_x >= g_ul_lcd_x_length) || (ul_y >= g_ul_lcd_y_length)) {
  4007a6:	4b16      	ldr	r3, [pc, #88]	; (400800 <ili93xx_draw_pixel+0x5c>)
  4007a8:	681b      	ldr	r3, [r3, #0]
  4007aa:	4283      	cmp	r3, r0
  4007ac:	d921      	bls.n	4007f2 <ili93xx_draw_pixel+0x4e>
  4007ae:	4b15      	ldr	r3, [pc, #84]	; (400804 <ili93xx_draw_pixel+0x60>)
  4007b0:	681b      	ldr	r3, [r3, #0]
  4007b2:	428b      	cmp	r3, r1
  4007b4:	d91f      	bls.n	4007f6 <ili93xx_draw_pixel+0x52>
		return 1;
	}

	if (g_uc_device_type == DEVICE_TYPE_ILI9325) {
  4007b6:	4b14      	ldr	r3, [pc, #80]	; (400808 <ili93xx_draw_pixel+0x64>)
  4007b8:	781b      	ldrb	r3, [r3, #0]
  4007ba:	2b01      	cmp	r3, #1
  4007bc:	d10b      	bne.n	4007d6 <ili93xx_draw_pixel+0x32>
		/** Set cursor */
		ili93xx_set_cursor_position(ul_x, ul_y);
  4007be:	b289      	uxth	r1, r1
  4007c0:	b280      	uxth	r0, r0
  4007c2:	4b12      	ldr	r3, [pc, #72]	; (40080c <ili93xx_draw_pixel+0x68>)
  4007c4:	4798      	blx	r3
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
  4007c6:	4b12      	ldr	r3, [pc, #72]	; (400810 <ili93xx_draw_pixel+0x6c>)
  4007c8:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  4007ca:	4b12      	ldr	r3, [pc, #72]	; (400814 <ili93xx_draw_pixel+0x70>)
  4007cc:	6818      	ldr	r0, [r3, #0]
  4007ce:	4b12      	ldr	r3, [pc, #72]	; (400818 <ili93xx_draw_pixel+0x74>)
  4007d0:	4798      	blx	r3
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	}

	return 0;
  4007d2:	2000      	movs	r0, #0
  4007d4:	bd10      	pop	{r4, pc}
		/** Set cursor */
		ili93xx_set_cursor_position(ul_x, ul_y);
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	} else if (g_uc_device_type == DEVICE_TYPE_ILI9341) {
  4007d6:	2b02      	cmp	r3, #2
  4007d8:	d10f      	bne.n	4007fa <ili93xx_draw_pixel+0x56>
		ili93xx_set_window(ul_x, ul_y, 0, 0);
  4007da:	2300      	movs	r3, #0
  4007dc:	461a      	mov	r2, r3
  4007de:	4c0f      	ldr	r4, [pc, #60]	; (40081c <ili93xx_draw_pixel+0x78>)
  4007e0:	47a0      	blx	r4
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
  4007e2:	4b0b      	ldr	r3, [pc, #44]	; (400810 <ili93xx_draw_pixel+0x6c>)
  4007e4:	4798      	blx	r3
		ili93xx_write_ram(*g_ul_pixel_cache);
  4007e6:	4b0b      	ldr	r3, [pc, #44]	; (400814 <ili93xx_draw_pixel+0x70>)
  4007e8:	6818      	ldr	r0, [r3, #0]
  4007ea:	4b0b      	ldr	r3, [pc, #44]	; (400818 <ili93xx_draw_pixel+0x74>)
  4007ec:	4798      	blx	r3
	}

	return 0;
  4007ee:	2000      	movs	r0, #0
  4007f0:	bd10      	pop	{r4, pc}
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili93xx_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= g_ul_lcd_x_length) || (ul_y >= g_ul_lcd_y_length)) {
		return 1;
  4007f2:	2001      	movs	r0, #1
  4007f4:	bd10      	pop	{r4, pc}
  4007f6:	2001      	movs	r0, #1
  4007f8:	bd10      	pop	{r4, pc}
		/** Prepare to write in GRAM */
		ili93xx_write_ram_prepare();
		ili93xx_write_ram(*g_ul_pixel_cache);
	}

	return 0;
  4007fa:	2000      	movs	r0, #0
}
  4007fc:	bd10      	pop	{r4, pc}
  4007fe:	bf00      	nop
  400800:	2000000c 	.word	0x2000000c
  400804:	20000010 	.word	0x20000010
  400808:	20000c68 	.word	0x20000c68
  40080c:	0040049d 	.word	0x0040049d
  400810:	004001a9 	.word	0x004001a9
  400814:	200008a8 	.word	0x200008a8
  400818:	004001d9 	.word	0x004001d9
  40081c:	004003f5 	.word	0x004003f5

00400820 <ili93xx_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili93xx_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  400820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400824:	b084      	sub	sp, #16
  400826:	9003      	str	r0, [sp, #12]
  400828:	9102      	str	r1, [sp, #8]
  40082a:	9201      	str	r2, [sp, #4]
  40082c:	aa04      	add	r2, sp, #16
  40082e:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/** Swap coordinates if necessary */
	ili93xx_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  400832:	4613      	mov	r3, r2
  400834:	aa01      	add	r2, sp, #4
  400836:	a902      	add	r1, sp, #8
  400838:	a803      	add	r0, sp, #12
  40083a:	4c21      	ldr	r4, [pc, #132]	; (4008c0 <ili93xx_draw_filled_rectangle+0xa0>)
  40083c:	47a0      	blx	r4

	/** Determine the refresh window area */
	ili93xx_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1,
  40083e:	9803      	ldr	r0, [sp, #12]
			(ul_y2 - ul_y1) + 1);
  400840:	9902      	ldr	r1, [sp, #8]

	/** Swap coordinates if necessary */
	ili93xx_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);

	/** Determine the refresh window area */
	ili93xx_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1,
  400842:	9b00      	ldr	r3, [sp, #0]
  400844:	3301      	adds	r3, #1
  400846:	9a01      	ldr	r2, [sp, #4]
  400848:	3201      	adds	r2, #1
  40084a:	1a5b      	subs	r3, r3, r1
  40084c:	1a12      	subs	r2, r2, r0
  40084e:	4c1d      	ldr	r4, [pc, #116]	; (4008c4 <ili93xx_draw_filled_rectangle+0xa4>)
  400850:	47a0      	blx	r4
			(ul_y2 - ul_y1) + 1);

	/** Set cursor */
	ili93xx_set_cursor_position(ul_x1, ul_y1);
  400852:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  400856:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  40085a:	4b1b      	ldr	r3, [pc, #108]	; (4008c8 <ili93xx_draw_filled_rectangle+0xa8>)
  40085c:	4798      	blx	r3

	/** Prepare to write in Graphic RAM */
	ili93xx_write_ram_prepare();
  40085e:	4b1b      	ldr	r3, [pc, #108]	; (4008cc <ili93xx_draw_filled_rectangle+0xac>)
  400860:	4798      	blx	r3

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  400862:	9a03      	ldr	r2, [sp, #12]
  400864:	9b01      	ldr	r3, [sp, #4]
  400866:	1a9a      	subs	r2, r3, r2
  400868:	9b00      	ldr	r3, [sp, #0]
  40086a:	f103 0801 	add.w	r8, r3, #1
  40086e:	9b02      	ldr	r3, [sp, #8]
  400870:	ebc3 0808 	rsb	r8, r3, r8
  400874:	fb02 8808 	mla	r8, r2, r8, r8

	/** Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  400878:	4c15      	ldr	r4, [pc, #84]	; (4008d0 <ili93xx_draw_filled_rectangle+0xb0>)
  40087a:	fba4 3408 	umull	r3, r4, r4, r8
	while (blocks--) {
  40087e:	09e4      	lsrs	r4, r4, #7
  400880:	d007      	beq.n	400892 <ili93xx_draw_filled_rectangle+0x72>
		ili93xx_write_ram_buffer(g_ul_pixel_cache,
  400882:	4f14      	ldr	r7, [pc, #80]	; (4008d4 <ili93xx_draw_filled_rectangle+0xb4>)
  400884:	26f0      	movs	r6, #240	; 0xf0
  400886:	4d14      	ldr	r5, [pc, #80]	; (4008d8 <ili93xx_draw_filled_rectangle+0xb8>)
  400888:	4631      	mov	r1, r6
  40088a:	4638      	mov	r0, r7
  40088c:	47a8      	blx	r5

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);

	/** Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
	while (blocks--) {
  40088e:	3c01      	subs	r4, #1
  400890:	d1fa      	bne.n	400888 <ili93xx_draw_filled_rectangle+0x68>
		ili93xx_write_ram_buffer(g_ul_pixel_cache,
								LCD_DATA_CACHE_SIZE);
	}

	/** Send remaining pixels */
	ili93xx_write_ram_buffer(g_ul_pixel_cache,
  400892:	490f      	ldr	r1, [pc, #60]	; (4008d0 <ili93xx_draw_filled_rectangle+0xb0>)
  400894:	fba1 3108 	umull	r3, r1, r1, r8
  400898:	09c9      	lsrs	r1, r1, #7
  40089a:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
  40089e:	eba8 1101 	sub.w	r1, r8, r1, lsl #4
  4008a2:	480c      	ldr	r0, [pc, #48]	; (4008d4 <ili93xx_draw_filled_rectangle+0xb4>)
  4008a4:	4b0c      	ldr	r3, [pc, #48]	; (4008d8 <ili93xx_draw_filled_rectangle+0xb8>)
  4008a6:	4798      	blx	r3
					size % LCD_DATA_CACHE_SIZE);

	/** Reset the refresh window area */
	ili93xx_set_window(0, 0, g_ul_lcd_x_length, g_ul_lcd_y_length);
  4008a8:	4b0c      	ldr	r3, [pc, #48]	; (4008dc <ili93xx_draw_filled_rectangle+0xbc>)
  4008aa:	681b      	ldr	r3, [r3, #0]
  4008ac:	4a0c      	ldr	r2, [pc, #48]	; (4008e0 <ili93xx_draw_filled_rectangle+0xc0>)
  4008ae:	6812      	ldr	r2, [r2, #0]
  4008b0:	2100      	movs	r1, #0
  4008b2:	4608      	mov	r0, r1
  4008b4:	4c03      	ldr	r4, [pc, #12]	; (4008c4 <ili93xx_draw_filled_rectangle+0xa4>)
  4008b6:	47a0      	blx	r4
}
  4008b8:	b004      	add	sp, #16
  4008ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4008be:	bf00      	nop
  4008c0:	004002cd 	.word	0x004002cd
  4008c4:	004003f5 	.word	0x004003f5
  4008c8:	0040049d 	.word	0x0040049d
  4008cc:	004001a9 	.word	0x004001a9
  4008d0:	88888889 	.word	0x88888889
  4008d4:	200008a8 	.word	0x200008a8
  4008d8:	004001f1 	.word	0x004001f1
  4008dc:	20000010 	.word	0x20000010
  4008e0:	2000000c 	.word	0x2000000c

004008e4 <ili93xx_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili93xx_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  4008e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4008e8:	b085      	sub	sp, #20
  4008ea:	9003      	str	r0, [sp, #12]
  4008ec:	9202      	str	r2, [sp, #8]
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  4008ee:	7813      	ldrb	r3, [r2, #0]
  4008f0:	2b00      	cmp	r3, #0
  4008f2:	d045      	beq.n	400980 <ili93xx_draw_string+0x9c>
  4008f4:	468a      	mov	sl, r1
  4008f6:	9001      	str	r0, [sp, #4]
		 * Draw pixel on screen depending on the corresponding bit value
		 * from the charset
		 */
		for (row = 0; row < 8; row++) {
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  4008f8:	f8df 8090 	ldr.w	r8, [pc, #144]	; 40098c <ili93xx_draw_string+0xa8>
{
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
		/** If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
  4008fc:	2b0a      	cmp	r3, #10
  4008fe:	d104      	bne.n	40090a <ili93xx_draw_string+0x26>
			ul_y += gfont.height + 2;
  400900:	f10a 0a10 	add.w	sl, sl, #16
			ul_x = xorg;
  400904:	9b03      	ldr	r3, [sp, #12]
  400906:	9301      	str	r3, [sp, #4]
  400908:	e034      	b.n	400974 <ili93xx_draw_string+0x90>
  40090a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40090e:	4e1e      	ldr	r6, [pc, #120]	; (400988 <ili93xx_draw_string+0xa4>)
  400910:	eb06 0383 	add.w	r3, r6, r3, lsl #2
  400914:	f2a3 267f 	subw	r6, r3, #639	; 0x27f
  400918:	9f01      	ldr	r7, [sp, #4]
  40091a:	463b      	mov	r3, r7
  40091c:	330a      	adds	r3, #10
  40091e:	9300      	str	r3, [sp, #0]
		 * Draw pixel on screen depending on the corresponding bit value
		 * from the charset
		 */
		for (row = 0; row < 8; row++) {
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400920:	f10a 0907 	add.w	r9, sl, #7

	/**
	 * Compute offset according of the specified ASCII character
	 *  Note: the first 32 characters of the ASCII table are not handled
	 */
	offset = ((uint32_t)uc_c - 0x20) * 20;
  400924:	2407      	movs	r4, #7
  400926:	46b3      	mov	fp, r6
  400928:	465d      	mov	r5, fp
		/**
		 * Draw pixel on screen depending on the corresponding bit value
		 * from the charset
		 */
		for (row = 0; row < 8; row++) {
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  40092a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  40092e:	4123      	asrs	r3, r4
  400930:	f013 0f01 	tst.w	r3, #1
  400934:	d003      	beq.n	40093e <ili93xx_draw_string+0x5a>
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
  400936:	ebc4 0109 	rsb	r1, r4, r9
  40093a:	4638      	mov	r0, r7
  40093c:	47c0      	blx	r8
  40093e:	3c01      	subs	r4, #1

		/**
		 * Draw pixel on screen depending on the corresponding bit value
		 * from the charset
		 */
		for (row = 0; row < 8; row++) {
  400940:	f1b4 3fff 	cmp.w	r4, #4294967295
  400944:	d1f0      	bne.n	400928 <ili93xx_draw_string+0x44>
  400946:	2407      	movs	r4, #7
			}
		}

		for (row = 0; row < 6; row++) {
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  400948:	f10a 0b0f 	add.w	fp, sl, #15
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  40094c:	782b      	ldrb	r3, [r5, #0]
  40094e:	4123      	asrs	r3, r4
  400950:	f013 0f01 	tst.w	r3, #1
  400954:	d003      	beq.n	40095e <ili93xx_draw_string+0x7a>
				ili93xx_draw_pixel(ul_x + col, ul_y + row + 8);
  400956:	ebc4 010b 	rsb	r1, r4, fp
  40095a:	4638      	mov	r0, r7
  40095c:	47c0      	blx	r8
  40095e:	3c01      	subs	r4, #1
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili93xx_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
  400960:	2c01      	cmp	r4, #1
  400962:	d1f3      	bne.n	40094c <ili93xx_draw_string+0x68>
  400964:	3602      	adds	r6, #2
  400966:	3701      	adds	r7, #1
	 * Compute offset according of the specified ASCII character
	 *  Note: the first 32 characters of the ASCII table are not handled
	 */
	offset = ((uint32_t)uc_c - 0x20) * 20;

	for (col = 0; col < 10; col++) {
  400968:	9b00      	ldr	r3, [sp, #0]
  40096a:	42bb      	cmp	r3, r7
  40096c:	d1da      	bne.n	400924 <ili93xx_draw_string+0x40>
			/**
			 * Draw the character and place cursor right after (font
			 * width + 2)
			 */
			ili93xx_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  40096e:	9b01      	ldr	r3, [sp, #4]
  400970:	330c      	adds	r3, #12
  400972:	9301      	str	r3, [sp, #4]
 */
void ili93xx_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  400974:	9a02      	ldr	r2, [sp, #8]
  400976:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  40097a:	9202      	str	r2, [sp, #8]
  40097c:	2b00      	cmp	r3, #0
  40097e:	d1bd      	bne.n	4008fc <ili93xx_draw_string+0x18>
			ul_x += gfont.width + 2;
		}

		p_str++;
	}
}
  400980:	b005      	add	sp, #20
  400982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400986:	bf00      	nop
  400988:	004062ac 	.word	0x004062ac
  40098c:	004007a5 	.word	0x004007a5

00400990 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
  400990:	0109      	lsls	r1, r1, #4
  400992:	5042      	str	r2, [r0, r1]
  400994:	4770      	bx	lr
  400996:	bf00      	nop

00400998 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
  400998:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  40099c:	604a      	str	r2, [r1, #4]
  40099e:	4770      	bx	lr

004009a0 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
  4009a0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4009a4:	608a      	str	r2, [r1, #8]
  4009a6:	4770      	bx	lr

004009a8 <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
  4009a8:	eb00 1101 	add.w	r1, r0, r1, lsl #4
  4009ac:	60ca      	str	r2, [r1, #12]
  4009ae:	4770      	bx	lr

004009b0 <twi_enable_master_mode>:
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4009b0:	2308      	movs	r3, #8
  4009b2:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4009b4:	2320      	movs	r3, #32
  4009b6:	6003      	str	r3, [r0, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
  4009b8:	2304      	movs	r3, #4
  4009ba:	6003      	str	r3, [r0, #0]
  4009bc:	4770      	bx	lr
  4009be:	bf00      	nop

004009c0 <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  4009c0:	4b2b      	ldr	r3, [pc, #172]	; (400a70 <twi_set_speed+0xb0>)
  4009c2:	4299      	cmp	r1, r3
  4009c4:	d849      	bhi.n	400a5a <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4009c6:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  4009ca:	4299      	cmp	r1, r3
  4009cc:	d92b      	bls.n	400a26 <twi_set_speed+0x66>
 *
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
  4009ce:	b410      	push	{r4}
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4009d0:	4c28      	ldr	r4, [pc, #160]	; (400a74 <twi_set_speed+0xb4>)
  4009d2:	fba4 3402 	umull	r3, r4, r4, r2
  4009d6:	0ba4      	lsrs	r4, r4, #14
  4009d8:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4009da:	4b27      	ldr	r3, [pc, #156]	; (400a78 <twi_set_speed+0xb8>)
  4009dc:	440b      	add	r3, r1
  4009de:	009b      	lsls	r3, r3, #2
  4009e0:	fbb2 f2f3 	udiv	r2, r2, r3
  4009e4:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009e6:	2cff      	cmp	r4, #255	; 0xff
  4009e8:	d939      	bls.n	400a5e <twi_set_speed+0x9e>
  4009ea:	2300      	movs	r3, #0
			/* Increase clock divider */
			ckdiv++;
  4009ec:	3301      	adds	r3, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  4009ee:	0864      	lsrs	r4, r4, #1
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009f0:	2cff      	cmp	r4, #255	; 0xff
  4009f2:	d902      	bls.n	4009fa <twi_set_speed+0x3a>
  4009f4:	2b07      	cmp	r3, #7
  4009f6:	d1f9      	bne.n	4009ec <twi_set_speed+0x2c>
  4009f8:	e00a      	b.n	400a10 <twi_set_speed+0x50>
			ckdiv++;
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009fa:	2aff      	cmp	r2, #255	; 0xff
  4009fc:	d908      	bls.n	400a10 <twi_set_speed+0x50>
  4009fe:	2b06      	cmp	r3, #6
  400a00:	d900      	bls.n	400a04 <twi_set_speed+0x44>
  400a02:	e005      	b.n	400a10 <twi_set_speed+0x50>
			/* Increase clock divider */
			ckdiv++;
  400a04:	3301      	adds	r3, #1
			/* Divide cldiv value */
			chdiv /= TWI_CLK_DIVIDER;
  400a06:	0852      	lsrs	r2, r2, #1
			ckdiv++;
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400a08:	2aff      	cmp	r2, #255	; 0xff
  400a0a:	d901      	bls.n	400a10 <twi_set_speed+0x50>
  400a0c:	2b06      	cmp	r3, #6
  400a0e:	d9f9      	bls.n	400a04 <twi_set_speed+0x44>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400a10:	0212      	lsls	r2, r2, #8
  400a12:	b292      	uxth	r2, r2
  400a14:	041b      	lsls	r3, r3, #16
  400a16:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
  400a1a:	431a      	orrs	r2, r3
  400a1c:	b2e4      	uxtb	r4, r4
  400a1e:	4322      	orrs	r2, r4
			/* Divide cldiv value */
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
  400a20:	6102      	str	r2, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400a22:	2000      	movs	r0, #0
  400a24:	e021      	b.n	400a6a <twi_set_speed+0xaa>
		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
				TWI_CWGR_CKDIV(ckdiv);		
	} else {
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400a26:	0049      	lsls	r1, r1, #1
  400a28:	fbb2 f2f1 	udiv	r2, r2, r1
  400a2c:	3a04      	subs	r2, #4

		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400a2e:	2aff      	cmp	r2, #255	; 0xff
  400a30:	d907      	bls.n	400a42 <twi_set_speed+0x82>
  400a32:	2300      	movs	r3, #0
			/* Increase clock divider */
			ckdiv++;
  400a34:	3301      	adds	r3, #1
			/* Divide cldiv value */
			c_lh_div /= TWI_CLK_DIVIDER;
  400a36:	0852      	lsrs	r2, r2, #1
				TWI_CWGR_CKDIV(ckdiv);		
	} else {
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;

		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400a38:	2aff      	cmp	r2, #255	; 0xff
  400a3a:	d903      	bls.n	400a44 <twi_set_speed+0x84>
  400a3c:	2b07      	cmp	r3, #7
  400a3e:	d1f9      	bne.n	400a34 <twi_set_speed+0x74>
  400a40:	e000      	b.n	400a44 <twi_set_speed+0x84>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
  400a42:	2300      	movs	r3, #0
			c_lh_div /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  400a44:	0211      	lsls	r1, r2, #8
  400a46:	b289      	uxth	r1, r1
  400a48:	041b      	lsls	r3, r3, #16
  400a4a:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
  400a4e:	430b      	orrs	r3, r1
  400a50:	b2d2      	uxtb	r2, r2
  400a52:	431a      	orrs	r2, r3
			/* Divide cldiv value */
			c_lh_div /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
  400a54:	6102      	str	r2, [r0, #16]
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  400a56:	2000      	movs	r0, #0
}
  400a58:	4770      	bx	lr
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
		return FAIL;
  400a5a:	2001      	movs	r0, #1
  400a5c:	4770      	bx	lr
			ckdiv++;
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400a5e:	2aff      	cmp	r2, #255	; 0xff
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
  400a60:	bf88      	it	hi
  400a62:	2300      	movhi	r3, #0
			ckdiv++;
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400a64:	d8ce      	bhi.n	400a04 <twi_set_speed+0x44>
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
	uint32_t ckdiv = 0;
  400a66:	2300      	movs	r3, #0
  400a68:	e7d2      	b.n	400a10 <twi_set_speed+0x50>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
}
  400a6a:	bc10      	pop	{r4}
  400a6c:	4770      	bx	lr
  400a6e:	bf00      	nop
  400a70:	00061a80 	.word	0x00061a80
  400a74:	057619f1 	.word	0x057619f1
  400a78:	3ffd1200 	.word	0x3ffd1200

00400a7c <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
  400a7c:	b538      	push	{r3, r4, r5, lr}
  400a7e:	4604      	mov	r4, r0
  400a80:	460d      	mov	r5, r1
	uint32_t status = TWI_SUCCESS;

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
  400a82:	f04f 33ff 	mov.w	r3, #4294967295
  400a86:	6283      	str	r3, [r0, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
  400a88:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  400a8a:	2380      	movs	r3, #128	; 0x80
  400a8c:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  400a8e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400a90:	2308      	movs	r3, #8
  400a92:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  400a94:	2320      	movs	r3, #32
  400a96:	6003      	str	r3, [r0, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
  400a98:	2304      	movs	r3, #4
  400a9a:	6003      	str	r3, [r0, #0]
	twi_reset(p_twi);

	twi_enable_master_mode(p_twi);

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400a9c:	680a      	ldr	r2, [r1, #0]
  400a9e:	6849      	ldr	r1, [r1, #4]
  400aa0:	4b05      	ldr	r3, [pc, #20]	; (400ab8 <twi_master_init+0x3c>)
  400aa2:	4798      	blx	r3
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
	uint32_t status = TWI_SUCCESS;
  400aa4:	2801      	cmp	r0, #1
  400aa6:	bf14      	ite	ne
  400aa8:	2000      	movne	r0, #0
  400aaa:	2001      	moveq	r0, #1
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
	}

	if (p_opt->smbus == 1) {
  400aac:	7a6b      	ldrb	r3, [r5, #9]
  400aae:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400ab0:	bf04      	itt	eq
  400ab2:	2340      	moveq	r3, #64	; 0x40
  400ab4:	6023      	streq	r3, [r4, #0]
	}

	return status;
}
  400ab6:	bd38      	pop	{r3, r4, r5, pc}
  400ab8:	004009c1 	.word	0x004009c1

00400abc <twi_mk_addr>:
 */
uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
  400abc:	460a      	mov	r2, r1
  400abe:	b159      	cbz	r1, 400ad8 <twi_mk_addr+0x1c>
		return 0;

	val = addr[0];
  400ac0:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  400ac2:	2901      	cmp	r1, #1
		val <<= 8;
		val |= addr[1];
  400ac4:	bfc4      	itt	gt
  400ac6:	7841      	ldrbgt	r1, [r0, #1]
  400ac8:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	}
	if (len > 2) {
  400acc:	2a02      	cmp	r2, #2
  400ace:	dd05      	ble.n	400adc <twi_mk_addr+0x20>
		val <<= 8;
		val |= addr[2];
  400ad0:	7880      	ldrb	r0, [r0, #2]
  400ad2:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  400ad6:	4770      	bx	lr
uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
	uint32_t val;

	if (len == 0)
		return 0;
  400ad8:	2000      	movs	r0, #0
  400ada:	4770      	bx	lr
  400adc:	4618      	mov	r0, r3
	if (len > 2) {
		val <<= 8;
		val |= addr[2];
	}
	return val;
}
  400ade:	4770      	bx	lr

00400ae0 <twi_master_read>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were read, error code otherwise.
 */
uint32_t twi_master_read(Twi *p_twi, twi_packet_t *p_packet)
{
  400ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	uint32_t status;
	uint32_t cnt = p_packet->length;
  400ae4:	68cc      	ldr	r4, [r1, #12]
	uint8_t *buffer = p_packet->buffer;
	uint8_t stop_sent = 0;
	uint32_t timeout = TWI_TIMEOUT;;
	
	/* Check argument */
	if (cnt == 0) {
  400ae6:	2c00      	cmp	r4, #0
  400ae8:	d045      	beq.n	400b76 <twi_master_read+0x96>
  400aea:	460b      	mov	r3, r1
  400aec:	4605      	mov	r5, r0
 */
uint32_t twi_master_read(Twi *p_twi, twi_packet_t *p_packet)
{
	uint32_t status;
	uint32_t cnt = p_packet->length;
	uint8_t *buffer = p_packet->buffer;
  400aee:	688e      	ldr	r6, [r1, #8]
	if (cnt == 0) {
		return TWI_INVALID_ARGUMENT;
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
  400af0:	2000      	movs	r0, #0
  400af2:	6068      	str	r0, [r5, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  400af4:	684a      	ldr	r2, [r1, #4]
  400af6:	0212      	lsls	r2, r2, #8
  400af8:	f402 7240 	and.w	r2, r2, #768	; 0x300
  400afc:	f442 5180 	orr.w	r1, r2, #4096	; 0x1000
  400b00:	7c1a      	ldrb	r2, [r3, #16]
  400b02:	0412      	lsls	r2, r2, #16
  400b04:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
  400b08:	430a      	orrs	r2, r1
  400b0a:	606a      	str	r2, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
  400b0c:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400b0e:	6859      	ldr	r1, [r3, #4]
  400b10:	4618      	mov	r0, r3
  400b12:	4b27      	ldr	r3, [pc, #156]	; (400bb0 <twi_master_read+0xd0>)
  400b14:	4798      	blx	r3
  400b16:	60e8      	str	r0, [r5, #12]

	/* Send a START condition */
	if (cnt == 1) {
  400b18:	2c01      	cmp	r4, #1
  400b1a:	d104      	bne.n	400b26 <twi_master_read+0x46>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  400b1c:	2303      	movs	r3, #3
  400b1e:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  400b20:	f04f 0e01 	mov.w	lr, #1
  400b24:	e033      	b.n	400b8e <twi_master_read+0xae>
	} else {
		p_twi->TWI_CR = TWI_CR_START;
  400b26:	2301      	movs	r3, #1
  400b28:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  400b2a:	f04f 0e00 	mov.w	lr, #0
  400b2e:	e02e      	b.n	400b8e <twi_master_read+0xae>
		if (cnt == 1  && !stop_sent) {
			p_twi->TWI_CR = TWI_CR_STOP;
			stop_sent = 1;
		}

		if (!(status & TWI_SR_RXRDY)) {
  400b30:	460a      	mov	r2, r1
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
  400b32:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  400b34:	f413 7f80 	tst.w	r3, #256	; 0x100
  400b38:	d120      	bne.n	400b7c <twi_master_read+0x9c>
			return TWI_RECEIVE_NACK;
		}

		if (!timeout--) {
  400b3a:	1e51      	subs	r1, r2, #1
  400b3c:	b30a      	cbz	r2, 400b82 <twi_master_read+0xa2>
			return TWI_ERROR_TIMEOUT;
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
  400b3e:	2c01      	cmp	r4, #1
  400b40:	d106      	bne.n	400b50 <twi_master_read+0x70>
  400b42:	f1be 0f00 	cmp.w	lr, #0
  400b46:	d12f      	bne.n	400ba8 <twi_master_read+0xc8>
			p_twi->TWI_CR = TWI_CR_STOP;
  400b48:	f8c5 8000 	str.w	r8, [r5]
			stop_sent = 1;
  400b4c:	46e6      	mov	lr, ip
  400b4e:	e02b      	b.n	400ba8 <twi_master_read+0xc8>
		}

		if (!(status & TWI_SR_RXRDY)) {
  400b50:	f013 0f02 	tst.w	r3, #2
  400b54:	d005      	beq.n	400b62 <twi_master_read+0x82>
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;
  400b56:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  400b58:	7033      	strb	r3, [r6, #0]

		cnt--;
  400b5a:	3c01      	subs	r4, #1
		}

		if (!(status & TWI_SR_RXRDY)) {
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;
  400b5c:	3601      	adds	r6, #1

		cnt--;
		timeout = TWI_TIMEOUT;
  400b5e:	463a      	mov	r2, r7
  400b60:	e000      	b.n	400b64 <twi_master_read+0x84>
  400b62:	460a      	mov	r2, r1
	} else {
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
  400b64:	2c00      	cmp	r4, #0
  400b66:	d1e4      	bne.n	400b32 <twi_master_read+0x52>

		cnt--;
		timeout = TWI_TIMEOUT;
	}

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400b68:	6a2b      	ldr	r3, [r5, #32]
  400b6a:	f013 0f01 	tst.w	r3, #1
  400b6e:	d0fb      	beq.n	400b68 <twi_master_read+0x88>
	}

	p_twi->TWI_SR;
  400b70:	6a2b      	ldr	r3, [r5, #32]

	return TWI_SUCCESS;
  400b72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	uint8_t stop_sent = 0;
	uint32_t timeout = TWI_TIMEOUT;;
	
	/* Check argument */
	if (cnt == 0) {
		return TWI_INVALID_ARGUMENT;
  400b76:	2001      	movs	r0, #1
  400b78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
  400b7c:	2005      	movs	r0, #5
  400b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}

		if (!timeout--) {
			return TWI_ERROR_TIMEOUT;
  400b82:	2009      	movs	r0, #9
  400b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
		if (status & TWI_SR_NACK) {
			return TWI_RECEIVE_NACK;
  400b88:	2005      	movs	r0, #5
  400b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		p_twi->TWI_CR = TWI_CR_START;
		stop_sent = 0;
	}

	while (cnt > 0) {
		status = p_twi->TWI_SR;
  400b8e:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  400b90:	f413 7080 	ands.w	r0, r3, #256	; 0x100
  400b94:	d1f8      	bne.n	400b88 <twi_master_read+0xa8>
  400b96:	f643 2197 	movw	r1, #14999	; 0x3a97
			continue;
		}
		*buffer++ = p_twi->TWI_RHR;

		cnt--;
		timeout = TWI_TIMEOUT;
  400b9a:	f643 2798 	movw	r7, #15000	; 0x3a98
			return TWI_ERROR_TIMEOUT;
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
			p_twi->TWI_CR = TWI_CR_STOP;
  400b9e:	f04f 0802 	mov.w	r8, #2
			stop_sent = 1;
  400ba2:	f04f 0c01 	mov.w	ip, #1
  400ba6:	e7ca      	b.n	400b3e <twi_master_read+0x5e>
		}

		if (!(status & TWI_SR_RXRDY)) {
  400ba8:	f013 0f02 	tst.w	r3, #2
  400bac:	d0c0      	beq.n	400b30 <twi_master_read+0x50>
  400bae:	e7d2      	b.n	400b56 <twi_master_read+0x76>
  400bb0:	00400abd 	.word	0x00400abd

00400bb4 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400bb4:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400bb6:	480e      	ldr	r0, [pc, #56]	; (400bf0 <sysclk_init+0x3c>)
  400bb8:	4b0e      	ldr	r3, [pc, #56]	; (400bf4 <sysclk_init+0x40>)
  400bba:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400bbc:	213e      	movs	r1, #62	; 0x3e
  400bbe:	2000      	movs	r0, #0
  400bc0:	4b0d      	ldr	r3, [pc, #52]	; (400bf8 <sysclk_init+0x44>)
  400bc2:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400bc4:	4c0d      	ldr	r4, [pc, #52]	; (400bfc <sysclk_init+0x48>)
  400bc6:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400bc8:	2800      	cmp	r0, #0
  400bca:	d0fc      	beq.n	400bc6 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400bcc:	4b0c      	ldr	r3, [pc, #48]	; (400c00 <sysclk_init+0x4c>)
  400bce:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400bd0:	4a0c      	ldr	r2, [pc, #48]	; (400c04 <sysclk_init+0x50>)
  400bd2:	4b0d      	ldr	r3, [pc, #52]	; (400c08 <sysclk_init+0x54>)
  400bd4:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400bd6:	4c0d      	ldr	r4, [pc, #52]	; (400c0c <sysclk_init+0x58>)
  400bd8:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400bda:	2800      	cmp	r0, #0
  400bdc:	d0fc      	beq.n	400bd8 <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400bde:	2010      	movs	r0, #16
  400be0:	4b0b      	ldr	r3, [pc, #44]	; (400c10 <sysclk_init+0x5c>)
  400be2:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400be4:	4b0b      	ldr	r3, [pc, #44]	; (400c14 <sysclk_init+0x60>)
  400be6:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400be8:	4801      	ldr	r0, [pc, #4]	; (400bf0 <sysclk_init+0x3c>)
  400bea:	4b02      	ldr	r3, [pc, #8]	; (400bf4 <sysclk_init+0x40>)
  400bec:	4798      	blx	r3
  400bee:	bd10      	pop	{r4, pc}
  400bf0:	07270e00 	.word	0x07270e00
  400bf4:	004014a9 	.word	0x004014a9
  400bf8:	00401209 	.word	0x00401209
  400bfc:	0040125d 	.word	0x0040125d
  400c00:	0040126d 	.word	0x0040126d
  400c04:	20133f01 	.word	0x20133f01
  400c08:	400e0400 	.word	0x400e0400
  400c0c:	0040127d 	.word	0x0040127d
  400c10:	004011a1 	.word	0x004011a1
  400c14:	00401395 	.word	0x00401395

00400c18 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  400c18:	b538      	push	{r3, r4, r5, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400c1a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400c1e:	4b46      	ldr	r3, [pc, #280]	; (400d38 <board_init+0x120>)
  400c20:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400c22:	200b      	movs	r0, #11
  400c24:	4c45      	ldr	r4, [pc, #276]	; (400d3c <board_init+0x124>)
  400c26:	47a0      	blx	r4
  400c28:	200c      	movs	r0, #12
  400c2a:	47a0      	blx	r4
  400c2c:	200d      	movs	r0, #13
  400c2e:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400c30:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c34:	2013      	movs	r0, #19
  400c36:	4c42      	ldr	r4, [pc, #264]	; (400d40 <board_init+0x128>)
  400c38:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  400c3a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c3e:	2014      	movs	r0, #20
  400c40:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  400c42:	4940      	ldr	r1, [pc, #256]	; (400d44 <board_init+0x12c>)
  400c44:	2023      	movs	r0, #35	; 0x23
  400c46:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  400c48:	493f      	ldr	r1, [pc, #252]	; (400d48 <board_init+0x130>)
  400c4a:	204c      	movs	r0, #76	; 0x4c
  400c4c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  400c4e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  400c52:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  400c56:	483d      	ldr	r0, [pc, #244]	; (400d4c <board_init+0x134>)
  400c58:	4b3d      	ldr	r3, [pc, #244]	; (400d50 <board_init+0x138>)
  400c5a:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  400c5c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c60:	2000      	movs	r0, #0
  400c62:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  400c64:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c68:	2008      	movs	r0, #8
  400c6a:	47a0      	blx	r4

	/* PWMH0 configuration */
	gpio_configure_pin(PIN_PWMC_PWMH0_TRIG, PIN_PWMC_PWMH0_TRIG_FLAG);
  400c6c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c70:	2052      	movs	r0, #82	; 0x52
  400c72:	47a0      	blx	r4
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#ifdef CONF_BOARD_SPI
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400c74:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c78:	200c      	movs	r0, #12
  400c7a:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400c7c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c80:	200d      	movs	r0, #13
  400c82:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400c84:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c88:	200e      	movs	r0, #14
  400c8a:	47a0      	blx	r4
	 * Hence a different PIN should be selected using the CONF_BOARD_SPI_NPCS_GPIO and
	 * CONF_BOARD_SPI_NPCS_FLAGS macros.
	 */

#  ifdef CONF_BOARD_SPI_NPCS0
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400c8c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c90:	200b      	movs	r0, #11
  400c92:	47a0      	blx	r4
#  endif
#endif /* CONF_BOARD_SPI */

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  400c94:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c98:	2015      	movs	r0, #21
  400c9a:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  400c9c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400ca0:	2016      	movs	r0, #22
  400ca2:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_SCK_IDX, PIN_USART1_SCK_FLAGS);
#endif

#ifdef CONF_BOARD_ADM3312_EN
	/* Configure ADM33312 enable pin */
	gpio_configure_pin(PIN_USART1_EN_IDX, PIN_USART1_EN_FLAGS);
  400ca4:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400ca8:	2017      	movs	r0, #23
  400caa:	47a0      	blx	r4
	gpio_set_pin_low(PIN_USART1_EN_IDX);
  400cac:	2017      	movs	r0, #23
  400cae:	4b29      	ldr	r3, [pc, #164]	; (400d54 <board_init+0x13c>)
  400cb0:	4798      	blx	r3
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#if defined(CONF_BOARD_ILI9325) || defined(CONF_BOARD_ILI93XX)
	/* Configure LCD EBI pins */
	gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAGS);
  400cb2:	4d29      	ldr	r5, [pc, #164]	; (400d58 <board_init+0x140>)
  400cb4:	4629      	mov	r1, r5
  400cb6:	2040      	movs	r0, #64	; 0x40
  400cb8:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAGS);
  400cba:	4629      	mov	r1, r5
  400cbc:	2041      	movs	r0, #65	; 0x41
  400cbe:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAGS);
  400cc0:	4629      	mov	r1, r5
  400cc2:	2042      	movs	r0, #66	; 0x42
  400cc4:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAGS);
  400cc6:	4629      	mov	r1, r5
  400cc8:	2043      	movs	r0, #67	; 0x43
  400cca:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAGS);
  400ccc:	4629      	mov	r1, r5
  400cce:	2044      	movs	r0, #68	; 0x44
  400cd0:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAGS);
  400cd2:	4629      	mov	r1, r5
  400cd4:	2045      	movs	r0, #69	; 0x45
  400cd6:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAGS);
  400cd8:	4629      	mov	r1, r5
  400cda:	2046      	movs	r0, #70	; 0x46
  400cdc:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAGS);
  400cde:	4629      	mov	r1, r5
  400ce0:	2047      	movs	r0, #71	; 0x47
  400ce2:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
  400ce4:	4629      	mov	r1, r5
  400ce6:	204b      	movs	r0, #75	; 0x4b
  400ce8:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
  400cea:	4629      	mov	r1, r5
  400cec:	2048      	movs	r0, #72	; 0x48
  400cee:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_NCS1, PIN_EBI_NCS1_FLAGS);
  400cf0:	4629      	mov	r1, r5
  400cf2:	204f      	movs	r0, #79	; 0x4f
  400cf4:	47a0      	blx	r4
	gpio_configure_pin(PIN_EBI_LCD_RS, PIN_EBI_LCD_RS_FLAGS);
  400cf6:	4629      	mov	r1, r5
  400cf8:	2053      	movs	r0, #83	; 0x53
  400cfa:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3155
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400cfc:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  400d00:	204d      	movs	r0, #77	; 0x4d
  400d02:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_ADS7843
	/* Configure Touchscreen SPI pins */
	gpio_configure_pin(BOARD_ADS7843_IRQ_GPIO,BOARD_ADS7843_IRQ_FLAGS);
  400d04:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
  400d08:	4629      	mov	r1, r5
  400d0a:	2010      	movs	r0, #16
  400d0c:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ADS7843_BUSY_GPIO, BOARD_ADS7843_BUSY_FLAGS);
  400d0e:	4629      	mov	r1, r5
  400d10:	2011      	movs	r0, #17
  400d12:	47a0      	blx	r4
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400d14:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d18:	200c      	movs	r0, #12
  400d1a:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400d1c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d20:	200d      	movs	r0, #13
  400d22:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400d24:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d28:	200e      	movs	r0, #14
  400d2a:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS0_GPIO, SPI_NPCS0_FLAGS);
  400d2c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400d30:	200b      	movs	r0, #11
  400d32:	47a0      	blx	r4
  400d34:	bd38      	pop	{r3, r4, r5, pc}
  400d36:	bf00      	nop
  400d38:	400e1450 	.word	0x400e1450
  400d3c:	0040128d 	.word	0x0040128d
  400d40:	00400efd 	.word	0x00400efd
  400d44:	28000079 	.word	0x28000079
  400d48:	28000059 	.word	0x28000059
  400d4c:	400e0e00 	.word	0x400e0e00
  400d50:	00401021 	.word	0x00401021
  400d54:	00400ee1 	.word	0x00400ee1
  400d58:	08000001 	.word	0x08000001

00400d5c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400d5c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d5e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d62:	d02f      	beq.n	400dc4 <pio_set_peripheral+0x68>
  400d64:	d807      	bhi.n	400d76 <pio_set_peripheral+0x1a>
  400d66:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d6a:	d014      	beq.n	400d96 <pio_set_peripheral+0x3a>
  400d6c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d70:	d01e      	beq.n	400db0 <pio_set_peripheral+0x54>
  400d72:	b939      	cbnz	r1, 400d84 <pio_set_peripheral+0x28>
  400d74:	4770      	bx	lr
  400d76:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d7a:	d036      	beq.n	400dea <pio_set_peripheral+0x8e>
  400d7c:	d804      	bhi.n	400d88 <pio_set_peripheral+0x2c>
  400d7e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d82:	d029      	beq.n	400dd8 <pio_set_peripheral+0x7c>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400d84:	6042      	str	r2, [r0, #4]
  400d86:	4770      	bx	lr

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d88:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d8c:	d02d      	beq.n	400dea <pio_set_peripheral+0x8e>
  400d8e:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d92:	d02a      	beq.n	400dea <pio_set_peripheral+0x8e>
  400d94:	e7f6      	b.n	400d84 <pio_set_peripheral+0x28>
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  400d96:	b410      	push	{r4}
	p_pio->PIO_IDR = ul_mask;

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d98:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d9a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400d9c:	43d3      	mvns	r3, r2
  400d9e:	4021      	ands	r1, r4
  400da0:	4019      	ands	r1, r3
  400da2:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400da4:	6f44      	ldr	r4, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400da6:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400da8:	4021      	ands	r1, r4
  400daa:	400b      	ands	r3, r1
  400dac:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dae:	e01a      	b.n	400de6 <pio_set_peripheral+0x8a>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400db0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400db2:	4313      	orrs	r3, r2
  400db4:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400db6:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400db8:	6f43      	ldr	r3, [r0, #116]	; 0x74
  400dba:	400b      	ands	r3, r1
  400dbc:	ea23 0302 	bic.w	r3, r3, r2
  400dc0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dc2:	e7df      	b.n	400d84 <pio_set_peripheral+0x28>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400dc4:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400dc6:	6f03      	ldr	r3, [r0, #112]	; 0x70
  400dc8:	400b      	ands	r3, r1
  400dca:	ea23 0302 	bic.w	r3, r3, r2
  400dce:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400dd0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400dd2:	4313      	orrs	r3, r2
  400dd4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dd6:	e7d5      	b.n	400d84 <pio_set_peripheral+0x28>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400dd8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400dda:	4313      	orrs	r3, r2
  400ddc:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400dde:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400de0:	4313      	orrs	r3, r2
  400de2:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400de4:	e7ce      	b.n	400d84 <pio_set_peripheral+0x28>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400de6:	6042      	str	r2, [r0, #4]
}
  400de8:	bc10      	pop	{r4}
  400dea:	4770      	bx	lr

00400dec <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400dec:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400dee:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400df2:	bf14      	ite	ne
  400df4:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400df6:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400df8:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400dfc:	bf14      	ite	ne
  400dfe:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400e00:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  400e02:	f012 0f02 	tst.w	r2, #2
  400e06:	d002      	beq.n	400e0e <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400e08:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400e0c:	e004      	b.n	400e18 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  400e0e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400e12:	bf18      	it	ne
  400e14:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400e18:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400e1a:	6001      	str	r1, [r0, #0]
  400e1c:	4770      	bx	lr
  400e1e:	bf00      	nop

00400e20 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400e20:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400e22:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400e24:	9c01      	ldr	r4, [sp, #4]
  400e26:	b10c      	cbz	r4, 400e2c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400e28:	6641      	str	r1, [r0, #100]	; 0x64
  400e2a:	e000      	b.n	400e2e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400e2c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  400e2e:	b10b      	cbz	r3, 400e34 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  400e30:	6501      	str	r1, [r0, #80]	; 0x50
  400e32:	e000      	b.n	400e36 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400e34:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400e36:	b10a      	cbz	r2, 400e3c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400e38:	6301      	str	r1, [r0, #48]	; 0x30
  400e3a:	e000      	b.n	400e3e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400e3c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  400e3e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400e40:	6001      	str	r1, [r0, #0]
}
  400e42:	bc10      	pop	{r4}
  400e44:	4770      	bx	lr
  400e46:	bf00      	nop

00400e48 <pio_configure>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask, const uint32_t ul_attribute)
{
  400e48:	b570      	push	{r4, r5, r6, lr}
  400e4a:	b082      	sub	sp, #8
  400e4c:	4605      	mov	r5, r0
  400e4e:	4616      	mov	r6, r2
  400e50:	461c      	mov	r4, r3
	/* Configure pins */
	switch (ul_type) {
  400e52:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400e56:	d014      	beq.n	400e82 <pio_configure+0x3a>
  400e58:	d809      	bhi.n	400e6e <pio_configure+0x26>
  400e5a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e5e:	d010      	beq.n	400e82 <pio_configure+0x3a>
  400e60:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e64:	d00d      	beq.n	400e82 <pio_configure+0x3a>
  400e66:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e6a:	d12b      	bne.n	400ec4 <pio_configure+0x7c>
  400e6c:	e009      	b.n	400e82 <pio_configure+0x3a>
  400e6e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e72:	d017      	beq.n	400ea4 <pio_configure+0x5c>
  400e74:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e78:	d014      	beq.n	400ea4 <pio_configure+0x5c>
  400e7a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400e7e:	d00b      	beq.n	400e98 <pio_configure+0x50>
  400e80:	e020      	b.n	400ec4 <pio_configure+0x7c>
	case PIO_PERIPH_B:
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_PERIPH_C:
	case PIO_PERIPH_D:
#endif
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400e82:	4632      	mov	r2, r6
  400e84:	4628      	mov	r0, r5
  400e86:	4b11      	ldr	r3, [pc, #68]	; (400ecc <pio_configure+0x84>)
  400e88:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400e8a:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  400e8e:	bf14      	ite	ne
  400e90:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400e92:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400e94:	2001      	movs	r0, #1
  400e96:	e016      	b.n	400ec6 <pio_configure+0x7e>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_attribute & PIO_PULLUP));
		break;

	case PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e98:	461a      	mov	r2, r3
  400e9a:	4631      	mov	r1, r6
  400e9c:	4b0c      	ldr	r3, [pc, #48]	; (400ed0 <pio_configure+0x88>)
  400e9e:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400ea0:	2001      	movs	r0, #1
		pio_pull_up(p_pio, ul_mask, (ul_attribute & PIO_PULLUP));
		break;

	case PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_attribute);
		break;
  400ea2:	e010      	b.n	400ec6 <pio_configure+0x7e>

	case PIO_OUTPUT_0:
	case PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400ea4:	f004 0301 	and.w	r3, r4, #1
  400ea8:	9300      	str	r3, [sp, #0]
  400eaa:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400eae:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400eb2:	bf14      	ite	ne
  400eb4:	2200      	movne	r2, #0
  400eb6:	2201      	moveq	r2, #1
  400eb8:	4631      	mov	r1, r6
  400eba:	4628      	mov	r0, r5
  400ebc:	4c05      	ldr	r4, [pc, #20]	; (400ed4 <pio_configure+0x8c>)
  400ebe:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400ec0:	2001      	movs	r0, #1
	case PIO_OUTPUT_0:
	case PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
				(ul_attribute & PIO_OPENDRAIN) ? 1 : 0,
				(ul_attribute & PIO_PULLUP) ? 1 : 0);
		break;
  400ec2:	e000      	b.n	400ec6 <pio_configure+0x7e>

	default:
		return 0;
  400ec4:	2000      	movs	r0, #0
	}

	return 1;
}
  400ec6:	b002      	add	sp, #8
  400ec8:	bd70      	pop	{r4, r5, r6, pc}
  400eca:	bf00      	nop
  400ecc:	00400d5d 	.word	0x00400d5d
  400ed0:	00400ded 	.word	0x00400ded
  400ed4:	00400e21 	.word	0x00400e21

00400ed8 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400ed8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400eda:	4770      	bx	lr

00400edc <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400edc:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400ede:	4770      	bx	lr

00400ee0 <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400ee0:	0943      	lsrs	r3, r0, #5
  400ee2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400ee6:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400eea:	025b      	lsls	r3, r3, #9
void pio_set_pin_low(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 0. */
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400eec:	f000 001f 	and.w	r0, r0, #31
  400ef0:	2201      	movs	r2, #1
  400ef2:	fa02 f000 	lsl.w	r0, r2, r0
  400ef6:	6358      	str	r0, [r3, #52]	; 0x34
  400ef8:	4770      	bx	lr
  400efa:	bf00      	nop

00400efc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400efc:	b570      	push	{r4, r5, r6, lr}
  400efe:	b082      	sub	sp, #8
  400f00:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400f02:	0943      	lsrs	r3, r0, #5
  400f04:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400f08:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400f0c:	025c      	lsls	r4, r3, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  400f0e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400f12:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400f16:	d047      	beq.n	400fa8 <pio_configure_pin+0xac>
  400f18:	d809      	bhi.n	400f2e <pio_configure_pin+0x32>
  400f1a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400f1e:	d021      	beq.n	400f64 <pio_configure_pin+0x68>
  400f20:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400f24:	d02f      	beq.n	400f86 <pio_configure_pin+0x8a>
  400f26:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400f2a:	d16f      	bne.n	40100c <pio_configure_pin+0x110>
  400f2c:	e009      	b.n	400f42 <pio_configure_pin+0x46>
  400f2e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400f32:	d055      	beq.n	400fe0 <pio_configure_pin+0xe4>
  400f34:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400f38:	d052      	beq.n	400fe0 <pio_configure_pin+0xe4>
  400f3a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400f3e:	d044      	beq.n	400fca <pio_configure_pin+0xce>
  400f40:	e064      	b.n	40100c <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400f42:	f000 001f 	and.w	r0, r0, #31
  400f46:	2601      	movs	r6, #1
  400f48:	4086      	lsls	r6, r0
  400f4a:	4632      	mov	r2, r6
  400f4c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400f50:	4620      	mov	r0, r4
  400f52:	4b30      	ldr	r3, [pc, #192]	; (401014 <pio_configure_pin+0x118>)
  400f54:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400f56:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400f5a:	bf14      	ite	ne
  400f5c:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400f5e:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400f60:	2001      	movs	r0, #1
  400f62:	e054      	b.n	40100e <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400f64:	f000 001f 	and.w	r0, r0, #31
  400f68:	2601      	movs	r6, #1
  400f6a:	4086      	lsls	r6, r0
  400f6c:	4632      	mov	r2, r6
  400f6e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400f72:	4620      	mov	r0, r4
  400f74:	4b27      	ldr	r3, [pc, #156]	; (401014 <pio_configure_pin+0x118>)
  400f76:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400f78:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400f7c:	bf14      	ite	ne
  400f7e:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400f80:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400f82:	2001      	movs	r0, #1
  400f84:	e043      	b.n	40100e <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400f86:	f000 001f 	and.w	r0, r0, #31
  400f8a:	2601      	movs	r6, #1
  400f8c:	4086      	lsls	r6, r0
  400f8e:	4632      	mov	r2, r6
  400f90:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400f94:	4620      	mov	r0, r4
  400f96:	4b1f      	ldr	r3, [pc, #124]	; (401014 <pio_configure_pin+0x118>)
  400f98:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400f9a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400f9e:	bf14      	ite	ne
  400fa0:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400fa2:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400fa4:	2001      	movs	r0, #1
  400fa6:	e032      	b.n	40100e <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400fa8:	f000 001f 	and.w	r0, r0, #31
  400fac:	2601      	movs	r6, #1
  400fae:	4086      	lsls	r6, r0
  400fb0:	4632      	mov	r2, r6
  400fb2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400fb6:	4620      	mov	r0, r4
  400fb8:	4b16      	ldr	r3, [pc, #88]	; (401014 <pio_configure_pin+0x118>)
  400fba:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400fbc:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400fc0:	bf14      	ite	ne
  400fc2:	6666      	strne	r6, [r4, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400fc4:	6626      	streq	r6, [r4, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400fc6:	2001      	movs	r0, #1
  400fc8:	e021      	b.n	40100e <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400fca:	f000 011f 	and.w	r1, r0, #31
  400fce:	2601      	movs	r6, #1
  400fd0:	462a      	mov	r2, r5
  400fd2:	fa06 f101 	lsl.w	r1, r6, r1
  400fd6:	4620      	mov	r0, r4
  400fd8:	4b0f      	ldr	r3, [pc, #60]	; (401018 <pio_configure_pin+0x11c>)
  400fda:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400fdc:	4630      	mov	r0, r6
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  400fde:	e016      	b.n	40100e <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400fe0:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  400fe4:	f000 011f 	and.w	r1, r0, #31
  400fe8:	2601      	movs	r6, #1
  400fea:	ea05 0306 	and.w	r3, r5, r6
  400fee:	9300      	str	r3, [sp, #0]
  400ff0:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400ff4:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400ff8:	bf14      	ite	ne
  400ffa:	2200      	movne	r2, #0
  400ffc:	2201      	moveq	r2, #1
  400ffe:	fa06 f101 	lsl.w	r1, r6, r1
  401002:	4620      	mov	r0, r4
  401004:	4c05      	ldr	r4, [pc, #20]	; (40101c <pio_configure_pin+0x120>)
  401006:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  401008:	4630      	mov	r0, r6
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  40100a:	e000      	b.n	40100e <pio_configure_pin+0x112>

	default:
		return 0;
  40100c:	2000      	movs	r0, #0
	}

	return 1;
}
  40100e:	b002      	add	sp, #8
  401010:	bd70      	pop	{r4, r5, r6, pc}
  401012:	bf00      	nop
  401014:	00400d5d 	.word	0x00400d5d
  401018:	00400ded 	.word	0x00400ded
  40101c:	00400e21 	.word	0x00400e21

00401020 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  401020:	b570      	push	{r4, r5, r6, lr}
  401022:	b082      	sub	sp, #8
  401024:	4605      	mov	r5, r0
  401026:	460e      	mov	r6, r1
  401028:	4614      	mov	r4, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40102a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  40102e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  401032:	d038      	beq.n	4010a6 <pio_configure_pin_group+0x86>
  401034:	d809      	bhi.n	40104a <pio_configure_pin_group+0x2a>
  401036:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40103a:	d01c      	beq.n	401076 <pio_configure_pin_group+0x56>
  40103c:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  401040:	d025      	beq.n	40108e <pio_configure_pin_group+0x6e>
  401042:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  401046:	d150      	bne.n	4010ea <pio_configure_pin_group+0xca>
  401048:	e009      	b.n	40105e <pio_configure_pin_group+0x3e>
  40104a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40104e:	d03a      	beq.n	4010c6 <pio_configure_pin_group+0xa6>
  401050:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  401054:	d037      	beq.n	4010c6 <pio_configure_pin_group+0xa6>
  401056:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40105a:	d030      	beq.n	4010be <pio_configure_pin_group+0x9e>
  40105c:	e045      	b.n	4010ea <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  40105e:	460a      	mov	r2, r1
  401060:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401064:	4b22      	ldr	r3, [pc, #136]	; (4010f0 <pio_configure_pin_group+0xd0>)
  401066:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  401068:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40106c:	bf14      	ite	ne
  40106e:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  401070:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  401072:	2001      	movs	r0, #1
  401074:	e03a      	b.n	4010ec <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  401076:	460a      	mov	r2, r1
  401078:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40107c:	4b1c      	ldr	r3, [pc, #112]	; (4010f0 <pio_configure_pin_group+0xd0>)
  40107e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  401080:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  401084:	bf14      	ite	ne
  401086:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  401088:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  40108a:	2001      	movs	r0, #1
  40108c:	e02e      	b.n	4010ec <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  40108e:	460a      	mov	r2, r1
  401090:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401094:	4b16      	ldr	r3, [pc, #88]	; (4010f0 <pio_configure_pin_group+0xd0>)
  401096:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  401098:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40109c:	bf14      	ite	ne
  40109e:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4010a0:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4010a2:	2001      	movs	r0, #1
  4010a4:	e022      	b.n	4010ec <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  4010a6:	460a      	mov	r2, r1
  4010a8:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4010ac:	4b10      	ldr	r3, [pc, #64]	; (4010f0 <pio_configure_pin_group+0xd0>)
  4010ae:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  4010b0:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  4010b4:	bf14      	ite	ne
  4010b6:	666e      	strne	r6, [r5, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  4010b8:	662e      	streq	r6, [r5, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  4010ba:	2001      	movs	r0, #1
  4010bc:	e016      	b.n	4010ec <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  4010be:	4b0d      	ldr	r3, [pc, #52]	; (4010f4 <pio_configure_pin_group+0xd4>)
  4010c0:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  4010c2:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  4010c4:	e012      	b.n	4010ec <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  4010c6:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
  4010ca:	f004 0301 	and.w	r3, r4, #1
  4010ce:	9300      	str	r3, [sp, #0]
  4010d0:	f3c4 0380 	ubfx	r3, r4, #2, #1
  4010d4:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4010d8:	bf14      	ite	ne
  4010da:	2200      	movne	r2, #0
  4010dc:	2201      	moveq	r2, #1
  4010de:	4631      	mov	r1, r6
  4010e0:	4628      	mov	r0, r5
  4010e2:	4c05      	ldr	r4, [pc, #20]	; (4010f8 <pio_configure_pin_group+0xd8>)
  4010e4:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  4010e6:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  4010e8:	e000      	b.n	4010ec <pio_configure_pin_group+0xcc>

	default:
		return 0;
  4010ea:	2000      	movs	r0, #0
	}

	return 1;
}
  4010ec:	b002      	add	sp, #8
  4010ee:	bd70      	pop	{r4, r5, r6, pc}
  4010f0:	00400d5d 	.word	0x00400d5d
  4010f4:	00400ded 	.word	0x00400ded
  4010f8:	00400e21 	.word	0x00400e21

004010fc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4010fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  401100:	4681      	mov	r9, r0
  401102:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  401104:	4b12      	ldr	r3, [pc, #72]	; (401150 <pio_handler_process+0x54>)
  401106:	4798      	blx	r3
  401108:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40110a:	4648      	mov	r0, r9
  40110c:	4b11      	ldr	r3, [pc, #68]	; (401154 <pio_handler_process+0x58>)
  40110e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  401110:	4005      	ands	r5, r0
  401112:	d013      	beq.n	40113c <pio_handler_process+0x40>
  401114:	4c10      	ldr	r4, [pc, #64]	; (401158 <pio_handler_process+0x5c>)
  401116:	f104 0660 	add.w	r6, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  40111a:	6823      	ldr	r3, [r4, #0]
  40111c:	4543      	cmp	r3, r8
  40111e:	d108      	bne.n	401132 <pio_handler_process+0x36>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  401120:	6861      	ldr	r1, [r4, #4]
  401122:	4229      	tst	r1, r5
  401124:	d005      	beq.n	401132 <pio_handler_process+0x36>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  401126:	68e3      	ldr	r3, [r4, #12]
  401128:	4640      	mov	r0, r8
  40112a:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  40112c:	6863      	ldr	r3, [r4, #4]
  40112e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  401132:	42b4      	cmp	r4, r6
  401134:	d002      	beq.n	40113c <pio_handler_process+0x40>
  401136:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  401138:	2d00      	cmp	r5, #0
  40113a:	d1ee      	bne.n	40111a <pio_handler_process+0x1e>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  40113c:	4b07      	ldr	r3, [pc, #28]	; (40115c <pio_handler_process+0x60>)
  40113e:	681b      	ldr	r3, [r3, #0]
  401140:	b123      	cbz	r3, 40114c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  401142:	4b07      	ldr	r3, [pc, #28]	; (401160 <pio_handler_process+0x64>)
  401144:	681b      	ldr	r3, [r3, #0]
  401146:	b10b      	cbz	r3, 40114c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  401148:	4648      	mov	r0, r9
  40114a:	4798      	blx	r3
  40114c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401150:	00400ed9 	.word	0x00400ed9
  401154:	00400edd 	.word	0x00400edd
  401158:	20000c70 	.word	0x20000c70
  40115c:	20000d18 	.word	0x20000d18
  401160:	20000c6c 	.word	0x20000c6c

00401164 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  401164:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  401166:	210b      	movs	r1, #11
  401168:	4801      	ldr	r0, [pc, #4]	; (401170 <PIOA_Handler+0xc>)
  40116a:	4b02      	ldr	r3, [pc, #8]	; (401174 <PIOA_Handler+0x10>)
  40116c:	4798      	blx	r3
  40116e:	bd08      	pop	{r3, pc}
  401170:	400e0e00 	.word	0x400e0e00
  401174:	004010fd 	.word	0x004010fd

00401178 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  401178:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40117a:	210c      	movs	r1, #12
  40117c:	4801      	ldr	r0, [pc, #4]	; (401184 <PIOB_Handler+0xc>)
  40117e:	4b02      	ldr	r3, [pc, #8]	; (401188 <PIOB_Handler+0x10>)
  401180:	4798      	blx	r3
  401182:	bd08      	pop	{r3, pc}
  401184:	400e1000 	.word	0x400e1000
  401188:	004010fd 	.word	0x004010fd

0040118c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  40118c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  40118e:	210d      	movs	r1, #13
  401190:	4801      	ldr	r0, [pc, #4]	; (401198 <PIOC_Handler+0xc>)
  401192:	4b02      	ldr	r3, [pc, #8]	; (40119c <PIOC_Handler+0x10>)
  401194:	4798      	blx	r3
  401196:	bd08      	pop	{r3, pc}
  401198:	400e1200 	.word	0x400e1200
  40119c:	004010fd 	.word	0x004010fd

004011a0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4011a0:	4a18      	ldr	r2, [pc, #96]	; (401204 <pmc_switch_mck_to_pllack+0x64>)
  4011a2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011a4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4011a8:	4318      	orrs	r0, r3
  4011aa:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011ac:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011ae:	f013 0f08 	tst.w	r3, #8
  4011b2:	d003      	beq.n	4011bc <pmc_switch_mck_to_pllack+0x1c>
  4011b4:	e009      	b.n	4011ca <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4011b6:	3b01      	subs	r3, #1
  4011b8:	d103      	bne.n	4011c2 <pmc_switch_mck_to_pllack+0x22>
  4011ba:	e01e      	b.n	4011fa <pmc_switch_mck_to_pllack+0x5a>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011bc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4011c0:	4910      	ldr	r1, [pc, #64]	; (401204 <pmc_switch_mck_to_pllack+0x64>)
  4011c2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4011c4:	f012 0f08 	tst.w	r2, #8
  4011c8:	d0f5      	beq.n	4011b6 <pmc_switch_mck_to_pllack+0x16>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4011ca:	4a0e      	ldr	r2, [pc, #56]	; (401204 <pmc_switch_mck_to_pllack+0x64>)
  4011cc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011ce:	f023 0303 	bic.w	r3, r3, #3
  4011d2:	f043 0302 	orr.w	r3, r3, #2
  4011d6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011d8:	6e90      	ldr	r0, [r2, #104]	; 0x68
  4011da:	f010 0008 	ands.w	r0, r0, #8
  4011de:	d004      	beq.n	4011ea <pmc_switch_mck_to_pllack+0x4a>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  4011e0:	2000      	movs	r0, #0
  4011e2:	4770      	bx	lr
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
  4011e4:	3b01      	subs	r3, #1
  4011e6:	d103      	bne.n	4011f0 <pmc_switch_mck_to_pllack+0x50>
  4011e8:	e009      	b.n	4011fe <pmc_switch_mck_to_pllack+0x5e>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4011ea:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4011ee:	4905      	ldr	r1, [pc, #20]	; (401204 <pmc_switch_mck_to_pllack+0x64>)
  4011f0:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4011f2:	f012 0f08 	tst.w	r2, #8
  4011f6:	d0f5      	beq.n	4011e4 <pmc_switch_mck_to_pllack+0x44>
  4011f8:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4011fa:	2001      	movs	r0, #1
  4011fc:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  4011fe:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401200:	4770      	bx	lr
  401202:	bf00      	nop
  401204:	400e0400 	.word	0x400e0400

00401208 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401208:	b138      	cbz	r0, 40121a <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40120a:	4911      	ldr	r1, [pc, #68]	; (401250 <pmc_switch_mainck_to_xtal+0x48>)
  40120c:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40120e:	4a11      	ldr	r2, [pc, #68]	; (401254 <pmc_switch_mainck_to_xtal+0x4c>)
  401210:	401a      	ands	r2, r3
  401212:	4b11      	ldr	r3, [pc, #68]	; (401258 <pmc_switch_mainck_to_xtal+0x50>)
  401214:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401216:	620b      	str	r3, [r1, #32]
  401218:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40121a:	480d      	ldr	r0, [pc, #52]	; (401250 <pmc_switch_mainck_to_xtal+0x48>)
  40121c:	6a02      	ldr	r2, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40121e:	0209      	lsls	r1, r1, #8
  401220:	b289      	uxth	r1, r1
  401222:	f422 135c 	bic.w	r3, r2, #3604480	; 0x370000
  401226:	f023 0303 	bic.w	r3, r3, #3
  40122a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40122e:	f043 0301 	orr.w	r3, r3, #1
  401232:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401234:	6203      	str	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401236:	4602      	mov	r2, r0
  401238:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40123a:	f013 0f01 	tst.w	r3, #1
  40123e:	d0fb      	beq.n	401238 <pmc_switch_mainck_to_xtal+0x30>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401240:	4a03      	ldr	r2, [pc, #12]	; (401250 <pmc_switch_mainck_to_xtal+0x48>)
  401242:	6a13      	ldr	r3, [r2, #32]
  401244:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  401248:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40124c:	6213      	str	r3, [r2, #32]
  40124e:	4770      	bx	lr
  401250:	400e0400 	.word	0x400e0400
  401254:	fec8fffc 	.word	0xfec8fffc
  401258:	01370002 	.word	0x01370002

0040125c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40125c:	4b02      	ldr	r3, [pc, #8]	; (401268 <pmc_osc_is_ready_mainck+0xc>)
  40125e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401260:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401264:	4770      	bx	lr
  401266:	bf00      	nop
  401268:	400e0400 	.word	0x400e0400

0040126c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  40126c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401270:	4b01      	ldr	r3, [pc, #4]	; (401278 <pmc_disable_pllack+0xc>)
  401272:	629a      	str	r2, [r3, #40]	; 0x28
  401274:	4770      	bx	lr
  401276:	bf00      	nop
  401278:	400e0400 	.word	0x400e0400

0040127c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  40127c:	4b02      	ldr	r3, [pc, #8]	; (401288 <pmc_is_locked_pllack+0xc>)
  40127e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401280:	f000 0002 	and.w	r0, r0, #2
  401284:	4770      	bx	lr
  401286:	bf00      	nop
  401288:	400e0400 	.word	0x400e0400

0040128c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  40128c:	2822      	cmp	r0, #34	; 0x22
  40128e:	d81e      	bhi.n	4012ce <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401290:	281f      	cmp	r0, #31
  401292:	d80c      	bhi.n	4012ae <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401294:	4b11      	ldr	r3, [pc, #68]	; (4012dc <pmc_enable_periph_clk+0x50>)
  401296:	699a      	ldr	r2, [r3, #24]
  401298:	2301      	movs	r3, #1
  40129a:	4083      	lsls	r3, r0
  40129c:	4393      	bics	r3, r2
  40129e:	d018      	beq.n	4012d2 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  4012a0:	2301      	movs	r3, #1
  4012a2:	fa03 f000 	lsl.w	r0, r3, r0
  4012a6:	4b0d      	ldr	r3, [pc, #52]	; (4012dc <pmc_enable_periph_clk+0x50>)
  4012a8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4012aa:	2000      	movs	r0, #0
  4012ac:	4770      	bx	lr
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  4012ae:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4012b0:	4b0a      	ldr	r3, [pc, #40]	; (4012dc <pmc_enable_periph_clk+0x50>)
  4012b2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4012b6:	2301      	movs	r3, #1
  4012b8:	4083      	lsls	r3, r0
  4012ba:	4393      	bics	r3, r2
  4012bc:	d00b      	beq.n	4012d6 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4012be:	2301      	movs	r3, #1
  4012c0:	fa03 f000 	lsl.w	r0, r3, r0
  4012c4:	4b05      	ldr	r3, [pc, #20]	; (4012dc <pmc_enable_periph_clk+0x50>)
  4012c6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
  4012ca:	2000      	movs	r0, #0
  4012cc:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  4012ce:	2001      	movs	r0, #1
  4012d0:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4012d2:	2000      	movs	r0, #0
  4012d4:	4770      	bx	lr
  4012d6:	2000      	movs	r0, #0
}
  4012d8:	4770      	bx	lr
  4012da:	bf00      	nop
  4012dc:	400e0400 	.word	0x400e0400

004012e0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4012e0:	e7fe      	b.n	4012e0 <Dummy_Handler>
  4012e2:	bf00      	nop

004012e4 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  4012e4:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
  4012e6:	4b20      	ldr	r3, [pc, #128]	; (401368 <Reset_Handler+0x84>)
  4012e8:	4a20      	ldr	r2, [pc, #128]	; (40136c <Reset_Handler+0x88>)
  4012ea:	429a      	cmp	r2, r3
  4012ec:	d912      	bls.n	401314 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
  4012ee:	4b20      	ldr	r3, [pc, #128]	; (401370 <Reset_Handler+0x8c>)
  4012f0:	4a1d      	ldr	r2, [pc, #116]	; (401368 <Reset_Handler+0x84>)
  4012f2:	429a      	cmp	r2, r3
  4012f4:	d21e      	bcs.n	401334 <Reset_Handler+0x50>
  4012f6:	4611      	mov	r1, r2
  4012f8:	3b01      	subs	r3, #1
  4012fa:	1a9b      	subs	r3, r3, r2
  4012fc:	f023 0303 	bic.w	r3, r3, #3
  401300:	3304      	adds	r3, #4
  401302:	4a1a      	ldr	r2, [pc, #104]	; (40136c <Reset_Handler+0x88>)
  401304:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  401306:	f852 0b04 	ldr.w	r0, [r2], #4
  40130a:	f841 0b04 	str.w	r0, [r1], #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc > pDest) {
		for (; pDest < &_erelocate;) {
  40130e:	429a      	cmp	r2, r3
  401310:	d1f9      	bne.n	401306 <Reset_Handler+0x22>
  401312:	e00f      	b.n	401334 <Reset_Handler+0x50>
			*pDest++ = *pSrc++;
		}
	} else if (pSrc < pDest) {
  401314:	4b14      	ldr	r3, [pc, #80]	; (401368 <Reset_Handler+0x84>)
  401316:	4a15      	ldr	r2, [pc, #84]	; (40136c <Reset_Handler+0x88>)
  401318:	429a      	cmp	r2, r3
  40131a:	d20b      	bcs.n	401334 <Reset_Handler+0x50>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40131c:	4b14      	ldr	r3, [pc, #80]	; (401370 <Reset_Handler+0x8c>)
  40131e:	4a12      	ldr	r2, [pc, #72]	; (401368 <Reset_Handler+0x84>)
  401320:	1a9a      	subs	r2, r3, r2
  401322:	4814      	ldr	r0, [pc, #80]	; (401374 <Reset_Handler+0x90>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  401324:	1811      	adds	r1, r2, r0
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  401326:	b12a      	cbz	r2, 401334 <Reset_Handler+0x50>
			*pDest-- = *pSrc--;
  401328:	f851 2904 	ldr.w	r2, [r1], #-4
  40132c:	f843 2d04 	str.w	r2, [r3, #-4]!
		}
	} else if (pSrc < pDest) {
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
		for (;nb_bytes;nb_bytes -= 4) {
  401330:	4281      	cmp	r1, r0
  401332:	d1f9      	bne.n	401328 <Reset_Handler+0x44>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  401334:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  401336:	4b10      	ldr	r3, [pc, #64]	; (401378 <Reset_Handler+0x94>)
  401338:	4a10      	ldr	r2, [pc, #64]	; (40137c <Reset_Handler+0x98>)
  40133a:	429a      	cmp	r2, r3
  40133c:	d20b      	bcs.n	401356 <Reset_Handler+0x72>
  40133e:	1d13      	adds	r3, r2, #4
  401340:	4a0f      	ldr	r2, [pc, #60]	; (401380 <Reset_Handler+0x9c>)
  401342:	1ad2      	subs	r2, r2, r3
  401344:	f022 0203 	bic.w	r2, r2, #3
  401348:	441a      	add	r2, r3
  40134a:	3b04      	subs	r3, #4
		*pDest++ = 0;
  40134c:	2100      	movs	r1, #0
  40134e:	f843 1b04 	str.w	r1, [r3], #4
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  401352:	429a      	cmp	r2, r3
  401354:	d1fb      	bne.n	40134e <Reset_Handler+0x6a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc);
  401356:	4b0b      	ldr	r3, [pc, #44]	; (401384 <Reset_Handler+0xa0>)
  401358:	4a0b      	ldr	r2, [pc, #44]	; (401388 <Reset_Handler+0xa4>)
  40135a:	609a      	str	r2, [r3, #8]

	/* Initialize the C library */
	__libc_init_array();
  40135c:	4b0b      	ldr	r3, [pc, #44]	; (40138c <Reset_Handler+0xa8>)
  40135e:	4798      	blx	r3

	/* Branch to main function */
	main();
  401360:	4b0b      	ldr	r3, [pc, #44]	; (401390 <Reset_Handler+0xac>)
  401362:	4798      	blx	r3
  401364:	e7fe      	b.n	401364 <Reset_Handler+0x80>
  401366:	bf00      	nop
  401368:	20000000 	.word	0x20000000
  40136c:	00406be0 	.word	0x00406be0
  401370:	2000088c 	.word	0x2000088c
  401374:	00406bdc 	.word	0x00406bdc
  401378:	20000d3c 	.word	0x20000d3c
  40137c:	2000088c 	.word	0x2000088c
  401380:	20000d3f 	.word	0x20000d3f
  401384:	e000ed00 	.word	0xe000ed00
  401388:	00400000 	.word	0x00400000
  40138c:	0040172d 	.word	0x0040172d
  401390:	00401631 	.word	0x00401631

00401394 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401394:	4b3d      	ldr	r3, [pc, #244]	; (40148c <SystemCoreClockUpdate+0xf8>)
  401396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401398:	f003 0303 	and.w	r3, r3, #3
  40139c:	2b03      	cmp	r3, #3
  40139e:	d85d      	bhi.n	40145c <SystemCoreClockUpdate+0xc8>
  4013a0:	e8df f003 	tbb	[pc, r3]
  4013a4:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4013a8:	4b39      	ldr	r3, [pc, #228]	; (401490 <SystemCoreClockUpdate+0xfc>)
  4013aa:	695b      	ldr	r3, [r3, #20]
  4013ac:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4013b0:	bf14      	ite	ne
  4013b2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4013b6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4013ba:	4b36      	ldr	r3, [pc, #216]	; (401494 <SystemCoreClockUpdate+0x100>)
  4013bc:	601a      	str	r2, [r3, #0]
  4013be:	e04d      	b.n	40145c <SystemCoreClockUpdate+0xc8>
			}
		break;
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4013c0:	4b32      	ldr	r3, [pc, #200]	; (40148c <SystemCoreClockUpdate+0xf8>)
  4013c2:	6a1b      	ldr	r3, [r3, #32]
  4013c4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4013c8:	d003      	beq.n	4013d2 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4013ca:	4a33      	ldr	r2, [pc, #204]	; (401498 <SystemCoreClockUpdate+0x104>)
  4013cc:	4b31      	ldr	r3, [pc, #196]	; (401494 <SystemCoreClockUpdate+0x100>)
  4013ce:	601a      	str	r2, [r3, #0]
  4013d0:	e044      	b.n	40145c <SystemCoreClockUpdate+0xc8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4013d2:	4a32      	ldr	r2, [pc, #200]	; (40149c <SystemCoreClockUpdate+0x108>)
  4013d4:	4b2f      	ldr	r3, [pc, #188]	; (401494 <SystemCoreClockUpdate+0x100>)
  4013d6:	601a      	str	r2, [r3, #0]
			
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4013d8:	4b2c      	ldr	r3, [pc, #176]	; (40148c <SystemCoreClockUpdate+0xf8>)
  4013da:	6a1b      	ldr	r3, [r3, #32]
  4013dc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013e0:	2b10      	cmp	r3, #16
  4013e2:	d002      	beq.n	4013ea <SystemCoreClockUpdate+0x56>
  4013e4:	2b20      	cmp	r3, #32
  4013e6:	d004      	beq.n	4013f2 <SystemCoreClockUpdate+0x5e>
  4013e8:	e038      	b.n	40145c <SystemCoreClockUpdate+0xc8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
			break;
			
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4013ea:	4a2d      	ldr	r2, [pc, #180]	; (4014a0 <SystemCoreClockUpdate+0x10c>)
  4013ec:	4b29      	ldr	r3, [pc, #164]	; (401494 <SystemCoreClockUpdate+0x100>)
  4013ee:	601a      	str	r2, [r3, #0]
			break;
  4013f0:	e034      	b.n	40145c <SystemCoreClockUpdate+0xc8>
			
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4013f2:	4a29      	ldr	r2, [pc, #164]	; (401498 <SystemCoreClockUpdate+0x104>)
  4013f4:	4b27      	ldr	r3, [pc, #156]	; (401494 <SystemCoreClockUpdate+0x100>)
  4013f6:	601a      	str	r2, [r3, #0]
			break;
  4013f8:	e030      	b.n	40145c <SystemCoreClockUpdate+0xc8>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4013fa:	4b24      	ldr	r3, [pc, #144]	; (40148c <SystemCoreClockUpdate+0xf8>)
  4013fc:	6a1b      	ldr	r3, [r3, #32]
  4013fe:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401402:	d003      	beq.n	40140c <SystemCoreClockUpdate+0x78>
				SystemCoreClock = CHIP_FREQ_XTAL;
  401404:	4a24      	ldr	r2, [pc, #144]	; (401498 <SystemCoreClockUpdate+0x104>)
  401406:	4b23      	ldr	r3, [pc, #140]	; (401494 <SystemCoreClockUpdate+0x100>)
  401408:	601a      	str	r2, [r3, #0]
  40140a:	e012      	b.n	401432 <SystemCoreClockUpdate+0x9e>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40140c:	4a23      	ldr	r2, [pc, #140]	; (40149c <SystemCoreClockUpdate+0x108>)
  40140e:	4b21      	ldr	r3, [pc, #132]	; (401494 <SystemCoreClockUpdate+0x100>)
  401410:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401412:	4b1e      	ldr	r3, [pc, #120]	; (40148c <SystemCoreClockUpdate+0xf8>)
  401414:	6a1b      	ldr	r3, [r3, #32]
  401416:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40141a:	2b10      	cmp	r3, #16
  40141c:	d002      	beq.n	401424 <SystemCoreClockUpdate+0x90>
  40141e:	2b20      	cmp	r3, #32
  401420:	d004      	beq.n	40142c <SystemCoreClockUpdate+0x98>
  401422:	e006      	b.n	401432 <SystemCoreClockUpdate+0x9e>
				case CKGR_MOR_MOSCRCF_4_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
					break;
				
				case CKGR_MOR_MOSCRCF_8_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401424:	4a1e      	ldr	r2, [pc, #120]	; (4014a0 <SystemCoreClockUpdate+0x10c>)
  401426:	4b1b      	ldr	r3, [pc, #108]	; (401494 <SystemCoreClockUpdate+0x100>)
  401428:	601a      	str	r2, [r3, #0]
					break;
  40142a:	e002      	b.n	401432 <SystemCoreClockUpdate+0x9e>
				
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40142c:	4a1a      	ldr	r2, [pc, #104]	; (401498 <SystemCoreClockUpdate+0x104>)
  40142e:	4b19      	ldr	r3, [pc, #100]	; (401494 <SystemCoreClockUpdate+0x100>)
  401430:	601a      	str	r2, [r3, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401432:	4b16      	ldr	r3, [pc, #88]	; (40148c <SystemCoreClockUpdate+0xf8>)
  401434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401436:	f003 0303 	and.w	r3, r3, #3
  40143a:	2b02      	cmp	r3, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40143c:	4a13      	ldr	r2, [pc, #76]	; (40148c <SystemCoreClockUpdate+0xf8>)
  40143e:	bf07      	ittee	eq
  401440:	6a93      	ldreq	r3, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401442:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401444:	6ad3      	ldrne	r3, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401446:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  401448:	4812      	ldr	r0, [pc, #72]	; (401494 <SystemCoreClockUpdate+0x100>)
  40144a:	f3c3 410a 	ubfx	r1, r3, #16, #11
  40144e:	6803      	ldr	r3, [r0, #0]
  401450:	fb01 3303 	mla	r3, r1, r3, r3
  401454:	b2d2      	uxtb	r2, r2
  401456:	fbb3 f3f2 	udiv	r3, r3, r2
  40145a:	6003      	str	r3, [r0, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40145c:	4b0b      	ldr	r3, [pc, #44]	; (40148c <SystemCoreClockUpdate+0xf8>)
  40145e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401460:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401464:	2b70      	cmp	r3, #112	; 0x70
  401466:	d107      	bne.n	401478 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
  401468:	4a0a      	ldr	r2, [pc, #40]	; (401494 <SystemCoreClockUpdate+0x100>)
  40146a:	6813      	ldr	r3, [r2, #0]
  40146c:	490d      	ldr	r1, [pc, #52]	; (4014a4 <SystemCoreClockUpdate+0x110>)
  40146e:	fba1 1303 	umull	r1, r3, r1, r3
  401472:	085b      	lsrs	r3, r3, #1
  401474:	6013      	str	r3, [r2, #0]
  401476:	4770      	bx	lr
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401478:	4b04      	ldr	r3, [pc, #16]	; (40148c <SystemCoreClockUpdate+0xf8>)
  40147a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
  40147c:	4905      	ldr	r1, [pc, #20]	; (401494 <SystemCoreClockUpdate+0x100>)
  40147e:	f3c3 1202 	ubfx	r2, r3, #4, #3
  401482:	680b      	ldr	r3, [r1, #0]
  401484:	40d3      	lsrs	r3, r2
  401486:	600b      	str	r3, [r1, #0]
  401488:	4770      	bx	lr
  40148a:	bf00      	nop
  40148c:	400e0400 	.word	0x400e0400
  401490:	400e1410 	.word	0x400e1410
  401494:	20000014 	.word	0x20000014
  401498:	00b71b00 	.word	0x00b71b00
  40149c:	003d0900 	.word	0x003d0900
  4014a0:	007a1200 	.word	0x007a1200
  4014a4:	aaaaaaab 	.word	0xaaaaaaab

004014a8 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4014a8:	4b1a      	ldr	r3, [pc, #104]	; (401514 <system_init_flash+0x6c>)
  4014aa:	4298      	cmp	r0, r3
  4014ac:	d807      	bhi.n	4014be <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4014ae:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  4014b2:	4a19      	ldr	r2, [pc, #100]	; (401518 <system_init_flash+0x70>)
  4014b4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4014b6:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4014ba:	6013      	str	r3, [r2, #0]
  4014bc:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4014be:	4b17      	ldr	r3, [pc, #92]	; (40151c <system_init_flash+0x74>)
  4014c0:	4298      	cmp	r0, r3
  4014c2:	d806      	bhi.n	4014d2 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4014c4:	4b16      	ldr	r3, [pc, #88]	; (401520 <system_init_flash+0x78>)
  4014c6:	4a14      	ldr	r2, [pc, #80]	; (401518 <system_init_flash+0x70>)
  4014c8:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4014ca:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4014ce:	6013      	str	r3, [r2, #0]
  4014d0:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4014d2:	4b14      	ldr	r3, [pc, #80]	; (401524 <system_init_flash+0x7c>)
  4014d4:	4298      	cmp	r0, r3
  4014d6:	d806      	bhi.n	4014e6 <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4014d8:	4b13      	ldr	r3, [pc, #76]	; (401528 <system_init_flash+0x80>)
  4014da:	4a0f      	ldr	r2, [pc, #60]	; (401518 <system_init_flash+0x70>)
  4014dc:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4014de:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4014e2:	6013      	str	r3, [r2, #0]
  4014e4:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4014e6:	4b11      	ldr	r3, [pc, #68]	; (40152c <system_init_flash+0x84>)
  4014e8:	4298      	cmp	r0, r3
  4014ea:	d806      	bhi.n	4014fa <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4014ec:	4b10      	ldr	r3, [pc, #64]	; (401530 <system_init_flash+0x88>)
  4014ee:	4a0a      	ldr	r2, [pc, #40]	; (401518 <system_init_flash+0x70>)
  4014f0:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4014f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4014f6:	6013      	str	r3, [r2, #0]
  4014f8:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4014fa:	4b0e      	ldr	r3, [pc, #56]	; (401534 <system_init_flash+0x8c>)
  4014fc:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4014fe:	bf94      	ite	ls
  401500:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401504:	4b0c      	ldrhi	r3, [pc, #48]	; (401538 <system_init_flash+0x90>)
  401506:	4a04      	ldr	r2, [pc, #16]	; (401518 <system_init_flash+0x70>)
  401508:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40150a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40150e:	6013      	str	r3, [r2, #0]
  401510:	4770      	bx	lr
  401512:	bf00      	nop
  401514:	01312cff 	.word	0x01312cff
  401518:	400e0a00 	.word	0x400e0a00
  40151c:	026259ff 	.word	0x026259ff
  401520:	04000100 	.word	0x04000100
  401524:	039386ff 	.word	0x039386ff
  401528:	04000200 	.word	0x04000200
  40152c:	04c4b3ff 	.word	0x04c4b3ff
  401530:	04000300 	.word	0x04000300
  401534:	05f5e0ff 	.word	0x05f5e0ff
  401538:	04000500 	.word	0x04000500

0040153c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  40153c:	4b09      	ldr	r3, [pc, #36]	; (401564 <_sbrk+0x28>)
  40153e:	681b      	ldr	r3, [r3, #0]
  401540:	b913      	cbnz	r3, 401548 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  401542:	4a09      	ldr	r2, [pc, #36]	; (401568 <_sbrk+0x2c>)
  401544:	4b07      	ldr	r3, [pc, #28]	; (401564 <_sbrk+0x28>)
  401546:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  401548:	4b06      	ldr	r3, [pc, #24]	; (401564 <_sbrk+0x28>)
  40154a:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40154c:	181a      	adds	r2, r3, r0
  40154e:	4907      	ldr	r1, [pc, #28]	; (40156c <_sbrk+0x30>)
  401550:	4291      	cmp	r1, r2
  401552:	db04      	blt.n	40155e <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  401554:	4610      	mov	r0, r2
  401556:	4a03      	ldr	r2, [pc, #12]	; (401564 <_sbrk+0x28>)
  401558:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40155a:	4618      	mov	r0, r3
  40155c:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  40155e:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  401562:	4770      	bx	lr
  401564:	20000ce0 	.word	0x20000ce0
  401568:	20003d40 	.word	0x20003d40
  40156c:	20027ffc 	.word	0x20027ffc

00401570 <configure_lcd>:

twi_options_t opt;
struct ili93xx_opt_t g_ili93xx_display_opt;

void configure_lcd()
{
  401570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	/** Enable peripheral clock */
	pmc_enable_periph_clk(ID_SMC);
  401574:	200a      	movs	r0, #10
  401576:	4b1e      	ldr	r3, [pc, #120]	; (4015f0 <configure_lcd+0x80>)
  401578:	4798      	blx	r3

	/** Configure SMC interface for Lcd */
	smc_set_setup_timing(SMC, ILI93XX_LCD_CS, SMC_SETUP_NWE_SETUP(2)
  40157a:	4c1e      	ldr	r4, [pc, #120]	; (4015f4 <configure_lcd+0x84>)
  40157c:	f04f 3202 	mov.w	r2, #33686018	; 0x2020202
  401580:	2101      	movs	r1, #1
  401582:	4620      	mov	r0, r4
  401584:	4b1c      	ldr	r3, [pc, #112]	; (4015f8 <configure_lcd+0x88>)
  401586:	4798      	blx	r3
	| SMC_SETUP_NCS_WR_SETUP(2)
	| SMC_SETUP_NRD_SETUP(2)
	| SMC_SETUP_NCS_RD_SETUP(2));
	
	smc_set_pulse_timing(SMC, ILI93XX_LCD_CS, SMC_PULSE_NWE_PULSE(4)
  401588:	4a1c      	ldr	r2, [pc, #112]	; (4015fc <configure_lcd+0x8c>)
  40158a:	2101      	movs	r1, #1
  40158c:	4620      	mov	r0, r4
  40158e:	4b1c      	ldr	r3, [pc, #112]	; (401600 <configure_lcd+0x90>)
  401590:	4798      	blx	r3
	| SMC_PULSE_NCS_WR_PULSE(4)
	| SMC_PULSE_NRD_PULSE(10)
	| SMC_PULSE_NCS_RD_PULSE(10));
	
	smc_set_cycle_timing(SMC, ILI93XX_LCD_CS, SMC_CYCLE_NWE_CYCLE(10)
  401592:	4a1c      	ldr	r2, [pc, #112]	; (401604 <configure_lcd+0x94>)
  401594:	2101      	movs	r1, #1
  401596:	4620      	mov	r0, r4
  401598:	4b1b      	ldr	r3, [pc, #108]	; (401608 <configure_lcd+0x98>)
  40159a:	4798      	blx	r3
	| SMC_CYCLE_NRD_CYCLE(22));
	
	smc_set_mode(SMC, ILI93XX_LCD_CS, SMC_MODE_READ_MODE
  40159c:	2203      	movs	r2, #3
  40159e:	2101      	movs	r1, #1
  4015a0:	4620      	mov	r0, r4
  4015a2:	4b1a      	ldr	r3, [pc, #104]	; (40160c <configure_lcd+0x9c>)
  4015a4:	4798      	blx	r3
	| SMC_MODE_WRITE_MODE);

	/** Initialize display parameter */
	g_ili93xx_display_opt.ul_width = ILI93XX_LCD_WIDTH;
  4015a6:	4d1a      	ldr	r5, [pc, #104]	; (401610 <configure_lcd+0xa0>)
  4015a8:	26f0      	movs	r6, #240	; 0xf0
  4015aa:	602e      	str	r6, [r5, #0]
	g_ili93xx_display_opt.ul_height = ILI93XX_LCD_HEIGHT;
  4015ac:	f44f 77a0 	mov.w	r7, #320	; 0x140
  4015b0:	606f      	str	r7, [r5, #4]
	g_ili93xx_display_opt.foreground_color = COLOR_BLACK;
  4015b2:	2400      	movs	r4, #0
  4015b4:	60ac      	str	r4, [r5, #8]
	g_ili93xx_display_opt.background_color = COLOR_WHITE;
  4015b6:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
  4015ba:	f8c5 800c 	str.w	r8, [r5, #12]

	/** Switch off backlight */
	aat31xx_disable_backlight();
  4015be:	4b15      	ldr	r3, [pc, #84]	; (401614 <configure_lcd+0xa4>)
  4015c0:	4798      	blx	r3

	/** Initialize LCD */
	ili93xx_init(&g_ili93xx_display_opt);
  4015c2:	4628      	mov	r0, r5
  4015c4:	4b14      	ldr	r3, [pc, #80]	; (401618 <configure_lcd+0xa8>)
  4015c6:	4798      	blx	r3

	/** Set backlight level */
	aat31xx_set_backlight(AAT31XX_AVG_BACKLIGHT_LEVEL);
  4015c8:	2008      	movs	r0, #8
  4015ca:	4b14      	ldr	r3, [pc, #80]	; (40161c <configure_lcd+0xac>)
  4015cc:	4798      	blx	r3

	ili93xx_set_foreground_color(COLOR_WHITE);
  4015ce:	4640      	mov	r0, r8
  4015d0:	4b13      	ldr	r3, [pc, #76]	; (401620 <configure_lcd+0xb0>)
  4015d2:	4798      	blx	r3
	ili93xx_draw_filled_rectangle(0, 0, ILI93XX_LCD_WIDTH,
  4015d4:	463b      	mov	r3, r7
  4015d6:	4632      	mov	r2, r6
  4015d8:	4621      	mov	r1, r4
  4015da:	4620      	mov	r0, r4
  4015dc:	4d11      	ldr	r5, [pc, #68]	; (401624 <configure_lcd+0xb4>)
  4015de:	47a8      	blx	r5
	ILI93XX_LCD_HEIGHT);
	/** Turn on LCD */
	ili93xx_display_on();
  4015e0:	4b11      	ldr	r3, [pc, #68]	; (401628 <configure_lcd+0xb8>)
  4015e2:	4798      	blx	r3
	ili93xx_set_cursor_position(0, 0);
  4015e4:	4621      	mov	r1, r4
  4015e6:	4620      	mov	r0, r4
  4015e8:	4b10      	ldr	r3, [pc, #64]	; (40162c <configure_lcd+0xbc>)
  4015ea:	4798      	blx	r3
  4015ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4015f0:	0040128d 	.word	0x0040128d
  4015f4:	400e0000 	.word	0x400e0000
  4015f8:	00400991 	.word	0x00400991
  4015fc:	0a0a0404 	.word	0x0a0a0404
  401600:	00400999 	.word	0x00400999
  401604:	0016000a 	.word	0x0016000a
  401608:	004009a1 	.word	0x004009a1
  40160c:	004009a9 	.word	0x004009a9
  401610:	20000d28 	.word	0x20000d28
  401614:	00400185 	.word	0x00400185
  401618:	004004c1 	.word	0x004004c1
  40161c:	00400129 	.word	0x00400129
  401620:	004003dd 	.word	0x004003dd
  401624:	00400821 	.word	0x00400821
  401628:	004003a9 	.word	0x004003a9
  40162c:	0040049d 	.word	0x0040049d

00401630 <main>:
}

int main (void)
{
  401630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401634:	b090      	sub	sp, #64	; 0x40
	sysclk_init();
  401636:	4b29      	ldr	r3, [pc, #164]	; (4016dc <main+0xac>)
  401638:	4798      	blx	r3
	board_init();
  40163a:	4b29      	ldr	r3, [pc, #164]	; (4016e0 <main+0xb0>)
  40163c:	4798      	blx	r3
	configure_lcd();
  40163e:	4b29      	ldr	r3, [pc, #164]	; (4016e4 <main+0xb4>)
  401640:	4798      	blx	r3

	pio_configure(PIOB, PIO_PERIPH_B, (PIO_PB5A_TWCK1 | PIO_PB4A_TWD1), PIO_OPENDRAIN);
  401642:	2304      	movs	r3, #4
  401644:	2230      	movs	r2, #48	; 0x30
  401646:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40164a:	4827      	ldr	r0, [pc, #156]	; (4016e8 <main+0xb8>)
  40164c:	4c27      	ldr	r4, [pc, #156]	; (4016ec <main+0xbc>)
  40164e:	47a0      	blx	r4
	
	pmc_enable_periph_clk(ID_TWI1);
  401650:	2014      	movs	r0, #20
  401652:	4b27      	ldr	r3, [pc, #156]	; (4016f0 <main+0xc0>)
  401654:	4798      	blx	r3

	opt.master_clk = sysclk_get_peripheral_hz();
  401656:	4c27      	ldr	r4, [pc, #156]	; (4016f4 <main+0xc4>)
  401658:	4b27      	ldr	r3, [pc, #156]	; (4016f8 <main+0xc8>)
  40165a:	6023      	str	r3, [r4, #0]
	opt.speed      = TWI_CLK;
  40165c:	4b27      	ldr	r3, [pc, #156]	; (4016fc <main+0xcc>)
  40165e:	6063      	str	r3, [r4, #4]
	twi_enable_master_mode(TWI1);
  401660:	4d27      	ldr	r5, [pc, #156]	; (401700 <main+0xd0>)
  401662:	4628      	mov	r0, r5
  401664:	4b27      	ldr	r3, [pc, #156]	; (401704 <main+0xd4>)
  401666:	4798      	blx	r3
	twi_master_init(TWI1, &opt);
  401668:	4621      	mov	r1, r4
  40166a:	4628      	mov	r0, r5
  40166c:	4b26      	ldr	r3, [pc, #152]	; (401708 <main+0xd8>)
  40166e:	4798      	blx	r3
	
	twi_packet_t	pacote;
	uint8_t	resposta[20];

	resposta[0]=0x00;
  401670:	2300      	movs	r3, #0
  401672:	f88d 3018 	strb.w	r3, [sp, #24]
		pacote.addr_length = 1;
		pacote.buffer = &resposta;		
		pacote.chip = ENDERECO_SENSOR;
		pacote.length = 14;

		twi_master_read(TWI1, &pacote);
  401676:	462f      	mov	r7, r5
  401678:	4e24      	ldr	r6, [pc, #144]	; (40170c <main+0xdc>)
		
		char	a[20];
		int16_t	b;
		b = (resposta[2] << 8 | resposta[3]);
		sprintf(a,"%i",b);
  40167a:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 401728 <main+0xf8>
		//ili93xx_draw_string(0, 0, "Enviou");
	//}

	while(1)
	{
		pacote.addr[0] = COMANDO_LEITURA_1;
  40167e:	233b      	movs	r3, #59	; 0x3b
  401680:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
		pacote.addr_length = 1;
  401684:	2301      	movs	r3, #1
  401686:	930c      	str	r3, [sp, #48]	; 0x30
		pacote.buffer = &resposta;		
  401688:	ab06      	add	r3, sp, #24
  40168a:	930d      	str	r3, [sp, #52]	; 0x34
		pacote.chip = ENDERECO_SENSOR;
  40168c:	2368      	movs	r3, #104	; 0x68
  40168e:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
		pacote.length = 14;
  401692:	230e      	movs	r3, #14
  401694:	930e      	str	r3, [sp, #56]	; 0x38

		twi_master_read(TWI1, &pacote);
  401696:	a90b      	add	r1, sp, #44	; 0x2c
  401698:	4638      	mov	r0, r7
  40169a:	47b0      	blx	r6
		
		char	a[20];
		int16_t	b;
		b = (resposta[2] << 8 | resposta[3]);
		sprintf(a,"%i",b);
  40169c:	f89d 201a 	ldrb.w	r2, [sp, #26]
  4016a0:	f89d 301b 	ldrb.w	r3, [sp, #27]
  4016a4:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
  4016a8:	b212      	sxth	r2, r2
  4016aa:	4641      	mov	r1, r8
  4016ac:	a801      	add	r0, sp, #4
  4016ae:	4b18      	ldr	r3, [pc, #96]	; (401710 <main+0xe0>)
  4016b0:	4798      	blx	r3
		ili93xx_set_foreground_color(COLOR_WHITE);
  4016b2:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  4016b6:	4c17      	ldr	r4, [pc, #92]	; (401714 <main+0xe4>)
  4016b8:	47a0      	blx	r4
		ili93xx_draw_filled_rectangle(95, 175, 240, 200);
  4016ba:	23c8      	movs	r3, #200	; 0xc8
  4016bc:	22f0      	movs	r2, #240	; 0xf0
  4016be:	21af      	movs	r1, #175	; 0xaf
  4016c0:	205f      	movs	r0, #95	; 0x5f
  4016c2:	4d15      	ldr	r5, [pc, #84]	; (401718 <main+0xe8>)
  4016c4:	47a8      	blx	r5
		ili93xx_set_foreground_color(COLOR_BLACK);
  4016c6:	2000      	movs	r0, #0
  4016c8:	47a0      	blx	r4
		ili93xx_draw_string(100, 180, a);
  4016ca:	aa01      	add	r2, sp, #4
  4016cc:	21b4      	movs	r1, #180	; 0xb4
  4016ce:	2064      	movs	r0, #100	; 0x64
  4016d0:	4b12      	ldr	r3, [pc, #72]	; (40171c <main+0xec>)
  4016d2:	4798      	blx	r3
		delay_ms(100);
  4016d4:	4812      	ldr	r0, [pc, #72]	; (401720 <main+0xf0>)
  4016d6:	4b13      	ldr	r3, [pc, #76]	; (401724 <main+0xf4>)
  4016d8:	4798      	blx	r3
  4016da:	e7d0      	b.n	40167e <main+0x4e>
  4016dc:	00400bb5 	.word	0x00400bb5
  4016e0:	00400c19 	.word	0x00400c19
  4016e4:	00401571 	.word	0x00401571
  4016e8:	400e1000 	.word	0x400e1000
  4016ec:	00400e49 	.word	0x00400e49
  4016f0:	0040128d 	.word	0x0040128d
  4016f4:	20000d1c 	.word	0x20000d1c
  4016f8:	07270e00 	.word	0x07270e00
  4016fc:	00030d40 	.word	0x00030d40
  401700:	4001c000 	.word	0x4001c000
  401704:	004009b1 	.word	0x004009b1
  401708:	00400a7d 	.word	0x00400a7d
  40170c:	00400ae1 	.word	0x00400ae1
  401710:	00401819 	.word	0x00401819
  401714:	004003dd 	.word	0x004003dd
  401718:	00400821 	.word	0x00400821
  40171c:	004008e5 	.word	0x004008e5
  401720:	000d1437 	.word	0x000d1437
  401724:	20000001 	.word	0x20000001
  401728:	00406a2c 	.word	0x00406a2c

0040172c <__libc_init_array>:
  40172c:	b570      	push	{r4, r5, r6, lr}
  40172e:	4e0f      	ldr	r6, [pc, #60]	; (40176c <__libc_init_array+0x40>)
  401730:	4d0f      	ldr	r5, [pc, #60]	; (401770 <__libc_init_array+0x44>)
  401732:	1b76      	subs	r6, r6, r5
  401734:	10b6      	asrs	r6, r6, #2
  401736:	bf18      	it	ne
  401738:	2400      	movne	r4, #0
  40173a:	d005      	beq.n	401748 <__libc_init_array+0x1c>
  40173c:	3401      	adds	r4, #1
  40173e:	f855 3b04 	ldr.w	r3, [r5], #4
  401742:	4798      	blx	r3
  401744:	42a6      	cmp	r6, r4
  401746:	d1f9      	bne.n	40173c <__libc_init_array+0x10>
  401748:	4e0a      	ldr	r6, [pc, #40]	; (401774 <__libc_init_array+0x48>)
  40174a:	4d0b      	ldr	r5, [pc, #44]	; (401778 <__libc_init_array+0x4c>)
  40174c:	1b76      	subs	r6, r6, r5
  40174e:	f005 fa31 	bl	406bb4 <_init>
  401752:	10b6      	asrs	r6, r6, #2
  401754:	bf18      	it	ne
  401756:	2400      	movne	r4, #0
  401758:	d006      	beq.n	401768 <__libc_init_array+0x3c>
  40175a:	3401      	adds	r4, #1
  40175c:	f855 3b04 	ldr.w	r3, [r5], #4
  401760:	4798      	blx	r3
  401762:	42a6      	cmp	r6, r4
  401764:	d1f9      	bne.n	40175a <__libc_init_array+0x2e>
  401766:	bd70      	pop	{r4, r5, r6, pc}
  401768:	bd70      	pop	{r4, r5, r6, pc}
  40176a:	bf00      	nop
  40176c:	00406bc0 	.word	0x00406bc0
  401770:	00406bc0 	.word	0x00406bc0
  401774:	00406bc8 	.word	0x00406bc8
  401778:	00406bc0 	.word	0x00406bc0

0040177c <memset>:
  40177c:	b470      	push	{r4, r5, r6}
  40177e:	0784      	lsls	r4, r0, #30
  401780:	d046      	beq.n	401810 <memset+0x94>
  401782:	1e54      	subs	r4, r2, #1
  401784:	2a00      	cmp	r2, #0
  401786:	d041      	beq.n	40180c <memset+0x90>
  401788:	b2cd      	uxtb	r5, r1
  40178a:	4603      	mov	r3, r0
  40178c:	e002      	b.n	401794 <memset+0x18>
  40178e:	1e62      	subs	r2, r4, #1
  401790:	b3e4      	cbz	r4, 40180c <memset+0x90>
  401792:	4614      	mov	r4, r2
  401794:	f803 5b01 	strb.w	r5, [r3], #1
  401798:	079a      	lsls	r2, r3, #30
  40179a:	d1f8      	bne.n	40178e <memset+0x12>
  40179c:	2c03      	cmp	r4, #3
  40179e:	d92e      	bls.n	4017fe <memset+0x82>
  4017a0:	b2cd      	uxtb	r5, r1
  4017a2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4017a6:	2c0f      	cmp	r4, #15
  4017a8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4017ac:	d919      	bls.n	4017e2 <memset+0x66>
  4017ae:	f103 0210 	add.w	r2, r3, #16
  4017b2:	4626      	mov	r6, r4
  4017b4:	3e10      	subs	r6, #16
  4017b6:	2e0f      	cmp	r6, #15
  4017b8:	f842 5c10 	str.w	r5, [r2, #-16]
  4017bc:	f842 5c0c 	str.w	r5, [r2, #-12]
  4017c0:	f842 5c08 	str.w	r5, [r2, #-8]
  4017c4:	f842 5c04 	str.w	r5, [r2, #-4]
  4017c8:	f102 0210 	add.w	r2, r2, #16
  4017cc:	d8f2      	bhi.n	4017b4 <memset+0x38>
  4017ce:	f1a4 0210 	sub.w	r2, r4, #16
  4017d2:	f022 020f 	bic.w	r2, r2, #15
  4017d6:	f004 040f 	and.w	r4, r4, #15
  4017da:	3210      	adds	r2, #16
  4017dc:	2c03      	cmp	r4, #3
  4017de:	4413      	add	r3, r2
  4017e0:	d90d      	bls.n	4017fe <memset+0x82>
  4017e2:	461e      	mov	r6, r3
  4017e4:	4622      	mov	r2, r4
  4017e6:	3a04      	subs	r2, #4
  4017e8:	2a03      	cmp	r2, #3
  4017ea:	f846 5b04 	str.w	r5, [r6], #4
  4017ee:	d8fa      	bhi.n	4017e6 <memset+0x6a>
  4017f0:	1f22      	subs	r2, r4, #4
  4017f2:	f022 0203 	bic.w	r2, r2, #3
  4017f6:	3204      	adds	r2, #4
  4017f8:	4413      	add	r3, r2
  4017fa:	f004 0403 	and.w	r4, r4, #3
  4017fe:	b12c      	cbz	r4, 40180c <memset+0x90>
  401800:	b2c9      	uxtb	r1, r1
  401802:	441c      	add	r4, r3
  401804:	f803 1b01 	strb.w	r1, [r3], #1
  401808:	42a3      	cmp	r3, r4
  40180a:	d1fb      	bne.n	401804 <memset+0x88>
  40180c:	bc70      	pop	{r4, r5, r6}
  40180e:	4770      	bx	lr
  401810:	4614      	mov	r4, r2
  401812:	4603      	mov	r3, r0
  401814:	e7c2      	b.n	40179c <memset+0x20>
  401816:	bf00      	nop

00401818 <sprintf>:
  401818:	b40e      	push	{r1, r2, r3}
  40181a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40181c:	b09c      	sub	sp, #112	; 0x70
  40181e:	ab21      	add	r3, sp, #132	; 0x84
  401820:	490f      	ldr	r1, [pc, #60]	; (401860 <sprintf+0x48>)
  401822:	f853 2b04 	ldr.w	r2, [r3], #4
  401826:	9301      	str	r3, [sp, #4]
  401828:	4605      	mov	r5, r0
  40182a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40182e:	6808      	ldr	r0, [r1, #0]
  401830:	9502      	str	r5, [sp, #8]
  401832:	f44f 7702 	mov.w	r7, #520	; 0x208
  401836:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40183a:	a902      	add	r1, sp, #8
  40183c:	9506      	str	r5, [sp, #24]
  40183e:	f8ad 7014 	strh.w	r7, [sp, #20]
  401842:	9404      	str	r4, [sp, #16]
  401844:	9407      	str	r4, [sp, #28]
  401846:	f8ad 6016 	strh.w	r6, [sp, #22]
  40184a:	f000 f80b 	bl	401864 <_svfprintf_r>
  40184e:	9b02      	ldr	r3, [sp, #8]
  401850:	2200      	movs	r2, #0
  401852:	701a      	strb	r2, [r3, #0]
  401854:	b01c      	add	sp, #112	; 0x70
  401856:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40185a:	b003      	add	sp, #12
  40185c:	4770      	bx	lr
  40185e:	bf00      	nop
  401860:	20000440 	.word	0x20000440

00401864 <_svfprintf_r>:
  401864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401868:	b0c1      	sub	sp, #260	; 0x104
  40186a:	460c      	mov	r4, r1
  40186c:	9109      	str	r1, [sp, #36]	; 0x24
  40186e:	4615      	mov	r5, r2
  401870:	930e      	str	r3, [sp, #56]	; 0x38
  401872:	900a      	str	r0, [sp, #40]	; 0x28
  401874:	f002 fb28 	bl	403ec8 <_localeconv_r>
  401878:	6803      	ldr	r3, [r0, #0]
  40187a:	9317      	str	r3, [sp, #92]	; 0x5c
  40187c:	4618      	mov	r0, r3
  40187e:	f003 f9ff 	bl	404c80 <strlen>
  401882:	89a3      	ldrh	r3, [r4, #12]
  401884:	9016      	str	r0, [sp, #88]	; 0x58
  401886:	061e      	lsls	r6, r3, #24
  401888:	d503      	bpl.n	401892 <_svfprintf_r+0x2e>
  40188a:	6923      	ldr	r3, [r4, #16]
  40188c:	2b00      	cmp	r3, #0
  40188e:	f001 8119 	beq.w	402ac4 <_svfprintf_r+0x1260>
  401892:	2300      	movs	r3, #0
  401894:	461a      	mov	r2, r3
  401896:	9312      	str	r3, [sp, #72]	; 0x48
  401898:	9325      	str	r3, [sp, #148]	; 0x94
  40189a:	9324      	str	r3, [sp, #144]	; 0x90
  40189c:	9319      	str	r3, [sp, #100]	; 0x64
  40189e:	930b      	str	r3, [sp, #44]	; 0x2c
  4018a0:	f8df a464 	ldr.w	sl, [pc, #1124]	; 401d08 <_svfprintf_r+0x4a4>
  4018a4:	9214      	str	r2, [sp, #80]	; 0x50
  4018a6:	ab30      	add	r3, sp, #192	; 0xc0
  4018a8:	9323      	str	r3, [sp, #140]	; 0x8c
  4018aa:	4699      	mov	r9, r3
  4018ac:	9215      	str	r2, [sp, #84]	; 0x54
  4018ae:	46a8      	mov	r8, r5
  4018b0:	f898 3000 	ldrb.w	r3, [r8]
  4018b4:	4644      	mov	r4, r8
  4018b6:	b1eb      	cbz	r3, 4018f4 <_svfprintf_r+0x90>
  4018b8:	2b25      	cmp	r3, #37	; 0x25
  4018ba:	d102      	bne.n	4018c2 <_svfprintf_r+0x5e>
  4018bc:	e01a      	b.n	4018f4 <_svfprintf_r+0x90>
  4018be:	2b25      	cmp	r3, #37	; 0x25
  4018c0:	d003      	beq.n	4018ca <_svfprintf_r+0x66>
  4018c2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4018c6:	2b00      	cmp	r3, #0
  4018c8:	d1f9      	bne.n	4018be <_svfprintf_r+0x5a>
  4018ca:	ebc8 0504 	rsb	r5, r8, r4
  4018ce:	b18d      	cbz	r5, 4018f4 <_svfprintf_r+0x90>
  4018d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4018d2:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4018d4:	f8c9 8000 	str.w	r8, [r9]
  4018d8:	3301      	adds	r3, #1
  4018da:	442a      	add	r2, r5
  4018dc:	2b07      	cmp	r3, #7
  4018de:	f8c9 5004 	str.w	r5, [r9, #4]
  4018e2:	9225      	str	r2, [sp, #148]	; 0x94
  4018e4:	9324      	str	r3, [sp, #144]	; 0x90
  4018e6:	f300 80a6 	bgt.w	401a36 <_svfprintf_r+0x1d2>
  4018ea:	f109 0908 	add.w	r9, r9, #8
  4018ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4018f0:	442b      	add	r3, r5
  4018f2:	930b      	str	r3, [sp, #44]	; 0x2c
  4018f4:	7823      	ldrb	r3, [r4, #0]
  4018f6:	2b00      	cmp	r3, #0
  4018f8:	f000 80a6 	beq.w	401a48 <_svfprintf_r+0x1e4>
  4018fc:	2300      	movs	r3, #0
  4018fe:	461a      	mov	r2, r3
  401900:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401904:	4619      	mov	r1, r3
  401906:	930c      	str	r3, [sp, #48]	; 0x30
  401908:	9307      	str	r3, [sp, #28]
  40190a:	f04f 3bff 	mov.w	fp, #4294967295
  40190e:	7863      	ldrb	r3, [r4, #1]
  401910:	f104 0801 	add.w	r8, r4, #1
  401914:	465d      	mov	r5, fp
  401916:	f108 0801 	add.w	r8, r8, #1
  40191a:	f1a3 0020 	sub.w	r0, r3, #32
  40191e:	2858      	cmp	r0, #88	; 0x58
  401920:	f200 8425 	bhi.w	40216e <_svfprintf_r+0x90a>
  401924:	e8df f010 	tbh	[pc, r0, lsl #1]
  401928:	04230388 	.word	0x04230388
  40192c:	03900423 	.word	0x03900423
  401930:	04230423 	.word	0x04230423
  401934:	04230423 	.word	0x04230423
  401938:	04230423 	.word	0x04230423
  40193c:	03a50397 	.word	0x03a50397
  401940:	005d0423 	.word	0x005d0423
  401944:	042300e2 	.word	0x042300e2
  401948:	010500fe 	.word	0x010500fe
  40194c:	01050105 	.word	0x01050105
  401950:	01050105 	.word	0x01050105
  401954:	01050105 	.word	0x01050105
  401958:	01050105 	.word	0x01050105
  40195c:	04230423 	.word	0x04230423
  401960:	04230423 	.word	0x04230423
  401964:	04230423 	.word	0x04230423
  401968:	04230423 	.word	0x04230423
  40196c:	04230423 	.word	0x04230423
  401970:	02810115 	.word	0x02810115
  401974:	02810423 	.word	0x02810423
  401978:	04230423 	.word	0x04230423
  40197c:	04230423 	.word	0x04230423
  401980:	042302c6 	.word	0x042302c6
  401984:	02cd0423 	.word	0x02cd0423
  401988:	04230423 	.word	0x04230423
  40198c:	04230423 	.word	0x04230423
  401990:	02f70423 	.word	0x02f70423
  401994:	04230423 	.word	0x04230423
  401998:	04230325 	.word	0x04230325
  40199c:	04230423 	.word	0x04230423
  4019a0:	04230423 	.word	0x04230423
  4019a4:	04230423 	.word	0x04230423
  4019a8:	04230423 	.word	0x04230423
  4019ac:	03660423 	.word	0x03660423
  4019b0:	02810379 	.word	0x02810379
  4019b4:	02810281 	.word	0x02810281
  4019b8:	03790381 	.word	0x03790381
  4019bc:	04230423 	.word	0x04230423
  4019c0:	042303d1 	.word	0x042303d1
  4019c4:	00a303db 	.word	0x00a303db
  4019c8:	03ee0064 	.word	0x03ee0064
  4019cc:	03f50423 	.word	0x03f50423
  4019d0:	03aa0423 	.word	0x03aa0423
  4019d4:	04230423 	.word	0x04230423
  4019d8:	03bc      	.short	0x03bc
  4019da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4019dc:	930e      	str	r3, [sp, #56]	; 0x38
  4019de:	4240      	negs	r0, r0
  4019e0:	900c      	str	r0, [sp, #48]	; 0x30
  4019e2:	9b07      	ldr	r3, [sp, #28]
  4019e4:	f043 0304 	orr.w	r3, r3, #4
  4019e8:	9307      	str	r3, [sp, #28]
  4019ea:	f898 3000 	ldrb.w	r3, [r8]
  4019ee:	e792      	b.n	401916 <_svfprintf_r+0xb2>
  4019f0:	980e      	ldr	r0, [sp, #56]	; 0x38
  4019f2:	46ab      	mov	fp, r5
  4019f4:	2100      	movs	r1, #0
  4019f6:	6804      	ldr	r4, [r0, #0]
  4019f8:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  4019fc:	1d07      	adds	r7, r0, #4
  4019fe:	9807      	ldr	r0, [sp, #28]
  401a00:	2330      	movs	r3, #48	; 0x30
  401a02:	2278      	movs	r2, #120	; 0x78
  401a04:	458b      	cmp	fp, r1
  401a06:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  401a0a:	f04f 0500 	mov.w	r5, #0
  401a0e:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  401a12:	f040 0302 	orr.w	r3, r0, #2
  401a16:	f2c0 83c7 	blt.w	4021a8 <_svfprintf_r+0x944>
  401a1a:	f020 0380 	bic.w	r3, r0, #128	; 0x80
  401a1e:	f043 0302 	orr.w	r3, r3, #2
  401a22:	9307      	str	r3, [sp, #28]
  401a24:	ea54 0305 	orrs.w	r3, r4, r5
  401a28:	970e      	str	r7, [sp, #56]	; 0x38
  401a2a:	f000 8393 	beq.w	402154 <_svfprintf_r+0x8f0>
  401a2e:	460f      	mov	r7, r1
  401a30:	9211      	str	r2, [sp, #68]	; 0x44
  401a32:	48b3      	ldr	r0, [pc, #716]	; (401d00 <_svfprintf_r+0x49c>)
  401a34:	e2ce      	b.n	401fd4 <_svfprintf_r+0x770>
  401a36:	aa23      	add	r2, sp, #140	; 0x8c
  401a38:	9909      	ldr	r1, [sp, #36]	; 0x24
  401a3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  401a3c:	f003 f98e 	bl	404d5c <__ssprint_r>
  401a40:	b948      	cbnz	r0, 401a56 <_svfprintf_r+0x1f2>
  401a42:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401a46:	e752      	b.n	4018ee <_svfprintf_r+0x8a>
  401a48:	9b25      	ldr	r3, [sp, #148]	; 0x94
  401a4a:	b123      	cbz	r3, 401a56 <_svfprintf_r+0x1f2>
  401a4c:	980a      	ldr	r0, [sp, #40]	; 0x28
  401a4e:	9909      	ldr	r1, [sp, #36]	; 0x24
  401a50:	aa23      	add	r2, sp, #140	; 0x8c
  401a52:	f003 f983 	bl	404d5c <__ssprint_r>
  401a56:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401a58:	899b      	ldrh	r3, [r3, #12]
  401a5a:	f013 0f40 	tst.w	r3, #64	; 0x40
  401a5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401a60:	bf18      	it	ne
  401a62:	f04f 33ff 	movne.w	r3, #4294967295
  401a66:	4618      	mov	r0, r3
  401a68:	b041      	add	sp, #260	; 0x104
  401a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a6e:	9311      	str	r3, [sp, #68]	; 0x44
  401a70:	46ab      	mov	fp, r5
  401a72:	2a00      	cmp	r2, #0
  401a74:	f041 8223 	bne.w	402ebe <_svfprintf_r+0x165a>
  401a78:	9a07      	ldr	r2, [sp, #28]
  401a7a:	f012 0320 	ands.w	r3, r2, #32
  401a7e:	f000 822e 	beq.w	401ede <_svfprintf_r+0x67a>
  401a82:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401a84:	3707      	adds	r7, #7
  401a86:	f027 0307 	bic.w	r3, r7, #7
  401a8a:	2700      	movs	r7, #0
  401a8c:	f103 0108 	add.w	r1, r3, #8
  401a90:	45bb      	cmp	fp, r7
  401a92:	910e      	str	r1, [sp, #56]	; 0x38
  401a94:	e9d3 4500 	ldrd	r4, r5, [r3]
  401a98:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  401a9c:	f2c0 8752 	blt.w	402944 <_svfprintf_r+0x10e0>
  401aa0:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  401aa4:	9307      	str	r3, [sp, #28]
  401aa6:	ea54 0305 	orrs.w	r3, r4, r5
  401aaa:	f000 8375 	beq.w	402198 <_svfprintf_r+0x934>
  401aae:	ae30      	add	r6, sp, #192	; 0xc0
  401ab0:	08e2      	lsrs	r2, r4, #3
  401ab2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  401ab6:	08e9      	lsrs	r1, r5, #3
  401ab8:	f004 0307 	and.w	r3, r4, #7
  401abc:	460d      	mov	r5, r1
  401abe:	4614      	mov	r4, r2
  401ac0:	3330      	adds	r3, #48	; 0x30
  401ac2:	ea54 0205 	orrs.w	r2, r4, r5
  401ac6:	f806 3d01 	strb.w	r3, [r6, #-1]!
  401aca:	d1f1      	bne.n	401ab0 <_svfprintf_r+0x24c>
  401acc:	9a07      	ldr	r2, [sp, #28]
  401ace:	07d1      	lsls	r1, r2, #31
  401ad0:	f140 8084 	bpl.w	401bdc <_svfprintf_r+0x378>
  401ad4:	2b30      	cmp	r3, #48	; 0x30
  401ad6:	f000 8081 	beq.w	401bdc <_svfprintf_r+0x378>
  401ada:	2230      	movs	r2, #48	; 0x30
  401adc:	1e73      	subs	r3, r6, #1
  401ade:	f806 2c01 	strb.w	r2, [r6, #-1]
  401ae2:	aa30      	add	r2, sp, #192	; 0xc0
  401ae4:	1ad2      	subs	r2, r2, r3
  401ae6:	920d      	str	r2, [sp, #52]	; 0x34
  401ae8:	461e      	mov	r6, r3
  401aea:	e07a      	b.n	401be2 <_svfprintf_r+0x37e>
  401aec:	f898 3000 	ldrb.w	r3, [r8]
  401af0:	2b2a      	cmp	r3, #42	; 0x2a
  401af2:	f108 0401 	add.w	r4, r8, #1
  401af6:	f001 81b1 	beq.w	402e5c <_svfprintf_r+0x15f8>
  401afa:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401afe:	2809      	cmp	r0, #9
  401b00:	bf98      	it	ls
  401b02:	2500      	movls	r5, #0
  401b04:	f201 8164 	bhi.w	402dd0 <_svfprintf_r+0x156c>
  401b08:	f814 3b01 	ldrb.w	r3, [r4], #1
  401b0c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401b10:	eb00 0545 	add.w	r5, r0, r5, lsl #1
  401b14:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401b18:	2809      	cmp	r0, #9
  401b1a:	d9f5      	bls.n	401b08 <_svfprintf_r+0x2a4>
  401b1c:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  401b20:	46a0      	mov	r8, r4
  401b22:	e6fa      	b.n	40191a <_svfprintf_r+0xb6>
  401b24:	9b07      	ldr	r3, [sp, #28]
  401b26:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401b2a:	9307      	str	r3, [sp, #28]
  401b2c:	f898 3000 	ldrb.w	r3, [r8]
  401b30:	e6f1      	b.n	401916 <_svfprintf_r+0xb2>
  401b32:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401b36:	2300      	movs	r3, #0
  401b38:	461c      	mov	r4, r3
  401b3a:	f818 3b01 	ldrb.w	r3, [r8], #1
  401b3e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401b42:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  401b46:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401b4a:	2809      	cmp	r0, #9
  401b4c:	d9f5      	bls.n	401b3a <_svfprintf_r+0x2d6>
  401b4e:	940c      	str	r4, [sp, #48]	; 0x30
  401b50:	e6e3      	b.n	40191a <_svfprintf_r+0xb6>
  401b52:	9311      	str	r3, [sp, #68]	; 0x44
  401b54:	46ab      	mov	fp, r5
  401b56:	2a00      	cmp	r2, #0
  401b58:	f041 81c9 	bne.w	402eee <_svfprintf_r+0x168a>
  401b5c:	9b07      	ldr	r3, [sp, #28]
  401b5e:	f043 0310 	orr.w	r3, r3, #16
  401b62:	9307      	str	r3, [sp, #28]
  401b64:	9b07      	ldr	r3, [sp, #28]
  401b66:	0698      	lsls	r0, r3, #26
  401b68:	f140 8530 	bpl.w	4025cc <_svfprintf_r+0xd68>
  401b6c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401b6e:	3707      	adds	r7, #7
  401b70:	f027 0707 	bic.w	r7, r7, #7
  401b74:	e9d7 2300 	ldrd	r2, r3, [r7]
  401b78:	f107 0108 	add.w	r1, r7, #8
  401b7c:	910e      	str	r1, [sp, #56]	; 0x38
  401b7e:	4614      	mov	r4, r2
  401b80:	461d      	mov	r5, r3
  401b82:	2a00      	cmp	r2, #0
  401b84:	f173 0300 	sbcs.w	r3, r3, #0
  401b88:	f2c0 855b 	blt.w	402642 <_svfprintf_r+0xdde>
  401b8c:	f1bb 0f00 	cmp.w	fp, #0
  401b90:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  401b94:	f2c0 8538 	blt.w	402608 <_svfprintf_r+0xda4>
  401b98:	9b07      	ldr	r3, [sp, #28]
  401b9a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401b9e:	9307      	str	r3, [sp, #28]
  401ba0:	ea54 0305 	orrs.w	r3, r4, r5
  401ba4:	f000 81db 	beq.w	401f5e <_svfprintf_r+0x6fa>
  401ba8:	2d00      	cmp	r5, #0
  401baa:	bf08      	it	eq
  401bac:	2c0a      	cmpeq	r4, #10
  401bae:	f0c0 81db 	bcc.w	401f68 <_svfprintf_r+0x704>
  401bb2:	ae30      	add	r6, sp, #192	; 0xc0
  401bb4:	4620      	mov	r0, r4
  401bb6:	4629      	mov	r1, r5
  401bb8:	220a      	movs	r2, #10
  401bba:	2300      	movs	r3, #0
  401bbc:	f004 f9ea 	bl	405f94 <__aeabi_uldivmod>
  401bc0:	3230      	adds	r2, #48	; 0x30
  401bc2:	f806 2d01 	strb.w	r2, [r6, #-1]!
  401bc6:	4620      	mov	r0, r4
  401bc8:	4629      	mov	r1, r5
  401bca:	2300      	movs	r3, #0
  401bcc:	220a      	movs	r2, #10
  401bce:	f004 f9e1 	bl	405f94 <__aeabi_uldivmod>
  401bd2:	4604      	mov	r4, r0
  401bd4:	460d      	mov	r5, r1
  401bd6:	ea54 0305 	orrs.w	r3, r4, r5
  401bda:	d1eb      	bne.n	401bb4 <_svfprintf_r+0x350>
  401bdc:	ab30      	add	r3, sp, #192	; 0xc0
  401bde:	1b9b      	subs	r3, r3, r6
  401be0:	930d      	str	r3, [sp, #52]	; 0x34
  401be2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401be4:	455b      	cmp	r3, fp
  401be6:	bfb8      	it	lt
  401be8:	465b      	movlt	r3, fp
  401bea:	9308      	str	r3, [sp, #32]
  401bec:	2300      	movs	r3, #0
  401bee:	9313      	str	r3, [sp, #76]	; 0x4c
  401bf0:	b117      	cbz	r7, 401bf8 <_svfprintf_r+0x394>
  401bf2:	9b08      	ldr	r3, [sp, #32]
  401bf4:	3301      	adds	r3, #1
  401bf6:	9308      	str	r3, [sp, #32]
  401bf8:	9b07      	ldr	r3, [sp, #28]
  401bfa:	f013 0302 	ands.w	r3, r3, #2
  401bfe:	930f      	str	r3, [sp, #60]	; 0x3c
  401c00:	d002      	beq.n	401c08 <_svfprintf_r+0x3a4>
  401c02:	9b08      	ldr	r3, [sp, #32]
  401c04:	3302      	adds	r3, #2
  401c06:	9308      	str	r3, [sp, #32]
  401c08:	9b07      	ldr	r3, [sp, #28]
  401c0a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  401c0e:	9310      	str	r3, [sp, #64]	; 0x40
  401c10:	f040 82d7 	bne.w	4021c2 <_svfprintf_r+0x95e>
  401c14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401c16:	9a08      	ldr	r2, [sp, #32]
  401c18:	1a9d      	subs	r5, r3, r2
  401c1a:	2d00      	cmp	r5, #0
  401c1c:	f340 82d1 	ble.w	4021c2 <_svfprintf_r+0x95e>
  401c20:	2d10      	cmp	r5, #16
  401c22:	9925      	ldr	r1, [sp, #148]	; 0x94
  401c24:	9a24      	ldr	r2, [sp, #144]	; 0x90
  401c26:	4f37      	ldr	r7, [pc, #220]	; (401d04 <_svfprintf_r+0x4a0>)
  401c28:	dd27      	ble.n	401c7a <_svfprintf_r+0x416>
  401c2a:	9618      	str	r6, [sp, #96]	; 0x60
  401c2c:	4648      	mov	r0, r9
  401c2e:	2410      	movs	r4, #16
  401c30:	46b9      	mov	r9, r7
  401c32:	9e09      	ldr	r6, [sp, #36]	; 0x24
  401c34:	462f      	mov	r7, r5
  401c36:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  401c38:	e004      	b.n	401c44 <_svfprintf_r+0x3e0>
  401c3a:	3f10      	subs	r7, #16
  401c3c:	2f10      	cmp	r7, #16
  401c3e:	f100 0008 	add.w	r0, r0, #8
  401c42:	dd16      	ble.n	401c72 <_svfprintf_r+0x40e>
  401c44:	3201      	adds	r2, #1
  401c46:	4b2f      	ldr	r3, [pc, #188]	; (401d04 <_svfprintf_r+0x4a0>)
  401c48:	9224      	str	r2, [sp, #144]	; 0x90
  401c4a:	3110      	adds	r1, #16
  401c4c:	2a07      	cmp	r2, #7
  401c4e:	9125      	str	r1, [sp, #148]	; 0x94
  401c50:	e880 0018 	stmia.w	r0, {r3, r4}
  401c54:	ddf1      	ble.n	401c3a <_svfprintf_r+0x3d6>
  401c56:	aa23      	add	r2, sp, #140	; 0x8c
  401c58:	4631      	mov	r1, r6
  401c5a:	4628      	mov	r0, r5
  401c5c:	f003 f87e 	bl	404d5c <__ssprint_r>
  401c60:	2800      	cmp	r0, #0
  401c62:	f47f aef8 	bne.w	401a56 <_svfprintf_r+0x1f2>
  401c66:	3f10      	subs	r7, #16
  401c68:	2f10      	cmp	r7, #16
  401c6a:	9925      	ldr	r1, [sp, #148]	; 0x94
  401c6c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  401c6e:	a830      	add	r0, sp, #192	; 0xc0
  401c70:	dce8      	bgt.n	401c44 <_svfprintf_r+0x3e0>
  401c72:	9e18      	ldr	r6, [sp, #96]	; 0x60
  401c74:	463d      	mov	r5, r7
  401c76:	464f      	mov	r7, r9
  401c78:	4681      	mov	r9, r0
  401c7a:	3201      	adds	r2, #1
  401c7c:	186c      	adds	r4, r5, r1
  401c7e:	2a07      	cmp	r2, #7
  401c80:	9425      	str	r4, [sp, #148]	; 0x94
  401c82:	9224      	str	r2, [sp, #144]	; 0x90
  401c84:	f8c9 7000 	str.w	r7, [r9]
  401c88:	f8c9 5004 	str.w	r5, [r9, #4]
  401c8c:	f300 8428 	bgt.w	4024e0 <_svfprintf_r+0xc7c>
  401c90:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  401c94:	f109 0908 	add.w	r9, r9, #8
  401c98:	b177      	cbz	r7, 401cb8 <_svfprintf_r+0x454>
  401c9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401c9c:	3301      	adds	r3, #1
  401c9e:	3401      	adds	r4, #1
  401ca0:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
  401ca4:	2201      	movs	r2, #1
  401ca6:	2b07      	cmp	r3, #7
  401ca8:	9425      	str	r4, [sp, #148]	; 0x94
  401caa:	9324      	str	r3, [sp, #144]	; 0x90
  401cac:	e889 0006 	stmia.w	r9, {r1, r2}
  401cb0:	f300 83a0 	bgt.w	4023f4 <_svfprintf_r+0xb90>
  401cb4:	f109 0908 	add.w	r9, r9, #8
  401cb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401cba:	b16b      	cbz	r3, 401cd8 <_svfprintf_r+0x474>
  401cbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401cbe:	3301      	adds	r3, #1
  401cc0:	3402      	adds	r4, #2
  401cc2:	a91c      	add	r1, sp, #112	; 0x70
  401cc4:	2202      	movs	r2, #2
  401cc6:	2b07      	cmp	r3, #7
  401cc8:	9425      	str	r4, [sp, #148]	; 0x94
  401cca:	9324      	str	r3, [sp, #144]	; 0x90
  401ccc:	e889 0006 	stmia.w	r9, {r1, r2}
  401cd0:	f300 839c 	bgt.w	40240c <_svfprintf_r+0xba8>
  401cd4:	f109 0908 	add.w	r9, r9, #8
  401cd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401cda:	2b80      	cmp	r3, #128	; 0x80
  401cdc:	f000 82d5 	beq.w	40228a <_svfprintf_r+0xa26>
  401ce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401ce2:	ebc3 070b 	rsb	r7, r3, fp
  401ce6:	2f00      	cmp	r7, #0
  401ce8:	dd39      	ble.n	401d5e <_svfprintf_r+0x4fa>
  401cea:	4a07      	ldr	r2, [pc, #28]	; (401d08 <_svfprintf_r+0x4a4>)
  401cec:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401cee:	920f      	str	r2, [sp, #60]	; 0x3c
  401cf0:	2f10      	cmp	r7, #16
  401cf2:	dd28      	ble.n	401d46 <_svfprintf_r+0x4e2>
  401cf4:	4622      	mov	r2, r4
  401cf6:	f04f 0b10 	mov.w	fp, #16
  401cfa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  401cfc:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401cfe:	e00a      	b.n	401d16 <_svfprintf_r+0x4b2>
  401d00:	00406a6c 	.word	0x00406a6c
  401d04:	00406a8c 	.word	0x00406a8c
  401d08:	00406a38 	.word	0x00406a38
  401d0c:	3f10      	subs	r7, #16
  401d0e:	2f10      	cmp	r7, #16
  401d10:	f109 0908 	add.w	r9, r9, #8
  401d14:	dd16      	ble.n	401d44 <_svfprintf_r+0x4e0>
  401d16:	3301      	adds	r3, #1
  401d18:	3210      	adds	r2, #16
  401d1a:	2b07      	cmp	r3, #7
  401d1c:	9225      	str	r2, [sp, #148]	; 0x94
  401d1e:	9324      	str	r3, [sp, #144]	; 0x90
  401d20:	e889 0c00 	stmia.w	r9, {sl, fp}
  401d24:	ddf2      	ble.n	401d0c <_svfprintf_r+0x4a8>
  401d26:	aa23      	add	r2, sp, #140	; 0x8c
  401d28:	4621      	mov	r1, r4
  401d2a:	4628      	mov	r0, r5
  401d2c:	f003 f816 	bl	404d5c <__ssprint_r>
  401d30:	2800      	cmp	r0, #0
  401d32:	f47f ae90 	bne.w	401a56 <_svfprintf_r+0x1f2>
  401d36:	3f10      	subs	r7, #16
  401d38:	2f10      	cmp	r7, #16
  401d3a:	9a25      	ldr	r2, [sp, #148]	; 0x94
  401d3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401d3e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401d42:	dce8      	bgt.n	401d16 <_svfprintf_r+0x4b2>
  401d44:	4614      	mov	r4, r2
  401d46:	3301      	adds	r3, #1
  401d48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401d4a:	9324      	str	r3, [sp, #144]	; 0x90
  401d4c:	443c      	add	r4, r7
  401d4e:	2b07      	cmp	r3, #7
  401d50:	9425      	str	r4, [sp, #148]	; 0x94
  401d52:	e889 0084 	stmia.w	r9, {r2, r7}
  401d56:	f300 8341 	bgt.w	4023dc <_svfprintf_r+0xb78>
  401d5a:	f109 0908 	add.w	r9, r9, #8
  401d5e:	9b07      	ldr	r3, [sp, #28]
  401d60:	05da      	lsls	r2, r3, #23
  401d62:	f100 8230 	bmi.w	4021c6 <_svfprintf_r+0x962>
  401d66:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401d68:	990d      	ldr	r1, [sp, #52]	; 0x34
  401d6a:	f8c9 6000 	str.w	r6, [r9]
  401d6e:	3301      	adds	r3, #1
  401d70:	440c      	add	r4, r1
  401d72:	2b07      	cmp	r3, #7
  401d74:	9425      	str	r4, [sp, #148]	; 0x94
  401d76:	f8c9 1004 	str.w	r1, [r9, #4]
  401d7a:	9324      	str	r3, [sp, #144]	; 0x90
  401d7c:	f300 8318 	bgt.w	4023b0 <_svfprintf_r+0xb4c>
  401d80:	f109 0908 	add.w	r9, r9, #8
  401d84:	9b07      	ldr	r3, [sp, #28]
  401d86:	0759      	lsls	r1, r3, #29
  401d88:	d53f      	bpl.n	401e0a <_svfprintf_r+0x5a6>
  401d8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401d8c:	9a08      	ldr	r2, [sp, #32]
  401d8e:	1a9d      	subs	r5, r3, r2
  401d90:	2d00      	cmp	r5, #0
  401d92:	dd3a      	ble.n	401e0a <_svfprintf_r+0x5a6>
  401d94:	2d10      	cmp	r5, #16
  401d96:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401d98:	4fbc      	ldr	r7, [pc, #752]	; (40208c <_svfprintf_r+0x828>)
  401d9a:	dd23      	ble.n	401de4 <_svfprintf_r+0x580>
  401d9c:	4622      	mov	r2, r4
  401d9e:	2610      	movs	r6, #16
  401da0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  401da4:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401da6:	e004      	b.n	401db2 <_svfprintf_r+0x54e>
  401da8:	3d10      	subs	r5, #16
  401daa:	2d10      	cmp	r5, #16
  401dac:	f109 0908 	add.w	r9, r9, #8
  401db0:	dd17      	ble.n	401de2 <_svfprintf_r+0x57e>
  401db2:	3301      	adds	r3, #1
  401db4:	49b5      	ldr	r1, [pc, #724]	; (40208c <_svfprintf_r+0x828>)
  401db6:	9324      	str	r3, [sp, #144]	; 0x90
  401db8:	3210      	adds	r2, #16
  401dba:	2b07      	cmp	r3, #7
  401dbc:	9225      	str	r2, [sp, #148]	; 0x94
  401dbe:	e889 0042 	stmia.w	r9, {r1, r6}
  401dc2:	ddf1      	ble.n	401da8 <_svfprintf_r+0x544>
  401dc4:	aa23      	add	r2, sp, #140	; 0x8c
  401dc6:	4621      	mov	r1, r4
  401dc8:	4658      	mov	r0, fp
  401dca:	f002 ffc7 	bl	404d5c <__ssprint_r>
  401dce:	2800      	cmp	r0, #0
  401dd0:	f47f ae41 	bne.w	401a56 <_svfprintf_r+0x1f2>
  401dd4:	3d10      	subs	r5, #16
  401dd6:	2d10      	cmp	r5, #16
  401dd8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  401dda:	9b24      	ldr	r3, [sp, #144]	; 0x90
  401ddc:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401de0:	dce7      	bgt.n	401db2 <_svfprintf_r+0x54e>
  401de2:	4614      	mov	r4, r2
  401de4:	3301      	adds	r3, #1
  401de6:	442c      	add	r4, r5
  401de8:	2b07      	cmp	r3, #7
  401dea:	9425      	str	r4, [sp, #148]	; 0x94
  401dec:	9324      	str	r3, [sp, #144]	; 0x90
  401dee:	f8c9 7000 	str.w	r7, [r9]
  401df2:	f8c9 5004 	str.w	r5, [r9, #4]
  401df6:	dd08      	ble.n	401e0a <_svfprintf_r+0x5a6>
  401df8:	aa23      	add	r2, sp, #140	; 0x8c
  401dfa:	9909      	ldr	r1, [sp, #36]	; 0x24
  401dfc:	980a      	ldr	r0, [sp, #40]	; 0x28
  401dfe:	f002 ffad 	bl	404d5c <__ssprint_r>
  401e02:	2800      	cmp	r0, #0
  401e04:	f47f ae27 	bne.w	401a56 <_svfprintf_r+0x1f2>
  401e08:	9c25      	ldr	r4, [sp, #148]	; 0x94
  401e0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401e0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  401e0e:	9908      	ldr	r1, [sp, #32]
  401e10:	428a      	cmp	r2, r1
  401e12:	bfac      	ite	ge
  401e14:	189b      	addge	r3, r3, r2
  401e16:	185b      	addlt	r3, r3, r1
  401e18:	930b      	str	r3, [sp, #44]	; 0x2c
  401e1a:	2c00      	cmp	r4, #0
  401e1c:	f040 82d4 	bne.w	4023c8 <_svfprintf_r+0xb64>
  401e20:	2300      	movs	r3, #0
  401e22:	9324      	str	r3, [sp, #144]	; 0x90
  401e24:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  401e28:	e542      	b.n	4018b0 <_svfprintf_r+0x4c>
  401e2a:	9311      	str	r3, [sp, #68]	; 0x44
  401e2c:	46ab      	mov	fp, r5
  401e2e:	2a00      	cmp	r2, #0
  401e30:	f041 8059 	bne.w	402ee6 <_svfprintf_r+0x1682>
  401e34:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401e36:	3707      	adds	r7, #7
  401e38:	f027 0307 	bic.w	r3, r7, #7
  401e3c:	f103 0208 	add.w	r2, r3, #8
  401e40:	920e      	str	r2, [sp, #56]	; 0x38
  401e42:	681a      	ldr	r2, [r3, #0]
  401e44:	9214      	str	r2, [sp, #80]	; 0x50
  401e46:	685b      	ldr	r3, [r3, #4]
  401e48:	9315      	str	r3, [sp, #84]	; 0x54
  401e4a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401e4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
  401e4e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  401e52:	4628      	mov	r0, r5
  401e54:	4621      	mov	r1, r4
  401e56:	f04f 32ff 	mov.w	r2, #4294967295
  401e5a:	4b8d      	ldr	r3, [pc, #564]	; (402090 <_svfprintf_r+0x82c>)
  401e5c:	f004 f85c 	bl	405f18 <__aeabi_dcmpun>
  401e60:	2800      	cmp	r0, #0
  401e62:	f040 84c1 	bne.w	4027e8 <_svfprintf_r+0xf84>
  401e66:	4628      	mov	r0, r5
  401e68:	4621      	mov	r1, r4
  401e6a:	f04f 32ff 	mov.w	r2, #4294967295
  401e6e:	4b88      	ldr	r3, [pc, #544]	; (402090 <_svfprintf_r+0x82c>)
  401e70:	f004 f834 	bl	405edc <__aeabi_dcmple>
  401e74:	2800      	cmp	r0, #0
  401e76:	f040 84b7 	bne.w	4027e8 <_svfprintf_r+0xf84>
  401e7a:	9814      	ldr	r0, [sp, #80]	; 0x50
  401e7c:	9915      	ldr	r1, [sp, #84]	; 0x54
  401e7e:	2200      	movs	r2, #0
  401e80:	2300      	movs	r3, #0
  401e82:	f004 f821 	bl	405ec8 <__aeabi_dcmplt>
  401e86:	2800      	cmp	r0, #0
  401e88:	f040 874b 	bne.w	402d22 <_svfprintf_r+0x14be>
  401e8c:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  401e90:	4e80      	ldr	r6, [pc, #512]	; (402094 <_svfprintf_r+0x830>)
  401e92:	4b81      	ldr	r3, [pc, #516]	; (402098 <_svfprintf_r+0x834>)
  401e94:	9907      	ldr	r1, [sp, #28]
  401e96:	f021 0180 	bic.w	r1, r1, #128	; 0x80
  401e9a:	9107      	str	r1, [sp, #28]
  401e9c:	9911      	ldr	r1, [sp, #68]	; 0x44
  401e9e:	2203      	movs	r2, #3
  401ea0:	f04f 0b00 	mov.w	fp, #0
  401ea4:	9208      	str	r2, [sp, #32]
  401ea6:	2947      	cmp	r1, #71	; 0x47
  401ea8:	bfd8      	it	le
  401eaa:	461e      	movle	r6, r3
  401eac:	920d      	str	r2, [sp, #52]	; 0x34
  401eae:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  401eb2:	e69d      	b.n	401bf0 <_svfprintf_r+0x38c>
  401eb4:	9b07      	ldr	r3, [sp, #28]
  401eb6:	f043 0308 	orr.w	r3, r3, #8
  401eba:	9307      	str	r3, [sp, #28]
  401ebc:	f898 3000 	ldrb.w	r3, [r8]
  401ec0:	e529      	b.n	401916 <_svfprintf_r+0xb2>
  401ec2:	9311      	str	r3, [sp, #68]	; 0x44
  401ec4:	46ab      	mov	fp, r5
  401ec6:	2a00      	cmp	r2, #0
  401ec8:	f041 8009 	bne.w	402ede <_svfprintf_r+0x167a>
  401ecc:	9b07      	ldr	r3, [sp, #28]
  401ece:	f043 0310 	orr.w	r3, r3, #16
  401ed2:	9307      	str	r3, [sp, #28]
  401ed4:	9a07      	ldr	r2, [sp, #28]
  401ed6:	f012 0320 	ands.w	r3, r2, #32
  401eda:	f47f add2 	bne.w	401a82 <_svfprintf_r+0x21e>
  401ede:	9907      	ldr	r1, [sp, #28]
  401ee0:	f011 0210 	ands.w	r2, r1, #16
  401ee4:	f000 8507 	beq.w	4028f6 <_svfprintf_r+0x1092>
  401ee8:	980e      	ldr	r0, [sp, #56]	; 0x38
  401eea:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  401eee:	f1bb 0f00 	cmp.w	fp, #0
  401ef2:	6804      	ldr	r4, [r0, #0]
  401ef4:	f100 0704 	add.w	r7, r0, #4
  401ef8:	f04f 0500 	mov.w	r5, #0
  401efc:	f2c0 8521 	blt.w	402942 <_svfprintf_r+0x10de>
  401f00:	460a      	mov	r2, r1
  401f02:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  401f06:	9207      	str	r2, [sp, #28]
  401f08:	ea54 0205 	orrs.w	r2, r4, r5
  401f0c:	970e      	str	r7, [sp, #56]	; 0x38
  401f0e:	f000 8143 	beq.w	402198 <_svfprintf_r+0x934>
  401f12:	461f      	mov	r7, r3
  401f14:	e5cb      	b.n	401aae <_svfprintf_r+0x24a>
  401f16:	9311      	str	r3, [sp, #68]	; 0x44
  401f18:	46ab      	mov	fp, r5
  401f1a:	2a00      	cmp	r2, #0
  401f1c:	f040 87d7 	bne.w	402ece <_svfprintf_r+0x166a>
  401f20:	9b07      	ldr	r3, [sp, #28]
  401f22:	f043 0310 	orr.w	r3, r3, #16
  401f26:	9307      	str	r3, [sp, #28]
  401f28:	9a07      	ldr	r2, [sp, #28]
  401f2a:	f012 0320 	ands.w	r3, r2, #32
  401f2e:	f000 8332 	beq.w	402596 <_svfprintf_r+0xd32>
  401f32:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401f34:	3707      	adds	r7, #7
  401f36:	f027 0307 	bic.w	r3, r7, #7
  401f3a:	2700      	movs	r7, #0
  401f3c:	f103 0108 	add.w	r1, r3, #8
  401f40:	45bb      	cmp	fp, r7
  401f42:	910e      	str	r1, [sp, #56]	; 0x38
  401f44:	e9d3 4500 	ldrd	r4, r5, [r3]
  401f48:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  401f4c:	f2c0 835c 	blt.w	402608 <_svfprintf_r+0xda4>
  401f50:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  401f54:	9307      	str	r3, [sp, #28]
  401f56:	ea54 0305 	orrs.w	r3, r4, r5
  401f5a:	f47f ae25 	bne.w	401ba8 <_svfprintf_r+0x344>
  401f5e:	f1bb 0f00 	cmp.w	fp, #0
  401f62:	f000 80fe 	beq.w	402162 <_svfprintf_r+0x8fe>
  401f66:	2400      	movs	r4, #0
  401f68:	ae40      	add	r6, sp, #256	; 0x100
  401f6a:	3430      	adds	r4, #48	; 0x30
  401f6c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  401f70:	e634      	b.n	401bdc <_svfprintf_r+0x378>
  401f72:	9311      	str	r3, [sp, #68]	; 0x44
  401f74:	46ab      	mov	fp, r5
  401f76:	2a00      	cmp	r2, #0
  401f78:	f040 87a5 	bne.w	402ec6 <_svfprintf_r+0x1662>
  401f7c:	9b07      	ldr	r3, [sp, #28]
  401f7e:	4847      	ldr	r0, [pc, #284]	; (40209c <_svfprintf_r+0x838>)
  401f80:	069d      	lsls	r5, r3, #26
  401f82:	f140 8097 	bpl.w	4020b4 <_svfprintf_r+0x850>
  401f86:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  401f88:	3707      	adds	r7, #7
  401f8a:	f027 0307 	bic.w	r3, r7, #7
  401f8e:	e9d3 4500 	ldrd	r4, r5, [r3]
  401f92:	f103 0208 	add.w	r2, r3, #8
  401f96:	920e      	str	r2, [sp, #56]	; 0x38
  401f98:	9a07      	ldr	r2, [sp, #28]
  401f9a:	f012 0701 	ands.w	r7, r2, #1
  401f9e:	f000 8241 	beq.w	402424 <_svfprintf_r+0xbc0>
  401fa2:	ea54 0305 	orrs.w	r3, r4, r5
  401fa6:	f000 84f5 	beq.w	402994 <_svfprintf_r+0x1130>
  401faa:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  401fae:	f88d 2071 	strb.w	r2, [sp, #113]	; 0x71
  401fb2:	2700      	movs	r7, #0
  401fb4:	9a07      	ldr	r2, [sp, #28]
  401fb6:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  401fba:	2330      	movs	r3, #48	; 0x30
  401fbc:	45bb      	cmp	fp, r7
  401fbe:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
  401fc2:	f042 0302 	orr.w	r3, r2, #2
  401fc6:	f2c0 86a9 	blt.w	402d1c <_svfprintf_r+0x14b8>
  401fca:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  401fce:	f043 0302 	orr.w	r3, r3, #2
  401fd2:	9307      	str	r3, [sp, #28]
  401fd4:	ae30      	add	r6, sp, #192	; 0xc0
  401fd6:	0923      	lsrs	r3, r4, #4
  401fd8:	f004 010f 	and.w	r1, r4, #15
  401fdc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  401fe0:	092a      	lsrs	r2, r5, #4
  401fe2:	461c      	mov	r4, r3
  401fe4:	4615      	mov	r5, r2
  401fe6:	5c43      	ldrb	r3, [r0, r1]
  401fe8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  401fec:	ea54 0305 	orrs.w	r3, r4, r5
  401ff0:	d1f1      	bne.n	401fd6 <_svfprintf_r+0x772>
  401ff2:	e5f3      	b.n	401bdc <_svfprintf_r+0x378>
  401ff4:	990e      	ldr	r1, [sp, #56]	; 0x38
  401ff6:	9311      	str	r3, [sp, #68]	; 0x44
  401ff8:	680a      	ldr	r2, [r1, #0]
  401ffa:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  401ffe:	2300      	movs	r3, #0
  402000:	460a      	mov	r2, r1
  402002:	461f      	mov	r7, r3
  402004:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402008:	3204      	adds	r2, #4
  40200a:	2301      	movs	r3, #1
  40200c:	9308      	str	r3, [sp, #32]
  40200e:	46bb      	mov	fp, r7
  402010:	9713      	str	r7, [sp, #76]	; 0x4c
  402012:	920e      	str	r2, [sp, #56]	; 0x38
  402014:	930d      	str	r3, [sp, #52]	; 0x34
  402016:	ae26      	add	r6, sp, #152	; 0x98
  402018:	e5ee      	b.n	401bf8 <_svfprintf_r+0x394>
  40201a:	9311      	str	r3, [sp, #68]	; 0x44
  40201c:	46ab      	mov	fp, r5
  40201e:	2a00      	cmp	r2, #0
  402020:	f43f ada0 	beq.w	401b64 <_svfprintf_r+0x300>
  402024:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402028:	e59c      	b.n	401b64 <_svfprintf_r+0x300>
  40202a:	9b07      	ldr	r3, [sp, #28]
  40202c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402030:	9307      	str	r3, [sp, #28]
  402032:	f898 3000 	ldrb.w	r3, [r8]
  402036:	e46e      	b.n	401916 <_svfprintf_r+0xb2>
  402038:	f898 3000 	ldrb.w	r3, [r8]
  40203c:	2900      	cmp	r1, #0
  40203e:	f47f ac6a 	bne.w	401916 <_svfprintf_r+0xb2>
  402042:	2201      	movs	r2, #1
  402044:	2120      	movs	r1, #32
  402046:	e466      	b.n	401916 <_svfprintf_r+0xb2>
  402048:	9b07      	ldr	r3, [sp, #28]
  40204a:	f043 0301 	orr.w	r3, r3, #1
  40204e:	9307      	str	r3, [sp, #28]
  402050:	f898 3000 	ldrb.w	r3, [r8]
  402054:	e45f      	b.n	401916 <_svfprintf_r+0xb2>
  402056:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402058:	6823      	ldr	r3, [r4, #0]
  40205a:	930c      	str	r3, [sp, #48]	; 0x30
  40205c:	4618      	mov	r0, r3
  40205e:	2800      	cmp	r0, #0
  402060:	4623      	mov	r3, r4
  402062:	f103 0304 	add.w	r3, r3, #4
  402066:	f6ff acb8 	blt.w	4019da <_svfprintf_r+0x176>
  40206a:	930e      	str	r3, [sp, #56]	; 0x38
  40206c:	f898 3000 	ldrb.w	r3, [r8]
  402070:	e451      	b.n	401916 <_svfprintf_r+0xb2>
  402072:	f898 3000 	ldrb.w	r3, [r8]
  402076:	2201      	movs	r2, #1
  402078:	212b      	movs	r1, #43	; 0x2b
  40207a:	e44c      	b.n	401916 <_svfprintf_r+0xb2>
  40207c:	9311      	str	r3, [sp, #68]	; 0x44
  40207e:	46ab      	mov	fp, r5
  402080:	2a00      	cmp	r2, #0
  402082:	f43f af51 	beq.w	401f28 <_svfprintf_r+0x6c4>
  402086:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  40208a:	e74d      	b.n	401f28 <_svfprintf_r+0x6c4>
  40208c:	00406a8c 	.word	0x00406a8c
  402090:	7fefffff 	.word	0x7fefffff
  402094:	00406a4c 	.word	0x00406a4c
  402098:	00406a48 	.word	0x00406a48
  40209c:	00406a58 	.word	0x00406a58
  4020a0:	9311      	str	r3, [sp, #68]	; 0x44
  4020a2:	46ab      	mov	fp, r5
  4020a4:	2a00      	cmp	r2, #0
  4020a6:	f040 8703 	bne.w	402eb0 <_svfprintf_r+0x164c>
  4020aa:	9b07      	ldr	r3, [sp, #28]
  4020ac:	4899      	ldr	r0, [pc, #612]	; (402314 <_svfprintf_r+0xab0>)
  4020ae:	069d      	lsls	r5, r3, #26
  4020b0:	f53f af69 	bmi.w	401f86 <_svfprintf_r+0x722>
  4020b4:	9b07      	ldr	r3, [sp, #28]
  4020b6:	06dc      	lsls	r4, r3, #27
  4020b8:	f140 845e 	bpl.w	402978 <_svfprintf_r+0x1114>
  4020bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4020be:	4613      	mov	r3, r2
  4020c0:	3304      	adds	r3, #4
  4020c2:	6814      	ldr	r4, [r2, #0]
  4020c4:	930e      	str	r3, [sp, #56]	; 0x38
  4020c6:	2500      	movs	r5, #0
  4020c8:	e766      	b.n	401f98 <_svfprintf_r+0x734>
  4020ca:	f898 3000 	ldrb.w	r3, [r8]
  4020ce:	2b6c      	cmp	r3, #108	; 0x6c
  4020d0:	f000 84e1 	beq.w	402a96 <_svfprintf_r+0x1232>
  4020d4:	9807      	ldr	r0, [sp, #28]
  4020d6:	f040 0010 	orr.w	r0, r0, #16
  4020da:	9007      	str	r0, [sp, #28]
  4020dc:	e41b      	b.n	401916 <_svfprintf_r+0xb2>
  4020de:	2a00      	cmp	r2, #0
  4020e0:	f040 86db 	bne.w	402e9a <_svfprintf_r+0x1636>
  4020e4:	9b07      	ldr	r3, [sp, #28]
  4020e6:	069b      	lsls	r3, r3, #26
  4020e8:	f140 842f 	bpl.w	40294a <_svfprintf_r+0x10e6>
  4020ec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4020ee:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4020f0:	6813      	ldr	r3, [r2, #0]
  4020f2:	17cd      	asrs	r5, r1, #31
  4020f4:	4608      	mov	r0, r1
  4020f6:	3204      	adds	r2, #4
  4020f8:	4629      	mov	r1, r5
  4020fa:	920e      	str	r2, [sp, #56]	; 0x38
  4020fc:	e9c3 0100 	strd	r0, r1, [r3]
  402100:	f7ff bbd6 	b.w	4018b0 <_svfprintf_r+0x4c>
  402104:	9b07      	ldr	r3, [sp, #28]
  402106:	f043 0320 	orr.w	r3, r3, #32
  40210a:	9307      	str	r3, [sp, #28]
  40210c:	f898 3000 	ldrb.w	r3, [r8]
  402110:	e401      	b.n	401916 <_svfprintf_r+0xb2>
  402112:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402114:	9311      	str	r3, [sp, #68]	; 0x44
  402116:	6816      	ldr	r6, [r2, #0]
  402118:	2400      	movs	r4, #0
  40211a:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
  40211e:	1d17      	adds	r7, r2, #4
  402120:	2e00      	cmp	r6, #0
  402122:	f000 85bd 	beq.w	402ca0 <_svfprintf_r+0x143c>
  402126:	2d00      	cmp	r5, #0
  402128:	f2c0 850f 	blt.w	402b4a <_svfprintf_r+0x12e6>
  40212c:	462a      	mov	r2, r5
  40212e:	4621      	mov	r1, r4
  402130:	4630      	mov	r0, r6
  402132:	f002 f985 	bl	404440 <memchr>
  402136:	2800      	cmp	r0, #0
  402138:	f000 8604 	beq.w	402d44 <_svfprintf_r+0x14e0>
  40213c:	1b83      	subs	r3, r0, r6
  40213e:	930d      	str	r3, [sp, #52]	; 0x34
  402140:	46a3      	mov	fp, r4
  402142:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402146:	970e      	str	r7, [sp, #56]	; 0x38
  402148:	9308      	str	r3, [sp, #32]
  40214a:	f8cd b04c 	str.w	fp, [sp, #76]	; 0x4c
  40214e:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402152:	e54d      	b.n	401bf0 <_svfprintf_r+0x38c>
  402154:	486f      	ldr	r0, [pc, #444]	; (402314 <_svfprintf_r+0xab0>)
  402156:	9211      	str	r2, [sp, #68]	; 0x44
  402158:	f1bb 0f00 	cmp.w	fp, #0
  40215c:	f040 8173 	bne.w	402446 <_svfprintf_r+0xbe2>
  402160:	465f      	mov	r7, fp
  402162:	f04f 0b00 	mov.w	fp, #0
  402166:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  40216a:	ae30      	add	r6, sp, #192	; 0xc0
  40216c:	e539      	b.n	401be2 <_svfprintf_r+0x37e>
  40216e:	9311      	str	r3, [sp, #68]	; 0x44
  402170:	2a00      	cmp	r2, #0
  402172:	f040 86b0 	bne.w	402ed6 <_svfprintf_r+0x1672>
  402176:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402178:	2a00      	cmp	r2, #0
  40217a:	f43f ac65 	beq.w	401a48 <_svfprintf_r+0x1e4>
  40217e:	2300      	movs	r3, #0
  402180:	2101      	movs	r1, #1
  402182:	461f      	mov	r7, r3
  402184:	9108      	str	r1, [sp, #32]
  402186:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
  40218a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  40218e:	469b      	mov	fp, r3
  402190:	9313      	str	r3, [sp, #76]	; 0x4c
  402192:	910d      	str	r1, [sp, #52]	; 0x34
  402194:	ae26      	add	r6, sp, #152	; 0x98
  402196:	e52f      	b.n	401bf8 <_svfprintf_r+0x394>
  402198:	f1bb 0f00 	cmp.w	fp, #0
  40219c:	f000 85dd 	beq.w	402d5a <_svfprintf_r+0x14f6>
  4021a0:	2700      	movs	r7, #0
  4021a2:	2400      	movs	r4, #0
  4021a4:	2500      	movs	r5, #0
  4021a6:	e482      	b.n	401aae <_svfprintf_r+0x24a>
  4021a8:	485a      	ldr	r0, [pc, #360]	; (402314 <_svfprintf_r+0xab0>)
  4021aa:	9307      	str	r3, [sp, #28]
  4021ac:	9211      	str	r2, [sp, #68]	; 0x44
  4021ae:	ea54 0305 	orrs.w	r3, r4, r5
  4021b2:	970e      	str	r7, [sp, #56]	; 0x38
  4021b4:	f04f 0700 	mov.w	r7, #0
  4021b8:	f47f af0c 	bne.w	401fd4 <_svfprintf_r+0x770>
  4021bc:	2400      	movs	r4, #0
  4021be:	2500      	movs	r5, #0
  4021c0:	e708      	b.n	401fd4 <_svfprintf_r+0x770>
  4021c2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4021c4:	e568      	b.n	401c98 <_svfprintf_r+0x434>
  4021c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4021c8:	2b65      	cmp	r3, #101	; 0x65
  4021ca:	f340 80a9 	ble.w	402320 <_svfprintf_r+0xabc>
  4021ce:	9814      	ldr	r0, [sp, #80]	; 0x50
  4021d0:	9915      	ldr	r1, [sp, #84]	; 0x54
  4021d2:	2200      	movs	r2, #0
  4021d4:	2300      	movs	r3, #0
  4021d6:	f003 fe6d 	bl	405eb4 <__aeabi_dcmpeq>
  4021da:	2800      	cmp	r0, #0
  4021dc:	f000 8135 	beq.w	40244a <_svfprintf_r+0xbe6>
  4021e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4021e2:	4a4d      	ldr	r2, [pc, #308]	; (402318 <_svfprintf_r+0xab4>)
  4021e4:	f8c9 2000 	str.w	r2, [r9]
  4021e8:	3301      	adds	r3, #1
  4021ea:	3401      	adds	r4, #1
  4021ec:	2201      	movs	r2, #1
  4021ee:	2b07      	cmp	r3, #7
  4021f0:	9425      	str	r4, [sp, #148]	; 0x94
  4021f2:	9324      	str	r3, [sp, #144]	; 0x90
  4021f4:	f8c9 2004 	str.w	r2, [r9, #4]
  4021f8:	f300 83e6 	bgt.w	4029c8 <_svfprintf_r+0x1164>
  4021fc:	f109 0908 	add.w	r9, r9, #8
  402200:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402202:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402204:	4293      	cmp	r3, r2
  402206:	db03      	blt.n	402210 <_svfprintf_r+0x9ac>
  402208:	9b07      	ldr	r3, [sp, #28]
  40220a:	07db      	lsls	r3, r3, #31
  40220c:	f57f adba 	bpl.w	401d84 <_svfprintf_r+0x520>
  402210:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402212:	9916      	ldr	r1, [sp, #88]	; 0x58
  402214:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  402216:	f8c9 2000 	str.w	r2, [r9]
  40221a:	3301      	adds	r3, #1
  40221c:	440c      	add	r4, r1
  40221e:	2b07      	cmp	r3, #7
  402220:	9425      	str	r4, [sp, #148]	; 0x94
  402222:	f8c9 1004 	str.w	r1, [r9, #4]
  402226:	9324      	str	r3, [sp, #144]	; 0x90
  402228:	f300 843f 	bgt.w	402aaa <_svfprintf_r+0x1246>
  40222c:	f109 0908 	add.w	r9, r9, #8
  402230:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402232:	1e5d      	subs	r5, r3, #1
  402234:	2d00      	cmp	r5, #0
  402236:	f77f ada5 	ble.w	401d84 <_svfprintf_r+0x520>
  40223a:	4a38      	ldr	r2, [pc, #224]	; (40231c <_svfprintf_r+0xab8>)
  40223c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40223e:	920f      	str	r2, [sp, #60]	; 0x3c
  402240:	2d10      	cmp	r5, #16
  402242:	f340 81e6 	ble.w	402612 <_svfprintf_r+0xdae>
  402246:	2610      	movs	r6, #16
  402248:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40224a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  40224e:	e005      	b.n	40225c <_svfprintf_r+0x9f8>
  402250:	f109 0908 	add.w	r9, r9, #8
  402254:	3d10      	subs	r5, #16
  402256:	2d10      	cmp	r5, #16
  402258:	f340 81db 	ble.w	402612 <_svfprintf_r+0xdae>
  40225c:	3301      	adds	r3, #1
  40225e:	3410      	adds	r4, #16
  402260:	2b07      	cmp	r3, #7
  402262:	9425      	str	r4, [sp, #148]	; 0x94
  402264:	9324      	str	r3, [sp, #144]	; 0x90
  402266:	f8c9 a000 	str.w	sl, [r9]
  40226a:	f8c9 6004 	str.w	r6, [r9, #4]
  40226e:	ddef      	ble.n	402250 <_svfprintf_r+0x9ec>
  402270:	aa23      	add	r2, sp, #140	; 0x8c
  402272:	4659      	mov	r1, fp
  402274:	4638      	mov	r0, r7
  402276:	f002 fd71 	bl	404d5c <__ssprint_r>
  40227a:	2800      	cmp	r0, #0
  40227c:	f47f abeb 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402280:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402282:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402284:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402288:	e7e4      	b.n	402254 <_svfprintf_r+0x9f0>
  40228a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40228c:	9a08      	ldr	r2, [sp, #32]
  40228e:	1a9f      	subs	r7, r3, r2
  402290:	2f00      	cmp	r7, #0
  402292:	f77f ad25 	ble.w	401ce0 <_svfprintf_r+0x47c>
  402296:	4a21      	ldr	r2, [pc, #132]	; (40231c <_svfprintf_r+0xab8>)
  402298:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40229a:	920f      	str	r2, [sp, #60]	; 0x3c
  40229c:	2f10      	cmp	r7, #16
  40229e:	dd2b      	ble.n	4022f8 <_svfprintf_r+0xa94>
  4022a0:	464a      	mov	r2, r9
  4022a2:	4621      	mov	r1, r4
  4022a4:	46b9      	mov	r9, r7
  4022a6:	2510      	movs	r5, #16
  4022a8:	4637      	mov	r7, r6
  4022aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4022ac:	9e09      	ldr	r6, [sp, #36]	; 0x24
  4022ae:	e006      	b.n	4022be <_svfprintf_r+0xa5a>
  4022b0:	f1a9 0910 	sub.w	r9, r9, #16
  4022b4:	f1b9 0f10 	cmp.w	r9, #16
  4022b8:	f102 0208 	add.w	r2, r2, #8
  4022bc:	dd18      	ble.n	4022f0 <_svfprintf_r+0xa8c>
  4022be:	3301      	adds	r3, #1
  4022c0:	3110      	adds	r1, #16
  4022c2:	2b07      	cmp	r3, #7
  4022c4:	9125      	str	r1, [sp, #148]	; 0x94
  4022c6:	9324      	str	r3, [sp, #144]	; 0x90
  4022c8:	f8c2 a000 	str.w	sl, [r2]
  4022cc:	6055      	str	r5, [r2, #4]
  4022ce:	ddef      	ble.n	4022b0 <_svfprintf_r+0xa4c>
  4022d0:	aa23      	add	r2, sp, #140	; 0x8c
  4022d2:	4631      	mov	r1, r6
  4022d4:	4620      	mov	r0, r4
  4022d6:	f002 fd41 	bl	404d5c <__ssprint_r>
  4022da:	2800      	cmp	r0, #0
  4022dc:	f47f abbb 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4022e0:	f1a9 0910 	sub.w	r9, r9, #16
  4022e4:	f1b9 0f10 	cmp.w	r9, #16
  4022e8:	9925      	ldr	r1, [sp, #148]	; 0x94
  4022ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4022ec:	aa30      	add	r2, sp, #192	; 0xc0
  4022ee:	dce6      	bgt.n	4022be <_svfprintf_r+0xa5a>
  4022f0:	463e      	mov	r6, r7
  4022f2:	460c      	mov	r4, r1
  4022f4:	464f      	mov	r7, r9
  4022f6:	4691      	mov	r9, r2
  4022f8:	3301      	adds	r3, #1
  4022fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4022fc:	9324      	str	r3, [sp, #144]	; 0x90
  4022fe:	443c      	add	r4, r7
  402300:	2b07      	cmp	r3, #7
  402302:	9425      	str	r4, [sp, #148]	; 0x94
  402304:	e889 0084 	stmia.w	r9, {r2, r7}
  402308:	f300 8245 	bgt.w	402796 <_svfprintf_r+0xf32>
  40230c:	f109 0908 	add.w	r9, r9, #8
  402310:	e4e6      	b.n	401ce0 <_svfprintf_r+0x47c>
  402312:	bf00      	nop
  402314:	00406a6c 	.word	0x00406a6c
  402318:	00406a88 	.word	0x00406a88
  40231c:	00406a38 	.word	0x00406a38
  402320:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402322:	9d24      	ldr	r5, [sp, #144]	; 0x90
  402324:	2b01      	cmp	r3, #1
  402326:	f340 8208 	ble.w	40273a <_svfprintf_r+0xed6>
  40232a:	3501      	adds	r5, #1
  40232c:	3401      	adds	r4, #1
  40232e:	2301      	movs	r3, #1
  402330:	2d07      	cmp	r5, #7
  402332:	9425      	str	r4, [sp, #148]	; 0x94
  402334:	9524      	str	r5, [sp, #144]	; 0x90
  402336:	f8c9 6000 	str.w	r6, [r9]
  40233a:	f8c9 3004 	str.w	r3, [r9, #4]
  40233e:	f300 820d 	bgt.w	40275c <_svfprintf_r+0xef8>
  402342:	f109 0908 	add.w	r9, r9, #8
  402346:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402348:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40234a:	f8c9 3000 	str.w	r3, [r9]
  40234e:	3501      	adds	r5, #1
  402350:	4414      	add	r4, r2
  402352:	2d07      	cmp	r5, #7
  402354:	9425      	str	r4, [sp, #148]	; 0x94
  402356:	9524      	str	r5, [sp, #144]	; 0x90
  402358:	f8c9 2004 	str.w	r2, [r9, #4]
  40235c:	f300 820e 	bgt.w	40277c <_svfprintf_r+0xf18>
  402360:	f109 0908 	add.w	r9, r9, #8
  402364:	2300      	movs	r3, #0
  402366:	9814      	ldr	r0, [sp, #80]	; 0x50
  402368:	9915      	ldr	r1, [sp, #84]	; 0x54
  40236a:	2200      	movs	r2, #0
  40236c:	f003 fda2 	bl	405eb4 <__aeabi_dcmpeq>
  402370:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402372:	2800      	cmp	r0, #0
  402374:	f040 80c3 	bne.w	4024fe <_svfprintf_r+0xc9a>
  402378:	3b01      	subs	r3, #1
  40237a:	3501      	adds	r5, #1
  40237c:	3601      	adds	r6, #1
  40237e:	441c      	add	r4, r3
  402380:	2d07      	cmp	r5, #7
  402382:	9524      	str	r5, [sp, #144]	; 0x90
  402384:	9425      	str	r4, [sp, #148]	; 0x94
  402386:	f8c9 6000 	str.w	r6, [r9]
  40238a:	f8c9 3004 	str.w	r3, [r9, #4]
  40238e:	f300 80f5 	bgt.w	40257c <_svfprintf_r+0xd18>
  402392:	f109 0908 	add.w	r9, r9, #8
  402396:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402398:	f8c9 2004 	str.w	r2, [r9, #4]
  40239c:	3501      	adds	r5, #1
  40239e:	4414      	add	r4, r2
  4023a0:	ab1f      	add	r3, sp, #124	; 0x7c
  4023a2:	2d07      	cmp	r5, #7
  4023a4:	9425      	str	r4, [sp, #148]	; 0x94
  4023a6:	9524      	str	r5, [sp, #144]	; 0x90
  4023a8:	f8c9 3000 	str.w	r3, [r9]
  4023ac:	f77f ace8 	ble.w	401d80 <_svfprintf_r+0x51c>
  4023b0:	aa23      	add	r2, sp, #140	; 0x8c
  4023b2:	9909      	ldr	r1, [sp, #36]	; 0x24
  4023b4:	980a      	ldr	r0, [sp, #40]	; 0x28
  4023b6:	f002 fcd1 	bl	404d5c <__ssprint_r>
  4023ba:	2800      	cmp	r0, #0
  4023bc:	f47f ab4b 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4023c0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4023c2:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4023c6:	e4dd      	b.n	401d84 <_svfprintf_r+0x520>
  4023c8:	aa23      	add	r2, sp, #140	; 0x8c
  4023ca:	9909      	ldr	r1, [sp, #36]	; 0x24
  4023cc:	980a      	ldr	r0, [sp, #40]	; 0x28
  4023ce:	f002 fcc5 	bl	404d5c <__ssprint_r>
  4023d2:	2800      	cmp	r0, #0
  4023d4:	f43f ad24 	beq.w	401e20 <_svfprintf_r+0x5bc>
  4023d8:	f7ff bb3d 	b.w	401a56 <_svfprintf_r+0x1f2>
  4023dc:	aa23      	add	r2, sp, #140	; 0x8c
  4023de:	9909      	ldr	r1, [sp, #36]	; 0x24
  4023e0:	980a      	ldr	r0, [sp, #40]	; 0x28
  4023e2:	f002 fcbb 	bl	404d5c <__ssprint_r>
  4023e6:	2800      	cmp	r0, #0
  4023e8:	f47f ab35 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4023ec:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4023ee:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4023f2:	e4b4      	b.n	401d5e <_svfprintf_r+0x4fa>
  4023f4:	aa23      	add	r2, sp, #140	; 0x8c
  4023f6:	9909      	ldr	r1, [sp, #36]	; 0x24
  4023f8:	980a      	ldr	r0, [sp, #40]	; 0x28
  4023fa:	f002 fcaf 	bl	404d5c <__ssprint_r>
  4023fe:	2800      	cmp	r0, #0
  402400:	f47f ab29 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402404:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402406:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40240a:	e455      	b.n	401cb8 <_svfprintf_r+0x454>
  40240c:	aa23      	add	r2, sp, #140	; 0x8c
  40240e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402410:	980a      	ldr	r0, [sp, #40]	; 0x28
  402412:	f002 fca3 	bl	404d5c <__ssprint_r>
  402416:	2800      	cmp	r0, #0
  402418:	f47f ab1d 	bne.w	401a56 <_svfprintf_r+0x1f2>
  40241c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40241e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402422:	e459      	b.n	401cd8 <_svfprintf_r+0x474>
  402424:	f1bb 0f00 	cmp.w	fp, #0
  402428:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40242c:	f2c0 82d8 	blt.w	4029e0 <_svfprintf_r+0x117c>
  402430:	f022 0380 	bic.w	r3, r2, #128	; 0x80
  402434:	9307      	str	r3, [sp, #28]
  402436:	ea54 0305 	orrs.w	r3, r4, r5
  40243a:	f47f adcb 	bne.w	401fd4 <_svfprintf_r+0x770>
  40243e:	f1bb 0f00 	cmp.w	fp, #0
  402442:	f43f ae8d 	beq.w	402160 <_svfprintf_r+0x8fc>
  402446:	2700      	movs	r7, #0
  402448:	e6b8      	b.n	4021bc <_svfprintf_r+0x958>
  40244a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  40244c:	2d00      	cmp	r5, #0
  40244e:	f340 82ca 	ble.w	4029e6 <_svfprintf_r+0x1182>
  402452:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402454:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402456:	4293      	cmp	r3, r2
  402458:	bfa8      	it	ge
  40245a:	4613      	movge	r3, r2
  40245c:	2b00      	cmp	r3, #0
  40245e:	461d      	mov	r5, r3
  402460:	dd0d      	ble.n	40247e <_svfprintf_r+0xc1a>
  402462:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402464:	f8c9 6000 	str.w	r6, [r9]
  402468:	3301      	adds	r3, #1
  40246a:	442c      	add	r4, r5
  40246c:	2b07      	cmp	r3, #7
  40246e:	9425      	str	r4, [sp, #148]	; 0x94
  402470:	f8c9 5004 	str.w	r5, [r9, #4]
  402474:	9324      	str	r3, [sp, #144]	; 0x90
  402476:	f300 839c 	bgt.w	402bb2 <_svfprintf_r+0x134e>
  40247a:	f109 0908 	add.w	r9, r9, #8
  40247e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402480:	2d00      	cmp	r5, #0
  402482:	bfa8      	it	ge
  402484:	1b5b      	subge	r3, r3, r5
  402486:	2b00      	cmp	r3, #0
  402488:	461d      	mov	r5, r3
  40248a:	f340 80f6 	ble.w	40267a <_svfprintf_r+0xe16>
  40248e:	4aba      	ldr	r2, [pc, #744]	; (402778 <_svfprintf_r+0xf14>)
  402490:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402492:	920f      	str	r2, [sp, #60]	; 0x3c
  402494:	2d10      	cmp	r5, #16
  402496:	f340 828a 	ble.w	4029ae <_svfprintf_r+0x114a>
  40249a:	4622      	mov	r2, r4
  40249c:	2710      	movs	r7, #16
  40249e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4024a2:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4024a4:	e005      	b.n	4024b2 <_svfprintf_r+0xc4e>
  4024a6:	f109 0908 	add.w	r9, r9, #8
  4024aa:	3d10      	subs	r5, #16
  4024ac:	2d10      	cmp	r5, #16
  4024ae:	f340 827d 	ble.w	4029ac <_svfprintf_r+0x1148>
  4024b2:	3301      	adds	r3, #1
  4024b4:	3210      	adds	r2, #16
  4024b6:	2b07      	cmp	r3, #7
  4024b8:	9225      	str	r2, [sp, #148]	; 0x94
  4024ba:	9324      	str	r3, [sp, #144]	; 0x90
  4024bc:	f8c9 a000 	str.w	sl, [r9]
  4024c0:	f8c9 7004 	str.w	r7, [r9, #4]
  4024c4:	ddef      	ble.n	4024a6 <_svfprintf_r+0xc42>
  4024c6:	aa23      	add	r2, sp, #140	; 0x8c
  4024c8:	4621      	mov	r1, r4
  4024ca:	4658      	mov	r0, fp
  4024cc:	f002 fc46 	bl	404d5c <__ssprint_r>
  4024d0:	2800      	cmp	r0, #0
  4024d2:	f47f aac0 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4024d6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4024d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4024da:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4024de:	e7e4      	b.n	4024aa <_svfprintf_r+0xc46>
  4024e0:	aa23      	add	r2, sp, #140	; 0x8c
  4024e2:	9909      	ldr	r1, [sp, #36]	; 0x24
  4024e4:	980a      	ldr	r0, [sp, #40]	; 0x28
  4024e6:	f002 fc39 	bl	404d5c <__ssprint_r>
  4024ea:	2800      	cmp	r0, #0
  4024ec:	f47f aab3 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4024f0:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4024f4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4024f6:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4024fa:	f7ff bbcd 	b.w	401c98 <_svfprintf_r+0x434>
  4024fe:	1e5e      	subs	r6, r3, #1
  402500:	2e00      	cmp	r6, #0
  402502:	f77f af48 	ble.w	402396 <_svfprintf_r+0xb32>
  402506:	4b9c      	ldr	r3, [pc, #624]	; (402778 <_svfprintf_r+0xf14>)
  402508:	930f      	str	r3, [sp, #60]	; 0x3c
  40250a:	2e10      	cmp	r6, #16
  40250c:	dd2c      	ble.n	402568 <_svfprintf_r+0xd04>
  40250e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  402512:	2710      	movs	r7, #16
  402514:	46b0      	mov	r8, r6
  402516:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  40251a:	9e09      	ldr	r6, [sp, #36]	; 0x24
  40251c:	e006      	b.n	40252c <_svfprintf_r+0xcc8>
  40251e:	f1a8 0810 	sub.w	r8, r8, #16
  402522:	f1b8 0f10 	cmp.w	r8, #16
  402526:	f109 0908 	add.w	r9, r9, #8
  40252a:	dd1a      	ble.n	402562 <_svfprintf_r+0xcfe>
  40252c:	3501      	adds	r5, #1
  40252e:	3410      	adds	r4, #16
  402530:	2d07      	cmp	r5, #7
  402532:	9425      	str	r4, [sp, #148]	; 0x94
  402534:	9524      	str	r5, [sp, #144]	; 0x90
  402536:	f8c9 a000 	str.w	sl, [r9]
  40253a:	f8c9 7004 	str.w	r7, [r9, #4]
  40253e:	ddee      	ble.n	40251e <_svfprintf_r+0xcba>
  402540:	aa23      	add	r2, sp, #140	; 0x8c
  402542:	4631      	mov	r1, r6
  402544:	4658      	mov	r0, fp
  402546:	f002 fc09 	bl	404d5c <__ssprint_r>
  40254a:	2800      	cmp	r0, #0
  40254c:	f47f aa83 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402550:	f1a8 0810 	sub.w	r8, r8, #16
  402554:	f1b8 0f10 	cmp.w	r8, #16
  402558:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40255a:	9d24      	ldr	r5, [sp, #144]	; 0x90
  40255c:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402560:	dce4      	bgt.n	40252c <_svfprintf_r+0xcc8>
  402562:	4646      	mov	r6, r8
  402564:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  402568:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40256a:	3501      	adds	r5, #1
  40256c:	4434      	add	r4, r6
  40256e:	2d07      	cmp	r5, #7
  402570:	9425      	str	r4, [sp, #148]	; 0x94
  402572:	9524      	str	r5, [sp, #144]	; 0x90
  402574:	e889 0048 	stmia.w	r9, {r3, r6}
  402578:	f77f af0b 	ble.w	402392 <_svfprintf_r+0xb2e>
  40257c:	aa23      	add	r2, sp, #140	; 0x8c
  40257e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402580:	980a      	ldr	r0, [sp, #40]	; 0x28
  402582:	f002 fbeb 	bl	404d5c <__ssprint_r>
  402586:	2800      	cmp	r0, #0
  402588:	f47f aa65 	bne.w	401a56 <_svfprintf_r+0x1f2>
  40258c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40258e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  402590:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402594:	e6ff      	b.n	402396 <_svfprintf_r+0xb32>
  402596:	9907      	ldr	r1, [sp, #28]
  402598:	f011 0210 	ands.w	r2, r1, #16
  40259c:	f000 8108 	beq.w	4027b0 <_svfprintf_r+0xf4c>
  4025a0:	980e      	ldr	r0, [sp, #56]	; 0x38
  4025a2:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4025a6:	f1bb 0f00 	cmp.w	fp, #0
  4025aa:	6804      	ldr	r4, [r0, #0]
  4025ac:	f100 0704 	add.w	r7, r0, #4
  4025b0:	f04f 0500 	mov.w	r5, #0
  4025b4:	db26      	blt.n	402604 <_svfprintf_r+0xda0>
  4025b6:	460a      	mov	r2, r1
  4025b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  4025bc:	9207      	str	r2, [sp, #28]
  4025be:	ea54 0205 	orrs.w	r2, r4, r5
  4025c2:	970e      	str	r7, [sp, #56]	; 0x38
  4025c4:	461f      	mov	r7, r3
  4025c6:	f47f aaef 	bne.w	401ba8 <_svfprintf_r+0x344>
  4025ca:	e4c8      	b.n	401f5e <_svfprintf_r+0x6fa>
  4025cc:	9b07      	ldr	r3, [sp, #28]
  4025ce:	06d9      	lsls	r1, r3, #27
  4025d0:	d42a      	bmi.n	402628 <_svfprintf_r+0xdc4>
  4025d2:	9b07      	ldr	r3, [sp, #28]
  4025d4:	065a      	lsls	r2, r3, #25
  4025d6:	d527      	bpl.n	402628 <_svfprintf_r+0xdc4>
  4025d8:	990e      	ldr	r1, [sp, #56]	; 0x38
  4025da:	f9b1 4000 	ldrsh.w	r4, [r1]
  4025de:	3104      	adds	r1, #4
  4025e0:	17e5      	asrs	r5, r4, #31
  4025e2:	4622      	mov	r2, r4
  4025e4:	462b      	mov	r3, r5
  4025e6:	910e      	str	r1, [sp, #56]	; 0x38
  4025e8:	f7ff bacb 	b.w	401b82 <_svfprintf_r+0x31e>
  4025ec:	990e      	ldr	r1, [sp, #56]	; 0x38
  4025ee:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  4025f2:	f1bb 0f00 	cmp.w	fp, #0
  4025f6:	680c      	ldr	r4, [r1, #0]
  4025f8:	f101 0704 	add.w	r7, r1, #4
  4025fc:	f04f 0500 	mov.w	r5, #0
  402600:	f280 8247 	bge.w	402a92 <_svfprintf_r+0x122e>
  402604:	970e      	str	r7, [sp, #56]	; 0x38
  402606:	461f      	mov	r7, r3
  402608:	ea54 0305 	orrs.w	r3, r4, r5
  40260c:	f47f aacc 	bne.w	401ba8 <_svfprintf_r+0x344>
  402610:	e4aa      	b.n	401f68 <_svfprintf_r+0x704>
  402612:	3301      	adds	r3, #1
  402614:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402616:	9324      	str	r3, [sp, #144]	; 0x90
  402618:	442c      	add	r4, r5
  40261a:	2b07      	cmp	r3, #7
  40261c:	9425      	str	r4, [sp, #148]	; 0x94
  40261e:	e889 0024 	stmia.w	r9, {r2, r5}
  402622:	f77f abad 	ble.w	401d80 <_svfprintf_r+0x51c>
  402626:	e6c3      	b.n	4023b0 <_svfprintf_r+0xb4c>
  402628:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40262a:	6814      	ldr	r4, [r2, #0]
  40262c:	4613      	mov	r3, r2
  40262e:	3304      	adds	r3, #4
  402630:	17e5      	asrs	r5, r4, #31
  402632:	4622      	mov	r2, r4
  402634:	930e      	str	r3, [sp, #56]	; 0x38
  402636:	2a00      	cmp	r2, #0
  402638:	462b      	mov	r3, r5
  40263a:	f173 0300 	sbcs.w	r3, r3, #0
  40263e:	f6bf aaa5 	bge.w	401b8c <_svfprintf_r+0x328>
  402642:	4264      	negs	r4, r4
  402644:	f04f 072d 	mov.w	r7, #45	; 0x2d
  402648:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40264c:	f1bb 0f00 	cmp.w	fp, #0
  402650:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402654:	f6ff aaa8 	blt.w	401ba8 <_svfprintf_r+0x344>
  402658:	9b07      	ldr	r3, [sp, #28]
  40265a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40265e:	9307      	str	r3, [sp, #28]
  402660:	f7ff baa2 	b.w	401ba8 <_svfprintf_r+0x344>
  402664:	aa23      	add	r2, sp, #140	; 0x8c
  402666:	9909      	ldr	r1, [sp, #36]	; 0x24
  402668:	980a      	ldr	r0, [sp, #40]	; 0x28
  40266a:	f002 fb77 	bl	404d5c <__ssprint_r>
  40266e:	2800      	cmp	r0, #0
  402670:	f47f a9f1 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402674:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402676:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  40267a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40267c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  40267e:	4432      	add	r2, r6
  402680:	4617      	mov	r7, r2
  402682:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402684:	4293      	cmp	r3, r2
  402686:	db47      	blt.n	402718 <_svfprintf_r+0xeb4>
  402688:	9a07      	ldr	r2, [sp, #28]
  40268a:	07d5      	lsls	r5, r2, #31
  40268c:	d444      	bmi.n	402718 <_svfprintf_r+0xeb4>
  40268e:	9912      	ldr	r1, [sp, #72]	; 0x48
  402690:	440e      	add	r6, r1
  402692:	1bf5      	subs	r5, r6, r7
  402694:	1acb      	subs	r3, r1, r3
  402696:	429d      	cmp	r5, r3
  402698:	bfa8      	it	ge
  40269a:	461d      	movge	r5, r3
  40269c:	2d00      	cmp	r5, #0
  40269e:	462e      	mov	r6, r5
  4026a0:	dd0d      	ble.n	4026be <_svfprintf_r+0xe5a>
  4026a2:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4026a4:	f8c9 7000 	str.w	r7, [r9]
  4026a8:	3201      	adds	r2, #1
  4026aa:	442c      	add	r4, r5
  4026ac:	2a07      	cmp	r2, #7
  4026ae:	9425      	str	r4, [sp, #148]	; 0x94
  4026b0:	f8c9 5004 	str.w	r5, [r9, #4]
  4026b4:	9224      	str	r2, [sp, #144]	; 0x90
  4026b6:	f300 830b 	bgt.w	402cd0 <_svfprintf_r+0x146c>
  4026ba:	f109 0908 	add.w	r9, r9, #8
  4026be:	2e00      	cmp	r6, #0
  4026c0:	bfac      	ite	ge
  4026c2:	1b9d      	subge	r5, r3, r6
  4026c4:	461d      	movlt	r5, r3
  4026c6:	2d00      	cmp	r5, #0
  4026c8:	f77f ab5c 	ble.w	401d84 <_svfprintf_r+0x520>
  4026cc:	4a2a      	ldr	r2, [pc, #168]	; (402778 <_svfprintf_r+0xf14>)
  4026ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4026d0:	920f      	str	r2, [sp, #60]	; 0x3c
  4026d2:	2d10      	cmp	r5, #16
  4026d4:	dd9d      	ble.n	402612 <_svfprintf_r+0xdae>
  4026d6:	2610      	movs	r6, #16
  4026d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4026da:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  4026de:	e004      	b.n	4026ea <_svfprintf_r+0xe86>
  4026e0:	f109 0908 	add.w	r9, r9, #8
  4026e4:	3d10      	subs	r5, #16
  4026e6:	2d10      	cmp	r5, #16
  4026e8:	dd93      	ble.n	402612 <_svfprintf_r+0xdae>
  4026ea:	3301      	adds	r3, #1
  4026ec:	3410      	adds	r4, #16
  4026ee:	2b07      	cmp	r3, #7
  4026f0:	9425      	str	r4, [sp, #148]	; 0x94
  4026f2:	9324      	str	r3, [sp, #144]	; 0x90
  4026f4:	f8c9 a000 	str.w	sl, [r9]
  4026f8:	f8c9 6004 	str.w	r6, [r9, #4]
  4026fc:	ddf0      	ble.n	4026e0 <_svfprintf_r+0xe7c>
  4026fe:	aa23      	add	r2, sp, #140	; 0x8c
  402700:	4659      	mov	r1, fp
  402702:	4638      	mov	r0, r7
  402704:	f002 fb2a 	bl	404d5c <__ssprint_r>
  402708:	2800      	cmp	r0, #0
  40270a:	f47f a9a4 	bne.w	401a56 <_svfprintf_r+0x1f2>
  40270e:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402710:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402712:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402716:	e7e5      	b.n	4026e4 <_svfprintf_r+0xe80>
  402718:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40271a:	9816      	ldr	r0, [sp, #88]	; 0x58
  40271c:	9917      	ldr	r1, [sp, #92]	; 0x5c
  40271e:	f8c9 1000 	str.w	r1, [r9]
  402722:	3201      	adds	r2, #1
  402724:	4404      	add	r4, r0
  402726:	2a07      	cmp	r2, #7
  402728:	9425      	str	r4, [sp, #148]	; 0x94
  40272a:	f8c9 0004 	str.w	r0, [r9, #4]
  40272e:	9224      	str	r2, [sp, #144]	; 0x90
  402730:	f300 82a9 	bgt.w	402c86 <_svfprintf_r+0x1422>
  402734:	f109 0908 	add.w	r9, r9, #8
  402738:	e7a9      	b.n	40268e <_svfprintf_r+0xe2a>
  40273a:	9b07      	ldr	r3, [sp, #28]
  40273c:	07d8      	lsls	r0, r3, #31
  40273e:	f53f adf4 	bmi.w	40232a <_svfprintf_r+0xac6>
  402742:	3501      	adds	r5, #1
  402744:	3401      	adds	r4, #1
  402746:	2301      	movs	r3, #1
  402748:	2d07      	cmp	r5, #7
  40274a:	9425      	str	r4, [sp, #148]	; 0x94
  40274c:	9524      	str	r5, [sp, #144]	; 0x90
  40274e:	f8c9 6000 	str.w	r6, [r9]
  402752:	f8c9 3004 	str.w	r3, [r9, #4]
  402756:	f77f ae1c 	ble.w	402392 <_svfprintf_r+0xb2e>
  40275a:	e70f      	b.n	40257c <_svfprintf_r+0xd18>
  40275c:	aa23      	add	r2, sp, #140	; 0x8c
  40275e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402760:	980a      	ldr	r0, [sp, #40]	; 0x28
  402762:	f002 fafb 	bl	404d5c <__ssprint_r>
  402766:	2800      	cmp	r0, #0
  402768:	f47f a975 	bne.w	401a56 <_svfprintf_r+0x1f2>
  40276c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40276e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  402770:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402774:	e5e7      	b.n	402346 <_svfprintf_r+0xae2>
  402776:	bf00      	nop
  402778:	00406a38 	.word	0x00406a38
  40277c:	aa23      	add	r2, sp, #140	; 0x8c
  40277e:	9909      	ldr	r1, [sp, #36]	; 0x24
  402780:	980a      	ldr	r0, [sp, #40]	; 0x28
  402782:	f002 faeb 	bl	404d5c <__ssprint_r>
  402786:	2800      	cmp	r0, #0
  402788:	f47f a965 	bne.w	401a56 <_svfprintf_r+0x1f2>
  40278c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  40278e:	9d24      	ldr	r5, [sp, #144]	; 0x90
  402790:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402794:	e5e6      	b.n	402364 <_svfprintf_r+0xb00>
  402796:	aa23      	add	r2, sp, #140	; 0x8c
  402798:	9909      	ldr	r1, [sp, #36]	; 0x24
  40279a:	980a      	ldr	r0, [sp, #40]	; 0x28
  40279c:	f002 fade 	bl	404d5c <__ssprint_r>
  4027a0:	2800      	cmp	r0, #0
  4027a2:	f47f a958 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4027a6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4027a8:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4027ac:	f7ff ba98 	b.w	401ce0 <_svfprintf_r+0x47c>
  4027b0:	9907      	ldr	r1, [sp, #28]
  4027b2:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  4027b6:	f43f af19 	beq.w	4025ec <_svfprintf_r+0xd88>
  4027ba:	980e      	ldr	r0, [sp, #56]	; 0x38
  4027bc:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  4027c0:	f1bb 0f00 	cmp.w	fp, #0
  4027c4:	8804      	ldrh	r4, [r0, #0]
  4027c6:	f100 0704 	add.w	r7, r0, #4
  4027ca:	f04f 0500 	mov.w	r5, #0
  4027ce:	f2c0 81b9 	blt.w	402b44 <_svfprintf_r+0x12e0>
  4027d2:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  4027d6:	9307      	str	r3, [sp, #28]
  4027d8:	ea54 0305 	orrs.w	r3, r4, r5
  4027dc:	970e      	str	r7, [sp, #56]	; 0x38
  4027de:	4617      	mov	r7, r2
  4027e0:	f47f a9e2 	bne.w	401ba8 <_svfprintf_r+0x344>
  4027e4:	f7ff bbbb 	b.w	401f5e <_svfprintf_r+0x6fa>
  4027e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4027ea:	4622      	mov	r2, r4
  4027ec:	4620      	mov	r0, r4
  4027ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4027f0:	4623      	mov	r3, r4
  4027f2:	4621      	mov	r1, r4
  4027f4:	f003 fb90 	bl	405f18 <__aeabi_dcmpun>
  4027f8:	2800      	cmp	r0, #0
  4027fa:	f040 8317 	bne.w	402e2c <_svfprintf_r+0x15c8>
  4027fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402800:	f1bb 3fff 	cmp.w	fp, #4294967295
  402804:	f023 0320 	bic.w	r3, r3, #32
  402808:	930d      	str	r3, [sp, #52]	; 0x34
  40280a:	f000 8270 	beq.w	402cee <_svfprintf_r+0x148a>
  40280e:	2b47      	cmp	r3, #71	; 0x47
  402810:	f000 8192 	beq.w	402b38 <_svfprintf_r+0x12d4>
  402814:	9b07      	ldr	r3, [sp, #28]
  402816:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  40281a:	9310      	str	r3, [sp, #64]	; 0x40
  40281c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40281e:	1e1f      	subs	r7, r3, #0
  402820:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402822:	9308      	str	r3, [sp, #32]
  402824:	bfbb      	ittet	lt
  402826:	463b      	movlt	r3, r7
  402828:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40282c:	2300      	movge	r3, #0
  40282e:	232d      	movlt	r3, #45	; 0x2d
  402830:	930f      	str	r3, [sp, #60]	; 0x3c
  402832:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402834:	2b66      	cmp	r3, #102	; 0x66
  402836:	f000 825d 	beq.w	402cf4 <_svfprintf_r+0x1490>
  40283a:	2b46      	cmp	r3, #70	; 0x46
  40283c:	f000 8151 	beq.w	402ae2 <_svfprintf_r+0x127e>
  402840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402842:	9a08      	ldr	r2, [sp, #32]
  402844:	2b45      	cmp	r3, #69	; 0x45
  402846:	a821      	add	r0, sp, #132	; 0x84
  402848:	a91e      	add	r1, sp, #120	; 0x78
  40284a:	bf0c      	ite	eq
  40284c:	f10b 0501 	addeq.w	r5, fp, #1
  402850:	465d      	movne	r5, fp
  402852:	9004      	str	r0, [sp, #16]
  402854:	9103      	str	r1, [sp, #12]
  402856:	a81d      	add	r0, sp, #116	; 0x74
  402858:	2102      	movs	r1, #2
  40285a:	463b      	mov	r3, r7
  40285c:	9002      	str	r0, [sp, #8]
  40285e:	9501      	str	r5, [sp, #4]
  402860:	9100      	str	r1, [sp, #0]
  402862:	980a      	ldr	r0, [sp, #40]	; 0x28
  402864:	f000 fbf0 	bl	403048 <_dtoa_r>
  402868:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40286a:	2b67      	cmp	r3, #103	; 0x67
  40286c:	4606      	mov	r6, r0
  40286e:	f040 8290 	bne.w	402d92 <_svfprintf_r+0x152e>
  402872:	9b07      	ldr	r3, [sp, #28]
  402874:	07da      	lsls	r2, r3, #31
  402876:	f140 82af 	bpl.w	402dd8 <_svfprintf_r+0x1574>
  40287a:	1974      	adds	r4, r6, r5
  40287c:	9808      	ldr	r0, [sp, #32]
  40287e:	4639      	mov	r1, r7
  402880:	2200      	movs	r2, #0
  402882:	2300      	movs	r3, #0
  402884:	f003 fb16 	bl	405eb4 <__aeabi_dcmpeq>
  402888:	2800      	cmp	r0, #0
  40288a:	f040 8190 	bne.w	402bae <_svfprintf_r+0x134a>
  40288e:	9b21      	ldr	r3, [sp, #132]	; 0x84
  402890:	429c      	cmp	r4, r3
  402892:	d906      	bls.n	4028a2 <_svfprintf_r+0x103e>
  402894:	2130      	movs	r1, #48	; 0x30
  402896:	1c5a      	adds	r2, r3, #1
  402898:	9221      	str	r2, [sp, #132]	; 0x84
  40289a:	7019      	strb	r1, [r3, #0]
  40289c:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40289e:	429c      	cmp	r4, r3
  4028a0:	d8f9      	bhi.n	402896 <_svfprintf_r+0x1032>
  4028a2:	1b9b      	subs	r3, r3, r6
  4028a4:	9312      	str	r3, [sp, #72]	; 0x48
  4028a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4028a8:	2b47      	cmp	r3, #71	; 0x47
  4028aa:	f000 8179 	beq.w	402ba0 <_svfprintf_r+0x133c>
  4028ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028b0:	2b65      	cmp	r3, #101	; 0x65
  4028b2:	f340 827d 	ble.w	402db0 <_svfprintf_r+0x154c>
  4028b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4028b8:	2b66      	cmp	r3, #102	; 0x66
  4028ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  4028bc:	9313      	str	r3, [sp, #76]	; 0x4c
  4028be:	f000 825b 	beq.w	402d78 <_svfprintf_r+0x1514>
  4028c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4028c4:	9912      	ldr	r1, [sp, #72]	; 0x48
  4028c6:	428a      	cmp	r2, r1
  4028c8:	f2c0 8230 	blt.w	402d2c <_svfprintf_r+0x14c8>
  4028cc:	9b07      	ldr	r3, [sp, #28]
  4028ce:	07d9      	lsls	r1, r3, #31
  4028d0:	f100 8284 	bmi.w	402ddc <_svfprintf_r+0x1578>
  4028d4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4028d8:	920d      	str	r2, [sp, #52]	; 0x34
  4028da:	2267      	movs	r2, #103	; 0x67
  4028dc:	9211      	str	r2, [sp, #68]	; 0x44
  4028de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028e0:	2a00      	cmp	r2, #0
  4028e2:	f040 8153 	bne.w	402b8c <_svfprintf_r+0x1328>
  4028e6:	9308      	str	r3, [sp, #32]
  4028e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4028ea:	9307      	str	r3, [sp, #28]
  4028ec:	4693      	mov	fp, r2
  4028ee:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  4028f2:	f7ff b97d 	b.w	401bf0 <_svfprintf_r+0x38c>
  4028f6:	9907      	ldr	r1, [sp, #28]
  4028f8:	f011 0340 	ands.w	r3, r1, #64	; 0x40
  4028fc:	d015      	beq.n	40292a <_svfprintf_r+0x10c6>
  4028fe:	980e      	ldr	r0, [sp, #56]	; 0x38
  402900:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  402904:	f1bb 0f00 	cmp.w	fp, #0
  402908:	8804      	ldrh	r4, [r0, #0]
  40290a:	f100 0704 	add.w	r7, r0, #4
  40290e:	f04f 0500 	mov.w	r5, #0
  402912:	db16      	blt.n	402942 <_svfprintf_r+0x10de>
  402914:	f021 0380 	bic.w	r3, r1, #128	; 0x80
  402918:	9307      	str	r3, [sp, #28]
  40291a:	ea54 0305 	orrs.w	r3, r4, r5
  40291e:	970e      	str	r7, [sp, #56]	; 0x38
  402920:	f43f ac3a 	beq.w	402198 <_svfprintf_r+0x934>
  402924:	4617      	mov	r7, r2
  402926:	f7ff b8c2 	b.w	401aae <_svfprintf_r+0x24a>
  40292a:	990e      	ldr	r1, [sp, #56]	; 0x38
  40292c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
  402930:	f1bb 0f00 	cmp.w	fp, #0
  402934:	680c      	ldr	r4, [r1, #0]
  402936:	f101 0704 	add.w	r7, r1, #4
  40293a:	f04f 0500 	mov.w	r5, #0
  40293e:	f280 80a5 	bge.w	402a8c <_svfprintf_r+0x1228>
  402942:	970e      	str	r7, [sp, #56]	; 0x38
  402944:	2700      	movs	r7, #0
  402946:	f7ff b8b2 	b.w	401aae <_svfprintf_r+0x24a>
  40294a:	9b07      	ldr	r3, [sp, #28]
  40294c:	06df      	lsls	r7, r3, #27
  40294e:	d40b      	bmi.n	402968 <_svfprintf_r+0x1104>
  402950:	9b07      	ldr	r3, [sp, #28]
  402952:	065e      	lsls	r6, r3, #25
  402954:	d508      	bpl.n	402968 <_svfprintf_r+0x1104>
  402956:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402958:	6813      	ldr	r3, [r2, #0]
  40295a:	3204      	adds	r2, #4
  40295c:	920e      	str	r2, [sp, #56]	; 0x38
  40295e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
  402962:	801a      	strh	r2, [r3, #0]
  402964:	f7fe bfa4 	b.w	4018b0 <_svfprintf_r+0x4c>
  402968:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40296a:	6813      	ldr	r3, [r2, #0]
  40296c:	3204      	adds	r2, #4
  40296e:	920e      	str	r2, [sp, #56]	; 0x38
  402970:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402972:	601a      	str	r2, [r3, #0]
  402974:	f7fe bf9c 	b.w	4018b0 <_svfprintf_r+0x4c>
  402978:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40297a:	9b07      	ldr	r3, [sp, #28]
  40297c:	f013 0f40 	tst.w	r3, #64	; 0x40
  402980:	4613      	mov	r3, r2
  402982:	f103 0304 	add.w	r3, r3, #4
  402986:	bf0c      	ite	eq
  402988:	6814      	ldreq	r4, [r2, #0]
  40298a:	8814      	ldrhne	r4, [r2, #0]
  40298c:	930e      	str	r3, [sp, #56]	; 0x38
  40298e:	2500      	movs	r5, #0
  402990:	f7ff bb02 	b.w	401f98 <_svfprintf_r+0x734>
  402994:	2700      	movs	r7, #0
  402996:	45bb      	cmp	fp, r7
  402998:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  40299c:	f6ff ac0e 	blt.w	4021bc <_svfprintf_r+0x958>
  4029a0:	9b07      	ldr	r3, [sp, #28]
  4029a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4029a6:	9307      	str	r3, [sp, #28]
  4029a8:	f7ff bbd6 	b.w	402158 <_svfprintf_r+0x8f4>
  4029ac:	4614      	mov	r4, r2
  4029ae:	3301      	adds	r3, #1
  4029b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029b2:	9324      	str	r3, [sp, #144]	; 0x90
  4029b4:	442c      	add	r4, r5
  4029b6:	2b07      	cmp	r3, #7
  4029b8:	9425      	str	r4, [sp, #148]	; 0x94
  4029ba:	e889 0024 	stmia.w	r9, {r2, r5}
  4029be:	f73f ae51 	bgt.w	402664 <_svfprintf_r+0xe00>
  4029c2:	f109 0908 	add.w	r9, r9, #8
  4029c6:	e658      	b.n	40267a <_svfprintf_r+0xe16>
  4029c8:	aa23      	add	r2, sp, #140	; 0x8c
  4029ca:	9909      	ldr	r1, [sp, #36]	; 0x24
  4029cc:	980a      	ldr	r0, [sp, #40]	; 0x28
  4029ce:	f002 f9c5 	bl	404d5c <__ssprint_r>
  4029d2:	2800      	cmp	r0, #0
  4029d4:	f47f a83f 	bne.w	401a56 <_svfprintf_r+0x1f2>
  4029d8:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4029da:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  4029de:	e40f      	b.n	402200 <_svfprintf_r+0x99c>
  4029e0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4029e2:	f7ff bbe4 	b.w	4021ae <_svfprintf_r+0x94a>
  4029e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4029e8:	4ab5      	ldr	r2, [pc, #724]	; (402cc0 <_svfprintf_r+0x145c>)
  4029ea:	f8c9 2000 	str.w	r2, [r9]
  4029ee:	3301      	adds	r3, #1
  4029f0:	3401      	adds	r4, #1
  4029f2:	2201      	movs	r2, #1
  4029f4:	2b07      	cmp	r3, #7
  4029f6:	9425      	str	r4, [sp, #148]	; 0x94
  4029f8:	9324      	str	r3, [sp, #144]	; 0x90
  4029fa:	f8c9 2004 	str.w	r2, [r9, #4]
  4029fe:	f300 808e 	bgt.w	402b1e <_svfprintf_r+0x12ba>
  402a02:	f109 0908 	add.w	r9, r9, #8
  402a06:	b92d      	cbnz	r5, 402a14 <_svfprintf_r+0x11b0>
  402a08:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a0a:	b91b      	cbnz	r3, 402a14 <_svfprintf_r+0x11b0>
  402a0c:	9b07      	ldr	r3, [sp, #28]
  402a0e:	07df      	lsls	r7, r3, #31
  402a10:	f57f a9b8 	bpl.w	401d84 <_svfprintf_r+0x520>
  402a14:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402a16:	9916      	ldr	r1, [sp, #88]	; 0x58
  402a18:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  402a1a:	f8c9 2000 	str.w	r2, [r9]
  402a1e:	3301      	adds	r3, #1
  402a20:	440c      	add	r4, r1
  402a22:	2b07      	cmp	r3, #7
  402a24:	9425      	str	r4, [sp, #148]	; 0x94
  402a26:	f8c9 1004 	str.w	r1, [r9, #4]
  402a2a:	9324      	str	r3, [sp, #144]	; 0x90
  402a2c:	f300 81c2 	bgt.w	402db4 <_svfprintf_r+0x1550>
  402a30:	f109 0908 	add.w	r9, r9, #8
  402a34:	426d      	negs	r5, r5
  402a36:	2d00      	cmp	r5, #0
  402a38:	f340 809b 	ble.w	402b72 <_svfprintf_r+0x130e>
  402a3c:	4aa1      	ldr	r2, [pc, #644]	; (402cc4 <_svfprintf_r+0x1460>)
  402a3e:	920f      	str	r2, [sp, #60]	; 0x3c
  402a40:	2d10      	cmp	r5, #16
  402a42:	f340 80c3 	ble.w	402bcc <_svfprintf_r+0x1368>
  402a46:	4622      	mov	r2, r4
  402a48:	2710      	movs	r7, #16
  402a4a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  402a4e:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402a50:	e005      	b.n	402a5e <_svfprintf_r+0x11fa>
  402a52:	f109 0908 	add.w	r9, r9, #8
  402a56:	3d10      	subs	r5, #16
  402a58:	2d10      	cmp	r5, #16
  402a5a:	f340 80b6 	ble.w	402bca <_svfprintf_r+0x1366>
  402a5e:	3301      	adds	r3, #1
  402a60:	3210      	adds	r2, #16
  402a62:	2b07      	cmp	r3, #7
  402a64:	9225      	str	r2, [sp, #148]	; 0x94
  402a66:	9324      	str	r3, [sp, #144]	; 0x90
  402a68:	f8c9 a000 	str.w	sl, [r9]
  402a6c:	f8c9 7004 	str.w	r7, [r9, #4]
  402a70:	ddef      	ble.n	402a52 <_svfprintf_r+0x11ee>
  402a72:	aa23      	add	r2, sp, #140	; 0x8c
  402a74:	4621      	mov	r1, r4
  402a76:	4658      	mov	r0, fp
  402a78:	f002 f970 	bl	404d5c <__ssprint_r>
  402a7c:	2800      	cmp	r0, #0
  402a7e:	f47e afea 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402a82:	9a25      	ldr	r2, [sp, #148]	; 0x94
  402a84:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402a86:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402a8a:	e7e4      	b.n	402a56 <_svfprintf_r+0x11f2>
  402a8c:	9a07      	ldr	r2, [sp, #28]
  402a8e:	f7ff ba38 	b.w	401f02 <_svfprintf_r+0x69e>
  402a92:	9a07      	ldr	r2, [sp, #28]
  402a94:	e590      	b.n	4025b8 <_svfprintf_r+0xd54>
  402a96:	9b07      	ldr	r3, [sp, #28]
  402a98:	f043 0320 	orr.w	r3, r3, #32
  402a9c:	9307      	str	r3, [sp, #28]
  402a9e:	f108 0801 	add.w	r8, r8, #1
  402aa2:	f898 3000 	ldrb.w	r3, [r8]
  402aa6:	f7fe bf36 	b.w	401916 <_svfprintf_r+0xb2>
  402aaa:	aa23      	add	r2, sp, #140	; 0x8c
  402aac:	9909      	ldr	r1, [sp, #36]	; 0x24
  402aae:	980a      	ldr	r0, [sp, #40]	; 0x28
  402ab0:	f002 f954 	bl	404d5c <__ssprint_r>
  402ab4:	2800      	cmp	r0, #0
  402ab6:	f47e afce 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402aba:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402abc:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402ac0:	f7ff bbb6 	b.w	402230 <_svfprintf_r+0x9cc>
  402ac4:	2140      	movs	r1, #64	; 0x40
  402ac6:	980a      	ldr	r0, [sp, #40]	; 0x28
  402ac8:	f001 fa02 	bl	403ed0 <_malloc_r>
  402acc:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ace:	6010      	str	r0, [r2, #0]
  402ad0:	6110      	str	r0, [r2, #16]
  402ad2:	2800      	cmp	r0, #0
  402ad4:	f000 81e5 	beq.w	402ea2 <_svfprintf_r+0x163e>
  402ad8:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402ada:	2340      	movs	r3, #64	; 0x40
  402adc:	6153      	str	r3, [r2, #20]
  402ade:	f7fe bed8 	b.w	401892 <_svfprintf_r+0x2e>
  402ae2:	a821      	add	r0, sp, #132	; 0x84
  402ae4:	a91e      	add	r1, sp, #120	; 0x78
  402ae6:	9004      	str	r0, [sp, #16]
  402ae8:	9103      	str	r1, [sp, #12]
  402aea:	a81d      	add	r0, sp, #116	; 0x74
  402aec:	2103      	movs	r1, #3
  402aee:	9002      	str	r0, [sp, #8]
  402af0:	9a08      	ldr	r2, [sp, #32]
  402af2:	f8cd b004 	str.w	fp, [sp, #4]
  402af6:	463b      	mov	r3, r7
  402af8:	9100      	str	r1, [sp, #0]
  402afa:	980a      	ldr	r0, [sp, #40]	; 0x28
  402afc:	f000 faa4 	bl	403048 <_dtoa_r>
  402b00:	465d      	mov	r5, fp
  402b02:	4606      	mov	r6, r0
  402b04:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b06:	2b46      	cmp	r3, #70	; 0x46
  402b08:	eb06 0405 	add.w	r4, r6, r5
  402b0c:	f47f aeb6 	bne.w	40287c <_svfprintf_r+0x1018>
  402b10:	7833      	ldrb	r3, [r6, #0]
  402b12:	2b30      	cmp	r3, #48	; 0x30
  402b14:	f000 817c 	beq.w	402e10 <_svfprintf_r+0x15ac>
  402b18:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402b1a:	442c      	add	r4, r5
  402b1c:	e6ae      	b.n	40287c <_svfprintf_r+0x1018>
  402b1e:	aa23      	add	r2, sp, #140	; 0x8c
  402b20:	9909      	ldr	r1, [sp, #36]	; 0x24
  402b22:	980a      	ldr	r0, [sp, #40]	; 0x28
  402b24:	f002 f91a 	bl	404d5c <__ssprint_r>
  402b28:	2800      	cmp	r0, #0
  402b2a:	f47e af94 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402b2e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402b30:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402b32:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402b36:	e766      	b.n	402a06 <_svfprintf_r+0x11a2>
  402b38:	f1bb 0f00 	cmp.w	fp, #0
  402b3c:	bf08      	it	eq
  402b3e:	f04f 0b01 	moveq.w	fp, #1
  402b42:	e667      	b.n	402814 <_svfprintf_r+0xfb0>
  402b44:	970e      	str	r7, [sp, #56]	; 0x38
  402b46:	4617      	mov	r7, r2
  402b48:	e55e      	b.n	402608 <_svfprintf_r+0xda4>
  402b4a:	4630      	mov	r0, r6
  402b4c:	f002 f898 	bl	404c80 <strlen>
  402b50:	46a3      	mov	fp, r4
  402b52:	4603      	mov	r3, r0
  402b54:	900d      	str	r0, [sp, #52]	; 0x34
  402b56:	f7ff baf4 	b.w	402142 <_svfprintf_r+0x8de>
  402b5a:	aa23      	add	r2, sp, #140	; 0x8c
  402b5c:	9909      	ldr	r1, [sp, #36]	; 0x24
  402b5e:	980a      	ldr	r0, [sp, #40]	; 0x28
  402b60:	f002 f8fc 	bl	404d5c <__ssprint_r>
  402b64:	2800      	cmp	r0, #0
  402b66:	f47e af76 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402b6a:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402b6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402b6e:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402b72:	9912      	ldr	r1, [sp, #72]	; 0x48
  402b74:	f8c9 6000 	str.w	r6, [r9]
  402b78:	3301      	adds	r3, #1
  402b7a:	440c      	add	r4, r1
  402b7c:	2b07      	cmp	r3, #7
  402b7e:	9425      	str	r4, [sp, #148]	; 0x94
  402b80:	9324      	str	r3, [sp, #144]	; 0x90
  402b82:	f8c9 1004 	str.w	r1, [r9, #4]
  402b86:	f77f a8fb 	ble.w	401d80 <_svfprintf_r+0x51c>
  402b8a:	e411      	b.n	4023b0 <_svfprintf_r+0xb4c>
  402b8c:	272d      	movs	r7, #45	; 0x2d
  402b8e:	9308      	str	r3, [sp, #32]
  402b90:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402b92:	9307      	str	r3, [sp, #28]
  402b94:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402b98:	f04f 0b00 	mov.w	fp, #0
  402b9c:	f7ff b829 	b.w	401bf2 <_svfprintf_r+0x38e>
  402ba0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402ba2:	1cdd      	adds	r5, r3, #3
  402ba4:	db1e      	blt.n	402be4 <_svfprintf_r+0x1380>
  402ba6:	459b      	cmp	fp, r3
  402ba8:	db1c      	blt.n	402be4 <_svfprintf_r+0x1380>
  402baa:	9313      	str	r3, [sp, #76]	; 0x4c
  402bac:	e689      	b.n	4028c2 <_svfprintf_r+0x105e>
  402bae:	4623      	mov	r3, r4
  402bb0:	e677      	b.n	4028a2 <_svfprintf_r+0x103e>
  402bb2:	aa23      	add	r2, sp, #140	; 0x8c
  402bb4:	9909      	ldr	r1, [sp, #36]	; 0x24
  402bb6:	980a      	ldr	r0, [sp, #40]	; 0x28
  402bb8:	f002 f8d0 	bl	404d5c <__ssprint_r>
  402bbc:	2800      	cmp	r0, #0
  402bbe:	f47e af4a 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402bc2:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402bc4:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402bc8:	e459      	b.n	40247e <_svfprintf_r+0xc1a>
  402bca:	4614      	mov	r4, r2
  402bcc:	3301      	adds	r3, #1
  402bce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402bd0:	9324      	str	r3, [sp, #144]	; 0x90
  402bd2:	442c      	add	r4, r5
  402bd4:	2b07      	cmp	r3, #7
  402bd6:	9425      	str	r4, [sp, #148]	; 0x94
  402bd8:	e889 0024 	stmia.w	r9, {r2, r5}
  402bdc:	dcbd      	bgt.n	402b5a <_svfprintf_r+0x12f6>
  402bde:	f109 0908 	add.w	r9, r9, #8
  402be2:	e7c6      	b.n	402b72 <_svfprintf_r+0x130e>
  402be4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402be6:	3a02      	subs	r2, #2
  402be8:	9211      	str	r2, [sp, #68]	; 0x44
  402bea:	3b01      	subs	r3, #1
  402bec:	2b00      	cmp	r3, #0
  402bee:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402bf2:	931d      	str	r3, [sp, #116]	; 0x74
  402bf4:	bfb8      	it	lt
  402bf6:	425b      	neglt	r3, r3
  402bf8:	f88d 207c 	strb.w	r2, [sp, #124]	; 0x7c
  402bfc:	bfb4      	ite	lt
  402bfe:	222d      	movlt	r2, #45	; 0x2d
  402c00:	222b      	movge	r2, #43	; 0x2b
  402c02:	2b09      	cmp	r3, #9
  402c04:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
  402c08:	f340 80f1 	ble.w	402dee <_svfprintf_r+0x158a>
  402c0c:	f10d 008b 	add.w	r0, sp, #139	; 0x8b
  402c10:	4604      	mov	r4, r0
  402c12:	4a2d      	ldr	r2, [pc, #180]	; (402cc8 <_svfprintf_r+0x1464>)
  402c14:	fb82 2103 	smull	r2, r1, r2, r3
  402c18:	17da      	asrs	r2, r3, #31
  402c1a:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
  402c1e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
  402c22:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
  402c26:	f103 0130 	add.w	r1, r3, #48	; 0x30
  402c2a:	2a09      	cmp	r2, #9
  402c2c:	4613      	mov	r3, r2
  402c2e:	f804 1d01 	strb.w	r1, [r4, #-1]!
  402c32:	dcee      	bgt.n	402c12 <_svfprintf_r+0x13ae>
  402c34:	4621      	mov	r1, r4
  402c36:	3330      	adds	r3, #48	; 0x30
  402c38:	b2da      	uxtb	r2, r3
  402c3a:	f801 2d01 	strb.w	r2, [r1, #-1]!
  402c3e:	4288      	cmp	r0, r1
  402c40:	f240 813a 	bls.w	402eb8 <_svfprintf_r+0x1654>
  402c44:	f10d 017e 	add.w	r1, sp, #126	; 0x7e
  402c48:	4623      	mov	r3, r4
  402c4a:	e001      	b.n	402c50 <_svfprintf_r+0x13ec>
  402c4c:	f813 2b01 	ldrb.w	r2, [r3], #1
  402c50:	f801 2b01 	strb.w	r2, [r1], #1
  402c54:	4298      	cmp	r0, r3
  402c56:	d1f9      	bne.n	402c4c <_svfprintf_r+0x13e8>
  402c58:	1c43      	adds	r3, r0, #1
  402c5a:	1b1b      	subs	r3, r3, r4
  402c5c:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
  402c60:	4413      	add	r3, r2
  402c62:	aa1f      	add	r2, sp, #124	; 0x7c
  402c64:	1a9b      	subs	r3, r3, r2
  402c66:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402c68:	9319      	str	r3, [sp, #100]	; 0x64
  402c6a:	2a01      	cmp	r2, #1
  402c6c:	4413      	add	r3, r2
  402c6e:	930d      	str	r3, [sp, #52]	; 0x34
  402c70:	f340 80ea 	ble.w	402e48 <_svfprintf_r+0x15e4>
  402c74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402c76:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402c78:	4413      	add	r3, r2
  402c7a:	2200      	movs	r2, #0
  402c7c:	930d      	str	r3, [sp, #52]	; 0x34
  402c7e:	9213      	str	r2, [sp, #76]	; 0x4c
  402c80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402c84:	e62b      	b.n	4028de <_svfprintf_r+0x107a>
  402c86:	aa23      	add	r2, sp, #140	; 0x8c
  402c88:	9909      	ldr	r1, [sp, #36]	; 0x24
  402c8a:	980a      	ldr	r0, [sp, #40]	; 0x28
  402c8c:	f002 f866 	bl	404d5c <__ssprint_r>
  402c90:	2800      	cmp	r0, #0
  402c92:	f47e aee0 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402c96:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402c98:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402c9a:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402c9e:	e4f6      	b.n	40268e <_svfprintf_r+0xe2a>
  402ca0:	2d06      	cmp	r5, #6
  402ca2:	462b      	mov	r3, r5
  402ca4:	bf28      	it	cs
  402ca6:	2306      	movcs	r3, #6
  402ca8:	930d      	str	r3, [sp, #52]	; 0x34
  402caa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402cae:	46b3      	mov	fp, r6
  402cb0:	970e      	str	r7, [sp, #56]	; 0x38
  402cb2:	9613      	str	r6, [sp, #76]	; 0x4c
  402cb4:	4637      	mov	r7, r6
  402cb6:	9308      	str	r3, [sp, #32]
  402cb8:	4e04      	ldr	r6, [pc, #16]	; (402ccc <_svfprintf_r+0x1468>)
  402cba:	f7fe bf99 	b.w	401bf0 <_svfprintf_r+0x38c>
  402cbe:	bf00      	nop
  402cc0:	00406a88 	.word	0x00406a88
  402cc4:	00406a38 	.word	0x00406a38
  402cc8:	66666667 	.word	0x66666667
  402ccc:	00406a80 	.word	0x00406a80
  402cd0:	aa23      	add	r2, sp, #140	; 0x8c
  402cd2:	9909      	ldr	r1, [sp, #36]	; 0x24
  402cd4:	980a      	ldr	r0, [sp, #40]	; 0x28
  402cd6:	f002 f841 	bl	404d5c <__ssprint_r>
  402cda:	2800      	cmp	r0, #0
  402cdc:	f47e aebb 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402ce0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402ce2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402ce4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402ce6:	1ad3      	subs	r3, r2, r3
  402ce8:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402cec:	e4e7      	b.n	4026be <_svfprintf_r+0xe5a>
  402cee:	f04f 0b06 	mov.w	fp, #6
  402cf2:	e58f      	b.n	402814 <_svfprintf_r+0xfb0>
  402cf4:	a821      	add	r0, sp, #132	; 0x84
  402cf6:	a91e      	add	r1, sp, #120	; 0x78
  402cf8:	9004      	str	r0, [sp, #16]
  402cfa:	9103      	str	r1, [sp, #12]
  402cfc:	a81d      	add	r0, sp, #116	; 0x74
  402cfe:	2103      	movs	r1, #3
  402d00:	9002      	str	r0, [sp, #8]
  402d02:	9a08      	ldr	r2, [sp, #32]
  402d04:	f8cd b004 	str.w	fp, [sp, #4]
  402d08:	463b      	mov	r3, r7
  402d0a:	9100      	str	r1, [sp, #0]
  402d0c:	980a      	ldr	r0, [sp, #40]	; 0x28
  402d0e:	f000 f99b 	bl	403048 <_dtoa_r>
  402d12:	465d      	mov	r5, fp
  402d14:	4606      	mov	r6, r0
  402d16:	eb00 040b 	add.w	r4, r0, fp
  402d1a:	e6f9      	b.n	402b10 <_svfprintf_r+0x12ac>
  402d1c:	9307      	str	r3, [sp, #28]
  402d1e:	f7ff b959 	b.w	401fd4 <_svfprintf_r+0x770>
  402d22:	272d      	movs	r7, #45	; 0x2d
  402d24:	f88d 706f 	strb.w	r7, [sp, #111]	; 0x6f
  402d28:	f7ff b8b2 	b.w	401e90 <_svfprintf_r+0x62c>
  402d2c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402d2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d30:	4413      	add	r3, r2
  402d32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402d34:	930d      	str	r3, [sp, #52]	; 0x34
  402d36:	2a00      	cmp	r2, #0
  402d38:	dd7e      	ble.n	402e38 <_svfprintf_r+0x15d4>
  402d3a:	2267      	movs	r2, #103	; 0x67
  402d3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d40:	9211      	str	r2, [sp, #68]	; 0x44
  402d42:	e5cc      	b.n	4028de <_svfprintf_r+0x107a>
  402d44:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
  402d48:	970e      	str	r7, [sp, #56]	; 0x38
  402d4a:	9308      	str	r3, [sp, #32]
  402d4c:	950d      	str	r5, [sp, #52]	; 0x34
  402d4e:	4683      	mov	fp, r0
  402d50:	9013      	str	r0, [sp, #76]	; 0x4c
  402d52:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402d56:	f7fe bf4b 	b.w	401bf0 <_svfprintf_r+0x38c>
  402d5a:	9b07      	ldr	r3, [sp, #28]
  402d5c:	07db      	lsls	r3, r3, #31
  402d5e:	465f      	mov	r7, fp
  402d60:	d505      	bpl.n	402d6e <_svfprintf_r+0x150a>
  402d62:	ae40      	add	r6, sp, #256	; 0x100
  402d64:	2330      	movs	r3, #48	; 0x30
  402d66:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402d6a:	f7fe bf37 	b.w	401bdc <_svfprintf_r+0x378>
  402d6e:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  402d72:	ae30      	add	r6, sp, #192	; 0xc0
  402d74:	f7fe bf35 	b.w	401be2 <_svfprintf_r+0x37e>
  402d78:	2b00      	cmp	r3, #0
  402d7a:	dd7d      	ble.n	402e78 <_svfprintf_r+0x1614>
  402d7c:	f1bb 0f00 	cmp.w	fp, #0
  402d80:	d13d      	bne.n	402dfe <_svfprintf_r+0x159a>
  402d82:	9a07      	ldr	r2, [sp, #28]
  402d84:	07d4      	lsls	r4, r2, #31
  402d86:	d43a      	bmi.n	402dfe <_svfprintf_r+0x159a>
  402d88:	461a      	mov	r2, r3
  402d8a:	920d      	str	r2, [sp, #52]	; 0x34
  402d8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d90:	e5a5      	b.n	4028de <_svfprintf_r+0x107a>
  402d92:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d94:	2b47      	cmp	r3, #71	; 0x47
  402d96:	f47f ad70 	bne.w	40287a <_svfprintf_r+0x1016>
  402d9a:	9b07      	ldr	r3, [sp, #28]
  402d9c:	07db      	lsls	r3, r3, #31
  402d9e:	f53f aeb1 	bmi.w	402b04 <_svfprintf_r+0x12a0>
  402da2:	9b21      	ldr	r3, [sp, #132]	; 0x84
  402da4:	1b9b      	subs	r3, r3, r6
  402da6:	9312      	str	r3, [sp, #72]	; 0x48
  402da8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402daa:	2b47      	cmp	r3, #71	; 0x47
  402dac:	f43f aef8 	beq.w	402ba0 <_svfprintf_r+0x133c>
  402db0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
  402db2:	e71a      	b.n	402bea <_svfprintf_r+0x1386>
  402db4:	aa23      	add	r2, sp, #140	; 0x8c
  402db6:	9909      	ldr	r1, [sp, #36]	; 0x24
  402db8:	980a      	ldr	r0, [sp, #40]	; 0x28
  402dba:	f001 ffcf 	bl	404d5c <__ssprint_r>
  402dbe:	2800      	cmp	r0, #0
  402dc0:	f47e ae49 	bne.w	401a56 <_svfprintf_r+0x1f2>
  402dc4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  402dc6:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402dc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  402dca:	f10d 09c0 	add.w	r9, sp, #192	; 0xc0
  402dce:	e631      	b.n	402a34 <_svfprintf_r+0x11d0>
  402dd0:	46a0      	mov	r8, r4
  402dd2:	2500      	movs	r5, #0
  402dd4:	f7fe bda1 	b.w	40191a <_svfprintf_r+0xb6>
  402dd8:	9b21      	ldr	r3, [sp, #132]	; 0x84
  402dda:	e562      	b.n	4028a2 <_svfprintf_r+0x103e>
  402ddc:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402dde:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402de0:	4413      	add	r3, r2
  402de2:	2267      	movs	r2, #103	; 0x67
  402de4:	930d      	str	r3, [sp, #52]	; 0x34
  402de6:	9211      	str	r2, [sp, #68]	; 0x44
  402de8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402dec:	e577      	b.n	4028de <_svfprintf_r+0x107a>
  402dee:	3330      	adds	r3, #48	; 0x30
  402df0:	2230      	movs	r2, #48	; 0x30
  402df2:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
  402df6:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
  402dfa:	ab20      	add	r3, sp, #128	; 0x80
  402dfc:	e731      	b.n	402c62 <_svfprintf_r+0x13fe>
  402dfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e00:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402e02:	189d      	adds	r5, r3, r2
  402e04:	eb05 030b 	add.w	r3, r5, fp
  402e08:	930d      	str	r3, [sp, #52]	; 0x34
  402e0a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402e0e:	e566      	b.n	4028de <_svfprintf_r+0x107a>
  402e10:	9808      	ldr	r0, [sp, #32]
  402e12:	4639      	mov	r1, r7
  402e14:	2200      	movs	r2, #0
  402e16:	2300      	movs	r3, #0
  402e18:	f003 f84c 	bl	405eb4 <__aeabi_dcmpeq>
  402e1c:	2800      	cmp	r0, #0
  402e1e:	f47f ae7b 	bne.w	402b18 <_svfprintf_r+0x12b4>
  402e22:	f1c5 0501 	rsb	r5, r5, #1
  402e26:	951d      	str	r5, [sp, #116]	; 0x74
  402e28:	442c      	add	r4, r5
  402e2a:	e527      	b.n	40287c <_svfprintf_r+0x1018>
  402e2c:	4e32      	ldr	r6, [pc, #200]	; (402ef8 <_svfprintf_r+0x1694>)
  402e2e:	4b33      	ldr	r3, [pc, #204]	; (402efc <_svfprintf_r+0x1698>)
  402e30:	f89d 706f 	ldrb.w	r7, [sp, #111]	; 0x6f
  402e34:	f7ff b82e 	b.w	401e94 <_svfprintf_r+0x630>
  402e38:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e3a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402e3c:	f1c3 0301 	rsb	r3, r3, #1
  402e40:	441a      	add	r2, r3
  402e42:	4613      	mov	r3, r2
  402e44:	920d      	str	r2, [sp, #52]	; 0x34
  402e46:	e778      	b.n	402d3a <_svfprintf_r+0x14d6>
  402e48:	9b07      	ldr	r3, [sp, #28]
  402e4a:	f013 0301 	ands.w	r3, r3, #1
  402e4e:	f47f af11 	bne.w	402c74 <_svfprintf_r+0x1410>
  402e52:	9313      	str	r3, [sp, #76]	; 0x4c
  402e54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402e56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402e5a:	e540      	b.n	4028de <_svfprintf_r+0x107a>
  402e5c:	980e      	ldr	r0, [sp, #56]	; 0x38
  402e5e:	f898 3001 	ldrb.w	r3, [r8, #1]
  402e62:	6805      	ldr	r5, [r0, #0]
  402e64:	3004      	adds	r0, #4
  402e66:	2d00      	cmp	r5, #0
  402e68:	900e      	str	r0, [sp, #56]	; 0x38
  402e6a:	46a0      	mov	r8, r4
  402e6c:	f6be ad53 	bge.w	401916 <_svfprintf_r+0xb2>
  402e70:	f04f 35ff 	mov.w	r5, #4294967295
  402e74:	f7fe bd4f 	b.w	401916 <_svfprintf_r+0xb2>
  402e78:	f1bb 0f00 	cmp.w	fp, #0
  402e7c:	d102      	bne.n	402e84 <_svfprintf_r+0x1620>
  402e7e:	9b07      	ldr	r3, [sp, #28]
  402e80:	07d8      	lsls	r0, r3, #31
  402e82:	d507      	bpl.n	402e94 <_svfprintf_r+0x1630>
  402e84:	9b16      	ldr	r3, [sp, #88]	; 0x58
  402e86:	1c5d      	adds	r5, r3, #1
  402e88:	eb05 030b 	add.w	r3, r5, fp
  402e8c:	930d      	str	r3, [sp, #52]	; 0x34
  402e8e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402e92:	e524      	b.n	4028de <_svfprintf_r+0x107a>
  402e94:	2301      	movs	r3, #1
  402e96:	930d      	str	r3, [sp, #52]	; 0x34
  402e98:	e521      	b.n	4028de <_svfprintf_r+0x107a>
  402e9a:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402e9e:	f7ff b921 	b.w	4020e4 <_svfprintf_r+0x880>
  402ea2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402ea4:	230c      	movs	r3, #12
  402ea6:	6013      	str	r3, [r2, #0]
  402ea8:	f04f 30ff 	mov.w	r0, #4294967295
  402eac:	f7fe bddc 	b.w	401a68 <_svfprintf_r+0x204>
  402eb0:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402eb4:	f7ff b8f9 	b.w	4020aa <_svfprintf_r+0x846>
  402eb8:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
  402ebc:	e6d1      	b.n	402c62 <_svfprintf_r+0x13fe>
  402ebe:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402ec2:	f7fe bdd9 	b.w	401a78 <_svfprintf_r+0x214>
  402ec6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402eca:	f7ff b857 	b.w	401f7c <_svfprintf_r+0x718>
  402ece:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402ed2:	f7ff b825 	b.w	401f20 <_svfprintf_r+0x6bc>
  402ed6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402eda:	f7ff b94c 	b.w	402176 <_svfprintf_r+0x912>
  402ede:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402ee2:	f7fe bff3 	b.w	401ecc <_svfprintf_r+0x668>
  402ee6:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402eea:	f7fe bfa3 	b.w	401e34 <_svfprintf_r+0x5d0>
  402eee:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
  402ef2:	f7fe be33 	b.w	401b5c <_svfprintf_r+0x2f8>
  402ef6:	bf00      	nop
  402ef8:	00406a54 	.word	0x00406a54
  402efc:	00406a50 	.word	0x00406a50

00402f00 <register_fini>:
  402f00:	4b02      	ldr	r3, [pc, #8]	; (402f0c <register_fini+0xc>)
  402f02:	b113      	cbz	r3, 402f0a <register_fini+0xa>
  402f04:	4802      	ldr	r0, [pc, #8]	; (402f10 <register_fini+0x10>)
  402f06:	f000 b805 	b.w	402f14 <atexit>
  402f0a:	4770      	bx	lr
  402f0c:	00000000 	.word	0x00000000
  402f10:	00403ea1 	.word	0x00403ea1

00402f14 <atexit>:
  402f14:	2300      	movs	r3, #0
  402f16:	4601      	mov	r1, r0
  402f18:	461a      	mov	r2, r3
  402f1a:	4618      	mov	r0, r3
  402f1c:	f001 bf9e 	b.w	404e5c <__register_exitproc>

00402f20 <quorem>:
  402f20:	6902      	ldr	r2, [r0, #16]
  402f22:	690b      	ldr	r3, [r1, #16]
  402f24:	4293      	cmp	r3, r2
  402f26:	f300 808d 	bgt.w	403044 <quorem+0x124>
  402f2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f2e:	f103 38ff 	add.w	r8, r3, #4294967295
  402f32:	f101 0714 	add.w	r7, r1, #20
  402f36:	f100 0b14 	add.w	fp, r0, #20
  402f3a:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402f3e:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402f42:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402f46:	b083      	sub	sp, #12
  402f48:	3201      	adds	r2, #1
  402f4a:	fbb3 f9f2 	udiv	r9, r3, r2
  402f4e:	eb0b 0304 	add.w	r3, fp, r4
  402f52:	9400      	str	r4, [sp, #0]
  402f54:	eb07 0a04 	add.w	sl, r7, r4
  402f58:	9301      	str	r3, [sp, #4]
  402f5a:	f1b9 0f00 	cmp.w	r9, #0
  402f5e:	d039      	beq.n	402fd4 <quorem+0xb4>
  402f60:	2500      	movs	r5, #0
  402f62:	46bc      	mov	ip, r7
  402f64:	46de      	mov	lr, fp
  402f66:	462b      	mov	r3, r5
  402f68:	f85c 6b04 	ldr.w	r6, [ip], #4
  402f6c:	f8de 2000 	ldr.w	r2, [lr]
  402f70:	b2b4      	uxth	r4, r6
  402f72:	fb09 5504 	mla	r5, r9, r4, r5
  402f76:	0c36      	lsrs	r6, r6, #16
  402f78:	0c2c      	lsrs	r4, r5, #16
  402f7a:	fb09 4406 	mla	r4, r9, r6, r4
  402f7e:	b2ad      	uxth	r5, r5
  402f80:	1b5b      	subs	r3, r3, r5
  402f82:	b2a6      	uxth	r6, r4
  402f84:	fa13 f382 	uxtah	r3, r3, r2
  402f88:	ebc6 4612 	rsb	r6, r6, r2, lsr #16
  402f8c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402f90:	b29b      	uxth	r3, r3
  402f92:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402f96:	45e2      	cmp	sl, ip
  402f98:	f84e 3b04 	str.w	r3, [lr], #4
  402f9c:	ea4f 4514 	mov.w	r5, r4, lsr #16
  402fa0:	ea4f 4326 	mov.w	r3, r6, asr #16
  402fa4:	d2e0      	bcs.n	402f68 <quorem+0x48>
  402fa6:	9b00      	ldr	r3, [sp, #0]
  402fa8:	f85b 3003 	ldr.w	r3, [fp, r3]
  402fac:	b993      	cbnz	r3, 402fd4 <quorem+0xb4>
  402fae:	9c01      	ldr	r4, [sp, #4]
  402fb0:	1f23      	subs	r3, r4, #4
  402fb2:	459b      	cmp	fp, r3
  402fb4:	d20c      	bcs.n	402fd0 <quorem+0xb0>
  402fb6:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402fba:	b94b      	cbnz	r3, 402fd0 <quorem+0xb0>
  402fbc:	f1a4 0308 	sub.w	r3, r4, #8
  402fc0:	e002      	b.n	402fc8 <quorem+0xa8>
  402fc2:	681a      	ldr	r2, [r3, #0]
  402fc4:	3b04      	subs	r3, #4
  402fc6:	b91a      	cbnz	r2, 402fd0 <quorem+0xb0>
  402fc8:	459b      	cmp	fp, r3
  402fca:	f108 38ff 	add.w	r8, r8, #4294967295
  402fce:	d3f8      	bcc.n	402fc2 <quorem+0xa2>
  402fd0:	f8c0 8010 	str.w	r8, [r0, #16]
  402fd4:	4604      	mov	r4, r0
  402fd6:	f001 fd29 	bl	404a2c <__mcmp>
  402fda:	2800      	cmp	r0, #0
  402fdc:	db2e      	blt.n	40303c <quorem+0x11c>
  402fde:	f109 0901 	add.w	r9, r9, #1
  402fe2:	465d      	mov	r5, fp
  402fe4:	2300      	movs	r3, #0
  402fe6:	f857 1b04 	ldr.w	r1, [r7], #4
  402fea:	6828      	ldr	r0, [r5, #0]
  402fec:	b28a      	uxth	r2, r1
  402fee:	1a9a      	subs	r2, r3, r2
  402ff0:	0c09      	lsrs	r1, r1, #16
  402ff2:	fa12 f280 	uxtah	r2, r2, r0
  402ff6:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
  402ffa:	eb03 4322 	add.w	r3, r3, r2, asr #16
  402ffe:	b291      	uxth	r1, r2
  403000:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
  403004:	45ba      	cmp	sl, r7
  403006:	f845 1b04 	str.w	r1, [r5], #4
  40300a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40300e:	d2ea      	bcs.n	402fe6 <quorem+0xc6>
  403010:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403014:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403018:	b982      	cbnz	r2, 40303c <quorem+0x11c>
  40301a:	1f1a      	subs	r2, r3, #4
  40301c:	4593      	cmp	fp, r2
  40301e:	d20b      	bcs.n	403038 <quorem+0x118>
  403020:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403024:	b942      	cbnz	r2, 403038 <quorem+0x118>
  403026:	3b08      	subs	r3, #8
  403028:	e002      	b.n	403030 <quorem+0x110>
  40302a:	681a      	ldr	r2, [r3, #0]
  40302c:	3b04      	subs	r3, #4
  40302e:	b91a      	cbnz	r2, 403038 <quorem+0x118>
  403030:	459b      	cmp	fp, r3
  403032:	f108 38ff 	add.w	r8, r8, #4294967295
  403036:	d3f8      	bcc.n	40302a <quorem+0x10a>
  403038:	f8c4 8010 	str.w	r8, [r4, #16]
  40303c:	4648      	mov	r0, r9
  40303e:	b003      	add	sp, #12
  403040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403044:	2000      	movs	r0, #0
  403046:	4770      	bx	lr

00403048 <_dtoa_r>:
  403048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40304c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40304e:	b097      	sub	sp, #92	; 0x5c
  403050:	4681      	mov	r9, r0
  403052:	9c23      	ldr	r4, [sp, #140]	; 0x8c
  403054:	4692      	mov	sl, r2
  403056:	469b      	mov	fp, r3
  403058:	b149      	cbz	r1, 40306e <_dtoa_r+0x26>
  40305a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40305c:	604a      	str	r2, [r1, #4]
  40305e:	2301      	movs	r3, #1
  403060:	4093      	lsls	r3, r2
  403062:	608b      	str	r3, [r1, #8]
  403064:	f001 fb00 	bl	404668 <_Bfree>
  403068:	2300      	movs	r3, #0
  40306a:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
  40306e:	f1bb 0f00 	cmp.w	fp, #0
  403072:	46d8      	mov	r8, fp
  403074:	db33      	blt.n	4030de <_dtoa_r+0x96>
  403076:	2300      	movs	r3, #0
  403078:	6023      	str	r3, [r4, #0]
  40307a:	4ba5      	ldr	r3, [pc, #660]	; (403310 <_dtoa_r+0x2c8>)
  40307c:	461a      	mov	r2, r3
  40307e:	ea08 0303 	and.w	r3, r8, r3
  403082:	4293      	cmp	r3, r2
  403084:	d014      	beq.n	4030b0 <_dtoa_r+0x68>
  403086:	4650      	mov	r0, sl
  403088:	4659      	mov	r1, fp
  40308a:	2200      	movs	r2, #0
  40308c:	2300      	movs	r3, #0
  40308e:	f002 ff11 	bl	405eb4 <__aeabi_dcmpeq>
  403092:	4605      	mov	r5, r0
  403094:	b348      	cbz	r0, 4030ea <_dtoa_r+0xa2>
  403096:	9a22      	ldr	r2, [sp, #136]	; 0x88
  403098:	2301      	movs	r3, #1
  40309a:	6013      	str	r3, [r2, #0]
  40309c:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40309e:	2b00      	cmp	r3, #0
  4030a0:	f000 80c5 	beq.w	40322e <_dtoa_r+0x1e6>
  4030a4:	489b      	ldr	r0, [pc, #620]	; (403314 <_dtoa_r+0x2cc>)
  4030a6:	6018      	str	r0, [r3, #0]
  4030a8:	3801      	subs	r0, #1
  4030aa:	b017      	add	sp, #92	; 0x5c
  4030ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4030b2:	f242 730f 	movw	r3, #9999	; 0x270f
  4030b6:	6013      	str	r3, [r2, #0]
  4030b8:	f1ba 0f00 	cmp.w	sl, #0
  4030bc:	f000 80a2 	beq.w	403204 <_dtoa_r+0x1bc>
  4030c0:	4895      	ldr	r0, [pc, #596]	; (403318 <_dtoa_r+0x2d0>)
  4030c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030c4:	2b00      	cmp	r3, #0
  4030c6:	d0f0      	beq.n	4030aa <_dtoa_r+0x62>
  4030c8:	78c3      	ldrb	r3, [r0, #3]
  4030ca:	2b00      	cmp	r3, #0
  4030cc:	f000 80b1 	beq.w	403232 <_dtoa_r+0x1ea>
  4030d0:	f100 0308 	add.w	r3, r0, #8
  4030d4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4030d6:	6013      	str	r3, [r2, #0]
  4030d8:	b017      	add	sp, #92	; 0x5c
  4030da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030de:	2301      	movs	r3, #1
  4030e0:	f02b 4800 	bic.w	r8, fp, #2147483648	; 0x80000000
  4030e4:	6023      	str	r3, [r4, #0]
  4030e6:	46c3      	mov	fp, r8
  4030e8:	e7c7      	b.n	40307a <_dtoa_r+0x32>
  4030ea:	aa14      	add	r2, sp, #80	; 0x50
  4030ec:	ab15      	add	r3, sp, #84	; 0x54
  4030ee:	9201      	str	r2, [sp, #4]
  4030f0:	9300      	str	r3, [sp, #0]
  4030f2:	4652      	mov	r2, sl
  4030f4:	465b      	mov	r3, fp
  4030f6:	4648      	mov	r0, r9
  4030f8:	f001 fd42 	bl	404b80 <__d2b>
  4030fc:	ea5f 5418 	movs.w	r4, r8, lsr #20
  403100:	9008      	str	r0, [sp, #32]
  403102:	f040 8088 	bne.w	403216 <_dtoa_r+0x1ce>
  403106:	9d14      	ldr	r5, [sp, #80]	; 0x50
  403108:	9c15      	ldr	r4, [sp, #84]	; 0x54
  40310a:	442c      	add	r4, r5
  40310c:	f204 4332 	addw	r3, r4, #1074	; 0x432
  403110:	2b20      	cmp	r3, #32
  403112:	f340 8291 	ble.w	403638 <_dtoa_r+0x5f0>
  403116:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40311a:	f204 4012 	addw	r0, r4, #1042	; 0x412
  40311e:	fa08 f803 	lsl.w	r8, r8, r3
  403122:	fa2a f000 	lsr.w	r0, sl, r0
  403126:	ea40 0008 	orr.w	r0, r0, r8
  40312a:	f002 fbe5 	bl	4058f8 <__aeabi_ui2d>
  40312e:	2301      	movs	r3, #1
  403130:	3c01      	subs	r4, #1
  403132:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403136:	9310      	str	r3, [sp, #64]	; 0x40
  403138:	2200      	movs	r2, #0
  40313a:	4b78      	ldr	r3, [pc, #480]	; (40331c <_dtoa_r+0x2d4>)
  40313c:	f002 fa9e 	bl	40567c <__aeabi_dsub>
  403140:	a36d      	add	r3, pc, #436	; (adr r3, 4032f8 <_dtoa_r+0x2b0>)
  403142:	e9d3 2300 	ldrd	r2, r3, [r3]
  403146:	f002 fc4d 	bl	4059e4 <__aeabi_dmul>
  40314a:	a36d      	add	r3, pc, #436	; (adr r3, 403300 <_dtoa_r+0x2b8>)
  40314c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403150:	f002 fa96 	bl	405680 <__adddf3>
  403154:	4606      	mov	r6, r0
  403156:	4620      	mov	r0, r4
  403158:	460f      	mov	r7, r1
  40315a:	f002 fbdd 	bl	405918 <__aeabi_i2d>
  40315e:	a36a      	add	r3, pc, #424	; (adr r3, 403308 <_dtoa_r+0x2c0>)
  403160:	e9d3 2300 	ldrd	r2, r3, [r3]
  403164:	f002 fc3e 	bl	4059e4 <__aeabi_dmul>
  403168:	4602      	mov	r2, r0
  40316a:	460b      	mov	r3, r1
  40316c:	4630      	mov	r0, r6
  40316e:	4639      	mov	r1, r7
  403170:	f002 fa86 	bl	405680 <__adddf3>
  403174:	4606      	mov	r6, r0
  403176:	460f      	mov	r7, r1
  403178:	f002 fee4 	bl	405f44 <__aeabi_d2iz>
  40317c:	2200      	movs	r2, #0
  40317e:	9004      	str	r0, [sp, #16]
  403180:	2300      	movs	r3, #0
  403182:	4630      	mov	r0, r6
  403184:	4639      	mov	r1, r7
  403186:	f002 fe9f 	bl	405ec8 <__aeabi_dcmplt>
  40318a:	2800      	cmp	r0, #0
  40318c:	f040 8230 	bne.w	4035f0 <_dtoa_r+0x5a8>
  403190:	9e04      	ldr	r6, [sp, #16]
  403192:	2e16      	cmp	r6, #22
  403194:	f200 8229 	bhi.w	4035ea <_dtoa_r+0x5a2>
  403198:	4b61      	ldr	r3, [pc, #388]	; (403320 <_dtoa_r+0x2d8>)
  40319a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  40319e:	e9d3 0100 	ldrd	r0, r1, [r3]
  4031a2:	4652      	mov	r2, sl
  4031a4:	465b      	mov	r3, fp
  4031a6:	f002 fead 	bl	405f04 <__aeabi_dcmpgt>
  4031aa:	2800      	cmp	r0, #0
  4031ac:	f000 8249 	beq.w	403642 <_dtoa_r+0x5fa>
  4031b0:	1e73      	subs	r3, r6, #1
  4031b2:	9304      	str	r3, [sp, #16]
  4031b4:	2300      	movs	r3, #0
  4031b6:	930c      	str	r3, [sp, #48]	; 0x30
  4031b8:	1b2c      	subs	r4, r5, r4
  4031ba:	1e63      	subs	r3, r4, #1
  4031bc:	9302      	str	r3, [sp, #8]
  4031be:	f100 8232 	bmi.w	403626 <_dtoa_r+0x5de>
  4031c2:	2300      	movs	r3, #0
  4031c4:	9305      	str	r3, [sp, #20]
  4031c6:	9b04      	ldr	r3, [sp, #16]
  4031c8:	2b00      	cmp	r3, #0
  4031ca:	f2c0 8223 	blt.w	403614 <_dtoa_r+0x5cc>
  4031ce:	9a02      	ldr	r2, [sp, #8]
  4031d0:	930b      	str	r3, [sp, #44]	; 0x2c
  4031d2:	4611      	mov	r1, r2
  4031d4:	4419      	add	r1, r3
  4031d6:	2300      	movs	r3, #0
  4031d8:	9102      	str	r1, [sp, #8]
  4031da:	930a      	str	r3, [sp, #40]	; 0x28
  4031dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4031de:	2b09      	cmp	r3, #9
  4031e0:	d829      	bhi.n	403236 <_dtoa_r+0x1ee>
  4031e2:	2b05      	cmp	r3, #5
  4031e4:	f340 8658 	ble.w	403e98 <_dtoa_r+0xe50>
  4031e8:	3b04      	subs	r3, #4
  4031ea:	9320      	str	r3, [sp, #128]	; 0x80
  4031ec:	2500      	movs	r5, #0
  4031ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4031f0:	3b02      	subs	r3, #2
  4031f2:	2b03      	cmp	r3, #3
  4031f4:	f200 8635 	bhi.w	403e62 <_dtoa_r+0xe1a>
  4031f8:	e8df f013 	tbh	[pc, r3, lsl #1]
  4031fc:	0228032c 	.word	0x0228032c
  403200:	04590337 	.word	0x04590337
  403204:	4b44      	ldr	r3, [pc, #272]	; (403318 <_dtoa_r+0x2d0>)
  403206:	4a47      	ldr	r2, [pc, #284]	; (403324 <_dtoa_r+0x2dc>)
  403208:	f3c8 0013 	ubfx	r0, r8, #0, #20
  40320c:	2800      	cmp	r0, #0
  40320e:	bf14      	ite	ne
  403210:	4618      	movne	r0, r3
  403212:	4610      	moveq	r0, r2
  403214:	e755      	b.n	4030c2 <_dtoa_r+0x7a>
  403216:	f3cb 0313 	ubfx	r3, fp, #0, #20
  40321a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  40321e:	9510      	str	r5, [sp, #64]	; 0x40
  403220:	4650      	mov	r0, sl
  403222:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
  403226:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40322a:	9d14      	ldr	r5, [sp, #80]	; 0x50
  40322c:	e784      	b.n	403138 <_dtoa_r+0xf0>
  40322e:	483e      	ldr	r0, [pc, #248]	; (403328 <_dtoa_r+0x2e0>)
  403230:	e73b      	b.n	4030aa <_dtoa_r+0x62>
  403232:	1cc3      	adds	r3, r0, #3
  403234:	e74e      	b.n	4030d4 <_dtoa_r+0x8c>
  403236:	2100      	movs	r1, #0
  403238:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  40323c:	4648      	mov	r0, r9
  40323e:	9120      	str	r1, [sp, #128]	; 0x80
  403240:	f001 f9ec 	bl	40461c <_Balloc>
  403244:	f04f 33ff 	mov.w	r3, #4294967295
  403248:	9306      	str	r3, [sp, #24]
  40324a:	9a20      	ldr	r2, [sp, #128]	; 0x80
  40324c:	930d      	str	r3, [sp, #52]	; 0x34
  40324e:	2301      	movs	r3, #1
  403250:	9007      	str	r0, [sp, #28]
  403252:	9221      	str	r2, [sp, #132]	; 0x84
  403254:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  403258:	9309      	str	r3, [sp, #36]	; 0x24
  40325a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40325c:	2b00      	cmp	r3, #0
  40325e:	f2c0 80d1 	blt.w	403404 <_dtoa_r+0x3bc>
  403262:	9a04      	ldr	r2, [sp, #16]
  403264:	2a0e      	cmp	r2, #14
  403266:	f300 80cd 	bgt.w	403404 <_dtoa_r+0x3bc>
  40326a:	4b2d      	ldr	r3, [pc, #180]	; (403320 <_dtoa_r+0x2d8>)
  40326c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403270:	e9d3 3400 	ldrd	r3, r4, [r3]
  403274:	e9cd 3402 	strd	r3, r4, [sp, #8]
  403278:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40327a:	2b00      	cmp	r3, #0
  40327c:	f2c0 8300 	blt.w	403880 <_dtoa_r+0x838>
  403280:	4656      	mov	r6, sl
  403282:	465f      	mov	r7, fp
  403284:	4650      	mov	r0, sl
  403286:	4659      	mov	r1, fp
  403288:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
  40328c:	4652      	mov	r2, sl
  40328e:	465b      	mov	r3, fp
  403290:	f002 fcd2 	bl	405c38 <__aeabi_ddiv>
  403294:	f002 fe56 	bl	405f44 <__aeabi_d2iz>
  403298:	4604      	mov	r4, r0
  40329a:	f002 fb3d 	bl	405918 <__aeabi_i2d>
  40329e:	4652      	mov	r2, sl
  4032a0:	465b      	mov	r3, fp
  4032a2:	f002 fb9f 	bl	4059e4 <__aeabi_dmul>
  4032a6:	460b      	mov	r3, r1
  4032a8:	4602      	mov	r2, r0
  4032aa:	4639      	mov	r1, r7
  4032ac:	4630      	mov	r0, r6
  4032ae:	f002 f9e5 	bl	40567c <__aeabi_dsub>
  4032b2:	9d07      	ldr	r5, [sp, #28]
  4032b4:	f104 0330 	add.w	r3, r4, #48	; 0x30
  4032b8:	702b      	strb	r3, [r5, #0]
  4032ba:	9b06      	ldr	r3, [sp, #24]
  4032bc:	2b01      	cmp	r3, #1
  4032be:	4606      	mov	r6, r0
  4032c0:	460f      	mov	r7, r1
  4032c2:	f105 0501 	add.w	r5, r5, #1
  4032c6:	d062      	beq.n	40338e <_dtoa_r+0x346>
  4032c8:	2200      	movs	r2, #0
  4032ca:	4b18      	ldr	r3, [pc, #96]	; (40332c <_dtoa_r+0x2e4>)
  4032cc:	f002 fb8a 	bl	4059e4 <__aeabi_dmul>
  4032d0:	2200      	movs	r2, #0
  4032d2:	2300      	movs	r3, #0
  4032d4:	4606      	mov	r6, r0
  4032d6:	460f      	mov	r7, r1
  4032d8:	f002 fdec 	bl	405eb4 <__aeabi_dcmpeq>
  4032dc:	2800      	cmp	r0, #0
  4032de:	d17e      	bne.n	4033de <_dtoa_r+0x396>
  4032e0:	f8cd 9014 	str.w	r9, [sp, #20]
  4032e4:	f8dd a018 	ldr.w	sl, [sp, #24]
  4032e8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4032ec:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
  4032f0:	e029      	b.n	403346 <_dtoa_r+0x2fe>
  4032f2:	bf00      	nop
  4032f4:	f3af 8000 	nop.w
  4032f8:	636f4361 	.word	0x636f4361
  4032fc:	3fd287a7 	.word	0x3fd287a7
  403300:	8b60c8b3 	.word	0x8b60c8b3
  403304:	3fc68a28 	.word	0x3fc68a28
  403308:	509f79fb 	.word	0x509f79fb
  40330c:	3fd34413 	.word	0x3fd34413
  403310:	7ff00000 	.word	0x7ff00000
  403314:	00406a89 	.word	0x00406a89
  403318:	00406aa8 	.word	0x00406aa8
  40331c:	3ff80000 	.word	0x3ff80000
  403320:	00406ab8 	.word	0x00406ab8
  403324:	00406a9c 	.word	0x00406a9c
  403328:	00406a88 	.word	0x00406a88
  40332c:	40240000 	.word	0x40240000
  403330:	f002 fb58 	bl	4059e4 <__aeabi_dmul>
  403334:	2200      	movs	r2, #0
  403336:	2300      	movs	r3, #0
  403338:	4606      	mov	r6, r0
  40333a:	460f      	mov	r7, r1
  40333c:	f002 fdba 	bl	405eb4 <__aeabi_dcmpeq>
  403340:	2800      	cmp	r0, #0
  403342:	f040 83b7 	bne.w	403ab4 <_dtoa_r+0xa6c>
  403346:	4642      	mov	r2, r8
  403348:	464b      	mov	r3, r9
  40334a:	4630      	mov	r0, r6
  40334c:	4639      	mov	r1, r7
  40334e:	f002 fc73 	bl	405c38 <__aeabi_ddiv>
  403352:	f002 fdf7 	bl	405f44 <__aeabi_d2iz>
  403356:	4604      	mov	r4, r0
  403358:	f002 fade 	bl	405918 <__aeabi_i2d>
  40335c:	4642      	mov	r2, r8
  40335e:	464b      	mov	r3, r9
  403360:	f002 fb40 	bl	4059e4 <__aeabi_dmul>
  403364:	4602      	mov	r2, r0
  403366:	460b      	mov	r3, r1
  403368:	4630      	mov	r0, r6
  40336a:	4639      	mov	r1, r7
  40336c:	f002 f986 	bl	40567c <__aeabi_dsub>
  403370:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403374:	f805 eb01 	strb.w	lr, [r5], #1
  403378:	ebcb 0e05 	rsb	lr, fp, r5
  40337c:	45d6      	cmp	lr, sl
  40337e:	4606      	mov	r6, r0
  403380:	460f      	mov	r7, r1
  403382:	f04f 0200 	mov.w	r2, #0
  403386:	4bb0      	ldr	r3, [pc, #704]	; (403648 <_dtoa_r+0x600>)
  403388:	d1d2      	bne.n	403330 <_dtoa_r+0x2e8>
  40338a:	f8dd 9014 	ldr.w	r9, [sp, #20]
  40338e:	4632      	mov	r2, r6
  403390:	463b      	mov	r3, r7
  403392:	4630      	mov	r0, r6
  403394:	4639      	mov	r1, r7
  403396:	f002 f973 	bl	405680 <__adddf3>
  40339a:	4606      	mov	r6, r0
  40339c:	460f      	mov	r7, r1
  40339e:	4602      	mov	r2, r0
  4033a0:	460b      	mov	r3, r1
  4033a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4033a6:	f002 fd8f 	bl	405ec8 <__aeabi_dcmplt>
  4033aa:	b940      	cbnz	r0, 4033be <_dtoa_r+0x376>
  4033ac:	4632      	mov	r2, r6
  4033ae:	463b      	mov	r3, r7
  4033b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4033b4:	f002 fd7e 	bl	405eb4 <__aeabi_dcmpeq>
  4033b8:	b188      	cbz	r0, 4033de <_dtoa_r+0x396>
  4033ba:	07e3      	lsls	r3, r4, #31
  4033bc:	d50f      	bpl.n	4033de <_dtoa_r+0x396>
  4033be:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  4033c2:	9a07      	ldr	r2, [sp, #28]
  4033c4:	1e6b      	subs	r3, r5, #1
  4033c6:	e004      	b.n	4033d2 <_dtoa_r+0x38a>
  4033c8:	429a      	cmp	r2, r3
  4033ca:	f000 842c 	beq.w	403c26 <_dtoa_r+0xbde>
  4033ce:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4033d2:	2c39      	cmp	r4, #57	; 0x39
  4033d4:	f103 0501 	add.w	r5, r3, #1
  4033d8:	d0f6      	beq.n	4033c8 <_dtoa_r+0x380>
  4033da:	3401      	adds	r4, #1
  4033dc:	701c      	strb	r4, [r3, #0]
  4033de:	9908      	ldr	r1, [sp, #32]
  4033e0:	4648      	mov	r0, r9
  4033e2:	f001 f941 	bl	404668 <_Bfree>
  4033e6:	2200      	movs	r2, #0
  4033e8:	9b04      	ldr	r3, [sp, #16]
  4033ea:	702a      	strb	r2, [r5, #0]
  4033ec:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4033ee:	3301      	adds	r3, #1
  4033f0:	6013      	str	r3, [r2, #0]
  4033f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033f4:	2b00      	cmp	r3, #0
  4033f6:	f000 83a7 	beq.w	403b48 <_dtoa_r+0xb00>
  4033fa:	9807      	ldr	r0, [sp, #28]
  4033fc:	601d      	str	r5, [r3, #0]
  4033fe:	b017      	add	sp, #92	; 0x5c
  403400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403404:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403406:	2a00      	cmp	r2, #0
  403408:	f000 8112 	beq.w	403630 <_dtoa_r+0x5e8>
  40340c:	9a20      	ldr	r2, [sp, #128]	; 0x80
  40340e:	2a01      	cmp	r2, #1
  403410:	f340 8258 	ble.w	4038c4 <_dtoa_r+0x87c>
  403414:	9b06      	ldr	r3, [sp, #24]
  403416:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403418:	1e5f      	subs	r7, r3, #1
  40341a:	42ba      	cmp	r2, r7
  40341c:	f2c0 8397 	blt.w	403b4e <_dtoa_r+0xb06>
  403420:	1bd7      	subs	r7, r2, r7
  403422:	9b06      	ldr	r3, [sp, #24]
  403424:	2b00      	cmp	r3, #0
  403426:	f2c0 848a 	blt.w	403d3e <_dtoa_r+0xcf6>
  40342a:	9d05      	ldr	r5, [sp, #20]
  40342c:	9b06      	ldr	r3, [sp, #24]
  40342e:	9a05      	ldr	r2, [sp, #20]
  403430:	441a      	add	r2, r3
  403432:	9205      	str	r2, [sp, #20]
  403434:	9a02      	ldr	r2, [sp, #8]
  403436:	2101      	movs	r1, #1
  403438:	441a      	add	r2, r3
  40343a:	4648      	mov	r0, r9
  40343c:	9202      	str	r2, [sp, #8]
  40343e:	f001 f9ab 	bl	404798 <__i2b>
  403442:	4606      	mov	r6, r0
  403444:	b165      	cbz	r5, 403460 <_dtoa_r+0x418>
  403446:	9902      	ldr	r1, [sp, #8]
  403448:	2900      	cmp	r1, #0
  40344a:	460b      	mov	r3, r1
  40344c:	dd08      	ble.n	403460 <_dtoa_r+0x418>
  40344e:	42a9      	cmp	r1, r5
  403450:	9a05      	ldr	r2, [sp, #20]
  403452:	bfa8      	it	ge
  403454:	462b      	movge	r3, r5
  403456:	1ad2      	subs	r2, r2, r3
  403458:	1aed      	subs	r5, r5, r3
  40345a:	1acb      	subs	r3, r1, r3
  40345c:	9205      	str	r2, [sp, #20]
  40345e:	9302      	str	r3, [sp, #8]
  403460:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403462:	2b00      	cmp	r3, #0
  403464:	f340 82fc 	ble.w	403a60 <_dtoa_r+0xa18>
  403468:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40346a:	2a00      	cmp	r2, #0
  40346c:	f000 8201 	beq.w	403872 <_dtoa_r+0x82a>
  403470:	2f00      	cmp	r7, #0
  403472:	f000 81fe 	beq.w	403872 <_dtoa_r+0x82a>
  403476:	4631      	mov	r1, r6
  403478:	463a      	mov	r2, r7
  40347a:	4648      	mov	r0, r9
  40347c:	f001 fa2e 	bl	4048dc <__pow5mult>
  403480:	f8dd 8020 	ldr.w	r8, [sp, #32]
  403484:	4601      	mov	r1, r0
  403486:	4642      	mov	r2, r8
  403488:	4606      	mov	r6, r0
  40348a:	4648      	mov	r0, r9
  40348c:	f001 f98e 	bl	4047ac <__multiply>
  403490:	4641      	mov	r1, r8
  403492:	4604      	mov	r4, r0
  403494:	4648      	mov	r0, r9
  403496:	f001 f8e7 	bl	404668 <_Bfree>
  40349a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40349c:	1bdb      	subs	r3, r3, r7
  40349e:	930a      	str	r3, [sp, #40]	; 0x28
  4034a0:	f040 81e6 	bne.w	403870 <_dtoa_r+0x828>
  4034a4:	2101      	movs	r1, #1
  4034a6:	4648      	mov	r0, r9
  4034a8:	f001 f976 	bl	404798 <__i2b>
  4034ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4034ae:	4680      	mov	r8, r0
  4034b0:	2b00      	cmp	r3, #0
  4034b2:	f000 8219 	beq.w	4038e8 <_dtoa_r+0x8a0>
  4034b6:	4601      	mov	r1, r0
  4034b8:	461a      	mov	r2, r3
  4034ba:	4648      	mov	r0, r9
  4034bc:	f001 fa0e 	bl	4048dc <__pow5mult>
  4034c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4034c2:	2b01      	cmp	r3, #1
  4034c4:	4680      	mov	r8, r0
  4034c6:	f340 82f8 	ble.w	403aba <_dtoa_r+0xa72>
  4034ca:	2700      	movs	r7, #0
  4034cc:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4034d0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4034d4:	6918      	ldr	r0, [r3, #16]
  4034d6:	f001 f911 	bl	4046fc <__hi0bits>
  4034da:	f1c0 0020 	rsb	r0, r0, #32
  4034de:	9a02      	ldr	r2, [sp, #8]
  4034e0:	4410      	add	r0, r2
  4034e2:	f010 001f 	ands.w	r0, r0, #31
  4034e6:	f000 81f6 	beq.w	4038d6 <_dtoa_r+0x88e>
  4034ea:	f1c0 0320 	rsb	r3, r0, #32
  4034ee:	2b04      	cmp	r3, #4
  4034f0:	f340 84ca 	ble.w	403e88 <_dtoa_r+0xe40>
  4034f4:	9b05      	ldr	r3, [sp, #20]
  4034f6:	f1c0 001c 	rsb	r0, r0, #28
  4034fa:	4403      	add	r3, r0
  4034fc:	9305      	str	r3, [sp, #20]
  4034fe:	4613      	mov	r3, r2
  403500:	4403      	add	r3, r0
  403502:	4405      	add	r5, r0
  403504:	9302      	str	r3, [sp, #8]
  403506:	9b05      	ldr	r3, [sp, #20]
  403508:	2b00      	cmp	r3, #0
  40350a:	dd05      	ble.n	403518 <_dtoa_r+0x4d0>
  40350c:	4621      	mov	r1, r4
  40350e:	461a      	mov	r2, r3
  403510:	4648      	mov	r0, r9
  403512:	f001 fa33 	bl	40497c <__lshift>
  403516:	4604      	mov	r4, r0
  403518:	9b02      	ldr	r3, [sp, #8]
  40351a:	2b00      	cmp	r3, #0
  40351c:	dd05      	ble.n	40352a <_dtoa_r+0x4e2>
  40351e:	4641      	mov	r1, r8
  403520:	461a      	mov	r2, r3
  403522:	4648      	mov	r0, r9
  403524:	f001 fa2a 	bl	40497c <__lshift>
  403528:	4680      	mov	r8, r0
  40352a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40352c:	2b00      	cmp	r3, #0
  40352e:	f040 827c 	bne.w	403a2a <_dtoa_r+0x9e2>
  403532:	9b06      	ldr	r3, [sp, #24]
  403534:	2b00      	cmp	r3, #0
  403536:	f340 8295 	ble.w	403a64 <_dtoa_r+0xa1c>
  40353a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40353c:	2b00      	cmp	r3, #0
  40353e:	f040 81f5 	bne.w	40392c <_dtoa_r+0x8e4>
  403542:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403546:	9f06      	ldr	r7, [sp, #24]
  403548:	465d      	mov	r5, fp
  40354a:	e002      	b.n	403552 <_dtoa_r+0x50a>
  40354c:	f001 f896 	bl	40467c <__multadd>
  403550:	4604      	mov	r4, r0
  403552:	4641      	mov	r1, r8
  403554:	4620      	mov	r0, r4
  403556:	f7ff fce3 	bl	402f20 <quorem>
  40355a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40355e:	f805 ab01 	strb.w	sl, [r5], #1
  403562:	ebcb 0305 	rsb	r3, fp, r5
  403566:	42bb      	cmp	r3, r7
  403568:	f04f 020a 	mov.w	r2, #10
  40356c:	f04f 0300 	mov.w	r3, #0
  403570:	4621      	mov	r1, r4
  403572:	4648      	mov	r0, r9
  403574:	dbea      	blt.n	40354c <_dtoa_r+0x504>
  403576:	9b07      	ldr	r3, [sp, #28]
  403578:	9a06      	ldr	r2, [sp, #24]
  40357a:	2a01      	cmp	r2, #1
  40357c:	bfac      	ite	ge
  40357e:	189b      	addge	r3, r3, r2
  403580:	3301      	addlt	r3, #1
  403582:	461d      	mov	r5, r3
  403584:	f04f 0b00 	mov.w	fp, #0
  403588:	4621      	mov	r1, r4
  40358a:	2201      	movs	r2, #1
  40358c:	4648      	mov	r0, r9
  40358e:	f001 f9f5 	bl	40497c <__lshift>
  403592:	4641      	mov	r1, r8
  403594:	9008      	str	r0, [sp, #32]
  403596:	f001 fa49 	bl	404a2c <__mcmp>
  40359a:	2800      	cmp	r0, #0
  40359c:	f340 830d 	ble.w	403bba <_dtoa_r+0xb72>
  4035a0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4035a4:	9907      	ldr	r1, [sp, #28]
  4035a6:	1e6b      	subs	r3, r5, #1
  4035a8:	e004      	b.n	4035b4 <_dtoa_r+0x56c>
  4035aa:	428b      	cmp	r3, r1
  4035ac:	f000 8278 	beq.w	403aa0 <_dtoa_r+0xa58>
  4035b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4035b4:	2a39      	cmp	r2, #57	; 0x39
  4035b6:	f103 0501 	add.w	r5, r3, #1
  4035ba:	d0f6      	beq.n	4035aa <_dtoa_r+0x562>
  4035bc:	3201      	adds	r2, #1
  4035be:	701a      	strb	r2, [r3, #0]
  4035c0:	4641      	mov	r1, r8
  4035c2:	4648      	mov	r0, r9
  4035c4:	f001 f850 	bl	404668 <_Bfree>
  4035c8:	2e00      	cmp	r6, #0
  4035ca:	f43f af08 	beq.w	4033de <_dtoa_r+0x396>
  4035ce:	f1bb 0f00 	cmp.w	fp, #0
  4035d2:	d005      	beq.n	4035e0 <_dtoa_r+0x598>
  4035d4:	45b3      	cmp	fp, r6
  4035d6:	d003      	beq.n	4035e0 <_dtoa_r+0x598>
  4035d8:	4659      	mov	r1, fp
  4035da:	4648      	mov	r0, r9
  4035dc:	f001 f844 	bl	404668 <_Bfree>
  4035e0:	4631      	mov	r1, r6
  4035e2:	4648      	mov	r0, r9
  4035e4:	f001 f840 	bl	404668 <_Bfree>
  4035e8:	e6f9      	b.n	4033de <_dtoa_r+0x396>
  4035ea:	2301      	movs	r3, #1
  4035ec:	930c      	str	r3, [sp, #48]	; 0x30
  4035ee:	e5e3      	b.n	4031b8 <_dtoa_r+0x170>
  4035f0:	f8dd 8010 	ldr.w	r8, [sp, #16]
  4035f4:	4640      	mov	r0, r8
  4035f6:	f002 f98f 	bl	405918 <__aeabi_i2d>
  4035fa:	4602      	mov	r2, r0
  4035fc:	460b      	mov	r3, r1
  4035fe:	4630      	mov	r0, r6
  403600:	4639      	mov	r1, r7
  403602:	f002 fc57 	bl	405eb4 <__aeabi_dcmpeq>
  403606:	2800      	cmp	r0, #0
  403608:	f47f adc2 	bne.w	403190 <_dtoa_r+0x148>
  40360c:	f108 33ff 	add.w	r3, r8, #4294967295
  403610:	9304      	str	r3, [sp, #16]
  403612:	e5bd      	b.n	403190 <_dtoa_r+0x148>
  403614:	9a05      	ldr	r2, [sp, #20]
  403616:	9b04      	ldr	r3, [sp, #16]
  403618:	1ad2      	subs	r2, r2, r3
  40361a:	425b      	negs	r3, r3
  40361c:	930a      	str	r3, [sp, #40]	; 0x28
  40361e:	2300      	movs	r3, #0
  403620:	9205      	str	r2, [sp, #20]
  403622:	930b      	str	r3, [sp, #44]	; 0x2c
  403624:	e5da      	b.n	4031dc <_dtoa_r+0x194>
  403626:	425b      	negs	r3, r3
  403628:	9305      	str	r3, [sp, #20]
  40362a:	2300      	movs	r3, #0
  40362c:	9302      	str	r3, [sp, #8]
  40362e:	e5ca      	b.n	4031c6 <_dtoa_r+0x17e>
  403630:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403632:	9d05      	ldr	r5, [sp, #20]
  403634:	9e09      	ldr	r6, [sp, #36]	; 0x24
  403636:	e705      	b.n	403444 <_dtoa_r+0x3fc>
  403638:	f1c3 0820 	rsb	r8, r3, #32
  40363c:	fa0a f008 	lsl.w	r0, sl, r8
  403640:	e573      	b.n	40312a <_dtoa_r+0xe2>
  403642:	900c      	str	r0, [sp, #48]	; 0x30
  403644:	e5b8      	b.n	4031b8 <_dtoa_r+0x170>
  403646:	bf00      	nop
  403648:	40240000 	.word	0x40240000
  40364c:	2300      	movs	r3, #0
  40364e:	9309      	str	r3, [sp, #36]	; 0x24
  403650:	9b04      	ldr	r3, [sp, #16]
  403652:	9a21      	ldr	r2, [sp, #132]	; 0x84
  403654:	4413      	add	r3, r2
  403656:	930d      	str	r3, [sp, #52]	; 0x34
  403658:	3301      	adds	r3, #1
  40365a:	2b00      	cmp	r3, #0
  40365c:	9306      	str	r3, [sp, #24]
  40365e:	f340 8283 	ble.w	403b68 <_dtoa_r+0xb20>
  403662:	9c06      	ldr	r4, [sp, #24]
  403664:	4626      	mov	r6, r4
  403666:	2100      	movs	r1, #0
  403668:	2e17      	cmp	r6, #23
  40366a:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  40366e:	d90b      	bls.n	403688 <_dtoa_r+0x640>
  403670:	2201      	movs	r2, #1
  403672:	2304      	movs	r3, #4
  403674:	005b      	lsls	r3, r3, #1
  403676:	f103 0014 	add.w	r0, r3, #20
  40367a:	42b0      	cmp	r0, r6
  40367c:	4611      	mov	r1, r2
  40367e:	f102 0201 	add.w	r2, r2, #1
  403682:	d9f7      	bls.n	403674 <_dtoa_r+0x62c>
  403684:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  403688:	4648      	mov	r0, r9
  40368a:	f000 ffc7 	bl	40461c <_Balloc>
  40368e:	2c0e      	cmp	r4, #14
  403690:	9007      	str	r0, [sp, #28]
  403692:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  403696:	f63f ade0 	bhi.w	40325a <_dtoa_r+0x212>
  40369a:	2d00      	cmp	r5, #0
  40369c:	f43f addd 	beq.w	40325a <_dtoa_r+0x212>
  4036a0:	9904      	ldr	r1, [sp, #16]
  4036a2:	4657      	mov	r7, sl
  4036a4:	46d8      	mov	r8, fp
  4036a6:	2900      	cmp	r1, #0
  4036a8:	e9cd 780e 	strd	r7, r8, [sp, #56]	; 0x38
  4036ac:	f340 8292 	ble.w	403bd4 <_dtoa_r+0xb8c>
  4036b0:	4b91      	ldr	r3, [pc, #580]	; (4038f8 <_dtoa_r+0x8b0>)
  4036b2:	f001 020f 	and.w	r2, r1, #15
  4036b6:	110e      	asrs	r6, r1, #4
  4036b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4036bc:	06f0      	lsls	r0, r6, #27
  4036be:	e9d3 4500 	ldrd	r4, r5, [r3]
  4036c2:	f140 824c 	bpl.w	403b5e <_dtoa_r+0xb16>
  4036c6:	4b8d      	ldr	r3, [pc, #564]	; (4038fc <_dtoa_r+0x8b4>)
  4036c8:	4650      	mov	r0, sl
  4036ca:	4659      	mov	r1, fp
  4036cc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4036d0:	f002 fab2 	bl	405c38 <__aeabi_ddiv>
  4036d4:	f006 060f 	and.w	r6, r6, #15
  4036d8:	4682      	mov	sl, r0
  4036da:	468b      	mov	fp, r1
  4036dc:	f04f 0803 	mov.w	r8, #3
  4036e0:	b186      	cbz	r6, 403704 <_dtoa_r+0x6bc>
  4036e2:	4f86      	ldr	r7, [pc, #536]	; (4038fc <_dtoa_r+0x8b4>)
  4036e4:	07f1      	lsls	r1, r6, #31
  4036e6:	d509      	bpl.n	4036fc <_dtoa_r+0x6b4>
  4036e8:	4620      	mov	r0, r4
  4036ea:	4629      	mov	r1, r5
  4036ec:	e9d7 2300 	ldrd	r2, r3, [r7]
  4036f0:	f002 f978 	bl	4059e4 <__aeabi_dmul>
  4036f4:	f108 0801 	add.w	r8, r8, #1
  4036f8:	4604      	mov	r4, r0
  4036fa:	460d      	mov	r5, r1
  4036fc:	1076      	asrs	r6, r6, #1
  4036fe:	f107 0708 	add.w	r7, r7, #8
  403702:	d1ef      	bne.n	4036e4 <_dtoa_r+0x69c>
  403704:	4622      	mov	r2, r4
  403706:	462b      	mov	r3, r5
  403708:	4650      	mov	r0, sl
  40370a:	4659      	mov	r1, fp
  40370c:	f002 fa94 	bl	405c38 <__aeabi_ddiv>
  403710:	4606      	mov	r6, r0
  403712:	460f      	mov	r7, r1
  403714:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403716:	b143      	cbz	r3, 40372a <_dtoa_r+0x6e2>
  403718:	2200      	movs	r2, #0
  40371a:	4b79      	ldr	r3, [pc, #484]	; (403900 <_dtoa_r+0x8b8>)
  40371c:	4630      	mov	r0, r6
  40371e:	4639      	mov	r1, r7
  403720:	f002 fbd2 	bl	405ec8 <__aeabi_dcmplt>
  403724:	2800      	cmp	r0, #0
  403726:	f040 8320 	bne.w	403d6a <_dtoa_r+0xd22>
  40372a:	4640      	mov	r0, r8
  40372c:	f002 f8f4 	bl	405918 <__aeabi_i2d>
  403730:	4632      	mov	r2, r6
  403732:	463b      	mov	r3, r7
  403734:	f002 f956 	bl	4059e4 <__aeabi_dmul>
  403738:	4b72      	ldr	r3, [pc, #456]	; (403904 <_dtoa_r+0x8bc>)
  40373a:	2200      	movs	r2, #0
  40373c:	f001 ffa0 	bl	405680 <__adddf3>
  403740:	9b06      	ldr	r3, [sp, #24]
  403742:	4604      	mov	r4, r0
  403744:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  403748:	2b00      	cmp	r3, #0
  40374a:	f000 81df 	beq.w	403b0c <_dtoa_r+0xac4>
  40374e:	9b04      	ldr	r3, [sp, #16]
  403750:	f8dd 8018 	ldr.w	r8, [sp, #24]
  403754:	9311      	str	r3, [sp, #68]	; 0x44
  403756:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403758:	2b00      	cmp	r3, #0
  40375a:	f000 8297 	beq.w	403c8c <_dtoa_r+0xc44>
  40375e:	4b66      	ldr	r3, [pc, #408]	; (4038f8 <_dtoa_r+0x8b0>)
  403760:	4969      	ldr	r1, [pc, #420]	; (403908 <_dtoa_r+0x8c0>)
  403762:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
  403766:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40376a:	2000      	movs	r0, #0
  40376c:	f002 fa64 	bl	405c38 <__aeabi_ddiv>
  403770:	4622      	mov	r2, r4
  403772:	462b      	mov	r3, r5
  403774:	f001 ff82 	bl	40567c <__aeabi_dsub>
  403778:	4682      	mov	sl, r0
  40377a:	468b      	mov	fp, r1
  40377c:	4630      	mov	r0, r6
  40377e:	4639      	mov	r1, r7
  403780:	f002 fbe0 	bl	405f44 <__aeabi_d2iz>
  403784:	4604      	mov	r4, r0
  403786:	f002 f8c7 	bl	405918 <__aeabi_i2d>
  40378a:	4602      	mov	r2, r0
  40378c:	460b      	mov	r3, r1
  40378e:	4630      	mov	r0, r6
  403790:	4639      	mov	r1, r7
  403792:	f001 ff73 	bl	40567c <__aeabi_dsub>
  403796:	3430      	adds	r4, #48	; 0x30
  403798:	9d07      	ldr	r5, [sp, #28]
  40379a:	b2e4      	uxtb	r4, r4
  40379c:	4606      	mov	r6, r0
  40379e:	460f      	mov	r7, r1
  4037a0:	702c      	strb	r4, [r5, #0]
  4037a2:	4602      	mov	r2, r0
  4037a4:	460b      	mov	r3, r1
  4037a6:	4650      	mov	r0, sl
  4037a8:	4659      	mov	r1, fp
  4037aa:	3501      	adds	r5, #1
  4037ac:	f002 fbaa 	bl	405f04 <__aeabi_dcmpgt>
  4037b0:	2800      	cmp	r0, #0
  4037b2:	d14c      	bne.n	40384e <_dtoa_r+0x806>
  4037b4:	4632      	mov	r2, r6
  4037b6:	463b      	mov	r3, r7
  4037b8:	2000      	movs	r0, #0
  4037ba:	4951      	ldr	r1, [pc, #324]	; (403900 <_dtoa_r+0x8b8>)
  4037bc:	f001 ff5e 	bl	40567c <__aeabi_dsub>
  4037c0:	4602      	mov	r2, r0
  4037c2:	460b      	mov	r3, r1
  4037c4:	4650      	mov	r0, sl
  4037c6:	4659      	mov	r1, fp
  4037c8:	f002 fb9c 	bl	405f04 <__aeabi_dcmpgt>
  4037cc:	2800      	cmp	r0, #0
  4037ce:	f040 830d 	bne.w	403dec <_dtoa_r+0xda4>
  4037d2:	f1b8 0f01 	cmp.w	r8, #1
  4037d6:	f340 81b3 	ble.w	403b40 <_dtoa_r+0xaf8>
  4037da:	9b07      	ldr	r3, [sp, #28]
  4037dc:	4498      	add	r8, r3
  4037de:	e00d      	b.n	4037fc <_dtoa_r+0x7b4>
  4037e0:	2000      	movs	r0, #0
  4037e2:	4947      	ldr	r1, [pc, #284]	; (403900 <_dtoa_r+0x8b8>)
  4037e4:	f001 ff4a 	bl	40567c <__aeabi_dsub>
  4037e8:	4652      	mov	r2, sl
  4037ea:	465b      	mov	r3, fp
  4037ec:	f002 fb6c 	bl	405ec8 <__aeabi_dcmplt>
  4037f0:	2800      	cmp	r0, #0
  4037f2:	f040 82fb 	bne.w	403dec <_dtoa_r+0xda4>
  4037f6:	4545      	cmp	r5, r8
  4037f8:	f000 81a2 	beq.w	403b40 <_dtoa_r+0xaf8>
  4037fc:	4650      	mov	r0, sl
  4037fe:	4659      	mov	r1, fp
  403800:	2200      	movs	r2, #0
  403802:	4b42      	ldr	r3, [pc, #264]	; (40390c <_dtoa_r+0x8c4>)
  403804:	f002 f8ee 	bl	4059e4 <__aeabi_dmul>
  403808:	2200      	movs	r2, #0
  40380a:	4b40      	ldr	r3, [pc, #256]	; (40390c <_dtoa_r+0x8c4>)
  40380c:	4682      	mov	sl, r0
  40380e:	468b      	mov	fp, r1
  403810:	4630      	mov	r0, r6
  403812:	4639      	mov	r1, r7
  403814:	f002 f8e6 	bl	4059e4 <__aeabi_dmul>
  403818:	460f      	mov	r7, r1
  40381a:	4606      	mov	r6, r0
  40381c:	f002 fb92 	bl	405f44 <__aeabi_d2iz>
  403820:	4604      	mov	r4, r0
  403822:	f002 f879 	bl	405918 <__aeabi_i2d>
  403826:	4602      	mov	r2, r0
  403828:	460b      	mov	r3, r1
  40382a:	4630      	mov	r0, r6
  40382c:	4639      	mov	r1, r7
  40382e:	f001 ff25 	bl	40567c <__aeabi_dsub>
  403832:	3430      	adds	r4, #48	; 0x30
  403834:	b2e4      	uxtb	r4, r4
  403836:	4652      	mov	r2, sl
  403838:	465b      	mov	r3, fp
  40383a:	f805 4b01 	strb.w	r4, [r5], #1
  40383e:	4606      	mov	r6, r0
  403840:	460f      	mov	r7, r1
  403842:	f002 fb41 	bl	405ec8 <__aeabi_dcmplt>
  403846:	4632      	mov	r2, r6
  403848:	463b      	mov	r3, r7
  40384a:	2800      	cmp	r0, #0
  40384c:	d0c8      	beq.n	4037e0 <_dtoa_r+0x798>
  40384e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403850:	9304      	str	r3, [sp, #16]
  403852:	e5c4      	b.n	4033de <_dtoa_r+0x396>
  403854:	2300      	movs	r3, #0
  403856:	9309      	str	r3, [sp, #36]	; 0x24
  403858:	9b21      	ldr	r3, [sp, #132]	; 0x84
  40385a:	2b00      	cmp	r3, #0
  40385c:	f340 8189 	ble.w	403b72 <_dtoa_r+0xb2a>
  403860:	461e      	mov	r6, r3
  403862:	461c      	mov	r4, r3
  403864:	930d      	str	r3, [sp, #52]	; 0x34
  403866:	9306      	str	r3, [sp, #24]
  403868:	e6fd      	b.n	403666 <_dtoa_r+0x61e>
  40386a:	2301      	movs	r3, #1
  40386c:	9309      	str	r3, [sp, #36]	; 0x24
  40386e:	e7f3      	b.n	403858 <_dtoa_r+0x810>
  403870:	9408      	str	r4, [sp, #32]
  403872:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403874:	9908      	ldr	r1, [sp, #32]
  403876:	4648      	mov	r0, r9
  403878:	f001 f830 	bl	4048dc <__pow5mult>
  40387c:	4604      	mov	r4, r0
  40387e:	e611      	b.n	4034a4 <_dtoa_r+0x45c>
  403880:	9b06      	ldr	r3, [sp, #24]
  403882:	2b00      	cmp	r3, #0
  403884:	f73f acfc 	bgt.w	403280 <_dtoa_r+0x238>
  403888:	f040 82da 	bne.w	403e40 <_dtoa_r+0xdf8>
  40388c:	2200      	movs	r2, #0
  40388e:	4b20      	ldr	r3, [pc, #128]	; (403910 <_dtoa_r+0x8c8>)
  403890:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403894:	f002 f8a6 	bl	4059e4 <__aeabi_dmul>
  403898:	4652      	mov	r2, sl
  40389a:	465b      	mov	r3, fp
  40389c:	f002 fb28 	bl	405ef0 <__aeabi_dcmpge>
  4038a0:	f8dd 8018 	ldr.w	r8, [sp, #24]
  4038a4:	4646      	mov	r6, r8
  4038a6:	2800      	cmp	r0, #0
  4038a8:	f000 80f2 	beq.w	403a90 <_dtoa_r+0xa48>
  4038ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
  4038ae:	9d07      	ldr	r5, [sp, #28]
  4038b0:	43db      	mvns	r3, r3
  4038b2:	9304      	str	r3, [sp, #16]
  4038b4:	4641      	mov	r1, r8
  4038b6:	4648      	mov	r0, r9
  4038b8:	f000 fed6 	bl	404668 <_Bfree>
  4038bc:	2e00      	cmp	r6, #0
  4038be:	f43f ad8e 	beq.w	4033de <_dtoa_r+0x396>
  4038c2:	e68d      	b.n	4035e0 <_dtoa_r+0x598>
  4038c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
  4038c6:	2a00      	cmp	r2, #0
  4038c8:	f000 8241 	beq.w	403d4e <_dtoa_r+0xd06>
  4038cc:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4038d0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4038d2:	9d05      	ldr	r5, [sp, #20]
  4038d4:	e5ab      	b.n	40342e <_dtoa_r+0x3e6>
  4038d6:	201c      	movs	r0, #28
  4038d8:	9b05      	ldr	r3, [sp, #20]
  4038da:	4403      	add	r3, r0
  4038dc:	9305      	str	r3, [sp, #20]
  4038de:	9b02      	ldr	r3, [sp, #8]
  4038e0:	4403      	add	r3, r0
  4038e2:	4405      	add	r5, r0
  4038e4:	9302      	str	r3, [sp, #8]
  4038e6:	e60e      	b.n	403506 <_dtoa_r+0x4be>
  4038e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4038ea:	2b01      	cmp	r3, #1
  4038ec:	f340 8282 	ble.w	403df4 <_dtoa_r+0xdac>
  4038f0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
  4038f2:	2001      	movs	r0, #1
  4038f4:	e5f3      	b.n	4034de <_dtoa_r+0x496>
  4038f6:	bf00      	nop
  4038f8:	00406ab8 	.word	0x00406ab8
  4038fc:	00406b80 	.word	0x00406b80
  403900:	3ff00000 	.word	0x3ff00000
  403904:	401c0000 	.word	0x401c0000
  403908:	3fe00000 	.word	0x3fe00000
  40390c:	40240000 	.word	0x40240000
  403910:	40140000 	.word	0x40140000
  403914:	4631      	mov	r1, r6
  403916:	2300      	movs	r3, #0
  403918:	220a      	movs	r2, #10
  40391a:	4648      	mov	r0, r9
  40391c:	f000 feae 	bl	40467c <__multadd>
  403920:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403922:	2b00      	cmp	r3, #0
  403924:	4606      	mov	r6, r0
  403926:	f340 8297 	ble.w	403e58 <_dtoa_r+0xe10>
  40392a:	9306      	str	r3, [sp, #24]
  40392c:	2d00      	cmp	r5, #0
  40392e:	dd05      	ble.n	40393c <_dtoa_r+0x8f4>
  403930:	4631      	mov	r1, r6
  403932:	462a      	mov	r2, r5
  403934:	4648      	mov	r0, r9
  403936:	f001 f821 	bl	40497c <__lshift>
  40393a:	4606      	mov	r6, r0
  40393c:	2f00      	cmp	r7, #0
  40393e:	f040 817c 	bne.w	403c3a <_dtoa_r+0xbf2>
  403942:	9605      	str	r6, [sp, #20]
  403944:	9b06      	ldr	r3, [sp, #24]
  403946:	9a07      	ldr	r2, [sp, #28]
  403948:	f8dd b014 	ldr.w	fp, [sp, #20]
  40394c:	3b01      	subs	r3, #1
  40394e:	18d3      	adds	r3, r2, r3
  403950:	9308      	str	r3, [sp, #32]
  403952:	f00a 0301 	and.w	r3, sl, #1
  403956:	9309      	str	r3, [sp, #36]	; 0x24
  403958:	4617      	mov	r7, r2
  40395a:	46c2      	mov	sl, r8
  40395c:	4651      	mov	r1, sl
  40395e:	4620      	mov	r0, r4
  403960:	f7ff fade 	bl	402f20 <quorem>
  403964:	4631      	mov	r1, r6
  403966:	4605      	mov	r5, r0
  403968:	4620      	mov	r0, r4
  40396a:	f001 f85f 	bl	404a2c <__mcmp>
  40396e:	465a      	mov	r2, fp
  403970:	9002      	str	r0, [sp, #8]
  403972:	4651      	mov	r1, sl
  403974:	4648      	mov	r0, r9
  403976:	f001 f879 	bl	404a6c <__mdiff>
  40397a:	68c2      	ldr	r2, [r0, #12]
  40397c:	4680      	mov	r8, r0
  40397e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403982:	2a00      	cmp	r2, #0
  403984:	d149      	bne.n	403a1a <_dtoa_r+0x9d2>
  403986:	4601      	mov	r1, r0
  403988:	4620      	mov	r0, r4
  40398a:	9306      	str	r3, [sp, #24]
  40398c:	f001 f84e 	bl	404a2c <__mcmp>
  403990:	4641      	mov	r1, r8
  403992:	9005      	str	r0, [sp, #20]
  403994:	4648      	mov	r0, r9
  403996:	f000 fe67 	bl	404668 <_Bfree>
  40399a:	9a05      	ldr	r2, [sp, #20]
  40399c:	9b06      	ldr	r3, [sp, #24]
  40399e:	b92a      	cbnz	r2, 4039ac <_dtoa_r+0x964>
  4039a0:	9920      	ldr	r1, [sp, #128]	; 0x80
  4039a2:	b919      	cbnz	r1, 4039ac <_dtoa_r+0x964>
  4039a4:	9909      	ldr	r1, [sp, #36]	; 0x24
  4039a6:	2900      	cmp	r1, #0
  4039a8:	f000 8236 	beq.w	403e18 <_dtoa_r+0xdd0>
  4039ac:	9902      	ldr	r1, [sp, #8]
  4039ae:	2900      	cmp	r1, #0
  4039b0:	f2c0 80e4 	blt.w	403b7c <_dtoa_r+0xb34>
  4039b4:	d105      	bne.n	4039c2 <_dtoa_r+0x97a>
  4039b6:	9920      	ldr	r1, [sp, #128]	; 0x80
  4039b8:	b919      	cbnz	r1, 4039c2 <_dtoa_r+0x97a>
  4039ba:	9909      	ldr	r1, [sp, #36]	; 0x24
  4039bc:	2900      	cmp	r1, #0
  4039be:	f000 80dd 	beq.w	403b7c <_dtoa_r+0xb34>
  4039c2:	2a00      	cmp	r2, #0
  4039c4:	f300 814d 	bgt.w	403c62 <_dtoa_r+0xc1a>
  4039c8:	9a08      	ldr	r2, [sp, #32]
  4039ca:	703b      	strb	r3, [r7, #0]
  4039cc:	f107 0801 	add.w	r8, r7, #1
  4039d0:	4297      	cmp	r7, r2
  4039d2:	4645      	mov	r5, r8
  4039d4:	f000 8154 	beq.w	403c80 <_dtoa_r+0xc38>
  4039d8:	4621      	mov	r1, r4
  4039da:	2300      	movs	r3, #0
  4039dc:	220a      	movs	r2, #10
  4039de:	4648      	mov	r0, r9
  4039e0:	f000 fe4c 	bl	40467c <__multadd>
  4039e4:	455e      	cmp	r6, fp
  4039e6:	4604      	mov	r4, r0
  4039e8:	4631      	mov	r1, r6
  4039ea:	f04f 0300 	mov.w	r3, #0
  4039ee:	f04f 020a 	mov.w	r2, #10
  4039f2:	4648      	mov	r0, r9
  4039f4:	d00b      	beq.n	403a0e <_dtoa_r+0x9c6>
  4039f6:	f000 fe41 	bl	40467c <__multadd>
  4039fa:	4659      	mov	r1, fp
  4039fc:	4606      	mov	r6, r0
  4039fe:	2300      	movs	r3, #0
  403a00:	220a      	movs	r2, #10
  403a02:	4648      	mov	r0, r9
  403a04:	f000 fe3a 	bl	40467c <__multadd>
  403a08:	4647      	mov	r7, r8
  403a0a:	4683      	mov	fp, r0
  403a0c:	e7a6      	b.n	40395c <_dtoa_r+0x914>
  403a0e:	f000 fe35 	bl	40467c <__multadd>
  403a12:	4647      	mov	r7, r8
  403a14:	4606      	mov	r6, r0
  403a16:	4683      	mov	fp, r0
  403a18:	e7a0      	b.n	40395c <_dtoa_r+0x914>
  403a1a:	4601      	mov	r1, r0
  403a1c:	4648      	mov	r0, r9
  403a1e:	9305      	str	r3, [sp, #20]
  403a20:	f000 fe22 	bl	404668 <_Bfree>
  403a24:	2201      	movs	r2, #1
  403a26:	9b05      	ldr	r3, [sp, #20]
  403a28:	e7c0      	b.n	4039ac <_dtoa_r+0x964>
  403a2a:	4641      	mov	r1, r8
  403a2c:	4620      	mov	r0, r4
  403a2e:	f000 fffd 	bl	404a2c <__mcmp>
  403a32:	2800      	cmp	r0, #0
  403a34:	f6bf ad7d 	bge.w	403532 <_dtoa_r+0x4ea>
  403a38:	4621      	mov	r1, r4
  403a3a:	9c04      	ldr	r4, [sp, #16]
  403a3c:	2300      	movs	r3, #0
  403a3e:	3c01      	subs	r4, #1
  403a40:	220a      	movs	r2, #10
  403a42:	4648      	mov	r0, r9
  403a44:	9404      	str	r4, [sp, #16]
  403a46:	f000 fe19 	bl	40467c <__multadd>
  403a4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403a4c:	4604      	mov	r4, r0
  403a4e:	2b00      	cmp	r3, #0
  403a50:	f47f af60 	bne.w	403914 <_dtoa_r+0x8cc>
  403a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a56:	2b00      	cmp	r3, #0
  403a58:	f340 81f6 	ble.w	403e48 <_dtoa_r+0xe00>
  403a5c:	9306      	str	r3, [sp, #24]
  403a5e:	e570      	b.n	403542 <_dtoa_r+0x4fa>
  403a60:	9c08      	ldr	r4, [sp, #32]
  403a62:	e51f      	b.n	4034a4 <_dtoa_r+0x45c>
  403a64:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403a66:	2b02      	cmp	r3, #2
  403a68:	f77f ad67 	ble.w	40353a <_dtoa_r+0x4f2>
  403a6c:	9b06      	ldr	r3, [sp, #24]
  403a6e:	2b00      	cmp	r3, #0
  403a70:	f040 8179 	bne.w	403d66 <_dtoa_r+0xd1e>
  403a74:	4641      	mov	r1, r8
  403a76:	2205      	movs	r2, #5
  403a78:	4648      	mov	r0, r9
  403a7a:	f000 fdff 	bl	40467c <__multadd>
  403a7e:	4601      	mov	r1, r0
  403a80:	4680      	mov	r8, r0
  403a82:	4620      	mov	r0, r4
  403a84:	f000 ffd2 	bl	404a2c <__mcmp>
  403a88:	2800      	cmp	r0, #0
  403a8a:	9408      	str	r4, [sp, #32]
  403a8c:	f77f af0e 	ble.w	4038ac <_dtoa_r+0x864>
  403a90:	9a04      	ldr	r2, [sp, #16]
  403a92:	9907      	ldr	r1, [sp, #28]
  403a94:	2331      	movs	r3, #49	; 0x31
  403a96:	3201      	adds	r2, #1
  403a98:	9204      	str	r2, [sp, #16]
  403a9a:	700b      	strb	r3, [r1, #0]
  403a9c:	1c4d      	adds	r5, r1, #1
  403a9e:	e709      	b.n	4038b4 <_dtoa_r+0x86c>
  403aa0:	9a04      	ldr	r2, [sp, #16]
  403aa2:	3201      	adds	r2, #1
  403aa4:	9204      	str	r2, [sp, #16]
  403aa6:	9a07      	ldr	r2, [sp, #28]
  403aa8:	2331      	movs	r3, #49	; 0x31
  403aaa:	7013      	strb	r3, [r2, #0]
  403aac:	e588      	b.n	4035c0 <_dtoa_r+0x578>
  403aae:	2301      	movs	r3, #1
  403ab0:	9309      	str	r3, [sp, #36]	; 0x24
  403ab2:	e5cd      	b.n	403650 <_dtoa_r+0x608>
  403ab4:	f8dd 9014 	ldr.w	r9, [sp, #20]
  403ab8:	e491      	b.n	4033de <_dtoa_r+0x396>
  403aba:	f1ba 0f00 	cmp.w	sl, #0
  403abe:	f47f ad04 	bne.w	4034ca <_dtoa_r+0x482>
  403ac2:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403ac6:	2b00      	cmp	r3, #0
  403ac8:	f040 813f 	bne.w	403d4a <_dtoa_r+0xd02>
  403acc:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403ad0:	0d3f      	lsrs	r7, r7, #20
  403ad2:	053f      	lsls	r7, r7, #20
  403ad4:	b137      	cbz	r7, 403ae4 <_dtoa_r+0xa9c>
  403ad6:	9b05      	ldr	r3, [sp, #20]
  403ad8:	3301      	adds	r3, #1
  403ada:	9305      	str	r3, [sp, #20]
  403adc:	9b02      	ldr	r3, [sp, #8]
  403ade:	3301      	adds	r3, #1
  403ae0:	9302      	str	r3, [sp, #8]
  403ae2:	2701      	movs	r7, #1
  403ae4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ae6:	2001      	movs	r0, #1
  403ae8:	2b00      	cmp	r3, #0
  403aea:	f43f acf8 	beq.w	4034de <_dtoa_r+0x496>
  403aee:	e4ed      	b.n	4034cc <_dtoa_r+0x484>
  403af0:	4640      	mov	r0, r8
  403af2:	f001 ff11 	bl	405918 <__aeabi_i2d>
  403af6:	4632      	mov	r2, r6
  403af8:	463b      	mov	r3, r7
  403afa:	f001 ff73 	bl	4059e4 <__aeabi_dmul>
  403afe:	2200      	movs	r2, #0
  403b00:	4bbf      	ldr	r3, [pc, #764]	; (403e00 <_dtoa_r+0xdb8>)
  403b02:	f001 fdbd 	bl	405680 <__adddf3>
  403b06:	4604      	mov	r4, r0
  403b08:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  403b0c:	4630      	mov	r0, r6
  403b0e:	4639      	mov	r1, r7
  403b10:	2200      	movs	r2, #0
  403b12:	4bbc      	ldr	r3, [pc, #752]	; (403e04 <_dtoa_r+0xdbc>)
  403b14:	f001 fdb2 	bl	40567c <__aeabi_dsub>
  403b18:	4622      	mov	r2, r4
  403b1a:	462b      	mov	r3, r5
  403b1c:	4606      	mov	r6, r0
  403b1e:	460f      	mov	r7, r1
  403b20:	f002 f9f0 	bl	405f04 <__aeabi_dcmpgt>
  403b24:	4680      	mov	r8, r0
  403b26:	2800      	cmp	r0, #0
  403b28:	f040 8105 	bne.w	403d36 <_dtoa_r+0xcee>
  403b2c:	4622      	mov	r2, r4
  403b2e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  403b32:	4630      	mov	r0, r6
  403b34:	4639      	mov	r1, r7
  403b36:	f002 f9c7 	bl	405ec8 <__aeabi_dcmplt>
  403b3a:	b108      	cbz	r0, 403b40 <_dtoa_r+0xaf8>
  403b3c:	4646      	mov	r6, r8
  403b3e:	e6b5      	b.n	4038ac <_dtoa_r+0x864>
  403b40:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  403b44:	f7ff bb89 	b.w	40325a <_dtoa_r+0x212>
  403b48:	9807      	ldr	r0, [sp, #28]
  403b4a:	f7ff baae 	b.w	4030aa <_dtoa_r+0x62>
  403b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403b52:	970a      	str	r7, [sp, #40]	; 0x28
  403b54:	1afb      	subs	r3, r7, r3
  403b56:	441a      	add	r2, r3
  403b58:	920b      	str	r2, [sp, #44]	; 0x2c
  403b5a:	2700      	movs	r7, #0
  403b5c:	e461      	b.n	403422 <_dtoa_r+0x3da>
  403b5e:	e9dd ab0e 	ldrd	sl, fp, [sp, #56]	; 0x38
  403b62:	f04f 0802 	mov.w	r8, #2
  403b66:	e5bb      	b.n	4036e0 <_dtoa_r+0x698>
  403b68:	461c      	mov	r4, r3
  403b6a:	2100      	movs	r1, #0
  403b6c:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
  403b70:	e58a      	b.n	403688 <_dtoa_r+0x640>
  403b72:	2401      	movs	r4, #1
  403b74:	9421      	str	r4, [sp, #132]	; 0x84
  403b76:	940d      	str	r4, [sp, #52]	; 0x34
  403b78:	9406      	str	r4, [sp, #24]
  403b7a:	e7f6      	b.n	403b6a <_dtoa_r+0xb22>
  403b7c:	2a00      	cmp	r2, #0
  403b7e:	46d0      	mov	r8, sl
  403b80:	f8cd b014 	str.w	fp, [sp, #20]
  403b84:	469a      	mov	sl, r3
  403b86:	dd11      	ble.n	403bac <_dtoa_r+0xb64>
  403b88:	4621      	mov	r1, r4
  403b8a:	2201      	movs	r2, #1
  403b8c:	4648      	mov	r0, r9
  403b8e:	f000 fef5 	bl	40497c <__lshift>
  403b92:	4641      	mov	r1, r8
  403b94:	4604      	mov	r4, r0
  403b96:	f000 ff49 	bl	404a2c <__mcmp>
  403b9a:	2800      	cmp	r0, #0
  403b9c:	f340 8149 	ble.w	403e32 <_dtoa_r+0xdea>
  403ba0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403ba4:	f000 8106 	beq.w	403db4 <_dtoa_r+0xd6c>
  403ba8:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403bac:	46b3      	mov	fp, r6
  403bae:	f887 a000 	strb.w	sl, [r7]
  403bb2:	1c7d      	adds	r5, r7, #1
  403bb4:	9e05      	ldr	r6, [sp, #20]
  403bb6:	9408      	str	r4, [sp, #32]
  403bb8:	e502      	b.n	4035c0 <_dtoa_r+0x578>
  403bba:	d104      	bne.n	403bc6 <_dtoa_r+0xb7e>
  403bbc:	f01a 0f01 	tst.w	sl, #1
  403bc0:	d001      	beq.n	403bc6 <_dtoa_r+0xb7e>
  403bc2:	e4ed      	b.n	4035a0 <_dtoa_r+0x558>
  403bc4:	4615      	mov	r5, r2
  403bc6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403bca:	2b30      	cmp	r3, #48	; 0x30
  403bcc:	f105 32ff 	add.w	r2, r5, #4294967295
  403bd0:	d0f8      	beq.n	403bc4 <_dtoa_r+0xb7c>
  403bd2:	e4f5      	b.n	4035c0 <_dtoa_r+0x578>
  403bd4:	9b04      	ldr	r3, [sp, #16]
  403bd6:	425c      	negs	r4, r3
  403bd8:	2c00      	cmp	r4, #0
  403bda:	f000 80bf 	beq.w	403d5c <_dtoa_r+0xd14>
  403bde:	4b8a      	ldr	r3, [pc, #552]	; (403e08 <_dtoa_r+0xdc0>)
  403be0:	f004 020f 	and.w	r2, r4, #15
  403be4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403be8:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bec:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  403bf0:	f001 fef8 	bl	4059e4 <__aeabi_dmul>
  403bf4:	1124      	asrs	r4, r4, #4
  403bf6:	4606      	mov	r6, r0
  403bf8:	460f      	mov	r7, r1
  403bfa:	f000 812a 	beq.w	403e52 <_dtoa_r+0xe0a>
  403bfe:	4d83      	ldr	r5, [pc, #524]	; (403e0c <_dtoa_r+0xdc4>)
  403c00:	f04f 0802 	mov.w	r8, #2
  403c04:	07e2      	lsls	r2, r4, #31
  403c06:	d509      	bpl.n	403c1c <_dtoa_r+0xbd4>
  403c08:	4630      	mov	r0, r6
  403c0a:	4639      	mov	r1, r7
  403c0c:	e9d5 2300 	ldrd	r2, r3, [r5]
  403c10:	f001 fee8 	bl	4059e4 <__aeabi_dmul>
  403c14:	f108 0801 	add.w	r8, r8, #1
  403c18:	4606      	mov	r6, r0
  403c1a:	460f      	mov	r7, r1
  403c1c:	1064      	asrs	r4, r4, #1
  403c1e:	f105 0508 	add.w	r5, r5, #8
  403c22:	d1ef      	bne.n	403c04 <_dtoa_r+0xbbc>
  403c24:	e576      	b.n	403714 <_dtoa_r+0x6cc>
  403c26:	9907      	ldr	r1, [sp, #28]
  403c28:	2230      	movs	r2, #48	; 0x30
  403c2a:	700a      	strb	r2, [r1, #0]
  403c2c:	9a04      	ldr	r2, [sp, #16]
  403c2e:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  403c32:	3201      	adds	r2, #1
  403c34:	9204      	str	r2, [sp, #16]
  403c36:	f7ff bbd0 	b.w	4033da <_dtoa_r+0x392>
  403c3a:	6871      	ldr	r1, [r6, #4]
  403c3c:	4648      	mov	r0, r9
  403c3e:	f000 fced 	bl	40461c <_Balloc>
  403c42:	6933      	ldr	r3, [r6, #16]
  403c44:	1c9a      	adds	r2, r3, #2
  403c46:	4605      	mov	r5, r0
  403c48:	0092      	lsls	r2, r2, #2
  403c4a:	f106 010c 	add.w	r1, r6, #12
  403c4e:	300c      	adds	r0, #12
  403c50:	f000 fc46 	bl	4044e0 <memcpy>
  403c54:	4629      	mov	r1, r5
  403c56:	2201      	movs	r2, #1
  403c58:	4648      	mov	r0, r9
  403c5a:	f000 fe8f 	bl	40497c <__lshift>
  403c5e:	9005      	str	r0, [sp, #20]
  403c60:	e670      	b.n	403944 <_dtoa_r+0x8fc>
  403c62:	2b39      	cmp	r3, #57	; 0x39
  403c64:	f8cd b014 	str.w	fp, [sp, #20]
  403c68:	46d0      	mov	r8, sl
  403c6a:	f000 80a3 	beq.w	403db4 <_dtoa_r+0xd6c>
  403c6e:	f103 0a01 	add.w	sl, r3, #1
  403c72:	46b3      	mov	fp, r6
  403c74:	f887 a000 	strb.w	sl, [r7]
  403c78:	1c7d      	adds	r5, r7, #1
  403c7a:	9e05      	ldr	r6, [sp, #20]
  403c7c:	9408      	str	r4, [sp, #32]
  403c7e:	e49f      	b.n	4035c0 <_dtoa_r+0x578>
  403c80:	465a      	mov	r2, fp
  403c82:	46d0      	mov	r8, sl
  403c84:	46b3      	mov	fp, r6
  403c86:	469a      	mov	sl, r3
  403c88:	4616      	mov	r6, r2
  403c8a:	e47d      	b.n	403588 <_dtoa_r+0x540>
  403c8c:	495e      	ldr	r1, [pc, #376]	; (403e08 <_dtoa_r+0xdc0>)
  403c8e:	f108 3aff 	add.w	sl, r8, #4294967295
  403c92:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
  403c96:	4622      	mov	r2, r4
  403c98:	462b      	mov	r3, r5
  403c9a:	e9d1 0100 	ldrd	r0, r1, [r1]
  403c9e:	f001 fea1 	bl	4059e4 <__aeabi_dmul>
  403ca2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403ca6:	4639      	mov	r1, r7
  403ca8:	4630      	mov	r0, r6
  403caa:	f002 f94b 	bl	405f44 <__aeabi_d2iz>
  403cae:	4604      	mov	r4, r0
  403cb0:	f001 fe32 	bl	405918 <__aeabi_i2d>
  403cb4:	4602      	mov	r2, r0
  403cb6:	460b      	mov	r3, r1
  403cb8:	4630      	mov	r0, r6
  403cba:	4639      	mov	r1, r7
  403cbc:	f001 fcde 	bl	40567c <__aeabi_dsub>
  403cc0:	9a07      	ldr	r2, [sp, #28]
  403cc2:	3430      	adds	r4, #48	; 0x30
  403cc4:	f1b8 0f01 	cmp.w	r8, #1
  403cc8:	4606      	mov	r6, r0
  403cca:	460f      	mov	r7, r1
  403ccc:	7014      	strb	r4, [r2, #0]
  403cce:	f102 0501 	add.w	r5, r2, #1
  403cd2:	d01e      	beq.n	403d12 <_dtoa_r+0xcca>
  403cd4:	9b07      	ldr	r3, [sp, #28]
  403cd6:	eb03 0b08 	add.w	fp, r3, r8
  403cda:	46a8      	mov	r8, r5
  403cdc:	2200      	movs	r2, #0
  403cde:	4b4c      	ldr	r3, [pc, #304]	; (403e10 <_dtoa_r+0xdc8>)
  403ce0:	4630      	mov	r0, r6
  403ce2:	4639      	mov	r1, r7
  403ce4:	f001 fe7e 	bl	4059e4 <__aeabi_dmul>
  403ce8:	460f      	mov	r7, r1
  403cea:	4606      	mov	r6, r0
  403cec:	f002 f92a 	bl	405f44 <__aeabi_d2iz>
  403cf0:	4604      	mov	r4, r0
  403cf2:	f001 fe11 	bl	405918 <__aeabi_i2d>
  403cf6:	3430      	adds	r4, #48	; 0x30
  403cf8:	4602      	mov	r2, r0
  403cfa:	460b      	mov	r3, r1
  403cfc:	4630      	mov	r0, r6
  403cfe:	4639      	mov	r1, r7
  403d00:	f001 fcbc 	bl	40567c <__aeabi_dsub>
  403d04:	f808 4b01 	strb.w	r4, [r8], #1
  403d08:	45c3      	cmp	fp, r8
  403d0a:	4606      	mov	r6, r0
  403d0c:	460f      	mov	r7, r1
  403d0e:	d1e5      	bne.n	403cdc <_dtoa_r+0xc94>
  403d10:	4455      	add	r5, sl
  403d12:	2200      	movs	r2, #0
  403d14:	4b3f      	ldr	r3, [pc, #252]	; (403e14 <_dtoa_r+0xdcc>)
  403d16:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403d1a:	f001 fcb1 	bl	405680 <__adddf3>
  403d1e:	4632      	mov	r2, r6
  403d20:	463b      	mov	r3, r7
  403d22:	f002 f8d1 	bl	405ec8 <__aeabi_dcmplt>
  403d26:	2800      	cmp	r0, #0
  403d28:	d04c      	beq.n	403dc4 <_dtoa_r+0xd7c>
  403d2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403d2c:	9304      	str	r3, [sp, #16]
  403d2e:	f815 4c01 	ldrb.w	r4, [r5, #-1]
  403d32:	f7ff bb46 	b.w	4033c2 <_dtoa_r+0x37a>
  403d36:	f04f 0800 	mov.w	r8, #0
  403d3a:	4646      	mov	r6, r8
  403d3c:	e6a8      	b.n	403a90 <_dtoa_r+0xa48>
  403d3e:	9b05      	ldr	r3, [sp, #20]
  403d40:	9a06      	ldr	r2, [sp, #24]
  403d42:	1a9d      	subs	r5, r3, r2
  403d44:	2300      	movs	r3, #0
  403d46:	f7ff bb72 	b.w	40342e <_dtoa_r+0x3e6>
  403d4a:	2700      	movs	r7, #0
  403d4c:	e6ca      	b.n	403ae4 <_dtoa_r+0xa9c>
  403d4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403d50:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403d52:	9d05      	ldr	r5, [sp, #20]
  403d54:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403d58:	f7ff bb69 	b.w	40342e <_dtoa_r+0x3e6>
  403d5c:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
  403d60:	f04f 0802 	mov.w	r8, #2
  403d64:	e4d6      	b.n	403714 <_dtoa_r+0x6cc>
  403d66:	9408      	str	r4, [sp, #32]
  403d68:	e5a0      	b.n	4038ac <_dtoa_r+0x864>
  403d6a:	9b06      	ldr	r3, [sp, #24]
  403d6c:	2b00      	cmp	r3, #0
  403d6e:	f43f aebf 	beq.w	403af0 <_dtoa_r+0xaa8>
  403d72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403d74:	2b00      	cmp	r3, #0
  403d76:	f77f aee3 	ble.w	403b40 <_dtoa_r+0xaf8>
  403d7a:	2200      	movs	r2, #0
  403d7c:	4b24      	ldr	r3, [pc, #144]	; (403e10 <_dtoa_r+0xdc8>)
  403d7e:	4630      	mov	r0, r6
  403d80:	4639      	mov	r1, r7
  403d82:	f001 fe2f 	bl	4059e4 <__aeabi_dmul>
  403d86:	4606      	mov	r6, r0
  403d88:	460f      	mov	r7, r1
  403d8a:	f108 0001 	add.w	r0, r8, #1
  403d8e:	f001 fdc3 	bl	405918 <__aeabi_i2d>
  403d92:	4632      	mov	r2, r6
  403d94:	463b      	mov	r3, r7
  403d96:	f001 fe25 	bl	4059e4 <__aeabi_dmul>
  403d9a:	2200      	movs	r2, #0
  403d9c:	4b18      	ldr	r3, [pc, #96]	; (403e00 <_dtoa_r+0xdb8>)
  403d9e:	f001 fc6f 	bl	405680 <__adddf3>
  403da2:	9a04      	ldr	r2, [sp, #16]
  403da4:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  403da8:	3a01      	subs	r2, #1
  403daa:	4604      	mov	r4, r0
  403dac:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  403db0:	9211      	str	r2, [sp, #68]	; 0x44
  403db2:	e4d0      	b.n	403756 <_dtoa_r+0x70e>
  403db4:	2239      	movs	r2, #57	; 0x39
  403db6:	46b3      	mov	fp, r6
  403db8:	9408      	str	r4, [sp, #32]
  403dba:	9e05      	ldr	r6, [sp, #20]
  403dbc:	703a      	strb	r2, [r7, #0]
  403dbe:	1c7d      	adds	r5, r7, #1
  403dc0:	f7ff bbf0 	b.w	4035a4 <_dtoa_r+0x55c>
  403dc4:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
  403dc8:	2000      	movs	r0, #0
  403dca:	4912      	ldr	r1, [pc, #72]	; (403e14 <_dtoa_r+0xdcc>)
  403dcc:	f001 fc56 	bl	40567c <__aeabi_dsub>
  403dd0:	4632      	mov	r2, r6
  403dd2:	463b      	mov	r3, r7
  403dd4:	f002 f896 	bl	405f04 <__aeabi_dcmpgt>
  403dd8:	b908      	cbnz	r0, 403dde <_dtoa_r+0xd96>
  403dda:	e6b1      	b.n	403b40 <_dtoa_r+0xaf8>
  403ddc:	4615      	mov	r5, r2
  403dde:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403de2:	2b30      	cmp	r3, #48	; 0x30
  403de4:	f105 32ff 	add.w	r2, r5, #4294967295
  403de8:	d0f8      	beq.n	403ddc <_dtoa_r+0xd94>
  403dea:	e530      	b.n	40384e <_dtoa_r+0x806>
  403dec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403dee:	9304      	str	r3, [sp, #16]
  403df0:	f7ff bae7 	b.w	4033c2 <_dtoa_r+0x37a>
  403df4:	f1ba 0f00 	cmp.w	sl, #0
  403df8:	f47f ad7a 	bne.w	4038f0 <_dtoa_r+0x8a8>
  403dfc:	e661      	b.n	403ac2 <_dtoa_r+0xa7a>
  403dfe:	bf00      	nop
  403e00:	401c0000 	.word	0x401c0000
  403e04:	40140000 	.word	0x40140000
  403e08:	00406ab8 	.word	0x00406ab8
  403e0c:	00406b80 	.word	0x00406b80
  403e10:	40240000 	.word	0x40240000
  403e14:	3fe00000 	.word	0x3fe00000
  403e18:	2b39      	cmp	r3, #57	; 0x39
  403e1a:	f8cd b014 	str.w	fp, [sp, #20]
  403e1e:	46d0      	mov	r8, sl
  403e20:	f8dd b008 	ldr.w	fp, [sp, #8]
  403e24:	469a      	mov	sl, r3
  403e26:	d0c5      	beq.n	403db4 <_dtoa_r+0xd6c>
  403e28:	f1bb 0f00 	cmp.w	fp, #0
  403e2c:	f73f aebc 	bgt.w	403ba8 <_dtoa_r+0xb60>
  403e30:	e6bc      	b.n	403bac <_dtoa_r+0xb64>
  403e32:	f47f aebb 	bne.w	403bac <_dtoa_r+0xb64>
  403e36:	f01a 0f01 	tst.w	sl, #1
  403e3a:	f43f aeb7 	beq.w	403bac <_dtoa_r+0xb64>
  403e3e:	e6af      	b.n	403ba0 <_dtoa_r+0xb58>
  403e40:	f04f 0800 	mov.w	r8, #0
  403e44:	4646      	mov	r6, r8
  403e46:	e531      	b.n	4038ac <_dtoa_r+0x864>
  403e48:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403e4a:	2b02      	cmp	r3, #2
  403e4c:	dc21      	bgt.n	403e92 <_dtoa_r+0xe4a>
  403e4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e50:	e604      	b.n	403a5c <_dtoa_r+0xa14>
  403e52:	f04f 0802 	mov.w	r8, #2
  403e56:	e45d      	b.n	403714 <_dtoa_r+0x6cc>
  403e58:	9b20      	ldr	r3, [sp, #128]	; 0x80
  403e5a:	2b02      	cmp	r3, #2
  403e5c:	dc19      	bgt.n	403e92 <_dtoa_r+0xe4a>
  403e5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e60:	e563      	b.n	40392a <_dtoa_r+0x8e2>
  403e62:	2400      	movs	r4, #0
  403e64:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
  403e68:	4621      	mov	r1, r4
  403e6a:	4648      	mov	r0, r9
  403e6c:	f000 fbd6 	bl	40461c <_Balloc>
  403e70:	f04f 33ff 	mov.w	r3, #4294967295
  403e74:	9306      	str	r3, [sp, #24]
  403e76:	930d      	str	r3, [sp, #52]	; 0x34
  403e78:	2301      	movs	r3, #1
  403e7a:	9007      	str	r0, [sp, #28]
  403e7c:	9421      	str	r4, [sp, #132]	; 0x84
  403e7e:	f8c9 0040 	str.w	r0, [r9, #64]	; 0x40
  403e82:	9309      	str	r3, [sp, #36]	; 0x24
  403e84:	f7ff b9e9 	b.w	40325a <_dtoa_r+0x212>
  403e88:	f43f ab3d 	beq.w	403506 <_dtoa_r+0x4be>
  403e8c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403e90:	e522      	b.n	4038d8 <_dtoa_r+0x890>
  403e92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e94:	9306      	str	r3, [sp, #24]
  403e96:	e5e9      	b.n	403a6c <_dtoa_r+0xa24>
  403e98:	2501      	movs	r5, #1
  403e9a:	f7ff b9a8 	b.w	4031ee <_dtoa_r+0x1a6>
  403e9e:	bf00      	nop

00403ea0 <__libc_fini_array>:
  403ea0:	b538      	push	{r3, r4, r5, lr}
  403ea2:	4d07      	ldr	r5, [pc, #28]	; (403ec0 <__libc_fini_array+0x20>)
  403ea4:	4c07      	ldr	r4, [pc, #28]	; (403ec4 <__libc_fini_array+0x24>)
  403ea6:	1b2c      	subs	r4, r5, r4
  403ea8:	10a4      	asrs	r4, r4, #2
  403eaa:	d005      	beq.n	403eb8 <__libc_fini_array+0x18>
  403eac:	3c01      	subs	r4, #1
  403eae:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  403eb2:	4798      	blx	r3
  403eb4:	2c00      	cmp	r4, #0
  403eb6:	d1f9      	bne.n	403eac <__libc_fini_array+0xc>
  403eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403ebc:	f002 be84 	b.w	406bc8 <_fini>
  403ec0:	00406bd8 	.word	0x00406bd8
  403ec4:	00406bd4 	.word	0x00406bd4

00403ec8 <_localeconv_r>:
  403ec8:	4800      	ldr	r0, [pc, #0]	; (403ecc <_localeconv_r+0x4>)
  403eca:	4770      	bx	lr
  403ecc:	20000444 	.word	0x20000444

00403ed0 <_malloc_r>:
  403ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403ed4:	f101 050b 	add.w	r5, r1, #11
  403ed8:	2d16      	cmp	r5, #22
  403eda:	b083      	sub	sp, #12
  403edc:	4606      	mov	r6, r0
  403ede:	f240 809f 	bls.w	404020 <_malloc_r+0x150>
  403ee2:	f035 0507 	bics.w	r5, r5, #7
  403ee6:	f100 80bf 	bmi.w	404068 <_malloc_r+0x198>
  403eea:	42a9      	cmp	r1, r5
  403eec:	f200 80bc 	bhi.w	404068 <_malloc_r+0x198>
  403ef0:	f000 fb90 	bl	404614 <__malloc_lock>
  403ef4:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  403ef8:	f0c0 829c 	bcc.w	404434 <_malloc_r+0x564>
  403efc:	0a6b      	lsrs	r3, r5, #9
  403efe:	f000 80ba 	beq.w	404076 <_malloc_r+0x1a6>
  403f02:	2b04      	cmp	r3, #4
  403f04:	f200 8183 	bhi.w	40420e <_malloc_r+0x33e>
  403f08:	09a8      	lsrs	r0, r5, #6
  403f0a:	f100 0e39 	add.w	lr, r0, #57	; 0x39
  403f0e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  403f12:	3038      	adds	r0, #56	; 0x38
  403f14:	4fc4      	ldr	r7, [pc, #784]	; (404228 <_malloc_r+0x358>)
  403f16:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  403f1a:	f1a3 0108 	sub.w	r1, r3, #8
  403f1e:	685c      	ldr	r4, [r3, #4]
  403f20:	42a1      	cmp	r1, r4
  403f22:	d107      	bne.n	403f34 <_malloc_r+0x64>
  403f24:	e0ac      	b.n	404080 <_malloc_r+0x1b0>
  403f26:	2a00      	cmp	r2, #0
  403f28:	f280 80ac 	bge.w	404084 <_malloc_r+0x1b4>
  403f2c:	68e4      	ldr	r4, [r4, #12]
  403f2e:	42a1      	cmp	r1, r4
  403f30:	f000 80a6 	beq.w	404080 <_malloc_r+0x1b0>
  403f34:	6863      	ldr	r3, [r4, #4]
  403f36:	f023 0303 	bic.w	r3, r3, #3
  403f3a:	1b5a      	subs	r2, r3, r5
  403f3c:	2a0f      	cmp	r2, #15
  403f3e:	ddf2      	ble.n	403f26 <_malloc_r+0x56>
  403f40:	49b9      	ldr	r1, [pc, #740]	; (404228 <_malloc_r+0x358>)
  403f42:	693c      	ldr	r4, [r7, #16]
  403f44:	f101 0e08 	add.w	lr, r1, #8
  403f48:	4574      	cmp	r4, lr
  403f4a:	f000 81b3 	beq.w	4042b4 <_malloc_r+0x3e4>
  403f4e:	6863      	ldr	r3, [r4, #4]
  403f50:	f023 0303 	bic.w	r3, r3, #3
  403f54:	1b5a      	subs	r2, r3, r5
  403f56:	2a0f      	cmp	r2, #15
  403f58:	f300 8199 	bgt.w	40428e <_malloc_r+0x3be>
  403f5c:	2a00      	cmp	r2, #0
  403f5e:	f8c1 e014 	str.w	lr, [r1, #20]
  403f62:	f8c1 e010 	str.w	lr, [r1, #16]
  403f66:	f280 809e 	bge.w	4040a6 <_malloc_r+0x1d6>
  403f6a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403f6e:	f080 8167 	bcs.w	404240 <_malloc_r+0x370>
  403f72:	08db      	lsrs	r3, r3, #3
  403f74:	f103 0c01 	add.w	ip, r3, #1
  403f78:	2201      	movs	r2, #1
  403f7a:	109b      	asrs	r3, r3, #2
  403f7c:	fa02 f303 	lsl.w	r3, r2, r3
  403f80:	684a      	ldr	r2, [r1, #4]
  403f82:	f851 803c 	ldr.w	r8, [r1, ip, lsl #3]
  403f86:	f8c4 8008 	str.w	r8, [r4, #8]
  403f8a:	eb01 09cc 	add.w	r9, r1, ip, lsl #3
  403f8e:	431a      	orrs	r2, r3
  403f90:	f1a9 0308 	sub.w	r3, r9, #8
  403f94:	60e3      	str	r3, [r4, #12]
  403f96:	604a      	str	r2, [r1, #4]
  403f98:	f841 403c 	str.w	r4, [r1, ip, lsl #3]
  403f9c:	f8c8 400c 	str.w	r4, [r8, #12]
  403fa0:	1083      	asrs	r3, r0, #2
  403fa2:	2401      	movs	r4, #1
  403fa4:	409c      	lsls	r4, r3
  403fa6:	4294      	cmp	r4, r2
  403fa8:	f200 808a 	bhi.w	4040c0 <_malloc_r+0x1f0>
  403fac:	4214      	tst	r4, r2
  403fae:	d106      	bne.n	403fbe <_malloc_r+0xee>
  403fb0:	f020 0003 	bic.w	r0, r0, #3
  403fb4:	0064      	lsls	r4, r4, #1
  403fb6:	4214      	tst	r4, r2
  403fb8:	f100 0004 	add.w	r0, r0, #4
  403fbc:	d0fa      	beq.n	403fb4 <_malloc_r+0xe4>
  403fbe:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403fc2:	46cc      	mov	ip, r9
  403fc4:	4680      	mov	r8, r0
  403fc6:	f8dc 100c 	ldr.w	r1, [ip, #12]
  403fca:	458c      	cmp	ip, r1
  403fcc:	d107      	bne.n	403fde <_malloc_r+0x10e>
  403fce:	e173      	b.n	4042b8 <_malloc_r+0x3e8>
  403fd0:	2a00      	cmp	r2, #0
  403fd2:	f280 8181 	bge.w	4042d8 <_malloc_r+0x408>
  403fd6:	68c9      	ldr	r1, [r1, #12]
  403fd8:	458c      	cmp	ip, r1
  403fda:	f000 816d 	beq.w	4042b8 <_malloc_r+0x3e8>
  403fde:	684b      	ldr	r3, [r1, #4]
  403fe0:	f023 0303 	bic.w	r3, r3, #3
  403fe4:	1b5a      	subs	r2, r3, r5
  403fe6:	2a0f      	cmp	r2, #15
  403fe8:	ddf2      	ble.n	403fd0 <_malloc_r+0x100>
  403fea:	460c      	mov	r4, r1
  403fec:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  403ff0:	f854 8f08 	ldr.w	r8, [r4, #8]!
  403ff4:	194b      	adds	r3, r1, r5
  403ff6:	f045 0501 	orr.w	r5, r5, #1
  403ffa:	604d      	str	r5, [r1, #4]
  403ffc:	f042 0101 	orr.w	r1, r2, #1
  404000:	f8c8 c00c 	str.w	ip, [r8, #12]
  404004:	4630      	mov	r0, r6
  404006:	f8cc 8008 	str.w	r8, [ip, #8]
  40400a:	617b      	str	r3, [r7, #20]
  40400c:	613b      	str	r3, [r7, #16]
  40400e:	f8c3 e00c 	str.w	lr, [r3, #12]
  404012:	f8c3 e008 	str.w	lr, [r3, #8]
  404016:	6059      	str	r1, [r3, #4]
  404018:	509a      	str	r2, [r3, r2]
  40401a:	f000 fafd 	bl	404618 <__malloc_unlock>
  40401e:	e01f      	b.n	404060 <_malloc_r+0x190>
  404020:	2910      	cmp	r1, #16
  404022:	d821      	bhi.n	404068 <_malloc_r+0x198>
  404024:	f000 faf6 	bl	404614 <__malloc_lock>
  404028:	2510      	movs	r5, #16
  40402a:	2306      	movs	r3, #6
  40402c:	2002      	movs	r0, #2
  40402e:	4f7e      	ldr	r7, [pc, #504]	; (404228 <_malloc_r+0x358>)
  404030:	eb07 0383 	add.w	r3, r7, r3, lsl #2
  404034:	f1a3 0208 	sub.w	r2, r3, #8
  404038:	685c      	ldr	r4, [r3, #4]
  40403a:	4294      	cmp	r4, r2
  40403c:	f000 8145 	beq.w	4042ca <_malloc_r+0x3fa>
  404040:	6863      	ldr	r3, [r4, #4]
  404042:	68e1      	ldr	r1, [r4, #12]
  404044:	68a5      	ldr	r5, [r4, #8]
  404046:	f023 0303 	bic.w	r3, r3, #3
  40404a:	4423      	add	r3, r4
  40404c:	4630      	mov	r0, r6
  40404e:	685a      	ldr	r2, [r3, #4]
  404050:	60e9      	str	r1, [r5, #12]
  404052:	f042 0201 	orr.w	r2, r2, #1
  404056:	608d      	str	r5, [r1, #8]
  404058:	605a      	str	r2, [r3, #4]
  40405a:	f000 fadd 	bl	404618 <__malloc_unlock>
  40405e:	3408      	adds	r4, #8
  404060:	4620      	mov	r0, r4
  404062:	b003      	add	sp, #12
  404064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404068:	2400      	movs	r4, #0
  40406a:	230c      	movs	r3, #12
  40406c:	4620      	mov	r0, r4
  40406e:	6033      	str	r3, [r6, #0]
  404070:	b003      	add	sp, #12
  404072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404076:	2380      	movs	r3, #128	; 0x80
  404078:	f04f 0e40 	mov.w	lr, #64	; 0x40
  40407c:	203f      	movs	r0, #63	; 0x3f
  40407e:	e749      	b.n	403f14 <_malloc_r+0x44>
  404080:	4670      	mov	r0, lr
  404082:	e75d      	b.n	403f40 <_malloc_r+0x70>
  404084:	4423      	add	r3, r4
  404086:	68e1      	ldr	r1, [r4, #12]
  404088:	685a      	ldr	r2, [r3, #4]
  40408a:	68a5      	ldr	r5, [r4, #8]
  40408c:	f042 0201 	orr.w	r2, r2, #1
  404090:	60e9      	str	r1, [r5, #12]
  404092:	4630      	mov	r0, r6
  404094:	608d      	str	r5, [r1, #8]
  404096:	605a      	str	r2, [r3, #4]
  404098:	f000 fabe 	bl	404618 <__malloc_unlock>
  40409c:	3408      	adds	r4, #8
  40409e:	4620      	mov	r0, r4
  4040a0:	b003      	add	sp, #12
  4040a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040a6:	4423      	add	r3, r4
  4040a8:	4630      	mov	r0, r6
  4040aa:	685a      	ldr	r2, [r3, #4]
  4040ac:	f042 0201 	orr.w	r2, r2, #1
  4040b0:	605a      	str	r2, [r3, #4]
  4040b2:	f000 fab1 	bl	404618 <__malloc_unlock>
  4040b6:	3408      	adds	r4, #8
  4040b8:	4620      	mov	r0, r4
  4040ba:	b003      	add	sp, #12
  4040bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040c0:	68bc      	ldr	r4, [r7, #8]
  4040c2:	6863      	ldr	r3, [r4, #4]
  4040c4:	f023 0803 	bic.w	r8, r3, #3
  4040c8:	45a8      	cmp	r8, r5
  4040ca:	d304      	bcc.n	4040d6 <_malloc_r+0x206>
  4040cc:	ebc5 0308 	rsb	r3, r5, r8
  4040d0:	2b0f      	cmp	r3, #15
  4040d2:	f300 808c 	bgt.w	4041ee <_malloc_r+0x31e>
  4040d6:	4b55      	ldr	r3, [pc, #340]	; (40422c <_malloc_r+0x35c>)
  4040d8:	f8df 9160 	ldr.w	r9, [pc, #352]	; 40423c <_malloc_r+0x36c>
  4040dc:	681a      	ldr	r2, [r3, #0]
  4040de:	f8d9 3000 	ldr.w	r3, [r9]
  4040e2:	3301      	adds	r3, #1
  4040e4:	442a      	add	r2, r5
  4040e6:	eb04 0a08 	add.w	sl, r4, r8
  4040ea:	f000 8160 	beq.w	4043ae <_malloc_r+0x4de>
  4040ee:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
  4040f2:	320f      	adds	r2, #15
  4040f4:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
  4040f8:	f022 020f 	bic.w	r2, r2, #15
  4040fc:	4611      	mov	r1, r2
  4040fe:	4630      	mov	r0, r6
  404100:	9201      	str	r2, [sp, #4]
  404102:	f000 fd99 	bl	404c38 <_sbrk_r>
  404106:	f1b0 3fff 	cmp.w	r0, #4294967295
  40410a:	4683      	mov	fp, r0
  40410c:	9a01      	ldr	r2, [sp, #4]
  40410e:	f000 8158 	beq.w	4043c2 <_malloc_r+0x4f2>
  404112:	4582      	cmp	sl, r0
  404114:	f200 80fc 	bhi.w	404310 <_malloc_r+0x440>
  404118:	4b45      	ldr	r3, [pc, #276]	; (404230 <_malloc_r+0x360>)
  40411a:	6819      	ldr	r1, [r3, #0]
  40411c:	45da      	cmp	sl, fp
  40411e:	4411      	add	r1, r2
  404120:	6019      	str	r1, [r3, #0]
  404122:	f000 8153 	beq.w	4043cc <_malloc_r+0x4fc>
  404126:	f8d9 0000 	ldr.w	r0, [r9]
  40412a:	f8df e110 	ldr.w	lr, [pc, #272]	; 40423c <_malloc_r+0x36c>
  40412e:	3001      	adds	r0, #1
  404130:	bf1b      	ittet	ne
  404132:	ebca 0a0b 	rsbne	sl, sl, fp
  404136:	4451      	addne	r1, sl
  404138:	f8ce b000 	streq.w	fp, [lr]
  40413c:	6019      	strne	r1, [r3, #0]
  40413e:	f01b 0107 	ands.w	r1, fp, #7
  404142:	f000 8117 	beq.w	404374 <_malloc_r+0x4a4>
  404146:	f1c1 0008 	rsb	r0, r1, #8
  40414a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40414e:	4483      	add	fp, r0
  404150:	3108      	adds	r1, #8
  404152:	445a      	add	r2, fp
  404154:	f3c2 020b 	ubfx	r2, r2, #0, #12
  404158:	ebc2 0901 	rsb	r9, r2, r1
  40415c:	4649      	mov	r1, r9
  40415e:	4630      	mov	r0, r6
  404160:	9301      	str	r3, [sp, #4]
  404162:	f000 fd69 	bl	404c38 <_sbrk_r>
  404166:	1c43      	adds	r3, r0, #1
  404168:	9b01      	ldr	r3, [sp, #4]
  40416a:	f000 813f 	beq.w	4043ec <_malloc_r+0x51c>
  40416e:	ebcb 0200 	rsb	r2, fp, r0
  404172:	444a      	add	r2, r9
  404174:	f042 0201 	orr.w	r2, r2, #1
  404178:	6819      	ldr	r1, [r3, #0]
  40417a:	f8c7 b008 	str.w	fp, [r7, #8]
  40417e:	4449      	add	r1, r9
  404180:	42bc      	cmp	r4, r7
  404182:	f8cb 2004 	str.w	r2, [fp, #4]
  404186:	6019      	str	r1, [r3, #0]
  404188:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 404230 <_malloc_r+0x360>
  40418c:	d016      	beq.n	4041bc <_malloc_r+0x2ec>
  40418e:	f1b8 0f0f 	cmp.w	r8, #15
  404192:	f240 80fd 	bls.w	404390 <_malloc_r+0x4c0>
  404196:	6862      	ldr	r2, [r4, #4]
  404198:	f1a8 030c 	sub.w	r3, r8, #12
  40419c:	f023 0307 	bic.w	r3, r3, #7
  4041a0:	18e0      	adds	r0, r4, r3
  4041a2:	f002 0201 	and.w	r2, r2, #1
  4041a6:	f04f 0e05 	mov.w	lr, #5
  4041aa:	431a      	orrs	r2, r3
  4041ac:	2b0f      	cmp	r3, #15
  4041ae:	6062      	str	r2, [r4, #4]
  4041b0:	f8c0 e004 	str.w	lr, [r0, #4]
  4041b4:	f8c0 e008 	str.w	lr, [r0, #8]
  4041b8:	f200 811c 	bhi.w	4043f4 <_malloc_r+0x524>
  4041bc:	4b1d      	ldr	r3, [pc, #116]	; (404234 <_malloc_r+0x364>)
  4041be:	68bc      	ldr	r4, [r7, #8]
  4041c0:	681a      	ldr	r2, [r3, #0]
  4041c2:	4291      	cmp	r1, r2
  4041c4:	bf88      	it	hi
  4041c6:	6019      	strhi	r1, [r3, #0]
  4041c8:	4b1b      	ldr	r3, [pc, #108]	; (404238 <_malloc_r+0x368>)
  4041ca:	681a      	ldr	r2, [r3, #0]
  4041cc:	4291      	cmp	r1, r2
  4041ce:	6862      	ldr	r2, [r4, #4]
  4041d0:	bf88      	it	hi
  4041d2:	6019      	strhi	r1, [r3, #0]
  4041d4:	f022 0203 	bic.w	r2, r2, #3
  4041d8:	4295      	cmp	r5, r2
  4041da:	eba2 0305 	sub.w	r3, r2, r5
  4041de:	d801      	bhi.n	4041e4 <_malloc_r+0x314>
  4041e0:	2b0f      	cmp	r3, #15
  4041e2:	dc04      	bgt.n	4041ee <_malloc_r+0x31e>
  4041e4:	4630      	mov	r0, r6
  4041e6:	f000 fa17 	bl	404618 <__malloc_unlock>
  4041ea:	2400      	movs	r4, #0
  4041ec:	e738      	b.n	404060 <_malloc_r+0x190>
  4041ee:	1962      	adds	r2, r4, r5
  4041f0:	f043 0301 	orr.w	r3, r3, #1
  4041f4:	f045 0501 	orr.w	r5, r5, #1
  4041f8:	6065      	str	r5, [r4, #4]
  4041fa:	4630      	mov	r0, r6
  4041fc:	60ba      	str	r2, [r7, #8]
  4041fe:	6053      	str	r3, [r2, #4]
  404200:	f000 fa0a 	bl	404618 <__malloc_unlock>
  404204:	3408      	adds	r4, #8
  404206:	4620      	mov	r0, r4
  404208:	b003      	add	sp, #12
  40420a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40420e:	2b14      	cmp	r3, #20
  404210:	d971      	bls.n	4042f6 <_malloc_r+0x426>
  404212:	2b54      	cmp	r3, #84	; 0x54
  404214:	f200 80a4 	bhi.w	404360 <_malloc_r+0x490>
  404218:	0b28      	lsrs	r0, r5, #12
  40421a:	f100 0e6f 	add.w	lr, r0, #111	; 0x6f
  40421e:	ea4f 034e 	mov.w	r3, lr, lsl #1
  404222:	306e      	adds	r0, #110	; 0x6e
  404224:	e676      	b.n	403f14 <_malloc_r+0x44>
  404226:	bf00      	nop
  404228:	2000047c 	.word	0x2000047c
  40422c:	20000cec 	.word	0x20000cec
  404230:	20000cf0 	.word	0x20000cf0
  404234:	20000ce8 	.word	0x20000ce8
  404238:	20000ce4 	.word	0x20000ce4
  40423c:	20000888 	.word	0x20000888
  404240:	0a5a      	lsrs	r2, r3, #9
  404242:	2a04      	cmp	r2, #4
  404244:	d95e      	bls.n	404304 <_malloc_r+0x434>
  404246:	2a14      	cmp	r2, #20
  404248:	f200 80b3 	bhi.w	4043b2 <_malloc_r+0x4e2>
  40424c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404250:	0049      	lsls	r1, r1, #1
  404252:	325b      	adds	r2, #91	; 0x5b
  404254:	eb07 0c81 	add.w	ip, r7, r1, lsl #2
  404258:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
  40425c:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 40443c <_malloc_r+0x56c>
  404260:	f1ac 0c08 	sub.w	ip, ip, #8
  404264:	458c      	cmp	ip, r1
  404266:	f000 8088 	beq.w	40437a <_malloc_r+0x4aa>
  40426a:	684a      	ldr	r2, [r1, #4]
  40426c:	f022 0203 	bic.w	r2, r2, #3
  404270:	4293      	cmp	r3, r2
  404272:	d202      	bcs.n	40427a <_malloc_r+0x3aa>
  404274:	6889      	ldr	r1, [r1, #8]
  404276:	458c      	cmp	ip, r1
  404278:	d1f7      	bne.n	40426a <_malloc_r+0x39a>
  40427a:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  40427e:	687a      	ldr	r2, [r7, #4]
  404280:	f8c4 c00c 	str.w	ip, [r4, #12]
  404284:	60a1      	str	r1, [r4, #8]
  404286:	f8cc 4008 	str.w	r4, [ip, #8]
  40428a:	60cc      	str	r4, [r1, #12]
  40428c:	e688      	b.n	403fa0 <_malloc_r+0xd0>
  40428e:	1963      	adds	r3, r4, r5
  404290:	f042 0701 	orr.w	r7, r2, #1
  404294:	f045 0501 	orr.w	r5, r5, #1
  404298:	6065      	str	r5, [r4, #4]
  40429a:	4630      	mov	r0, r6
  40429c:	614b      	str	r3, [r1, #20]
  40429e:	610b      	str	r3, [r1, #16]
  4042a0:	f8c3 e00c 	str.w	lr, [r3, #12]
  4042a4:	f8c3 e008 	str.w	lr, [r3, #8]
  4042a8:	605f      	str	r7, [r3, #4]
  4042aa:	509a      	str	r2, [r3, r2]
  4042ac:	3408      	adds	r4, #8
  4042ae:	f000 f9b3 	bl	404618 <__malloc_unlock>
  4042b2:	e6d5      	b.n	404060 <_malloc_r+0x190>
  4042b4:	684a      	ldr	r2, [r1, #4]
  4042b6:	e673      	b.n	403fa0 <_malloc_r+0xd0>
  4042b8:	f108 0801 	add.w	r8, r8, #1
  4042bc:	f018 0f03 	tst.w	r8, #3
  4042c0:	f10c 0c08 	add.w	ip, ip, #8
  4042c4:	f47f ae7f 	bne.w	403fc6 <_malloc_r+0xf6>
  4042c8:	e030      	b.n	40432c <_malloc_r+0x45c>
  4042ca:	68dc      	ldr	r4, [r3, #12]
  4042cc:	42a3      	cmp	r3, r4
  4042ce:	bf08      	it	eq
  4042d0:	3002      	addeq	r0, #2
  4042d2:	f43f ae35 	beq.w	403f40 <_malloc_r+0x70>
  4042d6:	e6b3      	b.n	404040 <_malloc_r+0x170>
  4042d8:	440b      	add	r3, r1
  4042da:	460c      	mov	r4, r1
  4042dc:	685a      	ldr	r2, [r3, #4]
  4042de:	68c9      	ldr	r1, [r1, #12]
  4042e0:	f854 5f08 	ldr.w	r5, [r4, #8]!
  4042e4:	f042 0201 	orr.w	r2, r2, #1
  4042e8:	605a      	str	r2, [r3, #4]
  4042ea:	4630      	mov	r0, r6
  4042ec:	60e9      	str	r1, [r5, #12]
  4042ee:	608d      	str	r5, [r1, #8]
  4042f0:	f000 f992 	bl	404618 <__malloc_unlock>
  4042f4:	e6b4      	b.n	404060 <_malloc_r+0x190>
  4042f6:	f103 0e5c 	add.w	lr, r3, #92	; 0x5c
  4042fa:	f103 005b 	add.w	r0, r3, #91	; 0x5b
  4042fe:	ea4f 034e 	mov.w	r3, lr, lsl #1
  404302:	e607      	b.n	403f14 <_malloc_r+0x44>
  404304:	099a      	lsrs	r2, r3, #6
  404306:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40430a:	0049      	lsls	r1, r1, #1
  40430c:	3238      	adds	r2, #56	; 0x38
  40430e:	e7a1      	b.n	404254 <_malloc_r+0x384>
  404310:	42bc      	cmp	r4, r7
  404312:	4b4a      	ldr	r3, [pc, #296]	; (40443c <_malloc_r+0x56c>)
  404314:	f43f af00 	beq.w	404118 <_malloc_r+0x248>
  404318:	689c      	ldr	r4, [r3, #8]
  40431a:	6862      	ldr	r2, [r4, #4]
  40431c:	f022 0203 	bic.w	r2, r2, #3
  404320:	e75a      	b.n	4041d8 <_malloc_r+0x308>
  404322:	f859 3908 	ldr.w	r3, [r9], #-8
  404326:	4599      	cmp	r9, r3
  404328:	f040 8082 	bne.w	404430 <_malloc_r+0x560>
  40432c:	f010 0f03 	tst.w	r0, #3
  404330:	f100 30ff 	add.w	r0, r0, #4294967295
  404334:	d1f5      	bne.n	404322 <_malloc_r+0x452>
  404336:	687b      	ldr	r3, [r7, #4]
  404338:	ea23 0304 	bic.w	r3, r3, r4
  40433c:	607b      	str	r3, [r7, #4]
  40433e:	0064      	lsls	r4, r4, #1
  404340:	429c      	cmp	r4, r3
  404342:	f63f aebd 	bhi.w	4040c0 <_malloc_r+0x1f0>
  404346:	2c00      	cmp	r4, #0
  404348:	f43f aeba 	beq.w	4040c0 <_malloc_r+0x1f0>
  40434c:	421c      	tst	r4, r3
  40434e:	4640      	mov	r0, r8
  404350:	f47f ae35 	bne.w	403fbe <_malloc_r+0xee>
  404354:	0064      	lsls	r4, r4, #1
  404356:	421c      	tst	r4, r3
  404358:	f100 0004 	add.w	r0, r0, #4
  40435c:	d0fa      	beq.n	404354 <_malloc_r+0x484>
  40435e:	e62e      	b.n	403fbe <_malloc_r+0xee>
  404360:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404364:	d818      	bhi.n	404398 <_malloc_r+0x4c8>
  404366:	0be8      	lsrs	r0, r5, #15
  404368:	f100 0e78 	add.w	lr, r0, #120	; 0x78
  40436c:	ea4f 034e 	mov.w	r3, lr, lsl #1
  404370:	3077      	adds	r0, #119	; 0x77
  404372:	e5cf      	b.n	403f14 <_malloc_r+0x44>
  404374:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404378:	e6eb      	b.n	404152 <_malloc_r+0x282>
  40437a:	2101      	movs	r1, #1
  40437c:	f8d8 3004 	ldr.w	r3, [r8, #4]
  404380:	1092      	asrs	r2, r2, #2
  404382:	fa01 f202 	lsl.w	r2, r1, r2
  404386:	431a      	orrs	r2, r3
  404388:	f8c8 2004 	str.w	r2, [r8, #4]
  40438c:	4661      	mov	r1, ip
  40438e:	e777      	b.n	404280 <_malloc_r+0x3b0>
  404390:	2301      	movs	r3, #1
  404392:	f8cb 3004 	str.w	r3, [fp, #4]
  404396:	e725      	b.n	4041e4 <_malloc_r+0x314>
  404398:	f240 5254 	movw	r2, #1364	; 0x554
  40439c:	4293      	cmp	r3, r2
  40439e:	d820      	bhi.n	4043e2 <_malloc_r+0x512>
  4043a0:	0ca8      	lsrs	r0, r5, #18
  4043a2:	f100 0e7d 	add.w	lr, r0, #125	; 0x7d
  4043a6:	ea4f 034e 	mov.w	r3, lr, lsl #1
  4043aa:	307c      	adds	r0, #124	; 0x7c
  4043ac:	e5b2      	b.n	403f14 <_malloc_r+0x44>
  4043ae:	3210      	adds	r2, #16
  4043b0:	e6a4      	b.n	4040fc <_malloc_r+0x22c>
  4043b2:	2a54      	cmp	r2, #84	; 0x54
  4043b4:	d826      	bhi.n	404404 <_malloc_r+0x534>
  4043b6:	0b1a      	lsrs	r2, r3, #12
  4043b8:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4043bc:	0049      	lsls	r1, r1, #1
  4043be:	326e      	adds	r2, #110	; 0x6e
  4043c0:	e748      	b.n	404254 <_malloc_r+0x384>
  4043c2:	68bc      	ldr	r4, [r7, #8]
  4043c4:	6862      	ldr	r2, [r4, #4]
  4043c6:	f022 0203 	bic.w	r2, r2, #3
  4043ca:	e705      	b.n	4041d8 <_malloc_r+0x308>
  4043cc:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4043d0:	2800      	cmp	r0, #0
  4043d2:	f47f aea8 	bne.w	404126 <_malloc_r+0x256>
  4043d6:	4442      	add	r2, r8
  4043d8:	68bb      	ldr	r3, [r7, #8]
  4043da:	f042 0201 	orr.w	r2, r2, #1
  4043de:	605a      	str	r2, [r3, #4]
  4043e0:	e6ec      	b.n	4041bc <_malloc_r+0x2ec>
  4043e2:	23fe      	movs	r3, #254	; 0xfe
  4043e4:	f04f 0e7f 	mov.w	lr, #127	; 0x7f
  4043e8:	207e      	movs	r0, #126	; 0x7e
  4043ea:	e593      	b.n	403f14 <_malloc_r+0x44>
  4043ec:	2201      	movs	r2, #1
  4043ee:	f04f 0900 	mov.w	r9, #0
  4043f2:	e6c1      	b.n	404178 <_malloc_r+0x2a8>
  4043f4:	f104 0108 	add.w	r1, r4, #8
  4043f8:	4630      	mov	r0, r6
  4043fa:	f000 fdff 	bl	404ffc <_free_r>
  4043fe:	f8d9 1000 	ldr.w	r1, [r9]
  404402:	e6db      	b.n	4041bc <_malloc_r+0x2ec>
  404404:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404408:	d805      	bhi.n	404416 <_malloc_r+0x546>
  40440a:	0bda      	lsrs	r2, r3, #15
  40440c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404410:	0049      	lsls	r1, r1, #1
  404412:	3277      	adds	r2, #119	; 0x77
  404414:	e71e      	b.n	404254 <_malloc_r+0x384>
  404416:	f240 5154 	movw	r1, #1364	; 0x554
  40441a:	428a      	cmp	r2, r1
  40441c:	d805      	bhi.n	40442a <_malloc_r+0x55a>
  40441e:	0c9a      	lsrs	r2, r3, #18
  404420:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404424:	0049      	lsls	r1, r1, #1
  404426:	327c      	adds	r2, #124	; 0x7c
  404428:	e714      	b.n	404254 <_malloc_r+0x384>
  40442a:	21fe      	movs	r1, #254	; 0xfe
  40442c:	227e      	movs	r2, #126	; 0x7e
  40442e:	e711      	b.n	404254 <_malloc_r+0x384>
  404430:	687b      	ldr	r3, [r7, #4]
  404432:	e784      	b.n	40433e <_malloc_r+0x46e>
  404434:	08e8      	lsrs	r0, r5, #3
  404436:	1c43      	adds	r3, r0, #1
  404438:	005b      	lsls	r3, r3, #1
  40443a:	e5f8      	b.n	40402e <_malloc_r+0x15e>
  40443c:	2000047c 	.word	0x2000047c

00404440 <memchr>:
  404440:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404444:	2a10      	cmp	r2, #16
  404446:	db2b      	blt.n	4044a0 <memchr+0x60>
  404448:	f010 0f07 	tst.w	r0, #7
  40444c:	d008      	beq.n	404460 <memchr+0x20>
  40444e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404452:	3a01      	subs	r2, #1
  404454:	428b      	cmp	r3, r1
  404456:	d02d      	beq.n	4044b4 <memchr+0x74>
  404458:	f010 0f07 	tst.w	r0, #7
  40445c:	b342      	cbz	r2, 4044b0 <memchr+0x70>
  40445e:	d1f6      	bne.n	40444e <memchr+0xe>
  404460:	b4f0      	push	{r4, r5, r6, r7}
  404462:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404466:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40446a:	f022 0407 	bic.w	r4, r2, #7
  40446e:	f07f 0700 	mvns.w	r7, #0
  404472:	2300      	movs	r3, #0
  404474:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404478:	3c08      	subs	r4, #8
  40447a:	ea85 0501 	eor.w	r5, r5, r1
  40447e:	ea86 0601 	eor.w	r6, r6, r1
  404482:	fa85 f547 	uadd8	r5, r5, r7
  404486:	faa3 f587 	sel	r5, r3, r7
  40448a:	fa86 f647 	uadd8	r6, r6, r7
  40448e:	faa5 f687 	sel	r6, r5, r7
  404492:	b98e      	cbnz	r6, 4044b8 <memchr+0x78>
  404494:	d1ee      	bne.n	404474 <memchr+0x34>
  404496:	bcf0      	pop	{r4, r5, r6, r7}
  404498:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40449c:	f002 0207 	and.w	r2, r2, #7
  4044a0:	b132      	cbz	r2, 4044b0 <memchr+0x70>
  4044a2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4044a6:	3a01      	subs	r2, #1
  4044a8:	ea83 0301 	eor.w	r3, r3, r1
  4044ac:	b113      	cbz	r3, 4044b4 <memchr+0x74>
  4044ae:	d1f8      	bne.n	4044a2 <memchr+0x62>
  4044b0:	2000      	movs	r0, #0
  4044b2:	4770      	bx	lr
  4044b4:	3801      	subs	r0, #1
  4044b6:	4770      	bx	lr
  4044b8:	2d00      	cmp	r5, #0
  4044ba:	bf06      	itte	eq
  4044bc:	4635      	moveq	r5, r6
  4044be:	3803      	subeq	r0, #3
  4044c0:	3807      	subne	r0, #7
  4044c2:	f015 0f01 	tst.w	r5, #1
  4044c6:	d107      	bne.n	4044d8 <memchr+0x98>
  4044c8:	3001      	adds	r0, #1
  4044ca:	f415 7f80 	tst.w	r5, #256	; 0x100
  4044ce:	bf02      	ittt	eq
  4044d0:	3001      	addeq	r0, #1
  4044d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4044d6:	3001      	addeq	r0, #1
  4044d8:	bcf0      	pop	{r4, r5, r6, r7}
  4044da:	3801      	subs	r0, #1
  4044dc:	4770      	bx	lr
  4044de:	bf00      	nop

004044e0 <memcpy>:
  4044e0:	4684      	mov	ip, r0
  4044e2:	ea41 0300 	orr.w	r3, r1, r0
  4044e6:	f013 0303 	ands.w	r3, r3, #3
  4044ea:	d16d      	bne.n	4045c8 <memcpy+0xe8>
  4044ec:	3a40      	subs	r2, #64	; 0x40
  4044ee:	d341      	bcc.n	404574 <memcpy+0x94>
  4044f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4044f4:	f840 3b04 	str.w	r3, [r0], #4
  4044f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4044fc:	f840 3b04 	str.w	r3, [r0], #4
  404500:	f851 3b04 	ldr.w	r3, [r1], #4
  404504:	f840 3b04 	str.w	r3, [r0], #4
  404508:	f851 3b04 	ldr.w	r3, [r1], #4
  40450c:	f840 3b04 	str.w	r3, [r0], #4
  404510:	f851 3b04 	ldr.w	r3, [r1], #4
  404514:	f840 3b04 	str.w	r3, [r0], #4
  404518:	f851 3b04 	ldr.w	r3, [r1], #4
  40451c:	f840 3b04 	str.w	r3, [r0], #4
  404520:	f851 3b04 	ldr.w	r3, [r1], #4
  404524:	f840 3b04 	str.w	r3, [r0], #4
  404528:	f851 3b04 	ldr.w	r3, [r1], #4
  40452c:	f840 3b04 	str.w	r3, [r0], #4
  404530:	f851 3b04 	ldr.w	r3, [r1], #4
  404534:	f840 3b04 	str.w	r3, [r0], #4
  404538:	f851 3b04 	ldr.w	r3, [r1], #4
  40453c:	f840 3b04 	str.w	r3, [r0], #4
  404540:	f851 3b04 	ldr.w	r3, [r1], #4
  404544:	f840 3b04 	str.w	r3, [r0], #4
  404548:	f851 3b04 	ldr.w	r3, [r1], #4
  40454c:	f840 3b04 	str.w	r3, [r0], #4
  404550:	f851 3b04 	ldr.w	r3, [r1], #4
  404554:	f840 3b04 	str.w	r3, [r0], #4
  404558:	f851 3b04 	ldr.w	r3, [r1], #4
  40455c:	f840 3b04 	str.w	r3, [r0], #4
  404560:	f851 3b04 	ldr.w	r3, [r1], #4
  404564:	f840 3b04 	str.w	r3, [r0], #4
  404568:	f851 3b04 	ldr.w	r3, [r1], #4
  40456c:	f840 3b04 	str.w	r3, [r0], #4
  404570:	3a40      	subs	r2, #64	; 0x40
  404572:	d2bd      	bcs.n	4044f0 <memcpy+0x10>
  404574:	3230      	adds	r2, #48	; 0x30
  404576:	d311      	bcc.n	40459c <memcpy+0xbc>
  404578:	f851 3b04 	ldr.w	r3, [r1], #4
  40457c:	f840 3b04 	str.w	r3, [r0], #4
  404580:	f851 3b04 	ldr.w	r3, [r1], #4
  404584:	f840 3b04 	str.w	r3, [r0], #4
  404588:	f851 3b04 	ldr.w	r3, [r1], #4
  40458c:	f840 3b04 	str.w	r3, [r0], #4
  404590:	f851 3b04 	ldr.w	r3, [r1], #4
  404594:	f840 3b04 	str.w	r3, [r0], #4
  404598:	3a10      	subs	r2, #16
  40459a:	d2ed      	bcs.n	404578 <memcpy+0x98>
  40459c:	320c      	adds	r2, #12
  40459e:	d305      	bcc.n	4045ac <memcpy+0xcc>
  4045a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045a4:	f840 3b04 	str.w	r3, [r0], #4
  4045a8:	3a04      	subs	r2, #4
  4045aa:	d2f9      	bcs.n	4045a0 <memcpy+0xc0>
  4045ac:	3204      	adds	r2, #4
  4045ae:	d008      	beq.n	4045c2 <memcpy+0xe2>
  4045b0:	07d2      	lsls	r2, r2, #31
  4045b2:	bf1c      	itt	ne
  4045b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4045b8:	f800 3b01 	strbne.w	r3, [r0], #1
  4045bc:	d301      	bcc.n	4045c2 <memcpy+0xe2>
  4045be:	880b      	ldrh	r3, [r1, #0]
  4045c0:	8003      	strh	r3, [r0, #0]
  4045c2:	4660      	mov	r0, ip
  4045c4:	4770      	bx	lr
  4045c6:	bf00      	nop
  4045c8:	2a08      	cmp	r2, #8
  4045ca:	d313      	bcc.n	4045f4 <memcpy+0x114>
  4045cc:	078b      	lsls	r3, r1, #30
  4045ce:	d08d      	beq.n	4044ec <memcpy+0xc>
  4045d0:	f010 0303 	ands.w	r3, r0, #3
  4045d4:	d08a      	beq.n	4044ec <memcpy+0xc>
  4045d6:	f1c3 0304 	rsb	r3, r3, #4
  4045da:	1ad2      	subs	r2, r2, r3
  4045dc:	07db      	lsls	r3, r3, #31
  4045de:	bf1c      	itt	ne
  4045e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4045e4:	f800 3b01 	strbne.w	r3, [r0], #1
  4045e8:	d380      	bcc.n	4044ec <memcpy+0xc>
  4045ea:	f831 3b02 	ldrh.w	r3, [r1], #2
  4045ee:	f820 3b02 	strh.w	r3, [r0], #2
  4045f2:	e77b      	b.n	4044ec <memcpy+0xc>
  4045f4:	3a04      	subs	r2, #4
  4045f6:	d3d9      	bcc.n	4045ac <memcpy+0xcc>
  4045f8:	3a01      	subs	r2, #1
  4045fa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4045fe:	f800 3b01 	strb.w	r3, [r0], #1
  404602:	d2f9      	bcs.n	4045f8 <memcpy+0x118>
  404604:	780b      	ldrb	r3, [r1, #0]
  404606:	7003      	strb	r3, [r0, #0]
  404608:	784b      	ldrb	r3, [r1, #1]
  40460a:	7043      	strb	r3, [r0, #1]
  40460c:	788b      	ldrb	r3, [r1, #2]
  40460e:	7083      	strb	r3, [r0, #2]
  404610:	4660      	mov	r0, ip
  404612:	4770      	bx	lr

00404614 <__malloc_lock>:
  404614:	4770      	bx	lr
  404616:	bf00      	nop

00404618 <__malloc_unlock>:
  404618:	4770      	bx	lr
  40461a:	bf00      	nop

0040461c <_Balloc>:
  40461c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40461e:	b570      	push	{r4, r5, r6, lr}
  404620:	4605      	mov	r5, r0
  404622:	460c      	mov	r4, r1
  404624:	b14b      	cbz	r3, 40463a <_Balloc+0x1e>
  404626:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40462a:	b180      	cbz	r0, 40464e <_Balloc+0x32>
  40462c:	6802      	ldr	r2, [r0, #0]
  40462e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404632:	2300      	movs	r3, #0
  404634:	6103      	str	r3, [r0, #16]
  404636:	60c3      	str	r3, [r0, #12]
  404638:	bd70      	pop	{r4, r5, r6, pc}
  40463a:	2221      	movs	r2, #33	; 0x21
  40463c:	2104      	movs	r1, #4
  40463e:	f000 fc5f 	bl	404f00 <_calloc_r>
  404642:	64e8      	str	r0, [r5, #76]	; 0x4c
  404644:	4603      	mov	r3, r0
  404646:	2800      	cmp	r0, #0
  404648:	d1ed      	bne.n	404626 <_Balloc+0xa>
  40464a:	2000      	movs	r0, #0
  40464c:	bd70      	pop	{r4, r5, r6, pc}
  40464e:	2101      	movs	r1, #1
  404650:	fa01 f604 	lsl.w	r6, r1, r4
  404654:	1d72      	adds	r2, r6, #5
  404656:	4628      	mov	r0, r5
  404658:	0092      	lsls	r2, r2, #2
  40465a:	f000 fc51 	bl	404f00 <_calloc_r>
  40465e:	2800      	cmp	r0, #0
  404660:	d0f3      	beq.n	40464a <_Balloc+0x2e>
  404662:	6044      	str	r4, [r0, #4]
  404664:	6086      	str	r6, [r0, #8]
  404666:	e7e4      	b.n	404632 <_Balloc+0x16>

00404668 <_Bfree>:
  404668:	b131      	cbz	r1, 404678 <_Bfree+0x10>
  40466a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40466c:	684a      	ldr	r2, [r1, #4]
  40466e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404672:	6008      	str	r0, [r1, #0]
  404674:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404678:	4770      	bx	lr
  40467a:	bf00      	nop

0040467c <__multadd>:
  40467c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40467e:	690c      	ldr	r4, [r1, #16]
  404680:	b083      	sub	sp, #12
  404682:	460d      	mov	r5, r1
  404684:	4606      	mov	r6, r0
  404686:	f101 0e14 	add.w	lr, r1, #20
  40468a:	2700      	movs	r7, #0
  40468c:	f8de 0000 	ldr.w	r0, [lr]
  404690:	b281      	uxth	r1, r0
  404692:	fb02 3101 	mla	r1, r2, r1, r3
  404696:	0c0b      	lsrs	r3, r1, #16
  404698:	0c00      	lsrs	r0, r0, #16
  40469a:	fb02 3300 	mla	r3, r2, r0, r3
  40469e:	b289      	uxth	r1, r1
  4046a0:	3701      	adds	r7, #1
  4046a2:	eb01 4103 	add.w	r1, r1, r3, lsl #16
  4046a6:	42bc      	cmp	r4, r7
  4046a8:	f84e 1b04 	str.w	r1, [lr], #4
  4046ac:	ea4f 4313 	mov.w	r3, r3, lsr #16
  4046b0:	dcec      	bgt.n	40468c <__multadd+0x10>
  4046b2:	b13b      	cbz	r3, 4046c4 <__multadd+0x48>
  4046b4:	68aa      	ldr	r2, [r5, #8]
  4046b6:	4294      	cmp	r4, r2
  4046b8:	da07      	bge.n	4046ca <__multadd+0x4e>
  4046ba:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4046be:	3401      	adds	r4, #1
  4046c0:	6153      	str	r3, [r2, #20]
  4046c2:	612c      	str	r4, [r5, #16]
  4046c4:	4628      	mov	r0, r5
  4046c6:	b003      	add	sp, #12
  4046c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4046ca:	6869      	ldr	r1, [r5, #4]
  4046cc:	9301      	str	r3, [sp, #4]
  4046ce:	3101      	adds	r1, #1
  4046d0:	4630      	mov	r0, r6
  4046d2:	f7ff ffa3 	bl	40461c <_Balloc>
  4046d6:	692a      	ldr	r2, [r5, #16]
  4046d8:	3202      	adds	r2, #2
  4046da:	f105 010c 	add.w	r1, r5, #12
  4046de:	4607      	mov	r7, r0
  4046e0:	0092      	lsls	r2, r2, #2
  4046e2:	300c      	adds	r0, #12
  4046e4:	f7ff fefc 	bl	4044e0 <memcpy>
  4046e8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4046ea:	6869      	ldr	r1, [r5, #4]
  4046ec:	9b01      	ldr	r3, [sp, #4]
  4046ee:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4046f2:	6028      	str	r0, [r5, #0]
  4046f4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4046f8:	463d      	mov	r5, r7
  4046fa:	e7de      	b.n	4046ba <__multadd+0x3e>

004046fc <__hi0bits>:
  4046fc:	0c03      	lsrs	r3, r0, #16
  4046fe:	041b      	lsls	r3, r3, #16
  404700:	b9b3      	cbnz	r3, 404730 <__hi0bits+0x34>
  404702:	0400      	lsls	r0, r0, #16
  404704:	2310      	movs	r3, #16
  404706:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  40470a:	bf04      	itt	eq
  40470c:	0200      	lsleq	r0, r0, #8
  40470e:	3308      	addeq	r3, #8
  404710:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  404714:	bf04      	itt	eq
  404716:	0100      	lsleq	r0, r0, #4
  404718:	3304      	addeq	r3, #4
  40471a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  40471e:	bf04      	itt	eq
  404720:	0080      	lsleq	r0, r0, #2
  404722:	3302      	addeq	r3, #2
  404724:	2800      	cmp	r0, #0
  404726:	db07      	blt.n	404738 <__hi0bits+0x3c>
  404728:	0042      	lsls	r2, r0, #1
  40472a:	d403      	bmi.n	404734 <__hi0bits+0x38>
  40472c:	2020      	movs	r0, #32
  40472e:	4770      	bx	lr
  404730:	2300      	movs	r3, #0
  404732:	e7e8      	b.n	404706 <__hi0bits+0xa>
  404734:	1c58      	adds	r0, r3, #1
  404736:	4770      	bx	lr
  404738:	4618      	mov	r0, r3
  40473a:	4770      	bx	lr

0040473c <__lo0bits>:
  40473c:	6803      	ldr	r3, [r0, #0]
  40473e:	f013 0207 	ands.w	r2, r3, #7
  404742:	d007      	beq.n	404754 <__lo0bits+0x18>
  404744:	07d9      	lsls	r1, r3, #31
  404746:	d420      	bmi.n	40478a <__lo0bits+0x4e>
  404748:	079a      	lsls	r2, r3, #30
  40474a:	d420      	bmi.n	40478e <__lo0bits+0x52>
  40474c:	089b      	lsrs	r3, r3, #2
  40474e:	6003      	str	r3, [r0, #0]
  404750:	2002      	movs	r0, #2
  404752:	4770      	bx	lr
  404754:	b299      	uxth	r1, r3
  404756:	b909      	cbnz	r1, 40475c <__lo0bits+0x20>
  404758:	0c1b      	lsrs	r3, r3, #16
  40475a:	2210      	movs	r2, #16
  40475c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404760:	bf04      	itt	eq
  404762:	0a1b      	lsreq	r3, r3, #8
  404764:	3208      	addeq	r2, #8
  404766:	0719      	lsls	r1, r3, #28
  404768:	bf04      	itt	eq
  40476a:	091b      	lsreq	r3, r3, #4
  40476c:	3204      	addeq	r2, #4
  40476e:	0799      	lsls	r1, r3, #30
  404770:	bf04      	itt	eq
  404772:	089b      	lsreq	r3, r3, #2
  404774:	3202      	addeq	r2, #2
  404776:	07d9      	lsls	r1, r3, #31
  404778:	d404      	bmi.n	404784 <__lo0bits+0x48>
  40477a:	085b      	lsrs	r3, r3, #1
  40477c:	d101      	bne.n	404782 <__lo0bits+0x46>
  40477e:	2020      	movs	r0, #32
  404780:	4770      	bx	lr
  404782:	3201      	adds	r2, #1
  404784:	6003      	str	r3, [r0, #0]
  404786:	4610      	mov	r0, r2
  404788:	4770      	bx	lr
  40478a:	2000      	movs	r0, #0
  40478c:	4770      	bx	lr
  40478e:	085b      	lsrs	r3, r3, #1
  404790:	6003      	str	r3, [r0, #0]
  404792:	2001      	movs	r0, #1
  404794:	4770      	bx	lr
  404796:	bf00      	nop

00404798 <__i2b>:
  404798:	b510      	push	{r4, lr}
  40479a:	460c      	mov	r4, r1
  40479c:	2101      	movs	r1, #1
  40479e:	f7ff ff3d 	bl	40461c <_Balloc>
  4047a2:	2201      	movs	r2, #1
  4047a4:	6144      	str	r4, [r0, #20]
  4047a6:	6102      	str	r2, [r0, #16]
  4047a8:	bd10      	pop	{r4, pc}
  4047aa:	bf00      	nop

004047ac <__multiply>:
  4047ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047b0:	690d      	ldr	r5, [r1, #16]
  4047b2:	6917      	ldr	r7, [r2, #16]
  4047b4:	42bd      	cmp	r5, r7
  4047b6:	b083      	sub	sp, #12
  4047b8:	460c      	mov	r4, r1
  4047ba:	4616      	mov	r6, r2
  4047bc:	da04      	bge.n	4047c8 <__multiply+0x1c>
  4047be:	462a      	mov	r2, r5
  4047c0:	4634      	mov	r4, r6
  4047c2:	463d      	mov	r5, r7
  4047c4:	460e      	mov	r6, r1
  4047c6:	4617      	mov	r7, r2
  4047c8:	68a3      	ldr	r3, [r4, #8]
  4047ca:	6861      	ldr	r1, [r4, #4]
  4047cc:	eb05 0807 	add.w	r8, r5, r7
  4047d0:	4598      	cmp	r8, r3
  4047d2:	bfc8      	it	gt
  4047d4:	3101      	addgt	r1, #1
  4047d6:	f7ff ff21 	bl	40461c <_Balloc>
  4047da:	f100 0c14 	add.w	ip, r0, #20
  4047de:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
  4047e2:	45cc      	cmp	ip, r9
  4047e4:	9000      	str	r0, [sp, #0]
  4047e6:	d205      	bcs.n	4047f4 <__multiply+0x48>
  4047e8:	4663      	mov	r3, ip
  4047ea:	2100      	movs	r1, #0
  4047ec:	f843 1b04 	str.w	r1, [r3], #4
  4047f0:	4599      	cmp	r9, r3
  4047f2:	d8fb      	bhi.n	4047ec <__multiply+0x40>
  4047f4:	f106 0214 	add.w	r2, r6, #20
  4047f8:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
  4047fc:	f104 0314 	add.w	r3, r4, #20
  404800:	4552      	cmp	r2, sl
  404802:	eb03 0e85 	add.w	lr, r3, r5, lsl #2
  404806:	d254      	bcs.n	4048b2 <__multiply+0x106>
  404808:	f8cd 9004 	str.w	r9, [sp, #4]
  40480c:	4699      	mov	r9, r3
  40480e:	f852 3b04 	ldr.w	r3, [r2], #4
  404812:	fa1f fb83 	uxth.w	fp, r3
  404816:	f1bb 0f00 	cmp.w	fp, #0
  40481a:	d020      	beq.n	40485e <__multiply+0xb2>
  40481c:	2000      	movs	r0, #0
  40481e:	464f      	mov	r7, r9
  404820:	4666      	mov	r6, ip
  404822:	4605      	mov	r5, r0
  404824:	e000      	b.n	404828 <__multiply+0x7c>
  404826:	461e      	mov	r6, r3
  404828:	f857 4b04 	ldr.w	r4, [r7], #4
  40482c:	6830      	ldr	r0, [r6, #0]
  40482e:	b2a1      	uxth	r1, r4
  404830:	b283      	uxth	r3, r0
  404832:	fb0b 3101 	mla	r1, fp, r1, r3
  404836:	0c24      	lsrs	r4, r4, #16
  404838:	0c00      	lsrs	r0, r0, #16
  40483a:	194b      	adds	r3, r1, r5
  40483c:	fb0b 0004 	mla	r0, fp, r4, r0
  404840:	eb00 4013 	add.w	r0, r0, r3, lsr #16
  404844:	b299      	uxth	r1, r3
  404846:	4633      	mov	r3, r6
  404848:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
  40484c:	45be      	cmp	lr, r7
  40484e:	ea4f 4510 	mov.w	r5, r0, lsr #16
  404852:	f843 1b04 	str.w	r1, [r3], #4
  404856:	d8e6      	bhi.n	404826 <__multiply+0x7a>
  404858:	6075      	str	r5, [r6, #4]
  40485a:	f852 3c04 	ldr.w	r3, [r2, #-4]
  40485e:	ea5f 4b13 	movs.w	fp, r3, lsr #16
  404862:	d020      	beq.n	4048a6 <__multiply+0xfa>
  404864:	f8dc 3000 	ldr.w	r3, [ip]
  404868:	4667      	mov	r7, ip
  40486a:	4618      	mov	r0, r3
  40486c:	464d      	mov	r5, r9
  40486e:	2100      	movs	r1, #0
  404870:	e000      	b.n	404874 <__multiply+0xc8>
  404872:	4637      	mov	r7, r6
  404874:	882c      	ldrh	r4, [r5, #0]
  404876:	0c00      	lsrs	r0, r0, #16
  404878:	fb0b 0004 	mla	r0, fp, r4, r0
  40487c:	4401      	add	r1, r0
  40487e:	b29c      	uxth	r4, r3
  404880:	463e      	mov	r6, r7
  404882:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
  404886:	f846 3b04 	str.w	r3, [r6], #4
  40488a:	6878      	ldr	r0, [r7, #4]
  40488c:	f855 4b04 	ldr.w	r4, [r5], #4
  404890:	b283      	uxth	r3, r0
  404892:	0c24      	lsrs	r4, r4, #16
  404894:	fb0b 3404 	mla	r4, fp, r4, r3
  404898:	eb04 4311 	add.w	r3, r4, r1, lsr #16
  40489c:	45ae      	cmp	lr, r5
  40489e:	ea4f 4113 	mov.w	r1, r3, lsr #16
  4048a2:	d8e6      	bhi.n	404872 <__multiply+0xc6>
  4048a4:	607b      	str	r3, [r7, #4]
  4048a6:	4592      	cmp	sl, r2
  4048a8:	f10c 0c04 	add.w	ip, ip, #4
  4048ac:	d8af      	bhi.n	40480e <__multiply+0x62>
  4048ae:	f8dd 9004 	ldr.w	r9, [sp, #4]
  4048b2:	f1b8 0f00 	cmp.w	r8, #0
  4048b6:	dd0b      	ble.n	4048d0 <__multiply+0x124>
  4048b8:	f859 3c04 	ldr.w	r3, [r9, #-4]
  4048bc:	f1a9 0904 	sub.w	r9, r9, #4
  4048c0:	b11b      	cbz	r3, 4048ca <__multiply+0x11e>
  4048c2:	e005      	b.n	4048d0 <__multiply+0x124>
  4048c4:	f859 3d04 	ldr.w	r3, [r9, #-4]!
  4048c8:	b913      	cbnz	r3, 4048d0 <__multiply+0x124>
  4048ca:	f1b8 0801 	subs.w	r8, r8, #1
  4048ce:	d1f9      	bne.n	4048c4 <__multiply+0x118>
  4048d0:	9800      	ldr	r0, [sp, #0]
  4048d2:	f8c0 8010 	str.w	r8, [r0, #16]
  4048d6:	b003      	add	sp, #12
  4048d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004048dc <__pow5mult>:
  4048dc:	f012 0303 	ands.w	r3, r2, #3
  4048e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4048e4:	4614      	mov	r4, r2
  4048e6:	4607      	mov	r7, r0
  4048e8:	d12e      	bne.n	404948 <__pow5mult+0x6c>
  4048ea:	460e      	mov	r6, r1
  4048ec:	10a4      	asrs	r4, r4, #2
  4048ee:	d01c      	beq.n	40492a <__pow5mult+0x4e>
  4048f0:	6cbd      	ldr	r5, [r7, #72]	; 0x48
  4048f2:	b395      	cbz	r5, 40495a <__pow5mult+0x7e>
  4048f4:	07e3      	lsls	r3, r4, #31
  4048f6:	f04f 0800 	mov.w	r8, #0
  4048fa:	d406      	bmi.n	40490a <__pow5mult+0x2e>
  4048fc:	1064      	asrs	r4, r4, #1
  4048fe:	d014      	beq.n	40492a <__pow5mult+0x4e>
  404900:	6828      	ldr	r0, [r5, #0]
  404902:	b1a8      	cbz	r0, 404930 <__pow5mult+0x54>
  404904:	4605      	mov	r5, r0
  404906:	07e3      	lsls	r3, r4, #31
  404908:	d5f8      	bpl.n	4048fc <__pow5mult+0x20>
  40490a:	462a      	mov	r2, r5
  40490c:	4631      	mov	r1, r6
  40490e:	4638      	mov	r0, r7
  404910:	f7ff ff4c 	bl	4047ac <__multiply>
  404914:	b1b6      	cbz	r6, 404944 <__pow5mult+0x68>
  404916:	6872      	ldr	r2, [r6, #4]
  404918:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40491a:	1064      	asrs	r4, r4, #1
  40491c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404920:	6031      	str	r1, [r6, #0]
  404922:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404926:	4606      	mov	r6, r0
  404928:	d1ea      	bne.n	404900 <__pow5mult+0x24>
  40492a:	4630      	mov	r0, r6
  40492c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404930:	462a      	mov	r2, r5
  404932:	4629      	mov	r1, r5
  404934:	4638      	mov	r0, r7
  404936:	f7ff ff39 	bl	4047ac <__multiply>
  40493a:	6028      	str	r0, [r5, #0]
  40493c:	f8c0 8000 	str.w	r8, [r0]
  404940:	4605      	mov	r5, r0
  404942:	e7e0      	b.n	404906 <__pow5mult+0x2a>
  404944:	4606      	mov	r6, r0
  404946:	e7d9      	b.n	4048fc <__pow5mult+0x20>
  404948:	1e5a      	subs	r2, r3, #1
  40494a:	4d0b      	ldr	r5, [pc, #44]	; (404978 <__pow5mult+0x9c>)
  40494c:	2300      	movs	r3, #0
  40494e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404952:	f7ff fe93 	bl	40467c <__multadd>
  404956:	4606      	mov	r6, r0
  404958:	e7c8      	b.n	4048ec <__pow5mult+0x10>
  40495a:	2101      	movs	r1, #1
  40495c:	4638      	mov	r0, r7
  40495e:	f7ff fe5d 	bl	40461c <_Balloc>
  404962:	f240 2171 	movw	r1, #625	; 0x271
  404966:	2201      	movs	r2, #1
  404968:	2300      	movs	r3, #0
  40496a:	6141      	str	r1, [r0, #20]
  40496c:	6102      	str	r2, [r0, #16]
  40496e:	4605      	mov	r5, r0
  404970:	64b8      	str	r0, [r7, #72]	; 0x48
  404972:	6003      	str	r3, [r0, #0]
  404974:	e7be      	b.n	4048f4 <__pow5mult+0x18>
  404976:	bf00      	nop
  404978:	00406ba8 	.word	0x00406ba8

0040497c <__lshift>:
  40497c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404980:	4691      	mov	r9, r2
  404982:	690a      	ldr	r2, [r1, #16]
  404984:	688b      	ldr	r3, [r1, #8]
  404986:	ea4f 1469 	mov.w	r4, r9, asr #5
  40498a:	eb04 0802 	add.w	r8, r4, r2
  40498e:	f108 0501 	add.w	r5, r8, #1
  404992:	429d      	cmp	r5, r3
  404994:	460e      	mov	r6, r1
  404996:	4682      	mov	sl, r0
  404998:	6849      	ldr	r1, [r1, #4]
  40499a:	dd04      	ble.n	4049a6 <__lshift+0x2a>
  40499c:	005b      	lsls	r3, r3, #1
  40499e:	429d      	cmp	r5, r3
  4049a0:	f101 0101 	add.w	r1, r1, #1
  4049a4:	dcfa      	bgt.n	40499c <__lshift+0x20>
  4049a6:	4650      	mov	r0, sl
  4049a8:	f7ff fe38 	bl	40461c <_Balloc>
  4049ac:	2c00      	cmp	r4, #0
  4049ae:	f100 0214 	add.w	r2, r0, #20
  4049b2:	dd38      	ble.n	404a26 <__lshift+0xaa>
  4049b4:	eb02 0384 	add.w	r3, r2, r4, lsl #2
  4049b8:	2100      	movs	r1, #0
  4049ba:	f842 1b04 	str.w	r1, [r2], #4
  4049be:	4293      	cmp	r3, r2
  4049c0:	d1fb      	bne.n	4049ba <__lshift+0x3e>
  4049c2:	6934      	ldr	r4, [r6, #16]
  4049c4:	f106 0114 	add.w	r1, r6, #20
  4049c8:	f019 091f 	ands.w	r9, r9, #31
  4049cc:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4049d0:	d021      	beq.n	404a16 <__lshift+0x9a>
  4049d2:	f1c9 0220 	rsb	r2, r9, #32
  4049d6:	2400      	movs	r4, #0
  4049d8:	680f      	ldr	r7, [r1, #0]
  4049da:	fa07 fc09 	lsl.w	ip, r7, r9
  4049de:	ea4c 0404 	orr.w	r4, ip, r4
  4049e2:	469c      	mov	ip, r3
  4049e4:	f843 4b04 	str.w	r4, [r3], #4
  4049e8:	f851 4b04 	ldr.w	r4, [r1], #4
  4049ec:	458e      	cmp	lr, r1
  4049ee:	fa24 f402 	lsr.w	r4, r4, r2
  4049f2:	d8f1      	bhi.n	4049d8 <__lshift+0x5c>
  4049f4:	f8cc 4004 	str.w	r4, [ip, #4]
  4049f8:	b10c      	cbz	r4, 4049fe <__lshift+0x82>
  4049fa:	f108 0502 	add.w	r5, r8, #2
  4049fe:	f8da 304c 	ldr.w	r3, [sl, #76]	; 0x4c
  404a02:	6872      	ldr	r2, [r6, #4]
  404a04:	3d01      	subs	r5, #1
  404a06:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404a0a:	6105      	str	r5, [r0, #16]
  404a0c:	6031      	str	r1, [r6, #0]
  404a0e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404a16:	3b04      	subs	r3, #4
  404a18:	f851 2b04 	ldr.w	r2, [r1], #4
  404a1c:	f843 2f04 	str.w	r2, [r3, #4]!
  404a20:	458e      	cmp	lr, r1
  404a22:	d8f9      	bhi.n	404a18 <__lshift+0x9c>
  404a24:	e7eb      	b.n	4049fe <__lshift+0x82>
  404a26:	4613      	mov	r3, r2
  404a28:	e7cb      	b.n	4049c2 <__lshift+0x46>
  404a2a:	bf00      	nop

00404a2c <__mcmp>:
  404a2c:	6902      	ldr	r2, [r0, #16]
  404a2e:	690b      	ldr	r3, [r1, #16]
  404a30:	1ad2      	subs	r2, r2, r3
  404a32:	d112      	bne.n	404a5a <__mcmp+0x2e>
  404a34:	009b      	lsls	r3, r3, #2
  404a36:	3014      	adds	r0, #20
  404a38:	3114      	adds	r1, #20
  404a3a:	4419      	add	r1, r3
  404a3c:	b410      	push	{r4}
  404a3e:	4403      	add	r3, r0
  404a40:	e001      	b.n	404a46 <__mcmp+0x1a>
  404a42:	4298      	cmp	r0, r3
  404a44:	d20b      	bcs.n	404a5e <__mcmp+0x32>
  404a46:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404a4a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404a4e:	4294      	cmp	r4, r2
  404a50:	d0f7      	beq.n	404a42 <__mcmp+0x16>
  404a52:	d307      	bcc.n	404a64 <__mcmp+0x38>
  404a54:	2001      	movs	r0, #1
  404a56:	bc10      	pop	{r4}
  404a58:	4770      	bx	lr
  404a5a:	4610      	mov	r0, r2
  404a5c:	4770      	bx	lr
  404a5e:	2000      	movs	r0, #0
  404a60:	bc10      	pop	{r4}
  404a62:	4770      	bx	lr
  404a64:	f04f 30ff 	mov.w	r0, #4294967295
  404a68:	e7f5      	b.n	404a56 <__mcmp+0x2a>
  404a6a:	bf00      	nop

00404a6c <__mdiff>:
  404a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404a70:	690b      	ldr	r3, [r1, #16]
  404a72:	460f      	mov	r7, r1
  404a74:	6911      	ldr	r1, [r2, #16]
  404a76:	1a5b      	subs	r3, r3, r1
  404a78:	2b00      	cmp	r3, #0
  404a7a:	4690      	mov	r8, r2
  404a7c:	d117      	bne.n	404aae <__mdiff+0x42>
  404a7e:	0089      	lsls	r1, r1, #2
  404a80:	f107 0214 	add.w	r2, r7, #20
  404a84:	f108 0514 	add.w	r5, r8, #20
  404a88:	1853      	adds	r3, r2, r1
  404a8a:	4429      	add	r1, r5
  404a8c:	e001      	b.n	404a92 <__mdiff+0x26>
  404a8e:	429a      	cmp	r2, r3
  404a90:	d25e      	bcs.n	404b50 <__mdiff+0xe4>
  404a92:	f853 6d04 	ldr.w	r6, [r3, #-4]!
  404a96:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404a9a:	42a6      	cmp	r6, r4
  404a9c:	d0f7      	beq.n	404a8e <__mdiff+0x22>
  404a9e:	d260      	bcs.n	404b62 <__mdiff+0xf6>
  404aa0:	463b      	mov	r3, r7
  404aa2:	4614      	mov	r4, r2
  404aa4:	4647      	mov	r7, r8
  404aa6:	f04f 0901 	mov.w	r9, #1
  404aaa:	4698      	mov	r8, r3
  404aac:	e006      	b.n	404abc <__mdiff+0x50>
  404aae:	db5d      	blt.n	404b6c <__mdiff+0x100>
  404ab0:	f107 0514 	add.w	r5, r7, #20
  404ab4:	f102 0414 	add.w	r4, r2, #20
  404ab8:	f04f 0900 	mov.w	r9, #0
  404abc:	6879      	ldr	r1, [r7, #4]
  404abe:	f7ff fdad 	bl	40461c <_Balloc>
  404ac2:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404ac6:	693e      	ldr	r6, [r7, #16]
  404ac8:	f8c0 900c 	str.w	r9, [r0, #12]
  404acc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404ad0:	46a6      	mov	lr, r4
  404ad2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404ad6:	f100 0414 	add.w	r4, r0, #20
  404ada:	2300      	movs	r3, #0
  404adc:	f85e 1b04 	ldr.w	r1, [lr], #4
  404ae0:	f855 8b04 	ldr.w	r8, [r5], #4
  404ae4:	b28a      	uxth	r2, r1
  404ae6:	fa13 f388 	uxtah	r3, r3, r8
  404aea:	0c09      	lsrs	r1, r1, #16
  404aec:	1a9a      	subs	r2, r3, r2
  404aee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404af2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404af6:	b292      	uxth	r2, r2
  404af8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404afc:	45f4      	cmp	ip, lr
  404afe:	f844 2b04 	str.w	r2, [r4], #4
  404b02:	ea4f 4323 	mov.w	r3, r3, asr #16
  404b06:	d8e9      	bhi.n	404adc <__mdiff+0x70>
  404b08:	42af      	cmp	r7, r5
  404b0a:	d917      	bls.n	404b3c <__mdiff+0xd0>
  404b0c:	46a4      	mov	ip, r4
  404b0e:	4629      	mov	r1, r5
  404b10:	f851 eb04 	ldr.w	lr, [r1], #4
  404b14:	fa13 f28e 	uxtah	r2, r3, lr
  404b18:	1413      	asrs	r3, r2, #16
  404b1a:	eb03 431e 	add.w	r3, r3, lr, lsr #16
  404b1e:	b292      	uxth	r2, r2
  404b20:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404b24:	428f      	cmp	r7, r1
  404b26:	f84c 2b04 	str.w	r2, [ip], #4
  404b2a:	ea4f 4323 	mov.w	r3, r3, asr #16
  404b2e:	d8ef      	bhi.n	404b10 <__mdiff+0xa4>
  404b30:	43ed      	mvns	r5, r5
  404b32:	443d      	add	r5, r7
  404b34:	f025 0503 	bic.w	r5, r5, #3
  404b38:	3504      	adds	r5, #4
  404b3a:	442c      	add	r4, r5
  404b3c:	3c04      	subs	r4, #4
  404b3e:	b922      	cbnz	r2, 404b4a <__mdiff+0xde>
  404b40:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404b44:	3e01      	subs	r6, #1
  404b46:	2b00      	cmp	r3, #0
  404b48:	d0fa      	beq.n	404b40 <__mdiff+0xd4>
  404b4a:	6106      	str	r6, [r0, #16]
  404b4c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404b50:	2100      	movs	r1, #0
  404b52:	f7ff fd63 	bl	40461c <_Balloc>
  404b56:	2201      	movs	r2, #1
  404b58:	2300      	movs	r3, #0
  404b5a:	6102      	str	r2, [r0, #16]
  404b5c:	6143      	str	r3, [r0, #20]
  404b5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404b62:	462c      	mov	r4, r5
  404b64:	f04f 0900 	mov.w	r9, #0
  404b68:	4615      	mov	r5, r2
  404b6a:	e7a7      	b.n	404abc <__mdiff+0x50>
  404b6c:	463b      	mov	r3, r7
  404b6e:	f107 0414 	add.w	r4, r7, #20
  404b72:	f108 0514 	add.w	r5, r8, #20
  404b76:	4647      	mov	r7, r8
  404b78:	f04f 0901 	mov.w	r9, #1
  404b7c:	4698      	mov	r8, r3
  404b7e:	e79d      	b.n	404abc <__mdiff+0x50>

00404b80 <__d2b>:
  404b80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404b84:	b082      	sub	sp, #8
  404b86:	2101      	movs	r1, #1
  404b88:	461c      	mov	r4, r3
  404b8a:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404b8e:	4615      	mov	r5, r2
  404b90:	9e08      	ldr	r6, [sp, #32]
  404b92:	f7ff fd43 	bl	40461c <_Balloc>
  404b96:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404b9a:	4680      	mov	r8, r0
  404b9c:	b10f      	cbz	r7, 404ba2 <__d2b+0x22>
  404b9e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404ba2:	9401      	str	r4, [sp, #4]
  404ba4:	b31d      	cbz	r5, 404bee <__d2b+0x6e>
  404ba6:	a802      	add	r0, sp, #8
  404ba8:	f840 5d08 	str.w	r5, [r0, #-8]!
  404bac:	f7ff fdc6 	bl	40473c <__lo0bits>
  404bb0:	2800      	cmp	r0, #0
  404bb2:	d134      	bne.n	404c1e <__d2b+0x9e>
  404bb4:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404bb8:	f8c8 2014 	str.w	r2, [r8, #20]
  404bbc:	2b00      	cmp	r3, #0
  404bbe:	bf0c      	ite	eq
  404bc0:	2101      	moveq	r1, #1
  404bc2:	2102      	movne	r1, #2
  404bc4:	f8c8 3018 	str.w	r3, [r8, #24]
  404bc8:	f8c8 1010 	str.w	r1, [r8, #16]
  404bcc:	b9df      	cbnz	r7, 404c06 <__d2b+0x86>
  404bce:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404bd2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404bd6:	6030      	str	r0, [r6, #0]
  404bd8:	6918      	ldr	r0, [r3, #16]
  404bda:	f7ff fd8f 	bl	4046fc <__hi0bits>
  404bde:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404be0:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404be4:	6018      	str	r0, [r3, #0]
  404be6:	4640      	mov	r0, r8
  404be8:	b002      	add	sp, #8
  404bea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bee:	a801      	add	r0, sp, #4
  404bf0:	f7ff fda4 	bl	40473c <__lo0bits>
  404bf4:	9b01      	ldr	r3, [sp, #4]
  404bf6:	f8c8 3014 	str.w	r3, [r8, #20]
  404bfa:	2101      	movs	r1, #1
  404bfc:	3020      	adds	r0, #32
  404bfe:	f8c8 1010 	str.w	r1, [r8, #16]
  404c02:	2f00      	cmp	r7, #0
  404c04:	d0e3      	beq.n	404bce <__d2b+0x4e>
  404c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c08:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404c0c:	4407      	add	r7, r0
  404c0e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404c12:	6037      	str	r7, [r6, #0]
  404c14:	6018      	str	r0, [r3, #0]
  404c16:	4640      	mov	r0, r8
  404c18:	b002      	add	sp, #8
  404c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c1e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404c22:	f1c0 0120 	rsb	r1, r0, #32
  404c26:	fa03 f101 	lsl.w	r1, r3, r1
  404c2a:	430a      	orrs	r2, r1
  404c2c:	40c3      	lsrs	r3, r0
  404c2e:	9301      	str	r3, [sp, #4]
  404c30:	f8c8 2014 	str.w	r2, [r8, #20]
  404c34:	e7c2      	b.n	404bbc <__d2b+0x3c>
  404c36:	bf00      	nop

00404c38 <_sbrk_r>:
  404c38:	b538      	push	{r3, r4, r5, lr}
  404c3a:	4c07      	ldr	r4, [pc, #28]	; (404c58 <_sbrk_r+0x20>)
  404c3c:	2300      	movs	r3, #0
  404c3e:	4605      	mov	r5, r0
  404c40:	4608      	mov	r0, r1
  404c42:	6023      	str	r3, [r4, #0]
  404c44:	f7fc fc7a 	bl	40153c <_sbrk>
  404c48:	1c43      	adds	r3, r0, #1
  404c4a:	d000      	beq.n	404c4e <_sbrk_r+0x16>
  404c4c:	bd38      	pop	{r3, r4, r5, pc}
  404c4e:	6823      	ldr	r3, [r4, #0]
  404c50:	2b00      	cmp	r3, #0
  404c52:	d0fb      	beq.n	404c4c <_sbrk_r+0x14>
  404c54:	602b      	str	r3, [r5, #0]
  404c56:	bd38      	pop	{r3, r4, r5, pc}
  404c58:	20000d38 	.word	0x20000d38
	...

00404c80 <strlen>:
  404c80:	f890 f000 	pld	[r0]
  404c84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404c88:	f020 0107 	bic.w	r1, r0, #7
  404c8c:	f06f 0c00 	mvn.w	ip, #0
  404c90:	f010 0407 	ands.w	r4, r0, #7
  404c94:	f891 f020 	pld	[r1, #32]
  404c98:	f040 8049 	bne.w	404d2e <strlen+0xae>
  404c9c:	f04f 0400 	mov.w	r4, #0
  404ca0:	f06f 0007 	mvn.w	r0, #7
  404ca4:	e9d1 2300 	ldrd	r2, r3, [r1]
  404ca8:	f891 f040 	pld	[r1, #64]	; 0x40
  404cac:	f100 0008 	add.w	r0, r0, #8
  404cb0:	fa82 f24c 	uadd8	r2, r2, ip
  404cb4:	faa4 f28c 	sel	r2, r4, ip
  404cb8:	fa83 f34c 	uadd8	r3, r3, ip
  404cbc:	faa2 f38c 	sel	r3, r2, ip
  404cc0:	bb4b      	cbnz	r3, 404d16 <strlen+0x96>
  404cc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404cc6:	fa82 f24c 	uadd8	r2, r2, ip
  404cca:	f100 0008 	add.w	r0, r0, #8
  404cce:	faa4 f28c 	sel	r2, r4, ip
  404cd2:	fa83 f34c 	uadd8	r3, r3, ip
  404cd6:	faa2 f38c 	sel	r3, r2, ip
  404cda:	b9e3      	cbnz	r3, 404d16 <strlen+0x96>
  404cdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404ce0:	fa82 f24c 	uadd8	r2, r2, ip
  404ce4:	f100 0008 	add.w	r0, r0, #8
  404ce8:	faa4 f28c 	sel	r2, r4, ip
  404cec:	fa83 f34c 	uadd8	r3, r3, ip
  404cf0:	faa2 f38c 	sel	r3, r2, ip
  404cf4:	b97b      	cbnz	r3, 404d16 <strlen+0x96>
  404cf6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404cfa:	f101 0120 	add.w	r1, r1, #32
  404cfe:	fa82 f24c 	uadd8	r2, r2, ip
  404d02:	f100 0008 	add.w	r0, r0, #8
  404d06:	faa4 f28c 	sel	r2, r4, ip
  404d0a:	fa83 f34c 	uadd8	r3, r3, ip
  404d0e:	faa2 f38c 	sel	r3, r2, ip
  404d12:	2b00      	cmp	r3, #0
  404d14:	d0c6      	beq.n	404ca4 <strlen+0x24>
  404d16:	2a00      	cmp	r2, #0
  404d18:	bf04      	itt	eq
  404d1a:	3004      	addeq	r0, #4
  404d1c:	461a      	moveq	r2, r3
  404d1e:	ba12      	rev	r2, r2
  404d20:	fab2 f282 	clz	r2, r2
  404d24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404d28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404d2c:	4770      	bx	lr
  404d2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  404d32:	f004 0503 	and.w	r5, r4, #3
  404d36:	f1c4 0000 	rsb	r0, r4, #0
  404d3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404d3e:	f014 0f04 	tst.w	r4, #4
  404d42:	f891 f040 	pld	[r1, #64]	; 0x40
  404d46:	fa0c f505 	lsl.w	r5, ip, r5
  404d4a:	ea62 0205 	orn	r2, r2, r5
  404d4e:	bf1c      	itt	ne
  404d50:	ea63 0305 	ornne	r3, r3, r5
  404d54:	4662      	movne	r2, ip
  404d56:	f04f 0400 	mov.w	r4, #0
  404d5a:	e7a9      	b.n	404cb0 <strlen+0x30>

00404d5c <__ssprint_r>:
  404d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d60:	6893      	ldr	r3, [r2, #8]
  404d62:	b083      	sub	sp, #12
  404d64:	4690      	mov	r8, r2
  404d66:	2b00      	cmp	r3, #0
  404d68:	d072      	beq.n	404e50 <__ssprint_r+0xf4>
  404d6a:	4683      	mov	fp, r0
  404d6c:	f04f 0900 	mov.w	r9, #0
  404d70:	6816      	ldr	r6, [r2, #0]
  404d72:	6808      	ldr	r0, [r1, #0]
  404d74:	688b      	ldr	r3, [r1, #8]
  404d76:	460d      	mov	r5, r1
  404d78:	464c      	mov	r4, r9
  404d7a:	2c00      	cmp	r4, #0
  404d7c:	d045      	beq.n	404e0a <__ssprint_r+0xae>
  404d7e:	429c      	cmp	r4, r3
  404d80:	461f      	mov	r7, r3
  404d82:	469a      	mov	sl, r3
  404d84:	d346      	bcc.n	404e14 <__ssprint_r+0xb8>
  404d86:	89ab      	ldrh	r3, [r5, #12]
  404d88:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404d8c:	d02d      	beq.n	404dea <__ssprint_r+0x8e>
  404d8e:	696f      	ldr	r7, [r5, #20]
  404d90:	6929      	ldr	r1, [r5, #16]
  404d92:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  404d96:	ebc1 0a00 	rsb	sl, r1, r0
  404d9a:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  404d9e:	1c60      	adds	r0, r4, #1
  404da0:	107f      	asrs	r7, r7, #1
  404da2:	4450      	add	r0, sl
  404da4:	42b8      	cmp	r0, r7
  404da6:	463a      	mov	r2, r7
  404da8:	bf84      	itt	hi
  404daa:	4607      	movhi	r7, r0
  404dac:	463a      	movhi	r2, r7
  404dae:	055b      	lsls	r3, r3, #21
  404db0:	d533      	bpl.n	404e1a <__ssprint_r+0xbe>
  404db2:	4611      	mov	r1, r2
  404db4:	4658      	mov	r0, fp
  404db6:	f7ff f88b 	bl	403ed0 <_malloc_r>
  404dba:	2800      	cmp	r0, #0
  404dbc:	d037      	beq.n	404e2e <__ssprint_r+0xd2>
  404dbe:	4652      	mov	r2, sl
  404dc0:	6929      	ldr	r1, [r5, #16]
  404dc2:	9001      	str	r0, [sp, #4]
  404dc4:	f7ff fb8c 	bl	4044e0 <memcpy>
  404dc8:	89aa      	ldrh	r2, [r5, #12]
  404dca:	9b01      	ldr	r3, [sp, #4]
  404dcc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404dd0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404dd4:	81aa      	strh	r2, [r5, #12]
  404dd6:	ebca 0207 	rsb	r2, sl, r7
  404dda:	eb03 000a 	add.w	r0, r3, sl
  404dde:	616f      	str	r7, [r5, #20]
  404de0:	612b      	str	r3, [r5, #16]
  404de2:	6028      	str	r0, [r5, #0]
  404de4:	60aa      	str	r2, [r5, #8]
  404de6:	4627      	mov	r7, r4
  404de8:	46a2      	mov	sl, r4
  404dea:	4652      	mov	r2, sl
  404dec:	4649      	mov	r1, r9
  404dee:	f000 f9ed 	bl	4051cc <memmove>
  404df2:	f8d8 2008 	ldr.w	r2, [r8, #8]
  404df6:	68ab      	ldr	r3, [r5, #8]
  404df8:	6828      	ldr	r0, [r5, #0]
  404dfa:	1bdb      	subs	r3, r3, r7
  404dfc:	4450      	add	r0, sl
  404dfe:	1b14      	subs	r4, r2, r4
  404e00:	60ab      	str	r3, [r5, #8]
  404e02:	6028      	str	r0, [r5, #0]
  404e04:	f8c8 4008 	str.w	r4, [r8, #8]
  404e08:	b314      	cbz	r4, 404e50 <__ssprint_r+0xf4>
  404e0a:	f8d6 9000 	ldr.w	r9, [r6]
  404e0e:	6874      	ldr	r4, [r6, #4]
  404e10:	3608      	adds	r6, #8
  404e12:	e7b2      	b.n	404d7a <__ssprint_r+0x1e>
  404e14:	4627      	mov	r7, r4
  404e16:	46a2      	mov	sl, r4
  404e18:	e7e7      	b.n	404dea <__ssprint_r+0x8e>
  404e1a:	4658      	mov	r0, fp
  404e1c:	f000 fa3a 	bl	405294 <_realloc_r>
  404e20:	4603      	mov	r3, r0
  404e22:	2800      	cmp	r0, #0
  404e24:	d1d7      	bne.n	404dd6 <__ssprint_r+0x7a>
  404e26:	6929      	ldr	r1, [r5, #16]
  404e28:	4658      	mov	r0, fp
  404e2a:	f000 f8e7 	bl	404ffc <_free_r>
  404e2e:	230c      	movs	r3, #12
  404e30:	f8cb 3000 	str.w	r3, [fp]
  404e34:	89ab      	ldrh	r3, [r5, #12]
  404e36:	2200      	movs	r2, #0
  404e38:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404e3c:	f04f 30ff 	mov.w	r0, #4294967295
  404e40:	81ab      	strh	r3, [r5, #12]
  404e42:	f8c8 2008 	str.w	r2, [r8, #8]
  404e46:	f8c8 2004 	str.w	r2, [r8, #4]
  404e4a:	b003      	add	sp, #12
  404e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e50:	2000      	movs	r0, #0
  404e52:	f8c8 0004 	str.w	r0, [r8, #4]
  404e56:	b003      	add	sp, #12
  404e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404e5c <__register_exitproc>:
  404e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  404e60:	4c25      	ldr	r4, [pc, #148]	; (404ef8 <__register_exitproc+0x9c>)
  404e62:	6825      	ldr	r5, [r4, #0]
  404e64:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  404e68:	4606      	mov	r6, r0
  404e6a:	4688      	mov	r8, r1
  404e6c:	4692      	mov	sl, r2
  404e6e:	4699      	mov	r9, r3
  404e70:	b3c4      	cbz	r4, 404ee4 <__register_exitproc+0x88>
  404e72:	6860      	ldr	r0, [r4, #4]
  404e74:	281f      	cmp	r0, #31
  404e76:	dc17      	bgt.n	404ea8 <__register_exitproc+0x4c>
  404e78:	1c43      	adds	r3, r0, #1
  404e7a:	b176      	cbz	r6, 404e9a <__register_exitproc+0x3e>
  404e7c:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  404e80:	2201      	movs	r2, #1
  404e82:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  404e86:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  404e8a:	4082      	lsls	r2, r0
  404e8c:	4311      	orrs	r1, r2
  404e8e:	2e02      	cmp	r6, #2
  404e90:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  404e94:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  404e98:	d01e      	beq.n	404ed8 <__register_exitproc+0x7c>
  404e9a:	3002      	adds	r0, #2
  404e9c:	6063      	str	r3, [r4, #4]
  404e9e:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  404ea2:	2000      	movs	r0, #0
  404ea4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404ea8:	4b14      	ldr	r3, [pc, #80]	; (404efc <__register_exitproc+0xa0>)
  404eaa:	b303      	cbz	r3, 404eee <__register_exitproc+0x92>
  404eac:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404eb0:	f3af 8000 	nop.w
  404eb4:	4604      	mov	r4, r0
  404eb6:	b1d0      	cbz	r0, 404eee <__register_exitproc+0x92>
  404eb8:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  404ebc:	2700      	movs	r7, #0
  404ebe:	e880 0088 	stmia.w	r0, {r3, r7}
  404ec2:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404ec6:	4638      	mov	r0, r7
  404ec8:	2301      	movs	r3, #1
  404eca:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  404ece:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  404ed2:	2e00      	cmp	r6, #0
  404ed4:	d0e1      	beq.n	404e9a <__register_exitproc+0x3e>
  404ed6:	e7d1      	b.n	404e7c <__register_exitproc+0x20>
  404ed8:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  404edc:	430a      	orrs	r2, r1
  404ede:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  404ee2:	e7da      	b.n	404e9a <__register_exitproc+0x3e>
  404ee4:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  404ee8:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  404eec:	e7c1      	b.n	404e72 <__register_exitproc+0x16>
  404eee:	f04f 30ff 	mov.w	r0, #4294967295
  404ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404ef6:	bf00      	nop
  404ef8:	00406a34 	.word	0x00406a34
  404efc:	00000000 	.word	0x00000000

00404f00 <_calloc_r>:
  404f00:	b510      	push	{r4, lr}
  404f02:	fb02 f101 	mul.w	r1, r2, r1
  404f06:	f7fe ffe3 	bl	403ed0 <_malloc_r>
  404f0a:	4604      	mov	r4, r0
  404f0c:	b1d8      	cbz	r0, 404f46 <_calloc_r+0x46>
  404f0e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404f12:	f022 0203 	bic.w	r2, r2, #3
  404f16:	3a04      	subs	r2, #4
  404f18:	2a24      	cmp	r2, #36	; 0x24
  404f1a:	d818      	bhi.n	404f4e <_calloc_r+0x4e>
  404f1c:	2a13      	cmp	r2, #19
  404f1e:	d914      	bls.n	404f4a <_calloc_r+0x4a>
  404f20:	2300      	movs	r3, #0
  404f22:	2a1b      	cmp	r2, #27
  404f24:	6003      	str	r3, [r0, #0]
  404f26:	6043      	str	r3, [r0, #4]
  404f28:	d916      	bls.n	404f58 <_calloc_r+0x58>
  404f2a:	2a24      	cmp	r2, #36	; 0x24
  404f2c:	6083      	str	r3, [r0, #8]
  404f2e:	60c3      	str	r3, [r0, #12]
  404f30:	bf11      	iteee	ne
  404f32:	f100 0210 	addne.w	r2, r0, #16
  404f36:	6103      	streq	r3, [r0, #16]
  404f38:	6143      	streq	r3, [r0, #20]
  404f3a:	f100 0218 	addeq.w	r2, r0, #24
  404f3e:	2300      	movs	r3, #0
  404f40:	6013      	str	r3, [r2, #0]
  404f42:	6053      	str	r3, [r2, #4]
  404f44:	6093      	str	r3, [r2, #8]
  404f46:	4620      	mov	r0, r4
  404f48:	bd10      	pop	{r4, pc}
  404f4a:	4602      	mov	r2, r0
  404f4c:	e7f7      	b.n	404f3e <_calloc_r+0x3e>
  404f4e:	2100      	movs	r1, #0
  404f50:	f7fc fc14 	bl	40177c <memset>
  404f54:	4620      	mov	r0, r4
  404f56:	bd10      	pop	{r4, pc}
  404f58:	f100 0208 	add.w	r2, r0, #8
  404f5c:	e7ef      	b.n	404f3e <_calloc_r+0x3e>
  404f5e:	bf00      	nop

00404f60 <_malloc_trim_r>:
  404f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404f62:	4f23      	ldr	r7, [pc, #140]	; (404ff0 <_malloc_trim_r+0x90>)
  404f64:	460c      	mov	r4, r1
  404f66:	4606      	mov	r6, r0
  404f68:	f7ff fb54 	bl	404614 <__malloc_lock>
  404f6c:	68bb      	ldr	r3, [r7, #8]
  404f6e:	685d      	ldr	r5, [r3, #4]
  404f70:	f025 0503 	bic.w	r5, r5, #3
  404f74:	1b29      	subs	r1, r5, r4
  404f76:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  404f7a:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404f7e:	f021 010f 	bic.w	r1, r1, #15
  404f82:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404f86:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404f8a:	db07      	blt.n	404f9c <_malloc_trim_r+0x3c>
  404f8c:	2100      	movs	r1, #0
  404f8e:	4630      	mov	r0, r6
  404f90:	f7ff fe52 	bl	404c38 <_sbrk_r>
  404f94:	68bb      	ldr	r3, [r7, #8]
  404f96:	442b      	add	r3, r5
  404f98:	4298      	cmp	r0, r3
  404f9a:	d004      	beq.n	404fa6 <_malloc_trim_r+0x46>
  404f9c:	4630      	mov	r0, r6
  404f9e:	f7ff fb3b 	bl	404618 <__malloc_unlock>
  404fa2:	2000      	movs	r0, #0
  404fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404fa6:	4261      	negs	r1, r4
  404fa8:	4630      	mov	r0, r6
  404faa:	f7ff fe45 	bl	404c38 <_sbrk_r>
  404fae:	3001      	adds	r0, #1
  404fb0:	d00d      	beq.n	404fce <_malloc_trim_r+0x6e>
  404fb2:	4b10      	ldr	r3, [pc, #64]	; (404ff4 <_malloc_trim_r+0x94>)
  404fb4:	68ba      	ldr	r2, [r7, #8]
  404fb6:	6819      	ldr	r1, [r3, #0]
  404fb8:	1b2d      	subs	r5, r5, r4
  404fba:	f045 0501 	orr.w	r5, r5, #1
  404fbe:	4630      	mov	r0, r6
  404fc0:	1b09      	subs	r1, r1, r4
  404fc2:	6055      	str	r5, [r2, #4]
  404fc4:	6019      	str	r1, [r3, #0]
  404fc6:	f7ff fb27 	bl	404618 <__malloc_unlock>
  404fca:	2001      	movs	r0, #1
  404fcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404fce:	2100      	movs	r1, #0
  404fd0:	4630      	mov	r0, r6
  404fd2:	f7ff fe31 	bl	404c38 <_sbrk_r>
  404fd6:	68ba      	ldr	r2, [r7, #8]
  404fd8:	1a83      	subs	r3, r0, r2
  404fda:	2b0f      	cmp	r3, #15
  404fdc:	ddde      	ble.n	404f9c <_malloc_trim_r+0x3c>
  404fde:	4c06      	ldr	r4, [pc, #24]	; (404ff8 <_malloc_trim_r+0x98>)
  404fe0:	4904      	ldr	r1, [pc, #16]	; (404ff4 <_malloc_trim_r+0x94>)
  404fe2:	6824      	ldr	r4, [r4, #0]
  404fe4:	f043 0301 	orr.w	r3, r3, #1
  404fe8:	1b00      	subs	r0, r0, r4
  404fea:	6053      	str	r3, [r2, #4]
  404fec:	6008      	str	r0, [r1, #0]
  404fee:	e7d5      	b.n	404f9c <_malloc_trim_r+0x3c>
  404ff0:	2000047c 	.word	0x2000047c
  404ff4:	20000cf0 	.word	0x20000cf0
  404ff8:	20000888 	.word	0x20000888

00404ffc <_free_r>:
  404ffc:	2900      	cmp	r1, #0
  404ffe:	d045      	beq.n	40508c <_free_r+0x90>
  405000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405004:	460d      	mov	r5, r1
  405006:	4680      	mov	r8, r0
  405008:	f7ff fb04 	bl	404614 <__malloc_lock>
  40500c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405010:	496a      	ldr	r1, [pc, #424]	; (4051bc <_free_r+0x1c0>)
  405012:	f027 0301 	bic.w	r3, r7, #1
  405016:	f1a5 0408 	sub.w	r4, r5, #8
  40501a:	18e2      	adds	r2, r4, r3
  40501c:	688e      	ldr	r6, [r1, #8]
  40501e:	6850      	ldr	r0, [r2, #4]
  405020:	42b2      	cmp	r2, r6
  405022:	f020 0003 	bic.w	r0, r0, #3
  405026:	d062      	beq.n	4050ee <_free_r+0xf2>
  405028:	07fe      	lsls	r6, r7, #31
  40502a:	6050      	str	r0, [r2, #4]
  40502c:	d40b      	bmi.n	405046 <_free_r+0x4a>
  40502e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405032:	1be4      	subs	r4, r4, r7
  405034:	f101 0e08 	add.w	lr, r1, #8
  405038:	68a5      	ldr	r5, [r4, #8]
  40503a:	4575      	cmp	r5, lr
  40503c:	443b      	add	r3, r7
  40503e:	d06f      	beq.n	405120 <_free_r+0x124>
  405040:	68e7      	ldr	r7, [r4, #12]
  405042:	60ef      	str	r7, [r5, #12]
  405044:	60bd      	str	r5, [r7, #8]
  405046:	1815      	adds	r5, r2, r0
  405048:	686d      	ldr	r5, [r5, #4]
  40504a:	07ed      	lsls	r5, r5, #31
  40504c:	d542      	bpl.n	4050d4 <_free_r+0xd8>
  40504e:	f043 0201 	orr.w	r2, r3, #1
  405052:	6062      	str	r2, [r4, #4]
  405054:	50e3      	str	r3, [r4, r3]
  405056:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40505a:	d218      	bcs.n	40508e <_free_r+0x92>
  40505c:	08db      	lsrs	r3, r3, #3
  40505e:	1c5a      	adds	r2, r3, #1
  405060:	684d      	ldr	r5, [r1, #4]
  405062:	f851 7032 	ldr.w	r7, [r1, r2, lsl #3]
  405066:	60a7      	str	r7, [r4, #8]
  405068:	2001      	movs	r0, #1
  40506a:	109b      	asrs	r3, r3, #2
  40506c:	fa00 f303 	lsl.w	r3, r0, r3
  405070:	eb01 00c2 	add.w	r0, r1, r2, lsl #3
  405074:	431d      	orrs	r5, r3
  405076:	3808      	subs	r0, #8
  405078:	60e0      	str	r0, [r4, #12]
  40507a:	604d      	str	r5, [r1, #4]
  40507c:	f841 4032 	str.w	r4, [r1, r2, lsl #3]
  405080:	60fc      	str	r4, [r7, #12]
  405082:	4640      	mov	r0, r8
  405084:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405088:	f7ff bac6 	b.w	404618 <__malloc_unlock>
  40508c:	4770      	bx	lr
  40508e:	0a5a      	lsrs	r2, r3, #9
  405090:	2a04      	cmp	r2, #4
  405092:	d853      	bhi.n	40513c <_free_r+0x140>
  405094:	099a      	lsrs	r2, r3, #6
  405096:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40509a:	007f      	lsls	r7, r7, #1
  40509c:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4050a0:	eb01 0087 	add.w	r0, r1, r7, lsl #2
  4050a4:	f851 2027 	ldr.w	r2, [r1, r7, lsl #2]
  4050a8:	4944      	ldr	r1, [pc, #272]	; (4051bc <_free_r+0x1c0>)
  4050aa:	3808      	subs	r0, #8
  4050ac:	4290      	cmp	r0, r2
  4050ae:	d04d      	beq.n	40514c <_free_r+0x150>
  4050b0:	6851      	ldr	r1, [r2, #4]
  4050b2:	f021 0103 	bic.w	r1, r1, #3
  4050b6:	428b      	cmp	r3, r1
  4050b8:	d202      	bcs.n	4050c0 <_free_r+0xc4>
  4050ba:	6892      	ldr	r2, [r2, #8]
  4050bc:	4290      	cmp	r0, r2
  4050be:	d1f7      	bne.n	4050b0 <_free_r+0xb4>
  4050c0:	68d0      	ldr	r0, [r2, #12]
  4050c2:	60e0      	str	r0, [r4, #12]
  4050c4:	60a2      	str	r2, [r4, #8]
  4050c6:	6084      	str	r4, [r0, #8]
  4050c8:	60d4      	str	r4, [r2, #12]
  4050ca:	4640      	mov	r0, r8
  4050cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4050d0:	f7ff baa2 	b.w	404618 <__malloc_unlock>
  4050d4:	6895      	ldr	r5, [r2, #8]
  4050d6:	4f3a      	ldr	r7, [pc, #232]	; (4051c0 <_free_r+0x1c4>)
  4050d8:	42bd      	cmp	r5, r7
  4050da:	4403      	add	r3, r0
  4050dc:	d03f      	beq.n	40515e <_free_r+0x162>
  4050de:	68d0      	ldr	r0, [r2, #12]
  4050e0:	60e8      	str	r0, [r5, #12]
  4050e2:	f043 0201 	orr.w	r2, r3, #1
  4050e6:	6085      	str	r5, [r0, #8]
  4050e8:	6062      	str	r2, [r4, #4]
  4050ea:	50e3      	str	r3, [r4, r3]
  4050ec:	e7b3      	b.n	405056 <_free_r+0x5a>
  4050ee:	07ff      	lsls	r7, r7, #31
  4050f0:	4403      	add	r3, r0
  4050f2:	d407      	bmi.n	405104 <_free_r+0x108>
  4050f4:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4050f8:	1aa4      	subs	r4, r4, r2
  4050fa:	4413      	add	r3, r2
  4050fc:	68a0      	ldr	r0, [r4, #8]
  4050fe:	68e2      	ldr	r2, [r4, #12]
  405100:	60c2      	str	r2, [r0, #12]
  405102:	6090      	str	r0, [r2, #8]
  405104:	4a2f      	ldr	r2, [pc, #188]	; (4051c4 <_free_r+0x1c8>)
  405106:	6812      	ldr	r2, [r2, #0]
  405108:	f043 0001 	orr.w	r0, r3, #1
  40510c:	4293      	cmp	r3, r2
  40510e:	6060      	str	r0, [r4, #4]
  405110:	608c      	str	r4, [r1, #8]
  405112:	d3b6      	bcc.n	405082 <_free_r+0x86>
  405114:	4b2c      	ldr	r3, [pc, #176]	; (4051c8 <_free_r+0x1cc>)
  405116:	4640      	mov	r0, r8
  405118:	6819      	ldr	r1, [r3, #0]
  40511a:	f7ff ff21 	bl	404f60 <_malloc_trim_r>
  40511e:	e7b0      	b.n	405082 <_free_r+0x86>
  405120:	1811      	adds	r1, r2, r0
  405122:	6849      	ldr	r1, [r1, #4]
  405124:	07c9      	lsls	r1, r1, #31
  405126:	d444      	bmi.n	4051b2 <_free_r+0x1b6>
  405128:	6891      	ldr	r1, [r2, #8]
  40512a:	68d2      	ldr	r2, [r2, #12]
  40512c:	60ca      	str	r2, [r1, #12]
  40512e:	4403      	add	r3, r0
  405130:	f043 0001 	orr.w	r0, r3, #1
  405134:	6091      	str	r1, [r2, #8]
  405136:	6060      	str	r0, [r4, #4]
  405138:	50e3      	str	r3, [r4, r3]
  40513a:	e7a2      	b.n	405082 <_free_r+0x86>
  40513c:	2a14      	cmp	r2, #20
  40513e:	d817      	bhi.n	405170 <_free_r+0x174>
  405140:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405144:	007f      	lsls	r7, r7, #1
  405146:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40514a:	e7a9      	b.n	4050a0 <_free_r+0xa4>
  40514c:	10aa      	asrs	r2, r5, #2
  40514e:	684b      	ldr	r3, [r1, #4]
  405150:	2501      	movs	r5, #1
  405152:	fa05 f202 	lsl.w	r2, r5, r2
  405156:	4313      	orrs	r3, r2
  405158:	604b      	str	r3, [r1, #4]
  40515a:	4602      	mov	r2, r0
  40515c:	e7b1      	b.n	4050c2 <_free_r+0xc6>
  40515e:	f043 0201 	orr.w	r2, r3, #1
  405162:	614c      	str	r4, [r1, #20]
  405164:	610c      	str	r4, [r1, #16]
  405166:	60e5      	str	r5, [r4, #12]
  405168:	60a5      	str	r5, [r4, #8]
  40516a:	6062      	str	r2, [r4, #4]
  40516c:	50e3      	str	r3, [r4, r3]
  40516e:	e788      	b.n	405082 <_free_r+0x86>
  405170:	2a54      	cmp	r2, #84	; 0x54
  405172:	d806      	bhi.n	405182 <_free_r+0x186>
  405174:	0b1a      	lsrs	r2, r3, #12
  405176:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40517a:	007f      	lsls	r7, r7, #1
  40517c:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405180:	e78e      	b.n	4050a0 <_free_r+0xa4>
  405182:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405186:	d806      	bhi.n	405196 <_free_r+0x19a>
  405188:	0bda      	lsrs	r2, r3, #15
  40518a:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40518e:	007f      	lsls	r7, r7, #1
  405190:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405194:	e784      	b.n	4050a0 <_free_r+0xa4>
  405196:	f240 5054 	movw	r0, #1364	; 0x554
  40519a:	4282      	cmp	r2, r0
  40519c:	d806      	bhi.n	4051ac <_free_r+0x1b0>
  40519e:	0c9a      	lsrs	r2, r3, #18
  4051a0:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4051a4:	007f      	lsls	r7, r7, #1
  4051a6:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4051aa:	e779      	b.n	4050a0 <_free_r+0xa4>
  4051ac:	27fe      	movs	r7, #254	; 0xfe
  4051ae:	257e      	movs	r5, #126	; 0x7e
  4051b0:	e776      	b.n	4050a0 <_free_r+0xa4>
  4051b2:	f043 0201 	orr.w	r2, r3, #1
  4051b6:	6062      	str	r2, [r4, #4]
  4051b8:	50e3      	str	r3, [r4, r3]
  4051ba:	e762      	b.n	405082 <_free_r+0x86>
  4051bc:	2000047c 	.word	0x2000047c
  4051c0:	20000484 	.word	0x20000484
  4051c4:	20000884 	.word	0x20000884
  4051c8:	20000cec 	.word	0x20000cec

004051cc <memmove>:
  4051cc:	4288      	cmp	r0, r1
  4051ce:	b5f0      	push	{r4, r5, r6, r7, lr}
  4051d0:	d90d      	bls.n	4051ee <memmove+0x22>
  4051d2:	188b      	adds	r3, r1, r2
  4051d4:	4298      	cmp	r0, r3
  4051d6:	d20a      	bcs.n	4051ee <memmove+0x22>
  4051d8:	1881      	adds	r1, r0, r2
  4051da:	2a00      	cmp	r2, #0
  4051dc:	d051      	beq.n	405282 <memmove+0xb6>
  4051de:	1a9a      	subs	r2, r3, r2
  4051e0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4051e4:	f801 4d01 	strb.w	r4, [r1, #-1]!
  4051e8:	4293      	cmp	r3, r2
  4051ea:	d1f9      	bne.n	4051e0 <memmove+0x14>
  4051ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4051ee:	2a0f      	cmp	r2, #15
  4051f0:	d948      	bls.n	405284 <memmove+0xb8>
  4051f2:	ea41 0300 	orr.w	r3, r1, r0
  4051f6:	079b      	lsls	r3, r3, #30
  4051f8:	d146      	bne.n	405288 <memmove+0xbc>
  4051fa:	f100 0410 	add.w	r4, r0, #16
  4051fe:	f101 0310 	add.w	r3, r1, #16
  405202:	4615      	mov	r5, r2
  405204:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405208:	f844 6c10 	str.w	r6, [r4, #-16]
  40520c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405210:	f844 6c0c 	str.w	r6, [r4, #-12]
  405214:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405218:	f844 6c08 	str.w	r6, [r4, #-8]
  40521c:	3d10      	subs	r5, #16
  40521e:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405222:	f844 6c04 	str.w	r6, [r4, #-4]
  405226:	2d0f      	cmp	r5, #15
  405228:	f103 0310 	add.w	r3, r3, #16
  40522c:	f104 0410 	add.w	r4, r4, #16
  405230:	d8e8      	bhi.n	405204 <memmove+0x38>
  405232:	f1a2 0310 	sub.w	r3, r2, #16
  405236:	f023 030f 	bic.w	r3, r3, #15
  40523a:	f002 0e0f 	and.w	lr, r2, #15
  40523e:	3310      	adds	r3, #16
  405240:	f1be 0f03 	cmp.w	lr, #3
  405244:	4419      	add	r1, r3
  405246:	4403      	add	r3, r0
  405248:	d921      	bls.n	40528e <memmove+0xc2>
  40524a:	1f1e      	subs	r6, r3, #4
  40524c:	460d      	mov	r5, r1
  40524e:	4674      	mov	r4, lr
  405250:	3c04      	subs	r4, #4
  405252:	f855 7b04 	ldr.w	r7, [r5], #4
  405256:	f846 7f04 	str.w	r7, [r6, #4]!
  40525a:	2c03      	cmp	r4, #3
  40525c:	d8f8      	bhi.n	405250 <memmove+0x84>
  40525e:	f1ae 0404 	sub.w	r4, lr, #4
  405262:	f024 0403 	bic.w	r4, r4, #3
  405266:	3404      	adds	r4, #4
  405268:	4423      	add	r3, r4
  40526a:	4421      	add	r1, r4
  40526c:	f002 0203 	and.w	r2, r2, #3
  405270:	b162      	cbz	r2, 40528c <memmove+0xc0>
  405272:	3b01      	subs	r3, #1
  405274:	440a      	add	r2, r1
  405276:	f811 4b01 	ldrb.w	r4, [r1], #1
  40527a:	f803 4f01 	strb.w	r4, [r3, #1]!
  40527e:	428a      	cmp	r2, r1
  405280:	d1f9      	bne.n	405276 <memmove+0xaa>
  405282:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405284:	4603      	mov	r3, r0
  405286:	e7f3      	b.n	405270 <memmove+0xa4>
  405288:	4603      	mov	r3, r0
  40528a:	e7f2      	b.n	405272 <memmove+0xa6>
  40528c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40528e:	4672      	mov	r2, lr
  405290:	e7ee      	b.n	405270 <memmove+0xa4>
  405292:	bf00      	nop

00405294 <_realloc_r>:
  405294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405298:	4617      	mov	r7, r2
  40529a:	b083      	sub	sp, #12
  40529c:	2900      	cmp	r1, #0
  40529e:	f000 80c1 	beq.w	405424 <_realloc_r+0x190>
  4052a2:	460e      	mov	r6, r1
  4052a4:	4681      	mov	r9, r0
  4052a6:	f107 050b 	add.w	r5, r7, #11
  4052aa:	f7ff f9b3 	bl	404614 <__malloc_lock>
  4052ae:	f856 ec04 	ldr.w	lr, [r6, #-4]
  4052b2:	2d16      	cmp	r5, #22
  4052b4:	f02e 0403 	bic.w	r4, lr, #3
  4052b8:	f1a6 0808 	sub.w	r8, r6, #8
  4052bc:	d840      	bhi.n	405340 <_realloc_r+0xac>
  4052be:	2210      	movs	r2, #16
  4052c0:	4615      	mov	r5, r2
  4052c2:	42af      	cmp	r7, r5
  4052c4:	d841      	bhi.n	40534a <_realloc_r+0xb6>
  4052c6:	4294      	cmp	r4, r2
  4052c8:	da75      	bge.n	4053b6 <_realloc_r+0x122>
  4052ca:	4bc9      	ldr	r3, [pc, #804]	; (4055f0 <_realloc_r+0x35c>)
  4052cc:	6899      	ldr	r1, [r3, #8]
  4052ce:	eb08 0004 	add.w	r0, r8, r4
  4052d2:	4288      	cmp	r0, r1
  4052d4:	6841      	ldr	r1, [r0, #4]
  4052d6:	f000 80d9 	beq.w	40548c <_realloc_r+0x1f8>
  4052da:	f021 0301 	bic.w	r3, r1, #1
  4052de:	4403      	add	r3, r0
  4052e0:	685b      	ldr	r3, [r3, #4]
  4052e2:	07db      	lsls	r3, r3, #31
  4052e4:	d57d      	bpl.n	4053e2 <_realloc_r+0x14e>
  4052e6:	f01e 0f01 	tst.w	lr, #1
  4052ea:	d035      	beq.n	405358 <_realloc_r+0xc4>
  4052ec:	4639      	mov	r1, r7
  4052ee:	4648      	mov	r0, r9
  4052f0:	f7fe fdee 	bl	403ed0 <_malloc_r>
  4052f4:	4607      	mov	r7, r0
  4052f6:	b1e0      	cbz	r0, 405332 <_realloc_r+0x9e>
  4052f8:	f856 3c04 	ldr.w	r3, [r6, #-4]
  4052fc:	f023 0301 	bic.w	r3, r3, #1
  405300:	4443      	add	r3, r8
  405302:	f1a0 0208 	sub.w	r2, r0, #8
  405306:	429a      	cmp	r2, r3
  405308:	f000 8144 	beq.w	405594 <_realloc_r+0x300>
  40530c:	1f22      	subs	r2, r4, #4
  40530e:	2a24      	cmp	r2, #36	; 0x24
  405310:	f200 8131 	bhi.w	405576 <_realloc_r+0x2e2>
  405314:	2a13      	cmp	r2, #19
  405316:	f200 8104 	bhi.w	405522 <_realloc_r+0x28e>
  40531a:	4603      	mov	r3, r0
  40531c:	4632      	mov	r2, r6
  40531e:	6811      	ldr	r1, [r2, #0]
  405320:	6019      	str	r1, [r3, #0]
  405322:	6851      	ldr	r1, [r2, #4]
  405324:	6059      	str	r1, [r3, #4]
  405326:	6892      	ldr	r2, [r2, #8]
  405328:	609a      	str	r2, [r3, #8]
  40532a:	4631      	mov	r1, r6
  40532c:	4648      	mov	r0, r9
  40532e:	f7ff fe65 	bl	404ffc <_free_r>
  405332:	4648      	mov	r0, r9
  405334:	f7ff f970 	bl	404618 <__malloc_unlock>
  405338:	4638      	mov	r0, r7
  40533a:	b003      	add	sp, #12
  40533c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405340:	f025 0507 	bic.w	r5, r5, #7
  405344:	2d00      	cmp	r5, #0
  405346:	462a      	mov	r2, r5
  405348:	dabb      	bge.n	4052c2 <_realloc_r+0x2e>
  40534a:	230c      	movs	r3, #12
  40534c:	2000      	movs	r0, #0
  40534e:	f8c9 3000 	str.w	r3, [r9]
  405352:	b003      	add	sp, #12
  405354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405358:	f856 3c08 	ldr.w	r3, [r6, #-8]
  40535c:	ebc3 0a08 	rsb	sl, r3, r8
  405360:	f8da 3004 	ldr.w	r3, [sl, #4]
  405364:	f023 0c03 	bic.w	ip, r3, #3
  405368:	eb04 030c 	add.w	r3, r4, ip
  40536c:	4293      	cmp	r3, r2
  40536e:	dbbd      	blt.n	4052ec <_realloc_r+0x58>
  405370:	4657      	mov	r7, sl
  405372:	f8da 100c 	ldr.w	r1, [sl, #12]
  405376:	f857 0f08 	ldr.w	r0, [r7, #8]!
  40537a:	1f22      	subs	r2, r4, #4
  40537c:	2a24      	cmp	r2, #36	; 0x24
  40537e:	60c1      	str	r1, [r0, #12]
  405380:	6088      	str	r0, [r1, #8]
  405382:	f200 8117 	bhi.w	4055b4 <_realloc_r+0x320>
  405386:	2a13      	cmp	r2, #19
  405388:	f240 8112 	bls.w	4055b0 <_realloc_r+0x31c>
  40538c:	6831      	ldr	r1, [r6, #0]
  40538e:	f8ca 1008 	str.w	r1, [sl, #8]
  405392:	6871      	ldr	r1, [r6, #4]
  405394:	f8ca 100c 	str.w	r1, [sl, #12]
  405398:	2a1b      	cmp	r2, #27
  40539a:	f200 812b 	bhi.w	4055f4 <_realloc_r+0x360>
  40539e:	3608      	adds	r6, #8
  4053a0:	f10a 0210 	add.w	r2, sl, #16
  4053a4:	6831      	ldr	r1, [r6, #0]
  4053a6:	6011      	str	r1, [r2, #0]
  4053a8:	6871      	ldr	r1, [r6, #4]
  4053aa:	6051      	str	r1, [r2, #4]
  4053ac:	68b1      	ldr	r1, [r6, #8]
  4053ae:	6091      	str	r1, [r2, #8]
  4053b0:	463e      	mov	r6, r7
  4053b2:	461c      	mov	r4, r3
  4053b4:	46d0      	mov	r8, sl
  4053b6:	1b63      	subs	r3, r4, r5
  4053b8:	2b0f      	cmp	r3, #15
  4053ba:	d81d      	bhi.n	4053f8 <_realloc_r+0x164>
  4053bc:	f8d8 3004 	ldr.w	r3, [r8, #4]
  4053c0:	f003 0301 	and.w	r3, r3, #1
  4053c4:	4323      	orrs	r3, r4
  4053c6:	4444      	add	r4, r8
  4053c8:	f8c8 3004 	str.w	r3, [r8, #4]
  4053cc:	6863      	ldr	r3, [r4, #4]
  4053ce:	f043 0301 	orr.w	r3, r3, #1
  4053d2:	6063      	str	r3, [r4, #4]
  4053d4:	4648      	mov	r0, r9
  4053d6:	f7ff f91f 	bl	404618 <__malloc_unlock>
  4053da:	4630      	mov	r0, r6
  4053dc:	b003      	add	sp, #12
  4053de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053e2:	f021 0103 	bic.w	r1, r1, #3
  4053e6:	4421      	add	r1, r4
  4053e8:	4291      	cmp	r1, r2
  4053ea:	db21      	blt.n	405430 <_realloc_r+0x19c>
  4053ec:	68c3      	ldr	r3, [r0, #12]
  4053ee:	6882      	ldr	r2, [r0, #8]
  4053f0:	460c      	mov	r4, r1
  4053f2:	60d3      	str	r3, [r2, #12]
  4053f4:	609a      	str	r2, [r3, #8]
  4053f6:	e7de      	b.n	4053b6 <_realloc_r+0x122>
  4053f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
  4053fc:	eb08 0105 	add.w	r1, r8, r5
  405400:	f002 0201 	and.w	r2, r2, #1
  405404:	4315      	orrs	r5, r2
  405406:	f043 0201 	orr.w	r2, r3, #1
  40540a:	440b      	add	r3, r1
  40540c:	f8c8 5004 	str.w	r5, [r8, #4]
  405410:	604a      	str	r2, [r1, #4]
  405412:	685a      	ldr	r2, [r3, #4]
  405414:	f042 0201 	orr.w	r2, r2, #1
  405418:	3108      	adds	r1, #8
  40541a:	605a      	str	r2, [r3, #4]
  40541c:	4648      	mov	r0, r9
  40541e:	f7ff fded 	bl	404ffc <_free_r>
  405422:	e7d7      	b.n	4053d4 <_realloc_r+0x140>
  405424:	4611      	mov	r1, r2
  405426:	b003      	add	sp, #12
  405428:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40542c:	f7fe bd50 	b.w	403ed0 <_malloc_r>
  405430:	f01e 0f01 	tst.w	lr, #1
  405434:	f47f af5a 	bne.w	4052ec <_realloc_r+0x58>
  405438:	f856 3c08 	ldr.w	r3, [r6, #-8]
  40543c:	ebc3 0a08 	rsb	sl, r3, r8
  405440:	f8da 3004 	ldr.w	r3, [sl, #4]
  405444:	f023 0c03 	bic.w	ip, r3, #3
  405448:	eb01 0e0c 	add.w	lr, r1, ip
  40544c:	4596      	cmp	lr, r2
  40544e:	db8b      	blt.n	405368 <_realloc_r+0xd4>
  405450:	68c3      	ldr	r3, [r0, #12]
  405452:	6882      	ldr	r2, [r0, #8]
  405454:	4657      	mov	r7, sl
  405456:	60d3      	str	r3, [r2, #12]
  405458:	609a      	str	r2, [r3, #8]
  40545a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  40545e:	f8da 300c 	ldr.w	r3, [sl, #12]
  405462:	60cb      	str	r3, [r1, #12]
  405464:	1f22      	subs	r2, r4, #4
  405466:	2a24      	cmp	r2, #36	; 0x24
  405468:	6099      	str	r1, [r3, #8]
  40546a:	f200 8099 	bhi.w	4055a0 <_realloc_r+0x30c>
  40546e:	2a13      	cmp	r2, #19
  405470:	d962      	bls.n	405538 <_realloc_r+0x2a4>
  405472:	6833      	ldr	r3, [r6, #0]
  405474:	f8ca 3008 	str.w	r3, [sl, #8]
  405478:	6873      	ldr	r3, [r6, #4]
  40547a:	f8ca 300c 	str.w	r3, [sl, #12]
  40547e:	2a1b      	cmp	r2, #27
  405480:	f200 80a0 	bhi.w	4055c4 <_realloc_r+0x330>
  405484:	3608      	adds	r6, #8
  405486:	f10a 0310 	add.w	r3, sl, #16
  40548a:	e056      	b.n	40553a <_realloc_r+0x2a6>
  40548c:	f021 0b03 	bic.w	fp, r1, #3
  405490:	44a3      	add	fp, r4
  405492:	f105 0010 	add.w	r0, r5, #16
  405496:	4583      	cmp	fp, r0
  405498:	da59      	bge.n	40554e <_realloc_r+0x2ba>
  40549a:	f01e 0f01 	tst.w	lr, #1
  40549e:	f47f af25 	bne.w	4052ec <_realloc_r+0x58>
  4054a2:	f856 1c08 	ldr.w	r1, [r6, #-8]
  4054a6:	ebc1 0a08 	rsb	sl, r1, r8
  4054aa:	f8da 1004 	ldr.w	r1, [sl, #4]
  4054ae:	f021 0c03 	bic.w	ip, r1, #3
  4054b2:	44e3      	add	fp, ip
  4054b4:	4558      	cmp	r0, fp
  4054b6:	f73f af57 	bgt.w	405368 <_realloc_r+0xd4>
  4054ba:	4657      	mov	r7, sl
  4054bc:	f8da 100c 	ldr.w	r1, [sl, #12]
  4054c0:	f857 0f08 	ldr.w	r0, [r7, #8]!
  4054c4:	1f22      	subs	r2, r4, #4
  4054c6:	2a24      	cmp	r2, #36	; 0x24
  4054c8:	60c1      	str	r1, [r0, #12]
  4054ca:	6088      	str	r0, [r1, #8]
  4054cc:	f200 80b4 	bhi.w	405638 <_realloc_r+0x3a4>
  4054d0:	2a13      	cmp	r2, #19
  4054d2:	f240 80a5 	bls.w	405620 <_realloc_r+0x38c>
  4054d6:	6831      	ldr	r1, [r6, #0]
  4054d8:	f8ca 1008 	str.w	r1, [sl, #8]
  4054dc:	6871      	ldr	r1, [r6, #4]
  4054de:	f8ca 100c 	str.w	r1, [sl, #12]
  4054e2:	2a1b      	cmp	r2, #27
  4054e4:	f200 80af 	bhi.w	405646 <_realloc_r+0x3b2>
  4054e8:	3608      	adds	r6, #8
  4054ea:	f10a 0210 	add.w	r2, sl, #16
  4054ee:	6831      	ldr	r1, [r6, #0]
  4054f0:	6011      	str	r1, [r2, #0]
  4054f2:	6871      	ldr	r1, [r6, #4]
  4054f4:	6051      	str	r1, [r2, #4]
  4054f6:	68b1      	ldr	r1, [r6, #8]
  4054f8:	6091      	str	r1, [r2, #8]
  4054fa:	eb0a 0105 	add.w	r1, sl, r5
  4054fe:	ebc5 020b 	rsb	r2, r5, fp
  405502:	f042 0201 	orr.w	r2, r2, #1
  405506:	6099      	str	r1, [r3, #8]
  405508:	604a      	str	r2, [r1, #4]
  40550a:	f8da 3004 	ldr.w	r3, [sl, #4]
  40550e:	f003 0301 	and.w	r3, r3, #1
  405512:	431d      	orrs	r5, r3
  405514:	4648      	mov	r0, r9
  405516:	f8ca 5004 	str.w	r5, [sl, #4]
  40551a:	f7ff f87d 	bl	404618 <__malloc_unlock>
  40551e:	4638      	mov	r0, r7
  405520:	e75c      	b.n	4053dc <_realloc_r+0x148>
  405522:	6833      	ldr	r3, [r6, #0]
  405524:	6003      	str	r3, [r0, #0]
  405526:	6873      	ldr	r3, [r6, #4]
  405528:	6043      	str	r3, [r0, #4]
  40552a:	2a1b      	cmp	r2, #27
  40552c:	d827      	bhi.n	40557e <_realloc_r+0x2ea>
  40552e:	f100 0308 	add.w	r3, r0, #8
  405532:	f106 0208 	add.w	r2, r6, #8
  405536:	e6f2      	b.n	40531e <_realloc_r+0x8a>
  405538:	463b      	mov	r3, r7
  40553a:	6832      	ldr	r2, [r6, #0]
  40553c:	601a      	str	r2, [r3, #0]
  40553e:	6872      	ldr	r2, [r6, #4]
  405540:	605a      	str	r2, [r3, #4]
  405542:	68b2      	ldr	r2, [r6, #8]
  405544:	609a      	str	r2, [r3, #8]
  405546:	463e      	mov	r6, r7
  405548:	4674      	mov	r4, lr
  40554a:	46d0      	mov	r8, sl
  40554c:	e733      	b.n	4053b6 <_realloc_r+0x122>
  40554e:	eb08 0105 	add.w	r1, r8, r5
  405552:	ebc5 0b0b 	rsb	fp, r5, fp
  405556:	f04b 0201 	orr.w	r2, fp, #1
  40555a:	6099      	str	r1, [r3, #8]
  40555c:	604a      	str	r2, [r1, #4]
  40555e:	f856 3c04 	ldr.w	r3, [r6, #-4]
  405562:	f003 0301 	and.w	r3, r3, #1
  405566:	431d      	orrs	r5, r3
  405568:	4648      	mov	r0, r9
  40556a:	f846 5c04 	str.w	r5, [r6, #-4]
  40556e:	f7ff f853 	bl	404618 <__malloc_unlock>
  405572:	4630      	mov	r0, r6
  405574:	e732      	b.n	4053dc <_realloc_r+0x148>
  405576:	4631      	mov	r1, r6
  405578:	f7ff fe28 	bl	4051cc <memmove>
  40557c:	e6d5      	b.n	40532a <_realloc_r+0x96>
  40557e:	68b3      	ldr	r3, [r6, #8]
  405580:	6083      	str	r3, [r0, #8]
  405582:	68f3      	ldr	r3, [r6, #12]
  405584:	60c3      	str	r3, [r0, #12]
  405586:	2a24      	cmp	r2, #36	; 0x24
  405588:	d028      	beq.n	4055dc <_realloc_r+0x348>
  40558a:	f100 0310 	add.w	r3, r0, #16
  40558e:	f106 0210 	add.w	r2, r6, #16
  405592:	e6c4      	b.n	40531e <_realloc_r+0x8a>
  405594:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405598:	f023 0303 	bic.w	r3, r3, #3
  40559c:	441c      	add	r4, r3
  40559e:	e70a      	b.n	4053b6 <_realloc_r+0x122>
  4055a0:	4631      	mov	r1, r6
  4055a2:	4638      	mov	r0, r7
  4055a4:	4674      	mov	r4, lr
  4055a6:	46d0      	mov	r8, sl
  4055a8:	f7ff fe10 	bl	4051cc <memmove>
  4055ac:	463e      	mov	r6, r7
  4055ae:	e702      	b.n	4053b6 <_realloc_r+0x122>
  4055b0:	463a      	mov	r2, r7
  4055b2:	e6f7      	b.n	4053a4 <_realloc_r+0x110>
  4055b4:	4631      	mov	r1, r6
  4055b6:	4638      	mov	r0, r7
  4055b8:	461c      	mov	r4, r3
  4055ba:	46d0      	mov	r8, sl
  4055bc:	f7ff fe06 	bl	4051cc <memmove>
  4055c0:	463e      	mov	r6, r7
  4055c2:	e6f8      	b.n	4053b6 <_realloc_r+0x122>
  4055c4:	68b3      	ldr	r3, [r6, #8]
  4055c6:	f8ca 3010 	str.w	r3, [sl, #16]
  4055ca:	68f3      	ldr	r3, [r6, #12]
  4055cc:	f8ca 3014 	str.w	r3, [sl, #20]
  4055d0:	2a24      	cmp	r2, #36	; 0x24
  4055d2:	d01b      	beq.n	40560c <_realloc_r+0x378>
  4055d4:	3610      	adds	r6, #16
  4055d6:	f10a 0318 	add.w	r3, sl, #24
  4055da:	e7ae      	b.n	40553a <_realloc_r+0x2a6>
  4055dc:	6933      	ldr	r3, [r6, #16]
  4055de:	6103      	str	r3, [r0, #16]
  4055e0:	6973      	ldr	r3, [r6, #20]
  4055e2:	6143      	str	r3, [r0, #20]
  4055e4:	f106 0218 	add.w	r2, r6, #24
  4055e8:	f100 0318 	add.w	r3, r0, #24
  4055ec:	e697      	b.n	40531e <_realloc_r+0x8a>
  4055ee:	bf00      	nop
  4055f0:	2000047c 	.word	0x2000047c
  4055f4:	68b1      	ldr	r1, [r6, #8]
  4055f6:	f8ca 1010 	str.w	r1, [sl, #16]
  4055fa:	68f1      	ldr	r1, [r6, #12]
  4055fc:	f8ca 1014 	str.w	r1, [sl, #20]
  405600:	2a24      	cmp	r2, #36	; 0x24
  405602:	d00f      	beq.n	405624 <_realloc_r+0x390>
  405604:	3610      	adds	r6, #16
  405606:	f10a 0218 	add.w	r2, sl, #24
  40560a:	e6cb      	b.n	4053a4 <_realloc_r+0x110>
  40560c:	6933      	ldr	r3, [r6, #16]
  40560e:	f8ca 3018 	str.w	r3, [sl, #24]
  405612:	6973      	ldr	r3, [r6, #20]
  405614:	f8ca 301c 	str.w	r3, [sl, #28]
  405618:	3618      	adds	r6, #24
  40561a:	f10a 0320 	add.w	r3, sl, #32
  40561e:	e78c      	b.n	40553a <_realloc_r+0x2a6>
  405620:	463a      	mov	r2, r7
  405622:	e764      	b.n	4054ee <_realloc_r+0x25a>
  405624:	6932      	ldr	r2, [r6, #16]
  405626:	f8ca 2018 	str.w	r2, [sl, #24]
  40562a:	6972      	ldr	r2, [r6, #20]
  40562c:	f8ca 201c 	str.w	r2, [sl, #28]
  405630:	3618      	adds	r6, #24
  405632:	f10a 0220 	add.w	r2, sl, #32
  405636:	e6b5      	b.n	4053a4 <_realloc_r+0x110>
  405638:	4631      	mov	r1, r6
  40563a:	4638      	mov	r0, r7
  40563c:	9301      	str	r3, [sp, #4]
  40563e:	f7ff fdc5 	bl	4051cc <memmove>
  405642:	9b01      	ldr	r3, [sp, #4]
  405644:	e759      	b.n	4054fa <_realloc_r+0x266>
  405646:	68b1      	ldr	r1, [r6, #8]
  405648:	f8ca 1010 	str.w	r1, [sl, #16]
  40564c:	68f1      	ldr	r1, [r6, #12]
  40564e:	f8ca 1014 	str.w	r1, [sl, #20]
  405652:	2a24      	cmp	r2, #36	; 0x24
  405654:	d003      	beq.n	40565e <_realloc_r+0x3ca>
  405656:	3610      	adds	r6, #16
  405658:	f10a 0218 	add.w	r2, sl, #24
  40565c:	e747      	b.n	4054ee <_realloc_r+0x25a>
  40565e:	6932      	ldr	r2, [r6, #16]
  405660:	f8ca 2018 	str.w	r2, [sl, #24]
  405664:	6972      	ldr	r2, [r6, #20]
  405666:	f8ca 201c 	str.w	r2, [sl, #28]
  40566a:	3618      	adds	r6, #24
  40566c:	f10a 0220 	add.w	r2, sl, #32
  405670:	e73d      	b.n	4054ee <_realloc_r+0x25a>
  405672:	bf00      	nop

00405674 <__aeabi_drsub>:
  405674:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405678:	e002      	b.n	405680 <__adddf3>
  40567a:	bf00      	nop

0040567c <__aeabi_dsub>:
  40567c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405680 <__adddf3>:
  405680:	b530      	push	{r4, r5, lr}
  405682:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405686:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40568a:	ea94 0f05 	teq	r4, r5
  40568e:	bf08      	it	eq
  405690:	ea90 0f02 	teqeq	r0, r2
  405694:	bf1f      	itttt	ne
  405696:	ea54 0c00 	orrsne.w	ip, r4, r0
  40569a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40569e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4056a2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4056a6:	f000 80e2 	beq.w	40586e <__adddf3+0x1ee>
  4056aa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4056ae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4056b2:	bfb8      	it	lt
  4056b4:	426d      	neglt	r5, r5
  4056b6:	dd0c      	ble.n	4056d2 <__adddf3+0x52>
  4056b8:	442c      	add	r4, r5
  4056ba:	ea80 0202 	eor.w	r2, r0, r2
  4056be:	ea81 0303 	eor.w	r3, r1, r3
  4056c2:	ea82 0000 	eor.w	r0, r2, r0
  4056c6:	ea83 0101 	eor.w	r1, r3, r1
  4056ca:	ea80 0202 	eor.w	r2, r0, r2
  4056ce:	ea81 0303 	eor.w	r3, r1, r3
  4056d2:	2d36      	cmp	r5, #54	; 0x36
  4056d4:	bf88      	it	hi
  4056d6:	bd30      	pophi	{r4, r5, pc}
  4056d8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4056dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4056e0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4056e4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4056e8:	d002      	beq.n	4056f0 <__adddf3+0x70>
  4056ea:	4240      	negs	r0, r0
  4056ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4056f0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4056f4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4056f8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4056fc:	d002      	beq.n	405704 <__adddf3+0x84>
  4056fe:	4252      	negs	r2, r2
  405700:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405704:	ea94 0f05 	teq	r4, r5
  405708:	f000 80a7 	beq.w	40585a <__adddf3+0x1da>
  40570c:	f1a4 0401 	sub.w	r4, r4, #1
  405710:	f1d5 0e20 	rsbs	lr, r5, #32
  405714:	db0d      	blt.n	405732 <__adddf3+0xb2>
  405716:	fa02 fc0e 	lsl.w	ip, r2, lr
  40571a:	fa22 f205 	lsr.w	r2, r2, r5
  40571e:	1880      	adds	r0, r0, r2
  405720:	f141 0100 	adc.w	r1, r1, #0
  405724:	fa03 f20e 	lsl.w	r2, r3, lr
  405728:	1880      	adds	r0, r0, r2
  40572a:	fa43 f305 	asr.w	r3, r3, r5
  40572e:	4159      	adcs	r1, r3
  405730:	e00e      	b.n	405750 <__adddf3+0xd0>
  405732:	f1a5 0520 	sub.w	r5, r5, #32
  405736:	f10e 0e20 	add.w	lr, lr, #32
  40573a:	2a01      	cmp	r2, #1
  40573c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405740:	bf28      	it	cs
  405742:	f04c 0c02 	orrcs.w	ip, ip, #2
  405746:	fa43 f305 	asr.w	r3, r3, r5
  40574a:	18c0      	adds	r0, r0, r3
  40574c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405750:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405754:	d507      	bpl.n	405766 <__adddf3+0xe6>
  405756:	f04f 0e00 	mov.w	lr, #0
  40575a:	f1dc 0c00 	rsbs	ip, ip, #0
  40575e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405762:	eb6e 0101 	sbc.w	r1, lr, r1
  405766:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40576a:	d31b      	bcc.n	4057a4 <__adddf3+0x124>
  40576c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405770:	d30c      	bcc.n	40578c <__adddf3+0x10c>
  405772:	0849      	lsrs	r1, r1, #1
  405774:	ea5f 0030 	movs.w	r0, r0, rrx
  405778:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40577c:	f104 0401 	add.w	r4, r4, #1
  405780:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405784:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405788:	f080 809a 	bcs.w	4058c0 <__adddf3+0x240>
  40578c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405790:	bf08      	it	eq
  405792:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405796:	f150 0000 	adcs.w	r0, r0, #0
  40579a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40579e:	ea41 0105 	orr.w	r1, r1, r5
  4057a2:	bd30      	pop	{r4, r5, pc}
  4057a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4057a8:	4140      	adcs	r0, r0
  4057aa:	eb41 0101 	adc.w	r1, r1, r1
  4057ae:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4057b2:	f1a4 0401 	sub.w	r4, r4, #1
  4057b6:	d1e9      	bne.n	40578c <__adddf3+0x10c>
  4057b8:	f091 0f00 	teq	r1, #0
  4057bc:	bf04      	itt	eq
  4057be:	4601      	moveq	r1, r0
  4057c0:	2000      	moveq	r0, #0
  4057c2:	fab1 f381 	clz	r3, r1
  4057c6:	bf08      	it	eq
  4057c8:	3320      	addeq	r3, #32
  4057ca:	f1a3 030b 	sub.w	r3, r3, #11
  4057ce:	f1b3 0220 	subs.w	r2, r3, #32
  4057d2:	da0c      	bge.n	4057ee <__adddf3+0x16e>
  4057d4:	320c      	adds	r2, #12
  4057d6:	dd08      	ble.n	4057ea <__adddf3+0x16a>
  4057d8:	f102 0c14 	add.w	ip, r2, #20
  4057dc:	f1c2 020c 	rsb	r2, r2, #12
  4057e0:	fa01 f00c 	lsl.w	r0, r1, ip
  4057e4:	fa21 f102 	lsr.w	r1, r1, r2
  4057e8:	e00c      	b.n	405804 <__adddf3+0x184>
  4057ea:	f102 0214 	add.w	r2, r2, #20
  4057ee:	bfd8      	it	le
  4057f0:	f1c2 0c20 	rsble	ip, r2, #32
  4057f4:	fa01 f102 	lsl.w	r1, r1, r2
  4057f8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4057fc:	bfdc      	itt	le
  4057fe:	ea41 010c 	orrle.w	r1, r1, ip
  405802:	4090      	lslle	r0, r2
  405804:	1ae4      	subs	r4, r4, r3
  405806:	bfa2      	ittt	ge
  405808:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40580c:	4329      	orrge	r1, r5
  40580e:	bd30      	popge	{r4, r5, pc}
  405810:	ea6f 0404 	mvn.w	r4, r4
  405814:	3c1f      	subs	r4, #31
  405816:	da1c      	bge.n	405852 <__adddf3+0x1d2>
  405818:	340c      	adds	r4, #12
  40581a:	dc0e      	bgt.n	40583a <__adddf3+0x1ba>
  40581c:	f104 0414 	add.w	r4, r4, #20
  405820:	f1c4 0220 	rsb	r2, r4, #32
  405824:	fa20 f004 	lsr.w	r0, r0, r4
  405828:	fa01 f302 	lsl.w	r3, r1, r2
  40582c:	ea40 0003 	orr.w	r0, r0, r3
  405830:	fa21 f304 	lsr.w	r3, r1, r4
  405834:	ea45 0103 	orr.w	r1, r5, r3
  405838:	bd30      	pop	{r4, r5, pc}
  40583a:	f1c4 040c 	rsb	r4, r4, #12
  40583e:	f1c4 0220 	rsb	r2, r4, #32
  405842:	fa20 f002 	lsr.w	r0, r0, r2
  405846:	fa01 f304 	lsl.w	r3, r1, r4
  40584a:	ea40 0003 	orr.w	r0, r0, r3
  40584e:	4629      	mov	r1, r5
  405850:	bd30      	pop	{r4, r5, pc}
  405852:	fa21 f004 	lsr.w	r0, r1, r4
  405856:	4629      	mov	r1, r5
  405858:	bd30      	pop	{r4, r5, pc}
  40585a:	f094 0f00 	teq	r4, #0
  40585e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405862:	bf06      	itte	eq
  405864:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405868:	3401      	addeq	r4, #1
  40586a:	3d01      	subne	r5, #1
  40586c:	e74e      	b.n	40570c <__adddf3+0x8c>
  40586e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405872:	bf18      	it	ne
  405874:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405878:	d029      	beq.n	4058ce <__adddf3+0x24e>
  40587a:	ea94 0f05 	teq	r4, r5
  40587e:	bf08      	it	eq
  405880:	ea90 0f02 	teqeq	r0, r2
  405884:	d005      	beq.n	405892 <__adddf3+0x212>
  405886:	ea54 0c00 	orrs.w	ip, r4, r0
  40588a:	bf04      	itt	eq
  40588c:	4619      	moveq	r1, r3
  40588e:	4610      	moveq	r0, r2
  405890:	bd30      	pop	{r4, r5, pc}
  405892:	ea91 0f03 	teq	r1, r3
  405896:	bf1e      	ittt	ne
  405898:	2100      	movne	r1, #0
  40589a:	2000      	movne	r0, #0
  40589c:	bd30      	popne	{r4, r5, pc}
  40589e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4058a2:	d105      	bne.n	4058b0 <__adddf3+0x230>
  4058a4:	0040      	lsls	r0, r0, #1
  4058a6:	4149      	adcs	r1, r1
  4058a8:	bf28      	it	cs
  4058aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4058ae:	bd30      	pop	{r4, r5, pc}
  4058b0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4058b4:	bf3c      	itt	cc
  4058b6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4058ba:	bd30      	popcc	{r4, r5, pc}
  4058bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4058c0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4058c4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4058c8:	f04f 0000 	mov.w	r0, #0
  4058cc:	bd30      	pop	{r4, r5, pc}
  4058ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4058d2:	bf1a      	itte	ne
  4058d4:	4619      	movne	r1, r3
  4058d6:	4610      	movne	r0, r2
  4058d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4058dc:	bf1c      	itt	ne
  4058de:	460b      	movne	r3, r1
  4058e0:	4602      	movne	r2, r0
  4058e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4058e6:	bf06      	itte	eq
  4058e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4058ec:	ea91 0f03 	teqeq	r1, r3
  4058f0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4058f4:	bd30      	pop	{r4, r5, pc}
  4058f6:	bf00      	nop

004058f8 <__aeabi_ui2d>:
  4058f8:	f090 0f00 	teq	r0, #0
  4058fc:	bf04      	itt	eq
  4058fe:	2100      	moveq	r1, #0
  405900:	4770      	bxeq	lr
  405902:	b530      	push	{r4, r5, lr}
  405904:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405908:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40590c:	f04f 0500 	mov.w	r5, #0
  405910:	f04f 0100 	mov.w	r1, #0
  405914:	e750      	b.n	4057b8 <__adddf3+0x138>
  405916:	bf00      	nop

00405918 <__aeabi_i2d>:
  405918:	f090 0f00 	teq	r0, #0
  40591c:	bf04      	itt	eq
  40591e:	2100      	moveq	r1, #0
  405920:	4770      	bxeq	lr
  405922:	b530      	push	{r4, r5, lr}
  405924:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405928:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40592c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405930:	bf48      	it	mi
  405932:	4240      	negmi	r0, r0
  405934:	f04f 0100 	mov.w	r1, #0
  405938:	e73e      	b.n	4057b8 <__adddf3+0x138>
  40593a:	bf00      	nop

0040593c <__aeabi_f2d>:
  40593c:	0042      	lsls	r2, r0, #1
  40593e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405942:	ea4f 0131 	mov.w	r1, r1, rrx
  405946:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40594a:	bf1f      	itttt	ne
  40594c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405950:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405954:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405958:	4770      	bxne	lr
  40595a:	f092 0f00 	teq	r2, #0
  40595e:	bf14      	ite	ne
  405960:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405964:	4770      	bxeq	lr
  405966:	b530      	push	{r4, r5, lr}
  405968:	f44f 7460 	mov.w	r4, #896	; 0x380
  40596c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405970:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405974:	e720      	b.n	4057b8 <__adddf3+0x138>
  405976:	bf00      	nop

00405978 <__aeabi_ul2d>:
  405978:	ea50 0201 	orrs.w	r2, r0, r1
  40597c:	bf08      	it	eq
  40597e:	4770      	bxeq	lr
  405980:	b530      	push	{r4, r5, lr}
  405982:	f04f 0500 	mov.w	r5, #0
  405986:	e00a      	b.n	40599e <__aeabi_l2d+0x16>

00405988 <__aeabi_l2d>:
  405988:	ea50 0201 	orrs.w	r2, r0, r1
  40598c:	bf08      	it	eq
  40598e:	4770      	bxeq	lr
  405990:	b530      	push	{r4, r5, lr}
  405992:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405996:	d502      	bpl.n	40599e <__aeabi_l2d+0x16>
  405998:	4240      	negs	r0, r0
  40599a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40599e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059a2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059a6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4059aa:	f43f aedc 	beq.w	405766 <__adddf3+0xe6>
  4059ae:	f04f 0203 	mov.w	r2, #3
  4059b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4059b6:	bf18      	it	ne
  4059b8:	3203      	addne	r2, #3
  4059ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4059be:	bf18      	it	ne
  4059c0:	3203      	addne	r2, #3
  4059c2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4059c6:	f1c2 0320 	rsb	r3, r2, #32
  4059ca:	fa00 fc03 	lsl.w	ip, r0, r3
  4059ce:	fa20 f002 	lsr.w	r0, r0, r2
  4059d2:	fa01 fe03 	lsl.w	lr, r1, r3
  4059d6:	ea40 000e 	orr.w	r0, r0, lr
  4059da:	fa21 f102 	lsr.w	r1, r1, r2
  4059de:	4414      	add	r4, r2
  4059e0:	e6c1      	b.n	405766 <__adddf3+0xe6>
  4059e2:	bf00      	nop

004059e4 <__aeabi_dmul>:
  4059e4:	b570      	push	{r4, r5, r6, lr}
  4059e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4059ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4059ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4059f2:	bf1d      	ittte	ne
  4059f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4059f8:	ea94 0f0c 	teqne	r4, ip
  4059fc:	ea95 0f0c 	teqne	r5, ip
  405a00:	f000 f8de 	bleq	405bc0 <__aeabi_dmul+0x1dc>
  405a04:	442c      	add	r4, r5
  405a06:	ea81 0603 	eor.w	r6, r1, r3
  405a0a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405a0e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405a12:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405a16:	bf18      	it	ne
  405a18:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405a1c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405a20:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405a24:	d038      	beq.n	405a98 <__aeabi_dmul+0xb4>
  405a26:	fba0 ce02 	umull	ip, lr, r0, r2
  405a2a:	f04f 0500 	mov.w	r5, #0
  405a2e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405a32:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405a36:	fbe0 e503 	umlal	lr, r5, r0, r3
  405a3a:	f04f 0600 	mov.w	r6, #0
  405a3e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405a42:	f09c 0f00 	teq	ip, #0
  405a46:	bf18      	it	ne
  405a48:	f04e 0e01 	orrne.w	lr, lr, #1
  405a4c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405a50:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405a54:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405a58:	d204      	bcs.n	405a64 <__aeabi_dmul+0x80>
  405a5a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405a5e:	416d      	adcs	r5, r5
  405a60:	eb46 0606 	adc.w	r6, r6, r6
  405a64:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405a68:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405a6c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405a70:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405a74:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405a78:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405a7c:	bf88      	it	hi
  405a7e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405a82:	d81e      	bhi.n	405ac2 <__aeabi_dmul+0xde>
  405a84:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405a88:	bf08      	it	eq
  405a8a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405a8e:	f150 0000 	adcs.w	r0, r0, #0
  405a92:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405a96:	bd70      	pop	{r4, r5, r6, pc}
  405a98:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405a9c:	ea46 0101 	orr.w	r1, r6, r1
  405aa0:	ea40 0002 	orr.w	r0, r0, r2
  405aa4:	ea81 0103 	eor.w	r1, r1, r3
  405aa8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405aac:	bfc2      	ittt	gt
  405aae:	ebd4 050c 	rsbsgt	r5, r4, ip
  405ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405ab6:	bd70      	popgt	{r4, r5, r6, pc}
  405ab8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405abc:	f04f 0e00 	mov.w	lr, #0
  405ac0:	3c01      	subs	r4, #1
  405ac2:	f300 80ab 	bgt.w	405c1c <__aeabi_dmul+0x238>
  405ac6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405aca:	bfde      	ittt	le
  405acc:	2000      	movle	r0, #0
  405ace:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ad2:	bd70      	pople	{r4, r5, r6, pc}
  405ad4:	f1c4 0400 	rsb	r4, r4, #0
  405ad8:	3c20      	subs	r4, #32
  405ada:	da35      	bge.n	405b48 <__aeabi_dmul+0x164>
  405adc:	340c      	adds	r4, #12
  405ade:	dc1b      	bgt.n	405b18 <__aeabi_dmul+0x134>
  405ae0:	f104 0414 	add.w	r4, r4, #20
  405ae4:	f1c4 0520 	rsb	r5, r4, #32
  405ae8:	fa00 f305 	lsl.w	r3, r0, r5
  405aec:	fa20 f004 	lsr.w	r0, r0, r4
  405af0:	fa01 f205 	lsl.w	r2, r1, r5
  405af4:	ea40 0002 	orr.w	r0, r0, r2
  405af8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405afc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405b00:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b04:	fa21 f604 	lsr.w	r6, r1, r4
  405b08:	eb42 0106 	adc.w	r1, r2, r6
  405b0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b10:	bf08      	it	eq
  405b12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b16:	bd70      	pop	{r4, r5, r6, pc}
  405b18:	f1c4 040c 	rsb	r4, r4, #12
  405b1c:	f1c4 0520 	rsb	r5, r4, #32
  405b20:	fa00 f304 	lsl.w	r3, r0, r4
  405b24:	fa20 f005 	lsr.w	r0, r0, r5
  405b28:	fa01 f204 	lsl.w	r2, r1, r4
  405b2c:	ea40 0002 	orr.w	r0, r0, r2
  405b30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b34:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b38:	f141 0100 	adc.w	r1, r1, #0
  405b3c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b40:	bf08      	it	eq
  405b42:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b46:	bd70      	pop	{r4, r5, r6, pc}
  405b48:	f1c4 0520 	rsb	r5, r4, #32
  405b4c:	fa00 f205 	lsl.w	r2, r0, r5
  405b50:	ea4e 0e02 	orr.w	lr, lr, r2
  405b54:	fa20 f304 	lsr.w	r3, r0, r4
  405b58:	fa01 f205 	lsl.w	r2, r1, r5
  405b5c:	ea43 0302 	orr.w	r3, r3, r2
  405b60:	fa21 f004 	lsr.w	r0, r1, r4
  405b64:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b68:	fa21 f204 	lsr.w	r2, r1, r4
  405b6c:	ea20 0002 	bic.w	r0, r0, r2
  405b70:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405b74:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b78:	bf08      	it	eq
  405b7a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b7e:	bd70      	pop	{r4, r5, r6, pc}
  405b80:	f094 0f00 	teq	r4, #0
  405b84:	d10f      	bne.n	405ba6 <__aeabi_dmul+0x1c2>
  405b86:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405b8a:	0040      	lsls	r0, r0, #1
  405b8c:	eb41 0101 	adc.w	r1, r1, r1
  405b90:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405b94:	bf08      	it	eq
  405b96:	3c01      	subeq	r4, #1
  405b98:	d0f7      	beq.n	405b8a <__aeabi_dmul+0x1a6>
  405b9a:	ea41 0106 	orr.w	r1, r1, r6
  405b9e:	f095 0f00 	teq	r5, #0
  405ba2:	bf18      	it	ne
  405ba4:	4770      	bxne	lr
  405ba6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405baa:	0052      	lsls	r2, r2, #1
  405bac:	eb43 0303 	adc.w	r3, r3, r3
  405bb0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405bb4:	bf08      	it	eq
  405bb6:	3d01      	subeq	r5, #1
  405bb8:	d0f7      	beq.n	405baa <__aeabi_dmul+0x1c6>
  405bba:	ea43 0306 	orr.w	r3, r3, r6
  405bbe:	4770      	bx	lr
  405bc0:	ea94 0f0c 	teq	r4, ip
  405bc4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405bc8:	bf18      	it	ne
  405bca:	ea95 0f0c 	teqne	r5, ip
  405bce:	d00c      	beq.n	405bea <__aeabi_dmul+0x206>
  405bd0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405bd4:	bf18      	it	ne
  405bd6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405bda:	d1d1      	bne.n	405b80 <__aeabi_dmul+0x19c>
  405bdc:	ea81 0103 	eor.w	r1, r1, r3
  405be0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405be4:	f04f 0000 	mov.w	r0, #0
  405be8:	bd70      	pop	{r4, r5, r6, pc}
  405bea:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405bee:	bf06      	itte	eq
  405bf0:	4610      	moveq	r0, r2
  405bf2:	4619      	moveq	r1, r3
  405bf4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405bf8:	d019      	beq.n	405c2e <__aeabi_dmul+0x24a>
  405bfa:	ea94 0f0c 	teq	r4, ip
  405bfe:	d102      	bne.n	405c06 <__aeabi_dmul+0x222>
  405c00:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405c04:	d113      	bne.n	405c2e <__aeabi_dmul+0x24a>
  405c06:	ea95 0f0c 	teq	r5, ip
  405c0a:	d105      	bne.n	405c18 <__aeabi_dmul+0x234>
  405c0c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405c10:	bf1c      	itt	ne
  405c12:	4610      	movne	r0, r2
  405c14:	4619      	movne	r1, r3
  405c16:	d10a      	bne.n	405c2e <__aeabi_dmul+0x24a>
  405c18:	ea81 0103 	eor.w	r1, r1, r3
  405c1c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c20:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405c24:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405c28:	f04f 0000 	mov.w	r0, #0
  405c2c:	bd70      	pop	{r4, r5, r6, pc}
  405c2e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405c32:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405c36:	bd70      	pop	{r4, r5, r6, pc}

00405c38 <__aeabi_ddiv>:
  405c38:	b570      	push	{r4, r5, r6, lr}
  405c3a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405c3e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405c42:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405c46:	bf1d      	ittte	ne
  405c48:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405c4c:	ea94 0f0c 	teqne	r4, ip
  405c50:	ea95 0f0c 	teqne	r5, ip
  405c54:	f000 f8a7 	bleq	405da6 <__aeabi_ddiv+0x16e>
  405c58:	eba4 0405 	sub.w	r4, r4, r5
  405c5c:	ea81 0e03 	eor.w	lr, r1, r3
  405c60:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405c64:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c68:	f000 8088 	beq.w	405d7c <__aeabi_ddiv+0x144>
  405c6c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c70:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405c74:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405c78:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405c7c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405c80:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405c84:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405c88:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405c8c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405c90:	429d      	cmp	r5, r3
  405c92:	bf08      	it	eq
  405c94:	4296      	cmpeq	r6, r2
  405c96:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405c9a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405c9e:	d202      	bcs.n	405ca6 <__aeabi_ddiv+0x6e>
  405ca0:	085b      	lsrs	r3, r3, #1
  405ca2:	ea4f 0232 	mov.w	r2, r2, rrx
  405ca6:	1ab6      	subs	r6, r6, r2
  405ca8:	eb65 0503 	sbc.w	r5, r5, r3
  405cac:	085b      	lsrs	r3, r3, #1
  405cae:	ea4f 0232 	mov.w	r2, r2, rrx
  405cb2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405cb6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405cba:	ebb6 0e02 	subs.w	lr, r6, r2
  405cbe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405cc2:	bf22      	ittt	cs
  405cc4:	1ab6      	subcs	r6, r6, r2
  405cc6:	4675      	movcs	r5, lr
  405cc8:	ea40 000c 	orrcs.w	r0, r0, ip
  405ccc:	085b      	lsrs	r3, r3, #1
  405cce:	ea4f 0232 	mov.w	r2, r2, rrx
  405cd2:	ebb6 0e02 	subs.w	lr, r6, r2
  405cd6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405cda:	bf22      	ittt	cs
  405cdc:	1ab6      	subcs	r6, r6, r2
  405cde:	4675      	movcs	r5, lr
  405ce0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405ce4:	085b      	lsrs	r3, r3, #1
  405ce6:	ea4f 0232 	mov.w	r2, r2, rrx
  405cea:	ebb6 0e02 	subs.w	lr, r6, r2
  405cee:	eb75 0e03 	sbcs.w	lr, r5, r3
  405cf2:	bf22      	ittt	cs
  405cf4:	1ab6      	subcs	r6, r6, r2
  405cf6:	4675      	movcs	r5, lr
  405cf8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405cfc:	085b      	lsrs	r3, r3, #1
  405cfe:	ea4f 0232 	mov.w	r2, r2, rrx
  405d02:	ebb6 0e02 	subs.w	lr, r6, r2
  405d06:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d0a:	bf22      	ittt	cs
  405d0c:	1ab6      	subcs	r6, r6, r2
  405d0e:	4675      	movcs	r5, lr
  405d10:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405d14:	ea55 0e06 	orrs.w	lr, r5, r6
  405d18:	d018      	beq.n	405d4c <__aeabi_ddiv+0x114>
  405d1a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405d1e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405d22:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405d26:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405d2a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405d2e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405d32:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405d36:	d1c0      	bne.n	405cba <__aeabi_ddiv+0x82>
  405d38:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d3c:	d10b      	bne.n	405d56 <__aeabi_ddiv+0x11e>
  405d3e:	ea41 0100 	orr.w	r1, r1, r0
  405d42:	f04f 0000 	mov.w	r0, #0
  405d46:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405d4a:	e7b6      	b.n	405cba <__aeabi_ddiv+0x82>
  405d4c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d50:	bf04      	itt	eq
  405d52:	4301      	orreq	r1, r0
  405d54:	2000      	moveq	r0, #0
  405d56:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405d5a:	bf88      	it	hi
  405d5c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405d60:	f63f aeaf 	bhi.w	405ac2 <__aeabi_dmul+0xde>
  405d64:	ebb5 0c03 	subs.w	ip, r5, r3
  405d68:	bf04      	itt	eq
  405d6a:	ebb6 0c02 	subseq.w	ip, r6, r2
  405d6e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d72:	f150 0000 	adcs.w	r0, r0, #0
  405d76:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d7a:	bd70      	pop	{r4, r5, r6, pc}
  405d7c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405d80:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405d84:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405d88:	bfc2      	ittt	gt
  405d8a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405d8e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405d92:	bd70      	popgt	{r4, r5, r6, pc}
  405d94:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405d98:	f04f 0e00 	mov.w	lr, #0
  405d9c:	3c01      	subs	r4, #1
  405d9e:	e690      	b.n	405ac2 <__aeabi_dmul+0xde>
  405da0:	ea45 0e06 	orr.w	lr, r5, r6
  405da4:	e68d      	b.n	405ac2 <__aeabi_dmul+0xde>
  405da6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405daa:	ea94 0f0c 	teq	r4, ip
  405dae:	bf08      	it	eq
  405db0:	ea95 0f0c 	teqeq	r5, ip
  405db4:	f43f af3b 	beq.w	405c2e <__aeabi_dmul+0x24a>
  405db8:	ea94 0f0c 	teq	r4, ip
  405dbc:	d10a      	bne.n	405dd4 <__aeabi_ddiv+0x19c>
  405dbe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405dc2:	f47f af34 	bne.w	405c2e <__aeabi_dmul+0x24a>
  405dc6:	ea95 0f0c 	teq	r5, ip
  405dca:	f47f af25 	bne.w	405c18 <__aeabi_dmul+0x234>
  405dce:	4610      	mov	r0, r2
  405dd0:	4619      	mov	r1, r3
  405dd2:	e72c      	b.n	405c2e <__aeabi_dmul+0x24a>
  405dd4:	ea95 0f0c 	teq	r5, ip
  405dd8:	d106      	bne.n	405de8 <__aeabi_ddiv+0x1b0>
  405dda:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405dde:	f43f aefd 	beq.w	405bdc <__aeabi_dmul+0x1f8>
  405de2:	4610      	mov	r0, r2
  405de4:	4619      	mov	r1, r3
  405de6:	e722      	b.n	405c2e <__aeabi_dmul+0x24a>
  405de8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405dec:	bf18      	it	ne
  405dee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405df2:	f47f aec5 	bne.w	405b80 <__aeabi_dmul+0x19c>
  405df6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405dfa:	f47f af0d 	bne.w	405c18 <__aeabi_dmul+0x234>
  405dfe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405e02:	f47f aeeb 	bne.w	405bdc <__aeabi_dmul+0x1f8>
  405e06:	e712      	b.n	405c2e <__aeabi_dmul+0x24a>

00405e08 <__gedf2>:
  405e08:	f04f 3cff 	mov.w	ip, #4294967295
  405e0c:	e006      	b.n	405e1c <__cmpdf2+0x4>
  405e0e:	bf00      	nop

00405e10 <__ledf2>:
  405e10:	f04f 0c01 	mov.w	ip, #1
  405e14:	e002      	b.n	405e1c <__cmpdf2+0x4>
  405e16:	bf00      	nop

00405e18 <__cmpdf2>:
  405e18:	f04f 0c01 	mov.w	ip, #1
  405e1c:	f84d cd04 	str.w	ip, [sp, #-4]!
  405e20:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e28:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e2c:	bf18      	it	ne
  405e2e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405e32:	d01b      	beq.n	405e6c <__cmpdf2+0x54>
  405e34:	b001      	add	sp, #4
  405e36:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405e3a:	bf0c      	ite	eq
  405e3c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405e40:	ea91 0f03 	teqne	r1, r3
  405e44:	bf02      	ittt	eq
  405e46:	ea90 0f02 	teqeq	r0, r2
  405e4a:	2000      	moveq	r0, #0
  405e4c:	4770      	bxeq	lr
  405e4e:	f110 0f00 	cmn.w	r0, #0
  405e52:	ea91 0f03 	teq	r1, r3
  405e56:	bf58      	it	pl
  405e58:	4299      	cmppl	r1, r3
  405e5a:	bf08      	it	eq
  405e5c:	4290      	cmpeq	r0, r2
  405e5e:	bf2c      	ite	cs
  405e60:	17d8      	asrcs	r0, r3, #31
  405e62:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405e66:	f040 0001 	orr.w	r0, r0, #1
  405e6a:	4770      	bx	lr
  405e6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e74:	d102      	bne.n	405e7c <__cmpdf2+0x64>
  405e76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405e7a:	d107      	bne.n	405e8c <__cmpdf2+0x74>
  405e7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e84:	d1d6      	bne.n	405e34 <__cmpdf2+0x1c>
  405e86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e8a:	d0d3      	beq.n	405e34 <__cmpdf2+0x1c>
  405e8c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405e90:	4770      	bx	lr
  405e92:	bf00      	nop

00405e94 <__aeabi_cdrcmple>:
  405e94:	4684      	mov	ip, r0
  405e96:	4610      	mov	r0, r2
  405e98:	4662      	mov	r2, ip
  405e9a:	468c      	mov	ip, r1
  405e9c:	4619      	mov	r1, r3
  405e9e:	4663      	mov	r3, ip
  405ea0:	e000      	b.n	405ea4 <__aeabi_cdcmpeq>
  405ea2:	bf00      	nop

00405ea4 <__aeabi_cdcmpeq>:
  405ea4:	b501      	push	{r0, lr}
  405ea6:	f7ff ffb7 	bl	405e18 <__cmpdf2>
  405eaa:	2800      	cmp	r0, #0
  405eac:	bf48      	it	mi
  405eae:	f110 0f00 	cmnmi.w	r0, #0
  405eb2:	bd01      	pop	{r0, pc}

00405eb4 <__aeabi_dcmpeq>:
  405eb4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405eb8:	f7ff fff4 	bl	405ea4 <__aeabi_cdcmpeq>
  405ebc:	bf0c      	ite	eq
  405ebe:	2001      	moveq	r0, #1
  405ec0:	2000      	movne	r0, #0
  405ec2:	f85d fb08 	ldr.w	pc, [sp], #8
  405ec6:	bf00      	nop

00405ec8 <__aeabi_dcmplt>:
  405ec8:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ecc:	f7ff ffea 	bl	405ea4 <__aeabi_cdcmpeq>
  405ed0:	bf34      	ite	cc
  405ed2:	2001      	movcc	r0, #1
  405ed4:	2000      	movcs	r0, #0
  405ed6:	f85d fb08 	ldr.w	pc, [sp], #8
  405eda:	bf00      	nop

00405edc <__aeabi_dcmple>:
  405edc:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ee0:	f7ff ffe0 	bl	405ea4 <__aeabi_cdcmpeq>
  405ee4:	bf94      	ite	ls
  405ee6:	2001      	movls	r0, #1
  405ee8:	2000      	movhi	r0, #0
  405eea:	f85d fb08 	ldr.w	pc, [sp], #8
  405eee:	bf00      	nop

00405ef0 <__aeabi_dcmpge>:
  405ef0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ef4:	f7ff ffce 	bl	405e94 <__aeabi_cdrcmple>
  405ef8:	bf94      	ite	ls
  405efa:	2001      	movls	r0, #1
  405efc:	2000      	movhi	r0, #0
  405efe:	f85d fb08 	ldr.w	pc, [sp], #8
  405f02:	bf00      	nop

00405f04 <__aeabi_dcmpgt>:
  405f04:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f08:	f7ff ffc4 	bl	405e94 <__aeabi_cdrcmple>
  405f0c:	bf34      	ite	cc
  405f0e:	2001      	movcc	r0, #1
  405f10:	2000      	movcs	r0, #0
  405f12:	f85d fb08 	ldr.w	pc, [sp], #8
  405f16:	bf00      	nop

00405f18 <__aeabi_dcmpun>:
  405f18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f20:	d102      	bne.n	405f28 <__aeabi_dcmpun+0x10>
  405f22:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f26:	d10a      	bne.n	405f3e <__aeabi_dcmpun+0x26>
  405f28:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f30:	d102      	bne.n	405f38 <__aeabi_dcmpun+0x20>
  405f32:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f36:	d102      	bne.n	405f3e <__aeabi_dcmpun+0x26>
  405f38:	f04f 0000 	mov.w	r0, #0
  405f3c:	4770      	bx	lr
  405f3e:	f04f 0001 	mov.w	r0, #1
  405f42:	4770      	bx	lr

00405f44 <__aeabi_d2iz>:
  405f44:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405f48:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405f4c:	d215      	bcs.n	405f7a <__aeabi_d2iz+0x36>
  405f4e:	d511      	bpl.n	405f74 <__aeabi_d2iz+0x30>
  405f50:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405f54:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405f58:	d912      	bls.n	405f80 <__aeabi_d2iz+0x3c>
  405f5a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405f5e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405f62:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405f66:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405f6a:	fa23 f002 	lsr.w	r0, r3, r2
  405f6e:	bf18      	it	ne
  405f70:	4240      	negne	r0, r0
  405f72:	4770      	bx	lr
  405f74:	f04f 0000 	mov.w	r0, #0
  405f78:	4770      	bx	lr
  405f7a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405f7e:	d105      	bne.n	405f8c <__aeabi_d2iz+0x48>
  405f80:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405f84:	bf08      	it	eq
  405f86:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405f8a:	4770      	bx	lr
  405f8c:	f04f 0000 	mov.w	r0, #0
  405f90:	4770      	bx	lr
  405f92:	bf00      	nop

00405f94 <__aeabi_uldivmod>:
  405f94:	b953      	cbnz	r3, 405fac <__aeabi_uldivmod+0x18>
  405f96:	b94a      	cbnz	r2, 405fac <__aeabi_uldivmod+0x18>
  405f98:	2900      	cmp	r1, #0
  405f9a:	bf08      	it	eq
  405f9c:	2800      	cmpeq	r0, #0
  405f9e:	bf1c      	itt	ne
  405fa0:	f04f 31ff 	movne.w	r1, #4294967295
  405fa4:	f04f 30ff 	movne.w	r0, #4294967295
  405fa8:	f000 b97e 	b.w	4062a8 <__aeabi_idiv0>
  405fac:	f1ad 0c08 	sub.w	ip, sp, #8
  405fb0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405fb4:	f000 f806 	bl	405fc4 <__udivmoddi4>
  405fb8:	f8dd e004 	ldr.w	lr, [sp, #4]
  405fbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405fc0:	b004      	add	sp, #16
  405fc2:	4770      	bx	lr

00405fc4 <__udivmoddi4>:
  405fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405fc8:	468c      	mov	ip, r1
  405fca:	460e      	mov	r6, r1
  405fcc:	4604      	mov	r4, r0
  405fce:	9d08      	ldr	r5, [sp, #32]
  405fd0:	2b00      	cmp	r3, #0
  405fd2:	d150      	bne.n	406076 <__udivmoddi4+0xb2>
  405fd4:	428a      	cmp	r2, r1
  405fd6:	4617      	mov	r7, r2
  405fd8:	d96c      	bls.n	4060b4 <__udivmoddi4+0xf0>
  405fda:	fab2 fe82 	clz	lr, r2
  405fde:	f1be 0f00 	cmp.w	lr, #0
  405fe2:	d00b      	beq.n	405ffc <__udivmoddi4+0x38>
  405fe4:	f1ce 0420 	rsb	r4, lr, #32
  405fe8:	fa20 f404 	lsr.w	r4, r0, r4
  405fec:	fa01 f60e 	lsl.w	r6, r1, lr
  405ff0:	ea44 0c06 	orr.w	ip, r4, r6
  405ff4:	fa02 f70e 	lsl.w	r7, r2, lr
  405ff8:	fa00 f40e 	lsl.w	r4, r0, lr
  405ffc:	ea4f 4917 	mov.w	r9, r7, lsr #16
  406000:	0c22      	lsrs	r2, r4, #16
  406002:	fbbc f0f9 	udiv	r0, ip, r9
  406006:	fa1f f887 	uxth.w	r8, r7
  40600a:	fb09 c610 	mls	r6, r9, r0, ip
  40600e:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  406012:	fb00 f308 	mul.w	r3, r0, r8
  406016:	42b3      	cmp	r3, r6
  406018:	d909      	bls.n	40602e <__udivmoddi4+0x6a>
  40601a:	19f6      	adds	r6, r6, r7
  40601c:	f100 32ff 	add.w	r2, r0, #4294967295
  406020:	f080 8122 	bcs.w	406268 <__udivmoddi4+0x2a4>
  406024:	42b3      	cmp	r3, r6
  406026:	f240 811f 	bls.w	406268 <__udivmoddi4+0x2a4>
  40602a:	3802      	subs	r0, #2
  40602c:	443e      	add	r6, r7
  40602e:	1af6      	subs	r6, r6, r3
  406030:	b2a2      	uxth	r2, r4
  406032:	fbb6 f3f9 	udiv	r3, r6, r9
  406036:	fb09 6613 	mls	r6, r9, r3, r6
  40603a:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  40603e:	fb03 f808 	mul.w	r8, r3, r8
  406042:	45a0      	cmp	r8, r4
  406044:	d909      	bls.n	40605a <__udivmoddi4+0x96>
  406046:	19e4      	adds	r4, r4, r7
  406048:	f103 32ff 	add.w	r2, r3, #4294967295
  40604c:	f080 810a 	bcs.w	406264 <__udivmoddi4+0x2a0>
  406050:	45a0      	cmp	r8, r4
  406052:	f240 8107 	bls.w	406264 <__udivmoddi4+0x2a0>
  406056:	3b02      	subs	r3, #2
  406058:	443c      	add	r4, r7
  40605a:	ebc8 0404 	rsb	r4, r8, r4
  40605e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  406062:	2100      	movs	r1, #0
  406064:	2d00      	cmp	r5, #0
  406066:	d062      	beq.n	40612e <__udivmoddi4+0x16a>
  406068:	fa24 f40e 	lsr.w	r4, r4, lr
  40606c:	2300      	movs	r3, #0
  40606e:	602c      	str	r4, [r5, #0]
  406070:	606b      	str	r3, [r5, #4]
  406072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406076:	428b      	cmp	r3, r1
  406078:	d907      	bls.n	40608a <__udivmoddi4+0xc6>
  40607a:	2d00      	cmp	r5, #0
  40607c:	d055      	beq.n	40612a <__udivmoddi4+0x166>
  40607e:	2100      	movs	r1, #0
  406080:	e885 0041 	stmia.w	r5, {r0, r6}
  406084:	4608      	mov	r0, r1
  406086:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40608a:	fab3 f183 	clz	r1, r3
  40608e:	2900      	cmp	r1, #0
  406090:	f040 8090 	bne.w	4061b4 <__udivmoddi4+0x1f0>
  406094:	42b3      	cmp	r3, r6
  406096:	d302      	bcc.n	40609e <__udivmoddi4+0xda>
  406098:	4282      	cmp	r2, r0
  40609a:	f200 80f8 	bhi.w	40628e <__udivmoddi4+0x2ca>
  40609e:	1a84      	subs	r4, r0, r2
  4060a0:	eb66 0603 	sbc.w	r6, r6, r3
  4060a4:	2001      	movs	r0, #1
  4060a6:	46b4      	mov	ip, r6
  4060a8:	2d00      	cmp	r5, #0
  4060aa:	d040      	beq.n	40612e <__udivmoddi4+0x16a>
  4060ac:	e885 1010 	stmia.w	r5, {r4, ip}
  4060b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4060b4:	b912      	cbnz	r2, 4060bc <__udivmoddi4+0xf8>
  4060b6:	2701      	movs	r7, #1
  4060b8:	fbb7 f7f2 	udiv	r7, r7, r2
  4060bc:	fab7 fe87 	clz	lr, r7
  4060c0:	f1be 0f00 	cmp.w	lr, #0
  4060c4:	d135      	bne.n	406132 <__udivmoddi4+0x16e>
  4060c6:	1bf3      	subs	r3, r6, r7
  4060c8:	ea4f 4817 	mov.w	r8, r7, lsr #16
  4060cc:	fa1f fc87 	uxth.w	ip, r7
  4060d0:	2101      	movs	r1, #1
  4060d2:	fbb3 f0f8 	udiv	r0, r3, r8
  4060d6:	0c22      	lsrs	r2, r4, #16
  4060d8:	fb08 3610 	mls	r6, r8, r0, r3
  4060dc:	ea42 4606 	orr.w	r6, r2, r6, lsl #16
  4060e0:	fb0c f300 	mul.w	r3, ip, r0
  4060e4:	42b3      	cmp	r3, r6
  4060e6:	d907      	bls.n	4060f8 <__udivmoddi4+0x134>
  4060e8:	19f6      	adds	r6, r6, r7
  4060ea:	f100 32ff 	add.w	r2, r0, #4294967295
  4060ee:	d202      	bcs.n	4060f6 <__udivmoddi4+0x132>
  4060f0:	42b3      	cmp	r3, r6
  4060f2:	f200 80ce 	bhi.w	406292 <__udivmoddi4+0x2ce>
  4060f6:	4610      	mov	r0, r2
  4060f8:	1af6      	subs	r6, r6, r3
  4060fa:	b2a2      	uxth	r2, r4
  4060fc:	fbb6 f3f8 	udiv	r3, r6, r8
  406100:	fb08 6613 	mls	r6, r8, r3, r6
  406104:	ea42 4406 	orr.w	r4, r2, r6, lsl #16
  406108:	fb0c fc03 	mul.w	ip, ip, r3
  40610c:	45a4      	cmp	ip, r4
  40610e:	d907      	bls.n	406120 <__udivmoddi4+0x15c>
  406110:	19e4      	adds	r4, r4, r7
  406112:	f103 32ff 	add.w	r2, r3, #4294967295
  406116:	d202      	bcs.n	40611e <__udivmoddi4+0x15a>
  406118:	45a4      	cmp	ip, r4
  40611a:	f200 80b5 	bhi.w	406288 <__udivmoddi4+0x2c4>
  40611e:	4613      	mov	r3, r2
  406120:	ebcc 0404 	rsb	r4, ip, r4
  406124:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
  406128:	e79c      	b.n	406064 <__udivmoddi4+0xa0>
  40612a:	4629      	mov	r1, r5
  40612c:	4628      	mov	r0, r5
  40612e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406132:	f1ce 0120 	rsb	r1, lr, #32
  406136:	fa06 f30e 	lsl.w	r3, r6, lr
  40613a:	fa07 f70e 	lsl.w	r7, r7, lr
  40613e:	fa20 f901 	lsr.w	r9, r0, r1
  406142:	ea4f 4817 	mov.w	r8, r7, lsr #16
  406146:	40ce      	lsrs	r6, r1
  406148:	ea49 0903 	orr.w	r9, r9, r3
  40614c:	fbb6 faf8 	udiv	sl, r6, r8
  406150:	ea4f 4419 	mov.w	r4, r9, lsr #16
  406154:	fb08 661a 	mls	r6, r8, sl, r6
  406158:	fa1f fc87 	uxth.w	ip, r7
  40615c:	ea44 4306 	orr.w	r3, r4, r6, lsl #16
  406160:	fb0a f20c 	mul.w	r2, sl, ip
  406164:	429a      	cmp	r2, r3
  406166:	fa00 f40e 	lsl.w	r4, r0, lr
  40616a:	d90a      	bls.n	406182 <__udivmoddi4+0x1be>
  40616c:	19db      	adds	r3, r3, r7
  40616e:	f10a 31ff 	add.w	r1, sl, #4294967295
  406172:	f080 8087 	bcs.w	406284 <__udivmoddi4+0x2c0>
  406176:	429a      	cmp	r2, r3
  406178:	f240 8084 	bls.w	406284 <__udivmoddi4+0x2c0>
  40617c:	f1aa 0a02 	sub.w	sl, sl, #2
  406180:	443b      	add	r3, r7
  406182:	1a9b      	subs	r3, r3, r2
  406184:	fa1f f989 	uxth.w	r9, r9
  406188:	fbb3 f1f8 	udiv	r1, r3, r8
  40618c:	fb08 3311 	mls	r3, r8, r1, r3
  406190:	ea49 4303 	orr.w	r3, r9, r3, lsl #16
  406194:	fb01 f60c 	mul.w	r6, r1, ip
  406198:	429e      	cmp	r6, r3
  40619a:	d907      	bls.n	4061ac <__udivmoddi4+0x1e8>
  40619c:	19db      	adds	r3, r3, r7
  40619e:	f101 32ff 	add.w	r2, r1, #4294967295
  4061a2:	d26b      	bcs.n	40627c <__udivmoddi4+0x2b8>
  4061a4:	429e      	cmp	r6, r3
  4061a6:	d969      	bls.n	40627c <__udivmoddi4+0x2b8>
  4061a8:	3902      	subs	r1, #2
  4061aa:	443b      	add	r3, r7
  4061ac:	1b9b      	subs	r3, r3, r6
  4061ae:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
  4061b2:	e78e      	b.n	4060d2 <__udivmoddi4+0x10e>
  4061b4:	f1c1 0e20 	rsb	lr, r1, #32
  4061b8:	fa22 f40e 	lsr.w	r4, r2, lr
  4061bc:	408b      	lsls	r3, r1
  4061be:	4323      	orrs	r3, r4
  4061c0:	fa20 f70e 	lsr.w	r7, r0, lr
  4061c4:	fa06 f401 	lsl.w	r4, r6, r1
  4061c8:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4061cc:	fa26 f60e 	lsr.w	r6, r6, lr
  4061d0:	433c      	orrs	r4, r7
  4061d2:	fbb6 f9fc 	udiv	r9, r6, ip
  4061d6:	0c27      	lsrs	r7, r4, #16
  4061d8:	fb0c 6619 	mls	r6, ip, r9, r6
  4061dc:	fa1f f883 	uxth.w	r8, r3
  4061e0:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  4061e4:	fb09 f708 	mul.w	r7, r9, r8
  4061e8:	42b7      	cmp	r7, r6
  4061ea:	fa02 f201 	lsl.w	r2, r2, r1
  4061ee:	fa00 fa01 	lsl.w	sl, r0, r1
  4061f2:	d908      	bls.n	406206 <__udivmoddi4+0x242>
  4061f4:	18f6      	adds	r6, r6, r3
  4061f6:	f109 30ff 	add.w	r0, r9, #4294967295
  4061fa:	d241      	bcs.n	406280 <__udivmoddi4+0x2bc>
  4061fc:	42b7      	cmp	r7, r6
  4061fe:	d93f      	bls.n	406280 <__udivmoddi4+0x2bc>
  406200:	f1a9 0902 	sub.w	r9, r9, #2
  406204:	441e      	add	r6, r3
  406206:	1bf6      	subs	r6, r6, r7
  406208:	b2a0      	uxth	r0, r4
  40620a:	fbb6 f4fc 	udiv	r4, r6, ip
  40620e:	fb0c 6614 	mls	r6, ip, r4, r6
  406212:	ea40 4706 	orr.w	r7, r0, r6, lsl #16
  406216:	fb04 f808 	mul.w	r8, r4, r8
  40621a:	45b8      	cmp	r8, r7
  40621c:	d907      	bls.n	40622e <__udivmoddi4+0x26a>
  40621e:	18ff      	adds	r7, r7, r3
  406220:	f104 30ff 	add.w	r0, r4, #4294967295
  406224:	d228      	bcs.n	406278 <__udivmoddi4+0x2b4>
  406226:	45b8      	cmp	r8, r7
  406228:	d926      	bls.n	406278 <__udivmoddi4+0x2b4>
  40622a:	3c02      	subs	r4, #2
  40622c:	441f      	add	r7, r3
  40622e:	ea44 4009 	orr.w	r0, r4, r9, lsl #16
  406232:	ebc8 0707 	rsb	r7, r8, r7
  406236:	fba0 8902 	umull	r8, r9, r0, r2
  40623a:	454f      	cmp	r7, r9
  40623c:	4644      	mov	r4, r8
  40623e:	464e      	mov	r6, r9
  406240:	d314      	bcc.n	40626c <__udivmoddi4+0x2a8>
  406242:	d029      	beq.n	406298 <__udivmoddi4+0x2d4>
  406244:	b365      	cbz	r5, 4062a0 <__udivmoddi4+0x2dc>
  406246:	ebba 0304 	subs.w	r3, sl, r4
  40624a:	eb67 0706 	sbc.w	r7, r7, r6
  40624e:	fa07 fe0e 	lsl.w	lr, r7, lr
  406252:	40cb      	lsrs	r3, r1
  406254:	40cf      	lsrs	r7, r1
  406256:	ea4e 0303 	orr.w	r3, lr, r3
  40625a:	e885 0088 	stmia.w	r5, {r3, r7}
  40625e:	2100      	movs	r1, #0
  406260:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406264:	4613      	mov	r3, r2
  406266:	e6f8      	b.n	40605a <__udivmoddi4+0x96>
  406268:	4610      	mov	r0, r2
  40626a:	e6e0      	b.n	40602e <__udivmoddi4+0x6a>
  40626c:	ebb8 0402 	subs.w	r4, r8, r2
  406270:	eb69 0603 	sbc.w	r6, r9, r3
  406274:	3801      	subs	r0, #1
  406276:	e7e5      	b.n	406244 <__udivmoddi4+0x280>
  406278:	4604      	mov	r4, r0
  40627a:	e7d8      	b.n	40622e <__udivmoddi4+0x26a>
  40627c:	4611      	mov	r1, r2
  40627e:	e795      	b.n	4061ac <__udivmoddi4+0x1e8>
  406280:	4681      	mov	r9, r0
  406282:	e7c0      	b.n	406206 <__udivmoddi4+0x242>
  406284:	468a      	mov	sl, r1
  406286:	e77c      	b.n	406182 <__udivmoddi4+0x1be>
  406288:	3b02      	subs	r3, #2
  40628a:	443c      	add	r4, r7
  40628c:	e748      	b.n	406120 <__udivmoddi4+0x15c>
  40628e:	4608      	mov	r0, r1
  406290:	e70a      	b.n	4060a8 <__udivmoddi4+0xe4>
  406292:	3802      	subs	r0, #2
  406294:	443e      	add	r6, r7
  406296:	e72f      	b.n	4060f8 <__udivmoddi4+0x134>
  406298:	45c2      	cmp	sl, r8
  40629a:	d3e7      	bcc.n	40626c <__udivmoddi4+0x2a8>
  40629c:	463e      	mov	r6, r7
  40629e:	e7d1      	b.n	406244 <__udivmoddi4+0x280>
  4062a0:	4629      	mov	r1, r5
  4062a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062a6:	bf00      	nop

004062a8 <__aeabi_idiv0>:
  4062a8:	4770      	bx	lr
  4062aa:	bf00      	nop

004062ac <p_uc_charset10x14>:
	...
  4062c8:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  4062d8:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  4062e8:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  4062f8:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  406308:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  406318:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  406328:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  406338:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  406350:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  406360:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  406370:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  406380:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  406390:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  4063a0:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  4063b0:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  4063c0:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  4063d8:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  4063e8:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  4063f8:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  406408:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  406418:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  406428:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  406438:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  406448:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  406458:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  406468:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  406478:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  406488:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  406498:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  4064a8:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  4064b8:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  4064c8:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  4064d8:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  4064e8:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  4064f8:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  406508:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  406518:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  406528:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  406538:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  406548:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  406558:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  406568:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406578:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  406588:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  406598:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  4065a8:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  4065b8:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  4065c8:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  4065d8:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  4065e8:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  4065f8:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  406608:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  406618:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  406628:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  406638:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  406648:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  406658:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406668:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  406678:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  406688:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  406698:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  4066a8:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  4066b8:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  4066c8:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  4066d8:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  4066e8:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  4066f8:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  406708:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  406718:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  406728:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  406738:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  406748:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  406758:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  406768:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  406778:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  406788:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  406798:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  4067a8:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  4067b8:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  4067c8:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  4067d8:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  4067e8:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  4067f8:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  406808:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  406818:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  406828:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  406838:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  406848:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  406858:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  406868:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  406878:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  406888:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  406898:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  4068a8:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  4068b8:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  4068c8:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  4068d8:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  4068e8:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  4068f8:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  406908:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  406918:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  406928:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  406938:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  406948:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  406958:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  406968:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  406978:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  406988:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  406998:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  4069a8:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  4069b8:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  4069c8:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  4069d8:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  4069e8:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  4069f8:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  406a08:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  406a18:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  406a28:	fcff fcff 6925 0000 0043 0000               ....%i..C...

00406a34 <_global_impure_ptr>:
  406a34:	0018 2000                                   ... 

00406a38 <zeroes.7035>:
  406a38:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406a48:	4e49 0046 6e69 0066 414e 004e 616e 006e     INF.inf.NAN.nan.
  406a58:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
  406a68:	0000 0000 3130 3332 3534 3736 3938 6261     ....0123456789ab
  406a78:	6463 6665 0000 0000 6e28 6c75 296c 0000     cdef....(null)..
  406a88:	0030 0000                                   0...

00406a8c <blanks.7034>:
  406a8c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406a9c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406aac:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406ab8 <__mprec_tens>:
  406ab8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406ac8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406ad8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406ae8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406af8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406b08:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406b18:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406b28:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406b38:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406b48:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406b58:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406b68:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406b78:	9db4 79d9 7843 44ea                         ...yCx.D

00406b80 <__mprec_bigtens>:
  406b80:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406b90:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406ba0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406ba8 <p05.5373>:
  406ba8:	0005 0000 0019 0000 007d 0000               ........}...

00406bb4 <_init>:
  406bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406bb6:	bf00      	nop
  406bb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406bba:	bc08      	pop	{r3}
  406bbc:	469e      	mov	lr, r3
  406bbe:	4770      	bx	lr

00406bc0 <__init_array_start>:
  406bc0:	00402f01 	.word	0x00402f01

00406bc4 <__frame_dummy_init_array_entry>:
  406bc4:	004000f1                                ..@.

00406bc8 <_fini>:
  406bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406bca:	bf00      	nop
  406bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406bce:	bc08      	pop	{r3}
  406bd0:	469e      	mov	lr, r3
  406bd2:	4770      	bx	lr

00406bd4 <__fini_array_start>:
  406bd4:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
2000000a:	bf00      	nop

2000000c <g_ul_lcd_x_length>:
2000000c:	00f0 0000                                   ....

20000010 <g_ul_lcd_y_length>:
20000010:	0140 0000                                   @...

20000014 <SystemCoreClock>:
20000014:	0900 003d                                   ..=.

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
2000004c:	6a30 0040 0000 0000 0000 0000 0000 0000     0j@.............
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <_impure_ptr>:
20000440:	0018 2000                                   ... 

20000444 <lconv>:
20000444:	6ab4 0040 6a68 0040 6a68 0040 6a68 0040     .j@.hj@.hj@.hj@.
20000454:	6a68 0040 6a68 0040 6a68 0040 6a68 0040     hj@.hj@.hj@.hj@.
20000464:	6a68 0040 6a68 0040 ffff ffff ffff ffff     hj@.hj@.........
20000474:	ffff ffff ffff 0000                         ........

2000047c <__malloc_av_>:
	...
20000484:	047c 2000 047c 2000 0484 2000 0484 2000     |.. |.. ... ... 
20000494:	048c 2000 048c 2000 0494 2000 0494 2000     ... ... ... ... 
200004a4:	049c 2000 049c 2000 04a4 2000 04a4 2000     ... ... ... ... 
200004b4:	04ac 2000 04ac 2000 04b4 2000 04b4 2000     ... ... ... ... 
200004c4:	04bc 2000 04bc 2000 04c4 2000 04c4 2000     ... ... ... ... 
200004d4:	04cc 2000 04cc 2000 04d4 2000 04d4 2000     ... ... ... ... 
200004e4:	04dc 2000 04dc 2000 04e4 2000 04e4 2000     ... ... ... ... 
200004f4:	04ec 2000 04ec 2000 04f4 2000 04f4 2000     ... ... ... ... 
20000504:	04fc 2000 04fc 2000 0504 2000 0504 2000     ... ... ... ... 
20000514:	050c 2000 050c 2000 0514 2000 0514 2000     ... ... ... ... 
20000524:	051c 2000 051c 2000 0524 2000 0524 2000     ... ... $.. $.. 
20000534:	052c 2000 052c 2000 0534 2000 0534 2000     ,.. ,.. 4.. 4.. 
20000544:	053c 2000 053c 2000 0544 2000 0544 2000     <.. <.. D.. D.. 
20000554:	054c 2000 054c 2000 0554 2000 0554 2000     L.. L.. T.. T.. 
20000564:	055c 2000 055c 2000 0564 2000 0564 2000     \.. \.. d.. d.. 
20000574:	056c 2000 056c 2000 0574 2000 0574 2000     l.. l.. t.. t.. 
20000584:	057c 2000 057c 2000 0584 2000 0584 2000     |.. |.. ... ... 
20000594:	058c 2000 058c 2000 0594 2000 0594 2000     ... ... ... ... 
200005a4:	059c 2000 059c 2000 05a4 2000 05a4 2000     ... ... ... ... 
200005b4:	05ac 2000 05ac 2000 05b4 2000 05b4 2000     ... ... ... ... 
200005c4:	05bc 2000 05bc 2000 05c4 2000 05c4 2000     ... ... ... ... 
200005d4:	05cc 2000 05cc 2000 05d4 2000 05d4 2000     ... ... ... ... 
200005e4:	05dc 2000 05dc 2000 05e4 2000 05e4 2000     ... ... ... ... 
200005f4:	05ec 2000 05ec 2000 05f4 2000 05f4 2000     ... ... ... ... 
20000604:	05fc 2000 05fc 2000 0604 2000 0604 2000     ... ... ... ... 
20000614:	060c 2000 060c 2000 0614 2000 0614 2000     ... ... ... ... 
20000624:	061c 2000 061c 2000 0624 2000 0624 2000     ... ... $.. $.. 
20000634:	062c 2000 062c 2000 0634 2000 0634 2000     ,.. ,.. 4.. 4.. 
20000644:	063c 2000 063c 2000 0644 2000 0644 2000     <.. <.. D.. D.. 
20000654:	064c 2000 064c 2000 0654 2000 0654 2000     L.. L.. T.. T.. 
20000664:	065c 2000 065c 2000 0664 2000 0664 2000     \.. \.. d.. d.. 
20000674:	066c 2000 066c 2000 0674 2000 0674 2000     l.. l.. t.. t.. 
20000684:	067c 2000 067c 2000 0684 2000 0684 2000     |.. |.. ... ... 
20000694:	068c 2000 068c 2000 0694 2000 0694 2000     ... ... ... ... 
200006a4:	069c 2000 069c 2000 06a4 2000 06a4 2000     ... ... ... ... 
200006b4:	06ac 2000 06ac 2000 06b4 2000 06b4 2000     ... ... ... ... 
200006c4:	06bc 2000 06bc 2000 06c4 2000 06c4 2000     ... ... ... ... 
200006d4:	06cc 2000 06cc 2000 06d4 2000 06d4 2000     ... ... ... ... 
200006e4:	06dc 2000 06dc 2000 06e4 2000 06e4 2000     ... ... ... ... 
200006f4:	06ec 2000 06ec 2000 06f4 2000 06f4 2000     ... ... ... ... 
20000704:	06fc 2000 06fc 2000 0704 2000 0704 2000     ... ... ... ... 
20000714:	070c 2000 070c 2000 0714 2000 0714 2000     ... ... ... ... 
20000724:	071c 2000 071c 2000 0724 2000 0724 2000     ... ... $.. $.. 
20000734:	072c 2000 072c 2000 0734 2000 0734 2000     ,.. ,.. 4.. 4.. 
20000744:	073c 2000 073c 2000 0744 2000 0744 2000     <.. <.. D.. D.. 
20000754:	074c 2000 074c 2000 0754 2000 0754 2000     L.. L.. T.. T.. 
20000764:	075c 2000 075c 2000 0764 2000 0764 2000     \.. \.. d.. d.. 
20000774:	076c 2000 076c 2000 0774 2000 0774 2000     l.. l.. t.. t.. 
20000784:	077c 2000 077c 2000 0784 2000 0784 2000     |.. |.. ... ... 
20000794:	078c 2000 078c 2000 0794 2000 0794 2000     ... ... ... ... 
200007a4:	079c 2000 079c 2000 07a4 2000 07a4 2000     ... ... ... ... 
200007b4:	07ac 2000 07ac 2000 07b4 2000 07b4 2000     ... ... ... ... 
200007c4:	07bc 2000 07bc 2000 07c4 2000 07c4 2000     ... ... ... ... 
200007d4:	07cc 2000 07cc 2000 07d4 2000 07d4 2000     ... ... ... ... 
200007e4:	07dc 2000 07dc 2000 07e4 2000 07e4 2000     ... ... ... ... 
200007f4:	07ec 2000 07ec 2000 07f4 2000 07f4 2000     ... ... ... ... 
20000804:	07fc 2000 07fc 2000 0804 2000 0804 2000     ... ... ... ... 
20000814:	080c 2000 080c 2000 0814 2000 0814 2000     ... ... ... ... 
20000824:	081c 2000 081c 2000 0824 2000 0824 2000     ... ... $.. $.. 
20000834:	082c 2000 082c 2000 0834 2000 0834 2000     ,.. ,.. 4.. 4.. 
20000844:	083c 2000 083c 2000 0844 2000 0844 2000     <.. <.. D.. D.. 
20000854:	084c 2000 084c 2000 0854 2000 0854 2000     L.. L.. T.. T.. 
20000864:	085c 2000 085c 2000 0864 2000 0864 2000     \.. \.. d.. d.. 
20000874:	086c 2000 086c 2000 0874 2000 0874 2000     l.. l.. t.. t.. 

20000884 <__malloc_trim_threshold>:
20000884:	0000 0002                                   ....

20000888 <__malloc_sbrk_base>:
20000888:	ffff ffff                                   ....
